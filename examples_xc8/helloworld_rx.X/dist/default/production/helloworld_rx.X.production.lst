

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Dec  3 00:02:38 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91  0000                     
    92 ;;RF24N_update@val	offset	0
    93 ;;RF24N_update@header	offset	1
    94 ;;RF24N_update@returnVal	offset	3
    95 ;;RF24N_update@pipe_num	offset	4
    96 ;;_RF24N_update$3187	offset	5
    97                           
    98                           	psect	idataCOMRAM
    99  0038F0                     __pidataCOMRAM:
   100                           	opt stack 0
   101                           
   102                           ;initializer for RF24N_pipe_address@address_translation
   103  0038F0  C3                 	db	195
   104  0038F1  3C                 	db	60
   105  0038F2  33                 	db	51
   106  0038F3  CE                 	db	206
   107  0038F4  3E                 	db	62
   108  0038F5  E3                 	db	227
   109  0038F6  EC                 	db	236
   110                           
   111                           ;initializer for RF24N_pipe_address@F3842
   112  0038F7  CC                 	db	204
   113  0038F8  CC                 	db	204
   114  0038F9  CC                 	db	204
   115  0038FA  CC                 	db	204
   116  0038FB  CC                 	db	204
   117                           
   118                           ;initializer for _next_id
   119  0038FC  0001               	dw	1
   120                           
   121                           	psect	smallconst
   122  001000                     __psmallconst:
   123                           	opt stack 0
   124  001000  00                 	db	0
   125  001001                     _child_payload_size:
   126                           	opt stack 0
   127  001001  11                 	db	17
   128  001002  12                 	db	18
   129  001003  13                 	db	19
   130  001004  14                 	db	20
   131  001005  15                 	db	21
   132  001006  16                 	db	22
   133  001007                     __end_of_child_payload_size:
   134                           	opt stack 0
   135  001007                     _child_pipe:
   136                           	opt stack 0
   137  001007  0A                 	db	10
   138  001008  0B                 	db	11
   139  001009  0C                 	db	12
   140  00100A  0D                 	db	13
   141  00100B  0E                 	db	14
   142  00100C  0F                 	db	15
   143  00100D                     __end_of_child_pipe:
   144                           	opt stack 0
   145  00100D                     _child_pipe_enable:
   146                           	opt stack 0
   147  00100D  00                 	db	0
   148  00100E  01                 	db	1
   149  00100F  02                 	db	2
   150  001010  03                 	db	3
   151  001011  04                 	db	4
   152  001012  05                 	db	5
   153  001013                     __end_of_child_pipe_enable:
   154                           	opt stack 0
   155  001013                     _other_node:
   156                           	opt stack 0
   157  001013  0001               	dw	1
   158  001015                     __end_of_other_node:
   159                           	opt stack 0
   160  001015                     _this_node:
   161                           	opt stack 0
   162  001015  0000               	dw	0
   163  001017                     __end_of_this_node:
   164                           	opt stack 0
   165  0000                     _BAUDCONbits	set	4024
   166  0000                     _INTCONbits	set	4082
   167  0000                     _LATAbits	set	3977
   168  0000                     _LATBbits	set	3978
   169  0000                     _LATCbits	set	3979
   170  0000                     _LATDbits	set	3980
   171  0000                     _LATEbits	set	3981
   172  0000                     _PIR1bits	set	3998
   173  0000                     _PORTAbits	set	3968
   174  0000                     _PORTBbits	set	3969
   175  0000                     _PORTCbits	set	3970
   176  0000                     _PORTDbits	set	3971
   177  0000                     _PORTEbits	set	3972
   178  0000                     _RCREG	set	4014
   179  0000                     _RCSTAbits	set	4011
   180  0000                     _SPBRG	set	4015
   181  0000                     _SPBRGH	set	4016
   182  0000                     _SSPBUF	set	4041
   183  0000                     _SSPCON1bits	set	4038
   184  0000                     _SSPSTATbits	set	4039
   185  0000                     _T0CONbits	set	4053
   186  0000                     _TMR0H	set	4055
   187  0000                     _TMR0L	set	4054
   188  0000                     _TRISAbits	set	3986
   189  0000                     _TRISBbits	set	3987
   190  0000                     _TRISCbits	set	3988
   191  0000                     _TRISDbits	set	3989
   192  0000                     _TRISEbits	set	3990
   193  0000                     _TXREG	set	4013
   194  0000                     _TXSTAbits	set	4012
   195  001017                     STR_1:
   196  001017  52                 	db	82	;'R'
   197  001018  46                 	db	70	;'F'
   198  001019  32                 	db	50	;'2'
   199  00101A  34                 	db	52	;'4'
   200  00101B  4E                 	db	78	;'N'
   201  00101C  65                 	db	101	;'e'
   202  00101D  74                 	db	116	;'t'
   203  00101E  77                 	db	119	;'w'
   204  00101F  6F                 	db	111	;'o'
   205  001020  72                 	db	114	;'r'
   206  001021  6B                 	db	107	;'k'
   207  001022  2F                 	db	47
   208  001023  65                 	db	101	;'e'
   209  001024  78                 	db	120	;'x'
   210  001025  61                 	db	97	;'a'
   211  001026  6D                 	db	109	;'m'
   212  001027  70                 	db	112	;'p'
   213  001028  6C                 	db	108	;'l'
   214  001029  65                 	db	101	;'e'
   215  00102A  73                 	db	115	;'s'
   216  00102B  2F                 	db	47
   217  00102C  68                 	db	104	;'h'
   218  00102D  65                 	db	101	;'e'
   219  00102E  6C                 	db	108	;'l'
   220  00102F  6C                 	db	108	;'l'
   221  001030  6F                 	db	111	;'o'
   222  001031  77                 	db	119	;'w'
   223  001032  6F                 	db	111	;'o'
   224  001033  72                 	db	114	;'r'
   225  001034  6C                 	db	108	;'l'
   226  001035  64                 	db	100	;'d'
   227  001036  5F                 	db	95	;'_'
   228  001037  72                 	db	114	;'r'
   229  001038  78                 	db	120	;'x'
   230  001039  2F                 	db	47
   231  00103A  00                 	db	0
   232  00103B                     STR_2:
   233  00103B  52                 	db	82	;'R'
   234  00103C  65                 	db	101	;'e'
   235  00103D  63                 	db	99	;'c'
   236  00103E  65                 	db	101	;'e'
   237  00103F  69                 	db	105	;'i'
   238  001040  76                 	db	118	;'v'
   239  001041  65                 	db	101	;'e'
   240  001042  64                 	db	100	;'d'
   241  001043  20                 	db	32
   242  001044  70                 	db	112	;'p'
   243  001045  61                 	db	97	;'a'
   244  001046  63                 	db	99	;'c'
   245  001047  6B                 	db	107	;'k'
   246  001048  65                 	db	101	;'e'
   247  001049  74                 	db	116	;'t'
   248  00104A  20                 	db	32
   249  00104B  23                 	db	35
   250  00104C  00                 	db	0
   251  00104D                     STR_3:
   252  00104D  20                 	db	32
   253  00104E  61                 	db	97	;'a'
   254  00104F  74                 	db	116	;'t'
   255  001050  20                 	db	32
   256  001051  00                 	db	0
   257  001052                     STR_4:
   258  001052  0D                 	db	13
   259  001053  0A                 	db	10
   260  001054  00                 	db	0
   261                           
   262                           ; #config settings
   263  001055  00                 	db	0	; dummy byte at the end
   264  0000                     
   265                           	psect	cinit
   266  0032F8                     __pcinit:
   267                           	opt stack 0
   268  0032F8                     start_initialization:
   269                           	opt stack 0
   270  0032F8                     __initialization:
   271                           	opt stack 0
   272                           
   273                           ; Clear objects allocated to BIGRAM (370 bytes)
   274  0032F8  EE00  F0A6         	lfsr	0,__pbssBIGRAM
   275  0032FC  EE21 F072          	lfsr	2,370
   276  003300                     clear_0:
   277  003300  6AEE               	clrf	postinc0,c
   278  003302  50DD               	movf	postdec2,w,c
   279  003304  50D9               	movf	fsr2l,w,c
   280  003306  E1FC               	bnz	clear_0
   281  003308  50DA               	movf	fsr2h,w,c
   282  00330A  E1FA               	bnz	clear_0
   283                           
   284                           ; Clear objects allocated to COMRAM (36 bytes)
   285  00330C  EE00  F039         	lfsr	0,__pbssCOMRAM
   286  003310  0E24               	movlw	36
   287  003312                     clear_1:
   288  003312  6AEE               	clrf	postinc0,c
   289  003314  06E8               	decf	wreg,f,c
   290  003316  E1FD               	bnz	clear_1
   291                           
   292                           ; Initialize objects allocated to COMRAM (14 bytes)
   293                           ; load TBLPTR registers with __pidataCOMRAM
   294  003318  0EF0               	movlw	low __pidataCOMRAM
   295  00331A  6EF6               	movwf	tblptrl,c
   296  00331C  0E38               	movlw	high __pidataCOMRAM
   297  00331E  6EF7               	movwf	tblptrh,c
   298  003320  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   299  003322  6EF8               	movwf	tblptru,c
   300  003324  EE00  F05D         	lfsr	0,__pdataCOMRAM
   301  003328  EE20 F00E          	lfsr	2,14
   302  00332C                     copy_data0:
   303  00332C  0009               	tblrd		*+
   304  00332E  CFF5 FFEE          	movff	tablat,postinc0
   305  003332  50DD               	movf	postdec2,w,c
   306  003334  50D9               	movf	fsr2l,w,c
   307  003336  E1FA               	bnz	copy_data0
   308  003338                     end_of_initialization:
   309                           	opt stack 0
   310  003338                     __end_of__initialization:
   311                           	opt stack 0
   312  003338  0E00               	movlw	low (__Lmediumconst shr (0+16))
   313  00333A  6EF8               	movwf	tblptru,c
   314  00333C  0100               	movlb	0
   315  00333E  EF08  F01B         	goto	_main	;jump to C main() function
   316                           tblptru	equ	0xFF8
   317                           tblptrh	equ	0xFF7
   318                           tblptrl	equ	0xFF6
   319                           tablat	equ	0xFF5
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           postdec2	equ	0xFDD
   323                           fsr2h	equ	0xFDA
   324                           fsr2l	equ	0xFD9
   325                           
   326                           	psect	bssCOMRAM
   327  000039                     __pbssCOMRAM:
   328                           	opt stack 0
   329  000039                     _mtime:
   330                           	opt stack 0
   331  000039                     	ds	4
   332  00003D                     _rf:
   333                           	opt stack 0
   334  00003D                     	ds	22
   335  000053                     _buff:
   336                           	opt stack 0
   337  000053                     	ds	10
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           postdec2	equ	0xFDD
   345                           fsr2h	equ	0xFDA
   346                           fsr2l	equ	0xFD9
   347                           
   348                           	psect	dataCOMRAM
   349  00005D                     __pdataCOMRAM:
   350                           	opt stack 0
   351  00005D                     RF24N_pipe_address@address_translation:
   352                           	opt stack 0
   353  00005D                     	ds	7
   354  000064                     RF24N_pipe_address@F3842:
   355                           	opt stack 0
   356  000064                     	ds	5
   357  000069                     _next_id:
   358                           	opt stack 0
   359  000069                     	ds	2
   360                           tblptru	equ	0xFF8
   361                           tblptrh	equ	0xFF7
   362                           tblptrl	equ	0xFF6
   363                           tablat	equ	0xFF5
   364                           postinc0	equ	0xFEE
   365                           wreg	equ	0xFE8
   366                           postdec2	equ	0xFDD
   367                           fsr2h	equ	0xFDA
   368                           fsr2l	equ	0xFD9
   369                           
   370                           	psect	bssBIGRAM
   371  0000A6                     __pbssBIGRAM:
   372                           	opt stack 0
   373  0000A6                     _rn:
   374                           	opt stack 0
   375  0000A6                     	ds	370
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec2	equ	0xFDD
   383                           fsr2h	equ	0xFDA
   384                           fsr2l	equ	0xFD9
   385                           
   386                           	psect	cstackBANK0
   387  000080                     __pcstackBANK0:
   388                           	opt stack 0
   389  000080                     ??_RF24N_write:
   390                           
   391                           ; 1 bytes @ 0x0
   392  000080                     	ds	26
   393  00009A                     RF24N_write@reply_time:
   394                           	opt stack 0
   395                           
   396                           ; 4 bytes @ 0x1A
   397  00009A                     	ds	4
   398  00009E                     RF24N_write@isAckType:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x1E
   402  00009E                     	ds	1
   403  00009F                     RF24N_write@header:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x1F
   407  00009F                     	ds	2
   408  0000A1                     RF24N_write@ok:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x21
   412  0000A1                     	ds	1
   413  0000A2                     RF24N_write@conversion:
   414                           	opt stack 0
   415                           
   416                           ; 4 bytes @ 0x22
   417  0000A2                     	ds	4
   418                           tblptru	equ	0xFF8
   419                           tblptrh	equ	0xFF7
   420                           tblptrl	equ	0xFF6
   421                           tablat	equ	0xFF5
   422                           postinc0	equ	0xFEE
   423                           wreg	equ	0xFE8
   424                           postdec2	equ	0xFDD
   425                           fsr2h	equ	0xFDA
   426                           fsr2l	equ	0xFD9
   427                           
   428                           	psect	cstackCOMRAM
   429  000001                     __pcstackCOMRAM:
   430                           	opt stack 0
   431  000001                     ??_isr:
   432  000001                     
   433                           ; 1 bytes @ 0x0
   434  000001                     	ds	2
   435  000003                     ??_RF24N_available:
   436  000003                     ??_RF24N_setup_address:
   437  000003                     ??_delayMicroseconds:
   438  000003                     ?_RF24N_levelToAddress:
   439                           	opt stack 0
   440  000003                     ?_RF24N_direct_child_route_to:
   441                           	opt stack 0
   442  000003                     ?___wmul:
   443                           	opt stack 0
   444  000003                     ?___lwdiv:
   445                           	opt stack 0
   446  000003                     ?___lwmod:
   447                           	opt stack 0
   448  000003                     ?_millis:
   449                           	opt stack 0
   450  000003                     ?___lldiv:
   451                           	opt stack 0
   452  000003                     ?___llmod:
   453                           	opt stack 0
   454  000003                     Serial_tx@val:
   455                           	opt stack 0
   456  000003                     pinMode@mode:
   457                           	opt stack 0
   458  000003                     digitalWrite@mode:
   459                           	opt stack 0
   460  000003                     SPI_transfer@data:
   461                           	opt stack 0
   462  000003                     RF24_init@_cspin:
   463                           	opt stack 0
   464  000003                     _RF24_isValid$2441:
   465                           	opt stack 0
   466  000003                     delay@val:
   467                           	opt stack 0
   468  000003                     RF24N_is_descendant@node:
   469                           	opt stack 0
   470  000003                     RF24N_direct_child_route_to@node:
   471                           	opt stack 0
   472  000003                     RF24N_is_valid_address@node:
   473                           	opt stack 0
   474  000003                     RF24N_pipe_address@node:
   475                           	opt stack 0
   476  000003                     ___wmul@multiplier:
   477                           	opt stack 0
   478  000003                     ___lwdiv@dividend:
   479                           	opt stack 0
   480  000003                     ___lwmod@dividend:
   481                           	opt stack 0
   482  000003                     memcpy@d1:
   483                           	opt stack 0
   484  000003                     memmove@d1:
   485                           	opt stack 0
   486  000003                     ___lldiv@dividend:
   487                           	opt stack 0
   488  000003                     ___llmod@dividend:
   489                           	opt stack 0
   490                           
   491                           ; 4 bytes @ 0x2
   492  000003                     	ds	1
   493  000004                     pinMode@pin:
   494                           	opt stack 0
   495  000004                     RF24_init@_cepin:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x3
   499  000004                     	ds	1
   500  000005                     ??_RF24N_levelToAddress:
   501  000005                     ??_RF24N_is_descendant:
   502  000005                     ??_RF24N_direct_child_route_to:
   503  000005                     digitalWrite@pin:
   504                           	opt stack 0
   505  000005                     RF24N_is_valid_address@digit:
   506                           	opt stack 0
   507  000005                     RF24N_pipe_address@pipe:
   508                           	opt stack 0
   509  000005                     delay@i:
   510                           	opt stack 0
   511  000005                     RF24N_setup_address@i:
   512                           	opt stack 0
   513  000005                     ___wmul@multiplicand:
   514                           	opt stack 0
   515  000005                     ___lwdiv@divisor:
   516                           	opt stack 0
   517  000005                     ___lwmod@divisor:
   518                           	opt stack 0
   519  000005                     memcpy@s1:
   520                           	opt stack 0
   521  000005                     memmove@s1:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x4
   525  000005                     	ds	1
   526  000006                     RF24N_is_valid_address@result:
   527                           	opt stack 0
   528  000006                     RF24_ce_d@level:
   529                           	opt stack 0
   530  000006                     RF24N_pipe_address@address:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x5
   534  000006                     	ds	1
   535  000007                     ___lwdiv@counter:
   536                           	opt stack 0
   537  000007                     ___lwmod@counter:
   538                           	opt stack 0
   539  000007                     delay@j:
   540                           	opt stack 0
   541  000007                     RF24N_setup_address@m:
   542                           	opt stack 0
   543  000007                     RF24N_direct_child_route_to@child_mask:
   544                           	opt stack 0
   545  000007                     ___wmul@product:
   546                           	opt stack 0
   547  000007                     memcpy@n:
   548                           	opt stack 0
   549  000007                     memmove@n:
   550                           	opt stack 0
   551  000007                     ___lldiv@divisor:
   552                           	opt stack 0
   553  000007                     ___llmod@divisor:
   554                           	opt stack 0
   555                           
   556                           ; 4 bytes @ 0x6
   557  000007                     	ds	1
   558  000008                     ??_RF24N_pipe_address:
   559  000008                     RF24N_levelToAddress@level:
   560                           	opt stack 0
   561  000008                     ___lwdiv@quotient:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x7
   565  000008                     	ds	1
   566  000009                     ??_memmove:
   567  000009                     RF24N_setup_address@count:
   568                           	opt stack 0
   569  000009                     RF24N_is_direct_child@node:
   570                           	opt stack 0
   571  000009                     RF24N_levelToAddress@levelAddr:
   572                           	opt stack 0
   573  000009                     memcpy@d:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x8
   577  000009                     	ds	1
   578  00000A                     delayMicroseconds@d:
   579                           	opt stack 0
   580  00000A                     RF24N_setup_address@parent_mask:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x9
   584  00000A                     	ds	1
   585  00000B                     ??_RF24N_is_direct_child:
   586  00000B                     ___llmod@counter:
   587                           	opt stack 0
   588  00000B                     delayMicroseconds@i:
   589                           	opt stack 0
   590  00000B                     memcpy@s:
   591                           	opt stack 0
   592  00000B                     memmove@d:
   593                           	opt stack 0
   594  00000B                     ___lldiv@quotient:
   595                           	opt stack 0
   596                           
   597                           ; 4 bytes @ 0xA
   598  00000B                     	ds	1
   599  00000C                     RF24N_setup_address@node_mask_check:
   600                           	opt stack 0
   601  00000C                     RF24N_pipe_address@result:
   602                           	opt stack 0
   603                           
   604                           ; 5 bytes @ 0xB
   605  00000C                     	ds	1
   606  00000D                     delayMicroseconds@j:
   607                           	opt stack 0
   608  00000D                     memmove@s:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0xC
   612  00000D                     	ds	2
   613  00000F                     RF24_csn_d@mode:
   614                           	opt stack 0
   615  00000F                     ___lldiv@counter:
   616                           	opt stack 0
   617  00000F                     RF24N_read@header:
   618                           	opt stack 0
   619  00000F                     RF24N_is_direct_child@child_node_mask:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0xE
   623  00000F                     	ds	1
   624  000010                     RF24_read_register_d@reg:
   625                           	opt stack 0
   626  000010                     RF24_spiTrans@cmd:
   627                           	opt stack 0
   628  000010                     RF24_write_register_c_d@buf:
   629                           	opt stack 0
   630  000010                     RF24_write_payload@buf:
   631                           	opt stack 0
   632  000010                     RF24_read_payload@buf:
   633                           	opt stack 0
   634  000010                     ultoa@buf:
   635                           	opt stack 0
   636  000010                     Serial_begin@baud:
   637                           	opt stack 0
   638                           
   639                           ; 4 bytes @ 0xF
   640  000010                     	ds	1
   641  000011                     RF24N_is_direct_child@result:
   642                           	opt stack 0
   643  000011                     RF24_read_register_d@result:
   644                           	opt stack 0
   645  000011                     RF24_spiTrans@status:
   646                           	opt stack 0
   647  000011                     RF24N_read@message:
   648                           	opt stack 0
   649  000011                     RF24N_pipe_address@dec:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x10
   653  000011                     	ds	1
   654  000012                     RF24_write_register_c_d@len:
   655                           	opt stack 0
   656  000012                     RF24_write_register_d@value:
   657                           	opt stack 0
   658  000012                     RF24_write_payload@data_len:
   659                           	opt stack 0
   660  000012                     RF24_read_payload@data_len:
   661                           	opt stack 0
   662  000012                     RF24N_logicalToPhysicalAddress@conversionInfo:
   663                           	opt stack 0
   664  000012                     RF24_available_p@pipe_num:
   665                           	opt stack 0
   666  000012                     ultoa@val:
   667                           	opt stack 0
   668                           
   669                           ; 4 bytes @ 0x11
   670  000012                     	ds	1
   671  000013                     ??_RF24_read_payload:
   672  000013                     RF24N_pipe_address@count:
   673                           	opt stack 0
   674  000013                     RF24_write_register_c_d@status:
   675                           	opt stack 0
   676  000013                     RF24_write_register_d@reg:
   677                           	opt stack 0
   678  000013                     RF24_write_payload@writeType:
   679                           	opt stack 0
   680  000013                     RF24_getDynamicPayloadSize@result:
   681                           	opt stack 0
   682  000013                     RF24N_read@maxlen:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x12
   686  000013                     	ds	1
   687  000014                     ??_Serial_begin:
   688  000014                     ??_RF24_available_p:
   689  000014                     ??_RF24_write_payload:
   690  000014                     RF24_write_register_c_d@reg:
   691                           	opt stack 0
   692  000014                     RF24_write_register_d@status:
   693                           	opt stack 0
   694  000014                     RF24N_pipe_address@out:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x13
   698  000014                     	ds	1
   699  000015                     ??_RF24N_read:
   700  000015                     ??_RF24_stopListening:
   701  000015                     ??_RF24_closeReadingPipe:
   702  000015                     RF24_read_payload@status:
   703                           	opt stack 0
   704  000015                     RF24_powerUp@cfg:
   705                           	opt stack 0
   706  000015                     RF24_available_p@status:
   707                           	opt stack 0
   708  000015                     RF24_setAutoAck_p@enable:
   709                           	opt stack 0
   710  000015                     RF24_setDataRate@result:
   711                           	opt stack 0
   712  000015                     RF24_setRetries@count:
   713                           	opt stack 0
   714  000015                     RF24N_logicalToPhysicalAddress@multicast:
   715                           	opt stack 0
   716  000015                     _RF24_setChannel$2315:
   717                           	opt stack 0
   718  000015                     RF24_openWritingPipe_d@value_:
   719                           	opt stack 0
   720  000015                     RF24_openReadingPipe_d@address_:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x14
   724  000015                     	ds	1
   725  000016                     ??_RF24_setAutoAck_p:
   726  000016                     ??_RF24_setRetries:
   727  000016                     RF24N_pipe_address@i:
   728                           	opt stack 0
   729  000016                     RF24_write_payload@status:
   730                           	opt stack 0
   731  000016                     RF24_read_payload@blank_len:
   732                           	opt stack 0
   733  000016                     RF24_setDataRate@speed:
   734                           	opt stack 0
   735  000016                     ultoa@base:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x15
   739  000016                     	ds	1
   740  000017                     ??_RF24_openReadingPipe_d:
   741  000017                     ??_RF24_openWritingPipe_d:
   742  000017                     RF24_write_payload@blank_len:
   743                           	opt stack 0
   744  000017                     RF24_setChannel@channel:
   745                           	opt stack 0
   746  000017                     RF24_setDataRate@setup:
   747                           	opt stack 0
   748  000017                     RF24N_enqueue@header:
   749                           	opt stack 0
   750  000017                     RF24N_logicalToPhysicalAddress@pre_conversion_send_node:
   751                           	opt stack 0
   752  000017                     RF24_read_payload@current:
   753                           	opt stack 0
   754  000017                     RF24_txStandBy_t@timeout:
   755                           	opt stack 0
   756                           
   757                           ; 4 bytes @ 0x16
   758  000017                     	ds	1
   759  000018                     RF24_setChannel@max_channel:
   760                           	opt stack 0
   761  000018                     RF24_closeReadingPipe@pipe:
   762                           	opt stack 0
   763  000018                     RF24_setAutoAck_p@en_aa:
   764                           	opt stack 0
   765  000018                     RF24_setRetries@delay:
   766                           	opt stack 0
   767  000018                     RF24_write_payload@current:
   768                           	opt stack 0
   769  000018                     ultoa@v:
   770                           	opt stack 0
   771                           
   772                           ; 4 bytes @ 0x17
   773  000018                     	ds	1
   774  000019                     ??_RF24_startListening:
   775  000019                     ??_RF24N_enqueue:
   776  000019                     _RF24_begin$2329:
   777                           	opt stack 0
   778  000019                     RF24_setAutoAck_p@pipe:
   779                           	opt stack 0
   780  000019                     RF24N_logicalToPhysicalAddress@directTo:
   781                           	opt stack 0
   782  000019                     _RF24_read_payload$2300:
   783                           	opt stack 0
   784  000019                     RF24_openWritingPipe_d@value:
   785                           	opt stack 0
   786  000019                     RF24_openReadingPipe_d@address:
   787                           	opt stack 0
   788                           
   789                           ; 5 bytes @ 0x18
   790  000019                     	ds	1
   791  00001A                     RF24_begin@setup:
   792                           	opt stack 0
   793  00001A                     _RF24_write_payload$2292:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0x19
   797  00001A                     	ds	1
   798  00001B                     RF24N_read@padding:
   799                           	opt stack 0
   800  00001B                     RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe:
   801                           	opt stack 0
   802  00001B                     RF24_txStandBy_t@startTx:
   803                           	opt stack 0
   804  00001B                     RF24_read@buf:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x1A
   808  00001B                     	ds	1
   809  00001C                     ??_RF24_txStandBy_t:
   810  00001C                     ultoa@c:
   811                           	opt stack 0
   812  00001C                     RF24N_read@bufsize:
   813                           	opt stack 0
   814  00001C                     RF24N_logicalToPhysicalAddress@to_node:
   815                           	opt stack 0
   816  00001C                     _RF24_write_payload$2293:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x1B
   820  00001C                     	ds	1
   821  00001D                     ?_itoa_:
   822                           	opt stack 0
   823  00001D                     RF24_read@len:
   824                           	opt stack 0
   825  00001D                     itoa_@val:
   826                           	opt stack 0
   827                           
   828                           ; 4 bytes @ 0x1C
   829  00001D                     	ds	1
   830  00001E                     RF24_openWritingPipe_d@i:
   831                           	opt stack 0
   832  00001E                     RF24_openReadingPipe_d@i:
   833                           	opt stack 0
   834  00001E                     RF24_startFastWrite@buf:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x1D
   838  00001E                     	ds	1
   839  00001F                     RF24_openReadingPipe_d@child:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x1E
   843  00001F                     	ds	1
   844  000020                     RF24N_enqueue@isFragment:
   845                           	opt stack 0
   846  000020                     RF24_startFastWrite@len:
   847                           	opt stack 0
   848  000020                     RF24N_begin_d@_node_address:
   849                           	opt stack 0
   850                           
   851                           ; 2 bytes @ 0x1F
   852  000020                     	ds	1
   853  000021                     RF24N_enqueue@padding:
   854                           	opt stack 0
   855  000021                     RF24_startFastWrite@multicast:
   856                           	opt stack 0
   857  000021                     Serial_print@val:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x20
   861  000021                     	ds	1
   862  000022                     RF24N_enqueue@padding_2039:
   863                           	opt stack 0
   864  000022                     RF24_startFastWrite@startTx:
   865                           	opt stack 0
   866  000022                     RF24N_begin_d@addr:
   867                           	opt stack 0
   868                           
   869                           ; 5 bytes @ 0x21
   870  000022                     	ds	1
   871  000023                     ??_Serial_print:
   872  000023                     _RF24N_enqueue$2037:
   873                           	opt stack 0
   874  000023                     _RF24_startFastWrite$2366:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x22
   878  000023                     	ds	1
   879  000024                     RF24N_enqueue@result:
   880                           	opt stack 0
   881  000024                     RF24_txStandBy_t@start:
   882                           	opt stack 0
   883                           
   884                           ; 4 bytes @ 0x23
   885  000024                     	ds	1
   886  000025                     Serial_print@i:
   887                           	opt stack 0
   888  000025                     RF24N_enqueue@message_size:
   889                           	opt stack 0
   890  000025                     RF24_writeFast_m@buf:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x24
   894  000025                     	ds	2
   895  000027                     RF24N_begin_d@retryVar:
   896                           	opt stack 0
   897  000027                     RF24_writeFast_m@len:
   898                           	opt stack 0
   899  000027                     Serial_println@val:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0x26
   903  000027                     	ds	1
   904  000028                     RF24N_begin_d@_channel:
   905                           	opt stack 0
   906  000028                     RF24_writeFast_m@multicast:
   907                           	opt stack 0
   908                           
   909                           ; 1 bytes @ 0x27
   910  000028                     	ds	1
   911  000029                     ??_RF24_writeFast_m:
   912  000029                     RF24N_begin_d@i:
   913                           	opt stack 0
   914  000029                     loop@header:
   915                           	opt stack 0
   916                           
   917                           ; 8 bytes @ 0x28
   918  000029                     	ds	1
   919  00002A                     RF24N_write_to_pipe@node:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x29
   923  00002A                     	ds	2
   924  00002C                     RF24N_write_to_pipe@pipe:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x2B
   928  00002C                     	ds	1
   929  00002D                     RF24N_write_to_pipe@multicast:
   930                           	opt stack 0
   931                           
   932                           ; 1 bytes @ 0x2C
   933  00002D                     	ds	1
   934  00002E                     RF24N_write_to_pipe@out_pipe:
   935                           	opt stack 0
   936                           
   937                           ; 5 bytes @ 0x2D
   938  00002E                     	ds	3
   939  000031                     loop@payload:
   940                           	opt stack 0
   941                           
   942                           ; 8 bytes @ 0x30
   943  000031                     	ds	2
   944  000033                     RF24N_write_to_pipe@ok:
   945                           	opt stack 0
   946                           
   947                           ; 1 bytes @ 0x32
   948  000033                     	ds	1
   949  000034                     RF24N_write@to_node:
   950                           	opt stack 0
   951                           
   952                           ; 2 bytes @ 0x33
   953  000034                     	ds	2
   954  000036                     RF24N_write@directTo:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x35
   958  000036                     	ds	3
   959  000039                     tblptru	equ	0xFF8
   960                           tblptrh	equ	0xFF7
   961                           tblptrl	equ	0xFF6
   962                           tablat	equ	0xFF5
   963                           postinc0	equ	0xFEE
   964                           wreg	equ	0xFE8
   965                           postdec2	equ	0xFDD
   966                           fsr2h	equ	0xFDA
   967                           fsr2l	equ	0xFD9
   968                           
   969                           ; 1 bytes @ 0x38
   970 ;;
   971 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   972 ;;
   973 ;; *************** function _main *****************
   974 ;; Defined at:
   975 ;;		line 26 in file "pic_main.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;		None
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;Total ram usage:        0 bytes
   994 ;; Hardware stack levels required when called:   12
   995 ;; This function calls:
   996 ;;		_loop
   997 ;;		_setup
   998 ;; This function is called by:
   999 ;;		Startup code after reset
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text0
  1004  003610                     __ptext0:
  1005                           	opt stack 0
  1006  003610                     _main:
  1007                           	opt stack 19
  1008                           
  1009                           ;pic_main.c: 28: mtime=0;
  1010                           
  1011                           ;incstack = 0
  1012  003610  0E00               	movlw	0
  1013  003612  6E39               	movwf	_mtime,c
  1014  003614  0E00               	movlw	0
  1015  003616  6E3A               	movwf	_mtime+1,c
  1016  003618  0E00               	movlw	0
  1017  00361A  6E3B               	movwf	_mtime+2,c
  1018  00361C  0E00               	movlw	0
  1019  00361E  6E3C               	movwf	_mtime+3,c
  1020                           
  1021                           ;pic_main.c: 30: T0CONbits.T08BIT=0;
  1022  003620  9CD5               	bcf	4053,6,c	;volatile
  1023                           
  1024                           ;pic_main.c: 31: T0CONbits.T0CS=0;
  1025  003622  9AD5               	bcf	4053,5,c	;volatile
  1026                           
  1027                           ;pic_main.c: 32: T0CONbits.PSA=1;
  1028  003624  86D5               	bsf	4053,3,c	;volatile
  1029                           
  1030                           ;pic_main.c: 36: TMR0H=(unsigned char)(65536l-(32000000/4000l)&0xFF00)>>8;
  1031  003626  0E00               	movlw	0
  1032  003628  6ED7               	movwf	4055,c	;volatile
  1033                           
  1034                           ;pic_main.c: 37: TMR0L=(unsigned char)(65536l-(32000000/4000l)&0x00FF);
  1035  00362A  0EC0               	movlw	192
  1036  00362C  6ED6               	movwf	4054,c	;volatile
  1037                           
  1038                           ;pic_main.c: 38: INTCONbits.TMR0IF=0;
  1039  00362E  94F2               	bcf	intcon,2,c	;volatile
  1040                           
  1041                           ;pic_main.c: 39: INTCONbits.GIE = 1;
  1042  003630  8EF2               	bsf	intcon,7,c	;volatile
  1043                           
  1044                           ;pic_main.c: 40: INTCONbits.TMR0IE = 1;
  1045  003632  8AF2               	bsf	intcon,5,c	;volatile
  1046                           
  1047                           ;pic_main.c: 41: T0CONbits.TMR0ON=1;
  1048  003634  8ED5               	bsf	4053,7,c	;volatile
  1049                           
  1050                           ;pic_main.c: 43: setup();
  1051  003636  EC2F  F019         	call	_setup	;wreg free
  1052  00363A                     l6220:
  1053                           
  1054                           ;pic_main.c: 47: {
  1055                           ;pic_main.c: 48: loop();
  1056  00363A  EC42  F016         	call	_loop	;wreg free
  1057  00363E  D7FD               	goto	l6220
  1058  003640                     __end_of_main:
  1059                           	opt stack 0
  1060                           tblptru	equ	0xFF8
  1061                           tblptrh	equ	0xFF7
  1062                           tblptrl	equ	0xFF6
  1063                           tablat	equ	0xFF5
  1064                           intcon	equ	0xFF2
  1065                           postinc0	equ	0xFEE
  1066                           wreg	equ	0xFE8
  1067                           postdec2	equ	0xFDD
  1068                           fsr2h	equ	0xFDA
  1069                           fsr2l	equ	0xFD9
  1070                           
  1071 ;; *************** function _setup *****************
  1072 ;; Defined at:
  1073 ;;		line 37 in file "helloworld_rx.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;Total ram usage:        0 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; Hardware stack levels required when called:    8
  1094 ;; This function calls:
  1095 ;;		_RF24N_begin_d
  1096 ;;		_RF24N_init
  1097 ;;		_RF24_begin
  1098 ;;		_RF24_init
  1099 ;;		_Serial_begin
  1100 ;;		_Serial_println
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text1
  1107  00325E                     __ptext1:
  1108                           	opt stack 0
  1109  00325E                     _setup:
  1110                           	opt stack 22
  1111                           
  1112                           ;helloworld_rx.c: 39: RF24_init(36,35);
  1113                           
  1114                           ;incstack = 0
  1115  00325E  0E23               	movlw	35
  1116  003260  6E03               	movwf	RF24_init@_cspin,c
  1117  003262  0E24               	movlw	36
  1118  003264  EC20  F01B         	call	_RF24_init
  1119                           
  1120                           ;helloworld_rx.c: 40: RF24N_init();
  1121  003268  EC82  F018         	call	_RF24N_init	;wreg free
  1122                           
  1123                           ;helloworld_rx.c: 42: Serial_begin(57600);
  1124  00326C  0E00               	movlw	0
  1125  00326E  6E10               	movwf	Serial_begin@baud,c
  1126  003270  0EE1               	movlw	225
  1127  003272  6E11               	movwf	Serial_begin@baud+1,c
  1128  003274  0E00               	movlw	0
  1129  003276  6E12               	movwf	Serial_begin@baud+2,c
  1130  003278  0E00               	movlw	0
  1131  00327A  6E13               	movwf	Serial_begin@baud+3,c
  1132  00327C  EC06  F017         	call	_Serial_begin	;wreg free
  1133                           
  1134                           ;helloworld_rx.c: 43: Serial_println("RF24Network/examples/helloworld_rx/");
  1135  003280  0E17               	movlw	low STR_1
  1136  003282  6E27               	movwf	Serial_println@val,c
  1137  003284  0E10               	movlw	high STR_1
  1138  003286  6E28               	movwf	Serial_println@val+1,c
  1139  003288  EC23  F01C         	call	_Serial_println	;wreg free
  1140                           
  1141                           ;helloworld_rx.c: 46: RF24_begin();
  1142  00328C  EC9C  F014         	call	_RF24_begin	;wreg free
  1143                           
  1144                           ;helloworld_rx.c: 47: RF24N_begin_d( 90, this_node);
  1145  003290  0E15               	movlw	low _this_node
  1146  003292  6EF6               	movwf	tblptrl,c
  1147  003294                     	if	1	;There is more than 1 active tblptr byte
  1148  003294  0E10               	movlw	high _this_node
  1149  003296  6EF7               	movwf	tblptrh,c
  1150  003298                     	endif
  1151  003298                     	if	0	;There are less than 3 active tblptr bytes
  1152  003298                     	endif
  1153  003298  0009               	tblrd		*+
  1154  00329A  CFF5 F020          	movff	tablat,RF24N_begin_d@_node_address
  1155  00329E  000A               	tblrd		*-
  1156  0032A0  CFF5 F021          	movff	tablat,RF24N_begin_d@_node_address+1
  1157  0032A4  0E5A               	movlw	90
  1158  0032A6  EC30  F014         	call	_RF24N_begin_d
  1159  0032AA  0012               	return		;funcret
  1160  0032AC                     __end_of_setup:
  1161                           	opt stack 0
  1162                           tblptru	equ	0xFF8
  1163                           tblptrh	equ	0xFF7
  1164                           tblptrl	equ	0xFF6
  1165                           tablat	equ	0xFF5
  1166                           intcon	equ	0xFF2
  1167                           postinc0	equ	0xFEE
  1168                           wreg	equ	0xFE8
  1169                           postdec2	equ	0xFDD
  1170                           fsr2h	equ	0xFDA
  1171                           fsr2l	equ	0xFD9
  1172                           
  1173 ;; *************** function _Serial_begin *****************
  1174 ;; Defined at:
  1175 ;;		line 29 in file "serial.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  baud            4   15[COMRAM] unsigned long 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		wreg, status,2, status,0, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1189 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;Total ram usage:        8 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; Hardware stack levels required when called:    2
  1196 ;; This function calls:
  1197 ;;		___lldiv
  1198 ;; This function is called by:
  1199 ;;		_setup
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           	psect	text2
  1204  002E0C                     __ptext2:
  1205                           	opt stack 0
  1206  002E0C                     _Serial_begin:
  1207                           	opt stack 27
  1208                           
  1209                           ;serial.c: 31: TRISCbits.TRISC6=1;
  1210                           
  1211                           ;incstack = 0
  1212  002E0C  8C94               	bsf	3988,6,c	;volatile
  1213                           
  1214                           ;serial.c: 32: TRISCbits.TRISC7=1;
  1215  002E0E  8E94               	bsf	3988,7,c	;volatile
  1216                           
  1217                           ;serial.c: 34: baud=((32000000/(4*baud))-1);
  1218  002E10  0E00               	movlw	0
  1219  002E12  6E03               	movwf	___lldiv@dividend,c
  1220  002E14  0E48               	movlw	72
  1221  002E16  6E04               	movwf	___lldiv@dividend+1,c
  1222  002E18  0EE8               	movlw	232
  1223  002E1A  6E05               	movwf	___lldiv@dividend+2,c
  1224  002E1C  0E01               	movlw	1
  1225  002E1E  6E06               	movwf	___lldiv@dividend+3,c
  1226  002E20  C010  F014         	movff	Serial_begin@baud,??_Serial_begin
  1227  002E24  C011  F015         	movff	Serial_begin@baud+1,??_Serial_begin+1
  1228  002E28  C012  F016         	movff	Serial_begin@baud+2,??_Serial_begin+2
  1229  002E2C  C013  F017         	movff	Serial_begin@baud+3,??_Serial_begin+3
  1230  002E30  0E02               	movlw	2
  1231  002E32                     u5565:
  1232  002E32  90D8               	bcf	status,0,c
  1233  002E34  3614               	rlcf	??_Serial_begin,f,c
  1234  002E36  3615               	rlcf	??_Serial_begin+1,f,c
  1235  002E38  3616               	rlcf	??_Serial_begin+2,f,c
  1236  002E3A  3617               	rlcf	??_Serial_begin+3,f,c
  1237  002E3C  2EE8               	decfsz	wreg,f,c
  1238  002E3E  D7F9               	goto	u5565
  1239  002E40  C014  F007         	movff	??_Serial_begin,___lldiv@divisor
  1240  002E44  C015  F008         	movff	??_Serial_begin+1,___lldiv@divisor+1
  1241  002E48  C016  F009         	movff	??_Serial_begin+2,___lldiv@divisor+2
  1242  002E4C  C017  F00A         	movff	??_Serial_begin+3,___lldiv@divisor+3
  1243  002E50  EC85  F016         	call	___lldiv	;wreg free
  1244  002E54  0EFF               	movlw	255
  1245  002E56  2403               	addwf	?___lldiv,w,c
  1246  002E58  6E10               	movwf	Serial_begin@baud,c
  1247  002E5A  0EFF               	movlw	255
  1248  002E5C  2004               	addwfc	?___lldiv+1,w,c
  1249  002E5E  6E11               	movwf	Serial_begin@baud+1,c
  1250  002E60  0EFF               	movlw	255
  1251  002E62  2005               	addwfc	?___lldiv+2,w,c
  1252  002E64  6E12               	movwf	Serial_begin@baud+2,c
  1253  002E66  0EFF               	movlw	255
  1254  002E68  2006               	addwfc	?___lldiv+3,w,c
  1255  002E6A  6E13               	movwf	Serial_begin@baud+3,c
  1256                           
  1257                           ;serial.c: 40: SPBRG= (0x00FF & baud);
  1258  002E6C  C010  FFAF         	movff	Serial_begin@baud,4015	;volatile
  1259                           
  1260                           ;serial.c: 41: SPBRGH=(0xFF00 & baud)>>8;
  1261  002E70  C011  FFB0         	movff	Serial_begin@baud+1,4016	;volatile
  1262                           
  1263                           ;serial.c: 44: TXSTAbits.TX9=0;
  1264  002E74  9CAC               	bcf	4012,6,c	;volatile
  1265                           
  1266                           ;serial.c: 45: TXSTAbits.SYNC=0;
  1267  002E76  98AC               	bcf	4012,4,c	;volatile
  1268                           
  1269                           ;serial.c: 46: TXSTAbits.BRGH=1;
  1270  002E78  84AC               	bsf	4012,2,c	;volatile
  1271                           
  1272                           ;serial.c: 47: BAUDCONbits.BRG16=1;
  1273  002E7A  86B8               	bsf	4024,3,c	;volatile
  1274                           
  1275                           ;serial.c: 48: RCSTAbits.RX9=0;
  1276  002E7C  9CAB               	bcf	4011,6,c	;volatile
  1277                           
  1278                           ;serial.c: 49: RCSTAbits.CREN=1;
  1279  002E7E  88AB               	bsf	4011,4,c	;volatile
  1280                           
  1281                           ;serial.c: 50: TXSTAbits.TXEN=1;
  1282  002E80  8AAC               	bsf	4012,5,c	;volatile
  1283                           
  1284                           ;serial.c: 51: RCSTAbits.SPEN=1;
  1285  002E82  8EAB               	bsf	4011,7,c	;volatile
  1286  002E84  0012               	return		;funcret
  1287  002E86                     __end_of_Serial_begin:
  1288                           	opt stack 0
  1289                           tblptru	equ	0xFF8
  1290                           tblptrh	equ	0xFF7
  1291                           tblptrl	equ	0xFF6
  1292                           tablat	equ	0xFF5
  1293                           intcon	equ	0xFF2
  1294                           postinc0	equ	0xFEE
  1295                           wreg	equ	0xFE8
  1296                           postdec2	equ	0xFDD
  1297                           fsr2h	equ	0xFDA
  1298                           fsr2l	equ	0xFD9
  1299                           status	equ	0xFD8
  1300                           
  1301 ;; *************** function _RF24_init *****************
  1302 ;; Defined at:
  1303 ;;		line 433 in file "../../../RF24_c/RF24_cg.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  _cepin          1    wreg     unsigned char 
  1306 ;;  _cspin          1    2[COMRAM] unsigned char 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  _cepin          1    3[COMRAM] unsigned char 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, status,2
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1318 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;Total ram usage:        2 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    1
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_setup
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text3
  1333  003640                     __ptext3:
  1334                           	opt stack 0
  1335  003640                     _RF24_init:
  1336                           	opt stack 28
  1337                           
  1338                           ;incstack = 0
  1339                           ;RF24_init@_cepin stored from wreg
  1340  003640  6E04               	movwf	RF24_init@_cepin,c
  1341                           
  1342                           ;RF24_cg.c: 435: rf.ce_pin=_cepin;
  1343  003642  C004  F03D         	movff	RF24_init@_cepin,_rf
  1344                           
  1345                           ;RF24_cg.c: 436: rf.csn_pin=_cspin;
  1346  003646  C003  F03E         	movff	RF24_init@_cspin,_rf+1
  1347                           
  1348                           ;RF24_cg.c: 437: rf.p_variant=0;
  1349  00364A  0E00               	movlw	0
  1350  00364C  6E41               	movwf	_rf+4,c
  1351                           
  1352                           ;RF24_cg.c: 438: rf.payload_size=32;
  1353  00364E  0E20               	movlw	32
  1354  003650  6E42               	movwf	_rf+5,c
  1355                           
  1356                           ;RF24_cg.c: 439: rf.dynamic_payloads_enabled=0;
  1357  003652  0E00               	movlw	0
  1358  003654  6E43               	movwf	_rf+6,c
  1359                           
  1360                           ;RF24_cg.c: 440: rf.addr_width=5;
  1361  003656  0E05               	movlw	5
  1362  003658  6E49               	movwf	_rf+12,c
  1363                           
  1364                           ;RF24_cg.c: 441: rf.csDelay=5;
  1365  00365A  0E05               	movlw	5
  1366  00365C  6E4E               	movwf	_rf+17,c
  1367  00365E  0E00               	movlw	0
  1368  003660  6E4F               	movwf	_rf+18,c
  1369  003662  0E00               	movlw	0
  1370  003664  6E50               	movwf	_rf+19,c
  1371  003666  0E00               	movlw	0
  1372  003668  6E51               	movwf	_rf+20,c
  1373                           
  1374                           ;RF24_cg.c: 442: rf.pipe0_reading_address[0]=0;
  1375  00366A  0E00               	movlw	0
  1376  00366C  6E44               	movwf	_rf+7,c
  1377  00366E  0012               	return		;funcret
  1378  003670                     __end_of_RF24_init:
  1379                           	opt stack 0
  1380                           tblptru	equ	0xFF8
  1381                           tblptrh	equ	0xFF7
  1382                           tblptrl	equ	0xFF6
  1383                           tablat	equ	0xFF5
  1384                           intcon	equ	0xFF2
  1385                           postinc0	equ	0xFEE
  1386                           wreg	equ	0xFE8
  1387                           postdec2	equ	0xFDD
  1388                           fsr2h	equ	0xFDA
  1389                           fsr2l	equ	0xFD9
  1390                           status	equ	0xFD8
  1391                           
  1392 ;; *************** function _RF24_begin *****************
  1393 ;; Defined at:
  1394 ;;		line 598 in file "../../../RF24_c/RF24_cg.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  setup           1   25[COMRAM] unsigned char 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      unsigned char 
  1401 ;; Registers used:
  1402 ;;		wreg, status,2, status,0, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;Total ram usage:        2 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; Hardware stack levels required when called:    6
  1415 ;; This function calls:
  1416 ;;		_RF24_ce_d
  1417 ;;		_RF24_csn_d
  1418 ;;		_RF24_flush_rx
  1419 ;;		_RF24_flush_tx
  1420 ;;		_RF24_powerUp
  1421 ;;		_RF24_read_register_d
  1422 ;;		_RF24_setChannel
  1423 ;;		_RF24_setDataRate
  1424 ;;		_RF24_setRetries
  1425 ;;		_RF24_toggle_features_d
  1426 ;;		_RF24_write_register_d
  1427 ;;		_SPI_begin
  1428 ;;		_delay
  1429 ;;		_pinMode
  1430 ;; This function is called by:
  1431 ;;		_setup
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text4
  1436  002938                     __ptext4:
  1437                           	opt stack 0
  1438  002938                     _RF24_begin:
  1439                           	opt stack 23
  1440                           
  1441                           ;RF24_cg.c: 601: uint8_t setup=0;
  1442                           
  1443                           ;incstack = 0
  1444  002938  0E00               	movlw	0
  1445  00293A  6E1A               	movwf	RF24_begin@setup,c
  1446                           
  1447                           ;RF24_cg.c: 640: if (rf.ce_pin != rf.csn_pin) pinMode(rf.ce_pin,0);
  1448  00293C  503D               	movf	_rf,w,c
  1449  00293E  183E               	xorwf	_rf+1,w,c
  1450  002940  B4D8               	btfsc	status,2,c
  1451  002942  D005               	goto	l6050
  1452  002944  0E00               	movlw	0
  1453  002946  6E03               	movwf	pinMode@mode,c
  1454  002948  503D               	movf	_rf,w,c
  1455  00294A  EC82  F00D         	call	_pinMode
  1456  00294E                     l6050:
  1457                           
  1458                           ;RF24_cg.c: 643: if (rf.ce_pin != rf.csn_pin)
  1459  00294E  503D               	movf	_rf,w,c
  1460  002950  183E               	xorwf	_rf+1,w,c
  1461  002952  B4D8               	btfsc	status,2,c
  1462  002954  D005               	goto	l6054
  1463                           
  1464                           ;RF24_cg.c: 645: pinMode(rf.csn_pin,0);
  1465  002956  0E00               	movlw	0
  1466  002958  6E03               	movwf	pinMode@mode,c
  1467  00295A  503E               	movf	_rf+1,w,c
  1468  00295C  EC82  F00D         	call	_pinMode
  1469  002960                     l6054:
  1470                           
  1471                           ;RF24_cg.c: 647: SPI_begin();
  1472  002960  EC16  F01C         	call	_SPI_begin	;wreg free
  1473                           
  1474                           ;RF24_cg.c: 648: RF24_ce_d(0);
  1475  002964  0E00               	movlw	0
  1476  002966  EC52  F01C         	call	_RF24_ce_d
  1477                           
  1478                           ;RF24_cg.c: 649: RF24_csn_d(1);
  1479  00296A  0E01               	movlw	1
  1480  00296C  EC5D  F01C         	call	_RF24_csn_d
  1481                           
  1482                           ;RF24_cg.c: 661: delay( 5 ) ;
  1483  002970  0E00               	movlw	0
  1484  002972  6E04               	movwf	delay@val+1,c
  1485  002974  0E05               	movlw	5
  1486  002976  6E03               	movwf	delay@val,c
  1487  002978  ECA1  F019         	call	_delay	;wreg free
  1488                           
  1489                           ;RF24_cg.c: 664: RF24_write_register_d( 0x00, 0b00001100 ) ;
  1490  00297C  0E0C               	movlw	12
  1491  00297E  6E12               	movwf	RF24_write_register_d@value,c
  1492  002980  0E00               	movlw	0
  1493  002982  ECE9  F01B         	call	_RF24_write_register_d
  1494                           
  1495                           ;RF24_cg.c: 669: RF24_setRetries(5,15);
  1496  002986  0E0F               	movlw	15
  1497  002988  6E15               	movwf	RF24_setRetries@count,c
  1498  00298A  0E05               	movlw	5
  1499  00298C  ECC7  F01B         	call	_RF24_setRetries
  1500                           
  1501                           ;RF24_cg.c: 676: if( RF24_setDataRate( RF24_250KBPS ) )
  1502  002990  0E02               	movlw	2
  1503  002992  ECB9  F017         	call	_RF24_setDataRate
  1504  002996  0900               	iorlw	0
  1505  002998  B4D8               	btfsc	status,2,c
  1506  00299A  D002               	goto	l6070
  1507                           
  1508                           ;RF24_cg.c: 677: {
  1509                           ;RF24_cg.c: 678: rf.p_variant = 1 ;
  1510  00299C  0E01               	movlw	1
  1511  00299E  6E41               	movwf	_rf+4,c
  1512  0029A0                     l6070:
  1513                           
  1514                           ;RF24_cg.c: 679: }
  1515                           ;RF24_cg.c: 680: setup = RF24_read_register_d(0x06);
  1516  0029A0  0E06               	movlw	6
  1517  0029A2  ECF9  F01B         	call	_RF24_read_register_d
  1518  0029A6  6E1A               	movwf	RF24_begin@setup,c
  1519                           
  1520                           ;RF24_cg.c: 688: RF24_setDataRate( RF24_1MBPS ) ;
  1521  0029A8  0E00               	movlw	0
  1522  0029AA  ECB9  F017         	call	_RF24_setDataRate
  1523                           
  1524                           ;RF24_cg.c: 694: RF24_toggle_features_d();
  1525  0029AE  EC3C  F01C         	call	_RF24_toggle_features_d	;wreg free
  1526                           
  1527                           ;RF24_cg.c: 695: RF24_write_register_d(0x1D,0 );
  1528  0029B2  0E00               	movlw	0
  1529  0029B4  6E12               	movwf	RF24_write_register_d@value,c
  1530  0029B6  0E1D               	movlw	29
  1531  0029B8  ECE9  F01B         	call	_RF24_write_register_d
  1532                           
  1533                           ;RF24_cg.c: 696: RF24_write_register_d(0x1C,0);
  1534  0029BC  0E00               	movlw	0
  1535  0029BE  6E12               	movwf	RF24_write_register_d@value,c
  1536  0029C0  0E1C               	movlw	28
  1537  0029C2  ECE9  F01B         	call	_RF24_write_register_d
  1538                           
  1539                           ;RF24_cg.c: 700: RF24_write_register_d(0x07,(1<<(6)) | (1<<(5)) | (1<<(4)) );
  1540  0029C6  0E70               	movlw	112
  1541  0029C8  6E12               	movwf	RF24_write_register_d@value,c
  1542  0029CA  0E07               	movlw	7
  1543  0029CC  ECE9  F01B         	call	_RF24_write_register_d
  1544                           
  1545                           ;RF24_cg.c: 705: RF24_setChannel(76);
  1546  0029D0  0E4C               	movlw	76
  1547  0029D2  EC8E  F01B         	call	_RF24_setChannel
  1548                           
  1549                           ;RF24_cg.c: 708: RF24_flush_rx();
  1550  0029D6  EC85  F01C         	call	_RF24_flush_rx	;wreg free
  1551                           
  1552                           ;RF24_cg.c: 709: RF24_flush_tx();
  1553  0029DA  EC95  F01C         	call	_RF24_flush_tx	;wreg free
  1554                           
  1555                           ;RF24_cg.c: 711: RF24_powerUp();
  1556  0029DE  ECB4  F01B         	call	_RF24_powerUp	;wreg free
  1557                           
  1558                           ;RF24_cg.c: 715: RF24_write_register_d(0x00, ( RF24_read_register_d(0x00) ) & ~(1<<(0)) 
      +                          );
  1559  0029E2  0E00               	movlw	0
  1560  0029E4  ECF9  F01B         	call	_RF24_read_register_d
  1561  0029E8  0BFE               	andlw	254
  1562  0029EA  6E12               	movwf	RF24_write_register_d@value,c
  1563  0029EC  0E00               	movlw	0
  1564  0029EE  ECE9  F01B         	call	_RF24_write_register_d
  1565                           
  1566                           ;RF24_cg.c: 718: return ( setup != 0 && setup != 0xff );
  1567  0029F2  0E00               	movlw	0
  1568  0029F4  6E19               	movwf	_RF24_begin$2329,c
  1569  0029F6  501A               	movf	RF24_begin@setup,w,c
  1570  0029F8  B4D8               	btfsc	status,2,c
  1571  0029FA  0012               	return	
  1572  0029FC  281A               	incf	RF24_begin@setup,w,c
  1573  0029FE  B4D8               	btfsc	status,2,c
  1574  002A00  0012               	return	
  1575  002A02  0E01               	movlw	1
  1576  002A04  6E19               	movwf	_RF24_begin$2329,c
  1577  002A06  0012               	return	
  1578  002A08                     __end_of_RF24_begin:
  1579                           	opt stack 0
  1580                           tblptru	equ	0xFF8
  1581                           tblptrh	equ	0xFF7
  1582                           tblptrl	equ	0xFF6
  1583                           tablat	equ	0xFF5
  1584                           intcon	equ	0xFF2
  1585                           postinc0	equ	0xFEE
  1586                           wreg	equ	0xFE8
  1587                           postdec2	equ	0xFDD
  1588                           fsr2h	equ	0xFDA
  1589                           fsr2l	equ	0xFD9
  1590                           status	equ	0xFD8
  1591                           
  1592 ;; *************** function _pinMode *****************
  1593 ;; Defined at:
  1594 ;;		line 8 in file "../../../RF24_c/utility/XC8/spi.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  pin             1    wreg     unsigned char 
  1597 ;;  mode            1    2[COMRAM] unsigned char 
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;  pin             1    3[COMRAM] unsigned char 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1609 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;Total ram usage:        2 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    1
  1616 ;; This function calls:
  1617 ;;		Nothing
  1618 ;; This function is called by:
  1619 ;;		_RF24_begin
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           	psect	text5
  1624  001B04                     __ptext5:
  1625                           	opt stack 0
  1626  001B04                     _pinMode:
  1627                           	opt stack 27
  1628                           
  1629                           ;incstack = 0
  1630                           ;pinMode@pin stored from wreg
  1631  001B04  6E04               	movwf	pinMode@pin,c
  1632                           
  1633                           ;spi.c: 10: switch(pin)
  1634  001B06  D0D2               	goto	l4110
  1635  001B08                     l161:
  1636  001B08  B003               	btfsc	pinMode@mode,0,c
  1637  001B0A  D002               	bra	u4605
  1638  001B0C  9092               	bcf	3986,0,c	;volatile
  1639  001B0E  D001               	bra	u4606
  1640  001B10                     u4605:
  1641  001B10  8092               	bsf	3986,0,c	;volatile
  1642  001B12                     u4606:
  1643  001B12  0012               	return	
  1644  001B14                     l163:
  1645  001B14  B003               	btfsc	pinMode@mode,0,c
  1646  001B16  D002               	bra	u4615
  1647  001B18  9292               	bcf	3986,1,c	;volatile
  1648  001B1A  D001               	bra	u4616
  1649  001B1C                     u4615:
  1650  001B1C  8292               	bsf	3986,1,c	;volatile
  1651  001B1E                     u4616:
  1652  001B1E  0012               	return	
  1653  001B20                     l164:
  1654  001B20  B003               	btfsc	pinMode@mode,0,c
  1655  001B22  D002               	bra	u4625
  1656  001B24  9492               	bcf	3986,2,c	;volatile
  1657  001B26  D001               	bra	u4626
  1658  001B28                     u4625:
  1659  001B28  8492               	bsf	3986,2,c	;volatile
  1660  001B2A                     u4626:
  1661  001B2A  0012               	return	
  1662  001B2C                     l165:
  1663  001B2C  B003               	btfsc	pinMode@mode,0,c
  1664  001B2E  D002               	bra	u4635
  1665  001B30  9692               	bcf	3986,3,c	;volatile
  1666  001B32  D001               	bra	u4636
  1667  001B34                     u4635:
  1668  001B34  8692               	bsf	3986,3,c	;volatile
  1669  001B36                     u4636:
  1670  001B36  0012               	return	
  1671  001B38                     l166:
  1672  001B38  B003               	btfsc	pinMode@mode,0,c
  1673  001B3A  D002               	bra	u4645
  1674  001B3C  9892               	bcf	3986,4,c	;volatile
  1675  001B3E  D001               	bra	u4646
  1676  001B40                     u4645:
  1677  001B40  8892               	bsf	3986,4,c	;volatile
  1678  001B42                     u4646:
  1679  001B42  0012               	return	
  1680  001B44                     l167:
  1681  001B44  B003               	btfsc	pinMode@mode,0,c
  1682  001B46  D002               	bra	u4655
  1683  001B48  9A92               	bcf	3986,5,c	;volatile
  1684  001B4A  D001               	bra	u4656
  1685  001B4C                     u4655:
  1686  001B4C  8A92               	bsf	3986,5,c	;volatile
  1687  001B4E                     u4656:
  1688  001B4E  0012               	return	
  1689  001B50                     l168:
  1690  001B50  B003               	btfsc	pinMode@mode,0,c
  1691  001B52  D002               	bra	u4665
  1692  001B54  9096               	bcf	3990,0,c	;volatile
  1693  001B56  D001               	bra	u4666
  1694  001B58                     u4665:
  1695  001B58  8096               	bsf	3990,0,c	;volatile
  1696  001B5A                     u4666:
  1697  001B5A  0012               	return	
  1698  001B5C                     l169:
  1699  001B5C  B003               	btfsc	pinMode@mode,0,c
  1700  001B5E  D002               	bra	u4675
  1701  001B60  9296               	bcf	3990,1,c	;volatile
  1702  001B62  D001               	bra	u4676
  1703  001B64                     u4675:
  1704  001B64  8296               	bsf	3990,1,c	;volatile
  1705  001B66                     u4676:
  1706  001B66  0012               	return	
  1707  001B68                     l170:
  1708  001B68  B003               	btfsc	pinMode@mode,0,c
  1709  001B6A  D002               	bra	u4685
  1710  001B6C  9496               	bcf	3990,2,c	;volatile
  1711  001B6E  D001               	bra	u4686
  1712  001B70                     u4685:
  1713  001B70  8496               	bsf	3990,2,c	;volatile
  1714  001B72                     u4686:
  1715  001B72  0012               	return	
  1716  001B74                     l171:
  1717  001B74  B003               	btfsc	pinMode@mode,0,c
  1718  001B76  D002               	bra	u4695
  1719  001B78  9E92               	bcf	3986,7,c	;volatile
  1720  001B7A  D001               	bra	u4696
  1721  001B7C                     u4695:
  1722  001B7C  8E92               	bsf	3986,7,c	;volatile
  1723  001B7E                     u4696:
  1724  001B7E  0012               	return	
  1725  001B80                     l172:
  1726  001B80  B003               	btfsc	pinMode@mode,0,c
  1727  001B82  D002               	bra	u4705
  1728  001B84  9C92               	bcf	3986,6,c	;volatile
  1729  001B86  D001               	bra	u4706
  1730  001B88                     u4705:
  1731  001B88  8C92               	bsf	3986,6,c	;volatile
  1732  001B8A                     u4706:
  1733  001B8A  0012               	return	
  1734  001B8C                     l173:
  1735  001B8C  B003               	btfsc	pinMode@mode,0,c
  1736  001B8E  D002               	bra	u4715
  1737  001B90  9094               	bcf	3988,0,c	;volatile
  1738  001B92  D001               	bra	u4716
  1739  001B94                     u4715:
  1740  001B94  8094               	bsf	3988,0,c	;volatile
  1741  001B96                     u4716:
  1742  001B96  0012               	return	
  1743  001B98                     l174:
  1744  001B98  B003               	btfsc	pinMode@mode,0,c
  1745  001B9A  D002               	bra	u4725
  1746  001B9C  9294               	bcf	3988,1,c	;volatile
  1747  001B9E  D001               	bra	u4726
  1748  001BA0                     u4725:
  1749  001BA0  8294               	bsf	3988,1,c	;volatile
  1750  001BA2                     u4726:
  1751  001BA2  0012               	return	
  1752  001BA4                     l175:
  1753  001BA4  B003               	btfsc	pinMode@mode,0,c
  1754  001BA6  D002               	bra	u4735
  1755  001BA8  9494               	bcf	3988,2,c	;volatile
  1756  001BAA  D001               	bra	u4736
  1757  001BAC                     u4735:
  1758  001BAC  8494               	bsf	3988,2,c	;volatile
  1759  001BAE                     u4736:
  1760  001BAE  0012               	return	
  1761  001BB0                     l176:
  1762  001BB0  B003               	btfsc	pinMode@mode,0,c
  1763  001BB2  D002               	bra	u4745
  1764  001BB4  9694               	bcf	3988,3,c	;volatile
  1765  001BB6  D001               	bra	u4746
  1766  001BB8                     u4745:
  1767  001BB8  8694               	bsf	3988,3,c	;volatile
  1768  001BBA                     u4746:
  1769  001BBA  0012               	return	
  1770  001BBC                     l177:
  1771  001BBC  B003               	btfsc	pinMode@mode,0,c
  1772  001BBE  D002               	bra	u4755
  1773  001BC0  9095               	bcf	3989,0,c	;volatile
  1774  001BC2  D001               	bra	u4756
  1775  001BC4                     u4755:
  1776  001BC4  8095               	bsf	3989,0,c	;volatile
  1777  001BC6                     u4756:
  1778  001BC6  0012               	return	
  1779  001BC8                     l178:
  1780  001BC8  B003               	btfsc	pinMode@mode,0,c
  1781  001BCA  D002               	bra	u4765
  1782  001BCC  9295               	bcf	3989,1,c	;volatile
  1783  001BCE  D001               	bra	u4766
  1784  001BD0                     u4765:
  1785  001BD0  8295               	bsf	3989,1,c	;volatile
  1786  001BD2                     u4766:
  1787  001BD2  0012               	return	
  1788  001BD4                     l179:
  1789  001BD4  B003               	btfsc	pinMode@mode,0,c
  1790  001BD6  D002               	bra	u4775
  1791  001BD8  9495               	bcf	3989,2,c	;volatile
  1792  001BDA  D001               	bra	u4776
  1793  001BDC                     u4775:
  1794  001BDC  8495               	bsf	3989,2,c	;volatile
  1795  001BDE                     u4776:
  1796  001BDE  0012               	return	
  1797  001BE0                     l180:
  1798  001BE0  B003               	btfsc	pinMode@mode,0,c
  1799  001BE2  D002               	bra	u4785
  1800  001BE4  9695               	bcf	3989,3,c	;volatile
  1801  001BE6  D001               	bra	u4786
  1802  001BE8                     u4785:
  1803  001BE8  8695               	bsf	3989,3,c	;volatile
  1804  001BEA                     u4786:
  1805  001BEA  0012               	return	
  1806  001BEC                     l181:
  1807  001BEC  B003               	btfsc	pinMode@mode,0,c
  1808  001BEE  D002               	bra	u4795
  1809  001BF0  9894               	bcf	3988,4,c	;volatile
  1810  001BF2  D001               	bra	u4796
  1811  001BF4                     u4795:
  1812  001BF4  8894               	bsf	3988,4,c	;volatile
  1813  001BF6                     u4796:
  1814  001BF6  0012               	return	
  1815  001BF8                     l182:
  1816  001BF8  B003               	btfsc	pinMode@mode,0,c
  1817  001BFA  D002               	bra	u4805
  1818  001BFC  9A94               	bcf	3988,5,c	;volatile
  1819  001BFE  D001               	bra	u4806
  1820  001C00                     u4805:
  1821  001C00  8A94               	bsf	3988,5,c	;volatile
  1822  001C02                     u4806:
  1823  001C02  0012               	return	
  1824  001C04                     l183:
  1825  001C04  B003               	btfsc	pinMode@mode,0,c
  1826  001C06  D002               	bra	u4815
  1827  001C08  9C94               	bcf	3988,6,c	;volatile
  1828  001C0A  D001               	bra	u4816
  1829  001C0C                     u4815:
  1830  001C0C  8C94               	bsf	3988,6,c	;volatile
  1831  001C0E                     u4816:
  1832  001C0E  0012               	return	
  1833  001C10                     l184:
  1834  001C10  B003               	btfsc	pinMode@mode,0,c
  1835  001C12  D002               	bra	u4825
  1836  001C14  9E94               	bcf	3988,7,c	;volatile
  1837  001C16  D001               	bra	u4826
  1838  001C18                     u4825:
  1839  001C18  8E94               	bsf	3988,7,c	;volatile
  1840  001C1A                     u4826:
  1841  001C1A  0012               	return	
  1842  001C1C                     l185:
  1843  001C1C  B003               	btfsc	pinMode@mode,0,c
  1844  001C1E  D002               	bra	u4835
  1845  001C20  9895               	bcf	3989,4,c	;volatile
  1846  001C22  D001               	bra	u4836
  1847  001C24                     u4835:
  1848  001C24  8895               	bsf	3989,4,c	;volatile
  1849  001C26                     u4836:
  1850  001C26  0012               	return	
  1851  001C28                     l186:
  1852  001C28  B003               	btfsc	pinMode@mode,0,c
  1853  001C2A  D002               	bra	u4845
  1854  001C2C  9A95               	bcf	3989,5,c	;volatile
  1855  001C2E  D001               	bra	u4846
  1856  001C30                     u4845:
  1857  001C30  8A95               	bsf	3989,5,c	;volatile
  1858  001C32                     u4846:
  1859  001C32  0012               	return	
  1860  001C34                     l187:
  1861  001C34  B003               	btfsc	pinMode@mode,0,c
  1862  001C36  D002               	bra	u4855
  1863  001C38  9C95               	bcf	3989,6,c	;volatile
  1864  001C3A  D001               	bra	u4856
  1865  001C3C                     u4855:
  1866  001C3C  8C95               	bsf	3989,6,c	;volatile
  1867  001C3E                     u4856:
  1868  001C3E  0012               	return	
  1869  001C40                     l188:
  1870  001C40  B003               	btfsc	pinMode@mode,0,c
  1871  001C42  D002               	bra	u4865
  1872  001C44  9E95               	bcf	3989,7,c	;volatile
  1873  001C46  D001               	bra	u4866
  1874  001C48                     u4865:
  1875  001C48  8E95               	bsf	3989,7,c	;volatile
  1876  001C4A                     u4866:
  1877  001C4A  0012               	return	
  1878  001C4C                     l189:
  1879  001C4C  B003               	btfsc	pinMode@mode,0,c
  1880  001C4E  D002               	bra	u4875
  1881  001C50  9093               	bcf	3987,0,c	;volatile
  1882  001C52  D001               	bra	u4876
  1883  001C54                     u4875:
  1884  001C54  8093               	bsf	3987,0,c	;volatile
  1885  001C56                     u4876:
  1886  001C56  0012               	return	
  1887  001C58                     l190:
  1888  001C58  B003               	btfsc	pinMode@mode,0,c
  1889  001C5A  D002               	bra	u4885
  1890  001C5C  9293               	bcf	3987,1,c	;volatile
  1891  001C5E  D001               	bra	u4886
  1892  001C60                     u4885:
  1893  001C60  8293               	bsf	3987,1,c	;volatile
  1894  001C62                     u4886:
  1895  001C62  0012               	return	
  1896  001C64                     l191:
  1897  001C64  B003               	btfsc	pinMode@mode,0,c
  1898  001C66  D002               	bra	u4895
  1899  001C68  9493               	bcf	3987,2,c	;volatile
  1900  001C6A  D001               	bra	u4896
  1901  001C6C                     u4895:
  1902  001C6C  8493               	bsf	3987,2,c	;volatile
  1903  001C6E                     u4896:
  1904  001C6E  0012               	return	
  1905  001C70                     l192:
  1906  001C70  B003               	btfsc	pinMode@mode,0,c
  1907  001C72  D002               	bra	u4905
  1908  001C74  9693               	bcf	3987,3,c	;volatile
  1909  001C76  D001               	bra	u4906
  1910  001C78                     u4905:
  1911  001C78  8693               	bsf	3987,3,c	;volatile
  1912  001C7A                     u4906:
  1913  001C7A  0012               	return	
  1914  001C7C                     l193:
  1915  001C7C  B003               	btfsc	pinMode@mode,0,c
  1916  001C7E  D002               	bra	u4915
  1917  001C80  9893               	bcf	3987,4,c	;volatile
  1918  001C82  D001               	bra	u4916
  1919  001C84                     u4915:
  1920  001C84  8893               	bsf	3987,4,c	;volatile
  1921  001C86                     u4916:
  1922  001C86  0012               	return	
  1923  001C88                     l194:
  1924  001C88  B003               	btfsc	pinMode@mode,0,c
  1925  001C8A  D002               	bra	u4925
  1926  001C8C  9A93               	bcf	3987,5,c	;volatile
  1927  001C8E  D001               	bra	u4926
  1928  001C90                     u4925:
  1929  001C90  8A93               	bsf	3987,5,c	;volatile
  1930  001C92                     u4926:
  1931  001C92  0012               	return	
  1932  001C94                     l195:
  1933  001C94  B003               	btfsc	pinMode@mode,0,c
  1934  001C96  D002               	bra	u4935
  1935  001C98  9C93               	bcf	3987,6,c	;volatile
  1936  001C9A  D001               	bra	u4936
  1937  001C9C                     u4935:
  1938  001C9C  8C93               	bsf	3987,6,c	;volatile
  1939  001C9E                     u4936:
  1940  001C9E  0012               	return	
  1941  001CA0                     l196:
  1942  001CA0  B003               	btfsc	pinMode@mode,0,c
  1943  001CA2  D002               	bra	u4945
  1944  001CA4  9E93               	bcf	3987,7,c	;volatile
  1945  001CA6  D001               	bra	u4946
  1946  001CA8                     u4945:
  1947  001CA8  8E93               	bsf	3987,7,c	;volatile
  1948  001CAA                     u4946:
  1949                           
  1950                           ;spi.c: 59: }
  1951                           
  1952                           ;spi.c: 58: default: break;
  1953  001CAA  0012               	return	
  1954  001CAC                     l4110:
  1955  001CAC  5004               	movf	pinMode@pin,w,c
  1956                           
  1957                           ; Switch size 1, requested type "space"
  1958                           ; Number of cases is 35, Range of values is 2 to 40
  1959                           ; switch strategies available:
  1960                           ; Name         Instructions Cycles
  1961                           ; simple_byte          106    54 (average)
  1962                           ;	Chosen strategy is simple_byte
  1963  001CAE  0A02               	xorlw	2	; case 2
  1964  001CB0  B4D8               	btfsc	status,2,c
  1965  001CB2  D72A               	goto	l161
  1966  001CB4  0A01               	xorlw	1	; case 3
  1967  001CB6  B4D8               	btfsc	status,2,c
  1968  001CB8  D72D               	goto	l163
  1969  001CBA  0A07               	xorlw	7	; case 4
  1970  001CBC  B4D8               	btfsc	status,2,c
  1971  001CBE  D730               	goto	l164
  1972  001CC0  0A01               	xorlw	1	; case 5
  1973  001CC2  B4D8               	btfsc	status,2,c
  1974  001CC4  D733               	goto	l165
  1975  001CC6  0A03               	xorlw	3	; case 6
  1976  001CC8  B4D8               	btfsc	status,2,c
  1977  001CCA  D736               	goto	l166
  1978  001CCC  0A01               	xorlw	1	; case 7
  1979  001CCE  B4D8               	btfsc	status,2,c
  1980  001CD0  D739               	goto	l167
  1981  001CD2  0A0F               	xorlw	15	; case 8
  1982  001CD4  B4D8               	btfsc	status,2,c
  1983  001CD6  D73C               	goto	l168
  1984  001CD8  0A01               	xorlw	1	; case 9
  1985  001CDA  B4D8               	btfsc	status,2,c
  1986  001CDC  D73F               	goto	l169
  1987  001CDE  0A03               	xorlw	3	; case 10
  1988  001CE0  B4D8               	btfsc	status,2,c
  1989  001CE2  D742               	goto	l170
  1990  001CE4  0A07               	xorlw	7	; case 13
  1991  001CE6  B4D8               	btfsc	status,2,c
  1992  001CE8  D745               	goto	l171
  1993  001CEA  0A03               	xorlw	3	; case 14
  1994  001CEC  B4D8               	btfsc	status,2,c
  1995  001CEE  D748               	goto	l172
  1996  001CF0  0A01               	xorlw	1	; case 15
  1997  001CF2  B4D8               	btfsc	status,2,c
  1998  001CF4  D74B               	goto	l173
  1999  001CF6  0A1F               	xorlw	31	; case 16
  2000  001CF8  B4D8               	btfsc	status,2,c
  2001  001CFA  D74E               	goto	l174
  2002  001CFC  0A01               	xorlw	1	; case 17
  2003  001CFE  B4D8               	btfsc	status,2,c
  2004  001D00  D751               	goto	l175
  2005  001D02  0A03               	xorlw	3	; case 18
  2006  001D04  B4D8               	btfsc	status,2,c
  2007  001D06  D754               	goto	l176
  2008  001D08  0A01               	xorlw	1	; case 19
  2009  001D0A  B4D8               	btfsc	status,2,c
  2010  001D0C  D757               	goto	l177
  2011  001D0E  0A07               	xorlw	7	; case 20
  2012  001D10  B4D8               	btfsc	status,2,c
  2013  001D12  D75A               	goto	l178
  2014  001D14  0A01               	xorlw	1	; case 21
  2015  001D16  B4D8               	btfsc	status,2,c
  2016  001D18  D75D               	goto	l179
  2017  001D1A  0A03               	xorlw	3	; case 22
  2018  001D1C  B4D8               	btfsc	status,2,c
  2019  001D1E  D760               	goto	l180
  2020  001D20  0A01               	xorlw	1	; case 23
  2021  001D22  B4D8               	btfsc	status,2,c
  2022  001D24  D763               	goto	l181
  2023  001D26  0A0F               	xorlw	15	; case 24
  2024  001D28  B4D8               	btfsc	status,2,c
  2025  001D2A  D766               	goto	l182
  2026  001D2C  0A01               	xorlw	1	; case 25
  2027  001D2E  B4D8               	btfsc	status,2,c
  2028  001D30  D769               	goto	l183
  2029  001D32  0A03               	xorlw	3	; case 26
  2030  001D34  B4D8               	btfsc	status,2,c
  2031  001D36  D76C               	goto	l184
  2032  001D38  0A01               	xorlw	1	; case 27
  2033  001D3A  B4D8               	btfsc	status,2,c
  2034  001D3C  D76F               	goto	l185
  2035  001D3E  0A07               	xorlw	7	; case 28
  2036  001D40  B4D8               	btfsc	status,2,c
  2037  001D42  D772               	goto	l186
  2038  001D44  0A01               	xorlw	1	; case 29
  2039  001D46  B4D8               	btfsc	status,2,c
  2040  001D48  D775               	goto	l187
  2041  001D4A  0A03               	xorlw	3	; case 30
  2042  001D4C  B4D8               	btfsc	status,2,c
  2043  001D4E  D778               	goto	l188
  2044  001D50  0A3F               	xorlw	63	; case 33
  2045  001D52  B4D8               	btfsc	status,2,c
  2046  001D54  D77B               	goto	l189
  2047  001D56  0A03               	xorlw	3	; case 34
  2048  001D58  B4D8               	btfsc	status,2,c
  2049  001D5A  D77E               	goto	l190
  2050  001D5C  0A01               	xorlw	1	; case 35
  2051  001D5E  B4D8               	btfsc	status,2,c
  2052  001D60  D781               	goto	l191
  2053  001D62  0A07               	xorlw	7	; case 36
  2054  001D64  B4D8               	btfsc	status,2,c
  2055  001D66  D784               	goto	l192
  2056  001D68  0A01               	xorlw	1	; case 37
  2057  001D6A  B4D8               	btfsc	status,2,c
  2058  001D6C  D787               	goto	l193
  2059  001D6E  0A03               	xorlw	3	; case 38
  2060  001D70  B4D8               	btfsc	status,2,c
  2061  001D72  D78A               	goto	l194
  2062  001D74  0A01               	xorlw	1	; case 39
  2063  001D76  B4D8               	btfsc	status,2,c
  2064  001D78  D78D               	goto	l195
  2065  001D7A  0A0F               	xorlw	15	; case 40
  2066  001D7C  A4D8               	btfss	status,2,c
  2067  001D7E  0012               	return	
  2068  001D80  D78F               	goto	l196
  2069  001D82                     __end_of_pinMode:
  2070                           	opt stack 0
  2071                           tblptru	equ	0xFF8
  2072                           tblptrh	equ	0xFF7
  2073                           tblptrl	equ	0xFF6
  2074                           tablat	equ	0xFF5
  2075                           intcon	equ	0xFF2
  2076                           postinc0	equ	0xFEE
  2077                           wreg	equ	0xFE8
  2078                           postdec2	equ	0xFDD
  2079                           fsr2h	equ	0xFDA
  2080                           fsr2l	equ	0xFD9
  2081                           status	equ	0xFD8
  2082                           
  2083 ;; *************** function _SPI_begin *****************
  2084 ;; Defined at:
  2085 ;;		line 224 in file "../../../RF24_c/utility/XC8/spi.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;Total ram usage:        0 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    1
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_RF24_begin
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text6
  2114  00382C                     __ptext6:
  2115                           	opt stack 0
  2116  00382C                     _SPI_begin:
  2117                           	opt stack 27
  2118                           
  2119                           ;spi.c: 235: TRISCbits.TRISC4=1;
  2120                           
  2121                           ;incstack = 0
  2122  00382C  8894               	bsf	3988,4,c	;volatile
  2123                           
  2124                           ;spi.c: 237: TRISCbits.TRISC3=0;
  2125  00382E  9694               	bcf	3988,3,c	;volatile
  2126                           
  2127                           ;spi.c: 239: TRISCbits.TRISC5=0;
  2128  003830  9A94               	bcf	3988,5,c	;volatile
  2129                           
  2130                           ;spi.c: 242: SSPCON1bits.SSPEN=0;
  2131  003832  9AC6               	bcf	4038,5,c	;volatile
  2132                           
  2133                           ;spi.c: 243: SSPSTATbits.CKE=1;
  2134  003834  8CC7               	bsf	4039,6,c	;volatile
  2135                           
  2136                           ;spi.c: 244: SSPCON1bits.CKP=0;
  2137  003836  98C6               	bcf	4038,4,c	;volatile
  2138                           
  2139                           ;spi.c: 245: SSPSTATbits.SMP=0;
  2140  003838  9EC7               	bcf	4039,7,c	;volatile
  2141                           
  2142                           ;spi.c: 246: SSPCON1bits.SSPM=1;
  2143  00383A  50C6               	movf	4038,w,c	;volatile
  2144  00383C  0BF0               	andlw	-16
  2145  00383E  0901               	iorlw	1
  2146  003840  6EC6               	movwf	4038,c	;volatile
  2147                           
  2148                           ;spi.c: 247: SSPCON1bits.SSPEN=1;
  2149  003842  8AC6               	bsf	4038,5,c	;volatile
  2150  003844  0012               	return		;funcret
  2151  003846                     __end_of_SPI_begin:
  2152                           	opt stack 0
  2153                           tblptru	equ	0xFF8
  2154                           tblptrh	equ	0xFF7
  2155                           tblptrl	equ	0xFF6
  2156                           tablat	equ	0xFF5
  2157                           intcon	equ	0xFF2
  2158                           postinc0	equ	0xFEE
  2159                           wreg	equ	0xFE8
  2160                           postdec2	equ	0xFDD
  2161                           fsr2h	equ	0xFDA
  2162                           fsr2l	equ	0xFD9
  2163                           status	equ	0xFD8
  2164                           
  2165 ;; *************** function _RF24_toggle_features_d *****************
  2166 ;; Defined at:
  2167 ;;		line 1266 in file "../../../RF24_c/RF24_cg.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;Total ram usage:        0 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    4
  2188 ;; This function calls:
  2189 ;;		_RF24_beginTransaction
  2190 ;;		_RF24_endTransaction
  2191 ;;		_SPI_transfer
  2192 ;; This function is called by:
  2193 ;;		_RF24_begin
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text7
  2198  003878                     __ptext7:
  2199                           	opt stack 0
  2200  003878                     _RF24_toggle_features_d:
  2201                           	opt stack 24
  2202                           
  2203                           ;RF24_cg.c: 1268: RF24_beginTransaction();
  2204                           
  2205                           ;incstack = 0
  2206  003878  EC91  F01C         	call	_RF24_beginTransaction	;wreg free
  2207                           
  2208                           ;RF24_cg.c: 1269: SPI_transfer( 0x50 );
  2209  00387C  0E50               	movlw	80
  2210  00387E  EC70  F01C         	call	_SPI_transfer
  2211                           
  2212                           ;RF24_cg.c: 1270: SPI_transfer( 0x73 );
  2213  003882  0E73               	movlw	115
  2214  003884  EC70  F01C         	call	_SPI_transfer
  2215                           
  2216                           ;RF24_cg.c: 1271: RF24_endTransaction();
  2217  003888  EC8D  F01C         	call	_RF24_endTransaction	;wreg free
  2218  00388C  0012               	return		;funcret
  2219  00388E                     __end_of_RF24_toggle_features_d:
  2220                           	opt stack 0
  2221                           tblptru	equ	0xFF8
  2222                           tblptrh	equ	0xFF7
  2223                           tblptrl	equ	0xFF6
  2224                           tablat	equ	0xFF5
  2225                           intcon	equ	0xFF2
  2226                           postinc0	equ	0xFEE
  2227                           wreg	equ	0xFE8
  2228                           postdec2	equ	0xFDD
  2229                           fsr2h	equ	0xFDA
  2230                           fsr2l	equ	0xFD9
  2231                           status	equ	0xFD8
  2232                           
  2233 ;; *************** function _RF24_setDataRate *****************
  2234 ;; Defined at:
  2235 ;;		line 1453 in file "../../../RF24_c/RF24_cg.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  speed           1    wreg     enum E3388
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  speed           1   21[COMRAM] enum E3388
  2240 ;;  setup           1   22[COMRAM] unsigned char 
  2241 ;;  result          1   20[COMRAM] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      unsigned char 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;Total ram usage:        3 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    5
  2258 ;; This function calls:
  2259 ;;		_RF24_read_register_d
  2260 ;;		_RF24_write_register_d
  2261 ;; This function is called by:
  2262 ;;		_RF24_begin
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text8
  2267  002F72                     __ptext8:
  2268                           	opt stack 0
  2269  002F72                     _RF24_setDataRate:
  2270                           	opt stack 23
  2271                           
  2272                           ;incstack = 0
  2273                           ;RF24_setDataRate@speed stored from wreg
  2274  002F72  6E16               	movwf	RF24_setDataRate@speed,c
  2275                           
  2276                           ;RF24_cg.c: 1455: uint8_t result = 0;
  2277  002F74  0E00               	movlw	0
  2278  002F76  6E15               	movwf	RF24_setDataRate@result,c
  2279                           
  2280                           ;RF24_cg.c: 1456: uint8_t setup = RF24_read_register_d(0x06) ;
  2281  002F78  0E06               	movlw	6
  2282  002F7A  ECF9  F01B         	call	_RF24_read_register_d
  2283  002F7E  6E17               	movwf	RF24_setDataRate@setup,c
  2284                           
  2285                           ;RF24_cg.c: 1459: setup &= ~((1<<(5)) | (1<<(3))) ;
  2286  002F80  0ED7               	movlw	215
  2287  002F82  1617               	andwf	RF24_setDataRate@setup,f,c
  2288                           
  2289                           ;RF24_cg.c: 1464: rf.txDelay=85;
  2290  002F84  0E55               	movlw	85
  2291  002F86  6E4A               	movwf	_rf+13,c
  2292  002F88  0E00               	movlw	0
  2293  002F8A  6E4B               	movwf	_rf+14,c
  2294  002F8C  0E00               	movlw	0
  2295  002F8E  6E4C               	movwf	_rf+15,c
  2296  002F90  0E00               	movlw	0
  2297  002F92  6E4D               	movwf	_rf+16,c
  2298                           
  2299                           ;RF24_cg.c: 1466: if( speed == RF24_250KBPS )
  2300  002F94  0E02               	movlw	2
  2301  002F96  1816               	xorwf	RF24_setDataRate@speed,w,c
  2302  002F98  A4D8               	btfss	status,2,c
  2303  002F9A  D003               	goto	l6024
  2304                           
  2305                           ;RF24_cg.c: 1467: {
  2306                           ;RF24_cg.c: 1470: setup |= (1<<(5)) ;
  2307  002F9C  8A17               	bsf	RF24_setDataRate@setup,5,c
  2308                           
  2309                           ;RF24_cg.c: 1474: rf.txDelay=155;
  2310  002F9E  0E9B               	movlw	155
  2311  002FA0  D005               	goto	L1
  2312  002FA2                     l6024:
  2313                           
  2314                           ;RF24_cg.c: 1477: else
  2315                           ;RF24_cg.c: 1478: {
  2316                           ;RF24_cg.c: 1481: if ( speed == RF24_2MBPS )
  2317  002FA2  0416               	decf	RF24_setDataRate@speed,w,c
  2318  002FA4  A4D8               	btfss	status,2,c
  2319  002FA6  D009               	goto	l6030
  2320                           
  2321                           ;RF24_cg.c: 1482: {
  2322                           ;RF24_cg.c: 1483: setup |= (1<<(3));
  2323  002FA8  8617               	bsf	RF24_setDataRate@setup,3,c
  2324                           
  2325                           ;RF24_cg.c: 1487: rf.txDelay=65;
  2326  002FAA  0E41               	movlw	65
  2327  002FAC                     L1:
  2328  002FAC  6E4A               	movwf	_rf+13,c
  2329  002FAE  0E00               	movlw	0
  2330  002FB0  6E4B               	movwf	_rf+14,c
  2331  002FB2  0E00               	movlw	0
  2332  002FB4  6E4C               	movwf	_rf+15,c
  2333  002FB6  0E00               	movlw	0
  2334  002FB8  6E4D               	movwf	_rf+16,c
  2335  002FBA                     l6030:
  2336                           
  2337                           ;RF24_cg.c: 1489: }
  2338                           ;RF24_cg.c: 1490: }
  2339                           ;RF24_cg.c: 1491: RF24_write_register_d(0x06,setup);
  2340  002FBA  C017  F012         	movff	RF24_setDataRate@setup,RF24_write_register_d@value
  2341  002FBE  0E06               	movlw	6
  2342  002FC0  ECE9  F01B         	call	_RF24_write_register_d
  2343                           
  2344                           ;RF24_cg.c: 1494: if ( RF24_read_register_d(0x06) == setup )
  2345  002FC4  0E06               	movlw	6
  2346  002FC6  ECF9  F01B         	call	_RF24_read_register_d
  2347  002FCA  1817               	xorwf	RF24_setDataRate@setup,w,c
  2348  002FCC  A4D8               	btfss	status,2,c
  2349  002FCE  D002               	goto	l959
  2350                           
  2351                           ;RF24_cg.c: 1495: {
  2352                           ;RF24_cg.c: 1496: result = 1;
  2353  002FD0  0E01               	movlw	1
  2354  002FD2  6E15               	movwf	RF24_setDataRate@result,c
  2355  002FD4                     l959:
  2356                           
  2357                           ;RF24_cg.c: 1497: }
  2358                           ;RF24_cg.c: 1498: return result;
  2359  002FD4  5015               	movf	RF24_setDataRate@result,w,c
  2360  002FD6  0012               	return	
  2361  002FD8                     __end_of_RF24_setDataRate:
  2362                           	opt stack 0
  2363                           tblptru	equ	0xFF8
  2364                           tblptrh	equ	0xFF7
  2365                           tblptrl	equ	0xFF6
  2366                           tablat	equ	0xFF5
  2367                           intcon	equ	0xFF2
  2368                           postinc0	equ	0xFEE
  2369                           wreg	equ	0xFE8
  2370                           postdec2	equ	0xFDD
  2371                           fsr2h	equ	0xFDA
  2372                           fsr2l	equ	0xFD9
  2373                           status	equ	0xFD8
  2374                           
  2375 ;; *************** function _RF24N_init *****************
  2376 ;; Defined at:
  2377 ;;		line 84 in file "../../RF24Network_cg.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;		None
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		None
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2395 ;;Total ram usage:        0 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    1
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_setup
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text9
  2406  003104                     __ptext9:
  2407                           	opt stack 0
  2408  003104                     _RF24N_init:
  2409                           	opt stack 28
  2410                           
  2411                           ;RF24Network_cg.c: 86: rn.next_frame= rn.frame_queue;
  2412                           
  2413                           ;incstack = 0
  2414  003104  0EE0               	movlw	low (_rn+58)
  2415  003106  CFE8 F17A          	movff	wreg,_rn+212
  2416  00310A  0E00               	movlw	high (_rn+58)
  2417  00310C  CFE8 F17B          	movff	wreg,_rn+213
  2418                           
  2419                           ;RF24Network_cg.c: 88: rn.frag_queue.message_buffer=&rn.frag_queue_message_buffer[0];
  2420  003110  0E88               	movlw	low (_rn+226)
  2421  003112  CFE8 F186          	movff	wreg,_rn+224
  2422  003116  0E01               	movlw	high (_rn+226)
  2423  003118  CFE8 F187          	movff	wreg,_rn+225
  2424                           
  2425                           ;RF24Network_cg.c: 89: rn.frag_ptr = &rn.frag_queue;
  2426  00311C  0E7C               	movlw	low (_rn+214)
  2427  00311E  CFE8 F0CD          	movff	wreg,_rn+39
  2428  003122  0E01               	movlw	high (_rn+214)
  2429  003124  CFE8 F0CE          	movff	wreg,_rn+40
  2430                           
  2431                           ;RF24Network_cg.c: 91: rn.txTime=0;
  2432  003128  0E00               	movlw	0
  2433  00312A  CFE8 F0D1          	movff	wreg,_rn+43
  2434  00312E  0E00               	movlw	0
  2435  003130  CFE8 F0D2          	movff	wreg,_rn+44
  2436  003134  0E00               	movlw	0
  2437  003136  CFE8 F0D3          	movff	wreg,_rn+45
  2438  00313A  0E00               	movlw	0
  2439  00313C  CFE8 F0D4          	movff	wreg,_rn+46
  2440                           
  2441                           ;RF24Network_cg.c: 92: rn.networkFlags=0;
  2442  003140  0E00               	movlw	0
  2443  003142  CFE8 F0D0          	movff	wreg,_rn+42
  2444                           
  2445                           ;RF24Network_cg.c: 93: rn.returnSysMsgs=0;
  2446  003146  0E00               	movlw	0
  2447  003148  CFE8 F0CF          	movff	wreg,_rn+41
  2448                           
  2449                           ;RF24Network_cg.c: 94: rn.multicastRelay=0;
  2450  00314C  0E00               	movlw	0
  2451  00314E  CFE8 F0A6          	movff	wreg,_rn
  2452                           
  2453                           ;RF24Network_cg.c: 99: rn.max_frame_payload_size = 32-sizeof(RF24NetworkHeader);
  2454  003152  0E18               	movlw	24
  2455  003154  CFE8 F0D9          	movff	wreg,_rn+51
  2456  003158  0E00               	movlw	0
  2457  00315A  CFE8 F0DA          	movff	wreg,_rn+52
  2458  00315E  0012               	return		;funcret
  2459  003160                     __end_of_RF24N_init:
  2460                           	opt stack 0
  2461                           tblptru	equ	0xFF8
  2462                           tblptrh	equ	0xFF7
  2463                           tblptrl	equ	0xFF6
  2464                           tablat	equ	0xFF5
  2465                           intcon	equ	0xFF2
  2466                           postinc0	equ	0xFEE
  2467                           wreg	equ	0xFE8
  2468                           postdec2	equ	0xFDD
  2469                           fsr2h	equ	0xFDA
  2470                           fsr2l	equ	0xFD9
  2471                           status	equ	0xFD8
  2472                           
  2473 ;; *************** function _RF24N_begin_d *****************
  2474 ;; Defined at:
  2475 ;;		line 163 in file "../../RF24Network_cg.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  _channel        1    wreg     unsigned char 
  2478 ;;  _node_addres    2   31[COMRAM] unsigned int 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  _channel        1   39[COMRAM] unsigned char 
  2481 ;;  addr            5   33[COMRAM] unsigned char [5]
  2482 ;;  i               1   40[COMRAM] unsigned char 
  2483 ;;  retryVar        1   38[COMRAM] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2493 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;Total ram usage:       10 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    7
  2500 ;; This function calls:
  2501 ;;		_RF24N_is_valid_address
  2502 ;;		_RF24N_pipe_address
  2503 ;;		_RF24N_setup_address
  2504 ;;		_RF24_enableDynamicPayloads
  2505 ;;		_RF24_isValid
  2506 ;;		_RF24_openReadingPipe_d
  2507 ;;		_RF24_setAutoAck_p
  2508 ;;		_RF24_setChannel
  2509 ;;		_RF24_setRetries
  2510 ;;		_RF24_startListening
  2511 ;;		___lwmod
  2512 ;;		___wmul
  2513 ;; This function is called by:
  2514 ;;		_setup
  2515 ;;		_RF24N_begin
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           	psect	text10
  2520  002860                     __ptext10:
  2521                           	opt stack 0
  2522  002860                     _RF24N_begin_d:
  2523                           	opt stack 22
  2524                           
  2525                           ;incstack = 0
  2526                           ;RF24N_begin_d@_channel stored from wreg
  2527  002860  6E28               	movwf	RF24N_begin_d@_channel,c
  2528                           
  2529                           ;RF24Network_cg.c: 165: uint8_t i;
  2530                           ;RF24Network_cg.c: 166: uint8_t retryVar;
  2531                           ;RF24Network_cg.c: 168: if (! RF24N_is_valid_address(_node_address) )
  2532  002862  C020  F003         	movff	RF24N_begin_d@_node_address,RF24N_is_valid_address@node
  2533  002866  C021  F004         	movff	RF24N_begin_d@_node_address+1,RF24N_is_valid_address@node+1
  2534  00286A  EC9F  F01A         	call	_RF24N_is_valid_address	;wreg free
  2535  00286E  0900               	iorlw	0
  2536  002870  B4D8               	btfsc	status,2,c
  2537  002872  0012               	return	
  2538                           
  2539                           ;RF24Network_cg.c: 171: rn.node_address = _node_address;
  2540                           
  2541                           ;RF24Network_cg.c: 169: return;
  2542  002874  C020  F0D6         	movff	RF24N_begin_d@_node_address,_rn+48
  2543  002878  C021  F0D7         	movff	RF24N_begin_d@_node_address+1,_rn+49
  2544                           
  2545                           ;RF24Network_cg.c: 173: if ( ! RF24_isValid() ){
  2546  00287C  EC30  F01C         	call	_RF24_isValid	;wreg free
  2547  002880  0900               	iorlw	0
  2548  002882  B4D8               	btfsc	status,2,c
  2549  002884  0012               	return	
  2550                           
  2551                           ;RF24Network_cg.c: 175: }
  2552                           ;RF24Network_cg.c: 178: if(_channel != 255){
  2553                           
  2554                           ;RF24Network_cg.c: 174: return;
  2555  002886  2828               	incf	RF24N_begin_d@_channel,w,c
  2556  002888  B4D8               	btfsc	status,2,c
  2557  00288A  D003               	goto	l391
  2558                           
  2559                           ;RF24Network_cg.c: 179: RF24_setChannel(_channel);
  2560  00288C  5028               	movf	RF24N_begin_d@_channel,w,c
  2561  00288E  EC8E  F01B         	call	_RF24_setChannel
  2562  002892                     l391:
  2563                           
  2564                           ;RF24Network_cg.c: 180: }
  2565                           ;RF24Network_cg.c: 182: RF24_setAutoAck_p(0,0);
  2566  002892  0E00               	movlw	0
  2567  002894  6E15               	movwf	RF24_setAutoAck_p@enable,c
  2568  002896  0E00               	movlw	0
  2569  002898  ECDB  F018         	call	_RF24_setAutoAck_p
  2570                           
  2571                           ;RF24Network_cg.c: 185: RF24_enableDynamicPayloads();
  2572  00289C  ECA1  F01B         	call	_RF24_enableDynamicPayloads	;wreg free
  2573                           
  2574                           ;RF24Network_cg.c: 189: retryVar = (((rn.node_address % 6)+1) *2) + 3;
  2575  0028A0  C0D6  F003         	movff	_rn+48,___lwmod@dividend
  2576  0028A4  C0D7  F004         	movff	_rn+49,___lwmod@dividend+1
  2577  0028A8  0E00               	movlw	0
  2578  0028AA  6E06               	movwf	___lwmod@divisor+1,c
  2579  0028AC  0E06               	movlw	6
  2580  0028AE  6E05               	movwf	___lwmod@divisor,c
  2581  0028B0  ECC6  F019         	call	___lwmod	;wreg free
  2582  0028B4  90D8               	bcf	status,0,c
  2583  0028B6  3403               	rlcf	?___lwmod,w,c
  2584  0028B8  0F05               	addlw	5
  2585  0028BA  6E27               	movwf	RF24N_begin_d@retryVar,c
  2586                           
  2587                           ;RF24Network_cg.c: 190: RF24_setRetries(retryVar, 5);
  2588  0028BC  0E05               	movlw	5
  2589  0028BE  6E15               	movwf	RF24_setRetries@count,c
  2590  0028C0  5027               	movf	RF24N_begin_d@retryVar,w,c
  2591  0028C2  ECC7  F01B         	call	_RF24_setRetries
  2592                           
  2593                           ;RF24Network_cg.c: 191: rn.txTimeout = 25;
  2594  0028C6  0E19               	movlw	25
  2595  0028C8  CFE8 F0A7          	movff	wreg,_rn+1
  2596  0028CC  0E00               	movlw	0
  2597  0028CE  CFE8 F0A8          	movff	wreg,_rn+2
  2598  0028D2  0E00               	movlw	0
  2599  0028D4  CFE8 F0A9          	movff	wreg,_rn+3
  2600  0028D8  0E00               	movlw	0
  2601  0028DA  CFE8 F0AA          	movff	wreg,_rn+4
  2602                           
  2603                           ;RF24Network_cg.c: 192: rn.routeTimeout = rn.txTimeout*3;
  2604  0028DE  C0A7  F003         	movff	_rn+1,___wmul@multiplier
  2605  0028E2  C0A8  F004         	movff	_rn+2,___wmul@multiplier+1
  2606  0028E6  0E00               	movlw	0
  2607  0028E8  6E06               	movwf	___wmul@multiplicand+1,c
  2608  0028EA  0E03               	movlw	3
  2609  0028EC  6E05               	movwf	___wmul@multiplicand,c
  2610  0028EE  EC7B  F01B         	call	___wmul	;wreg free
  2611  0028F2  C003  F0AB         	movff	?___wmul,_rn+5
  2612  0028F6  C004  F0AC         	movff	?___wmul+1,_rn+6
  2613                           
  2614                           ;RF24Network_cg.c: 202: RF24N_setup_address();
  2615  0028FA  ECC2  F013         	call	_RF24N_setup_address	;wreg free
  2616                           
  2617                           ;RF24Network_cg.c: 205: i = 6;
  2618  0028FE  0E06               	movlw	6
  2619  002900  6E29               	movwf	RF24N_begin_d@i,c
  2620                           
  2621                           ;RF24Network_cg.c: 206: while (i--){
  2622  002902  D013               	goto	l6126
  2623  002904                     l6122:
  2624                           
  2625                           ;RF24Network_cg.c: 207: raddr_t addr[5];
  2626                           ;RF24Network_cg.c: 208: RF24N_pipe_address(_node_address,i,addr);
  2627  002904  C020  F003         	movff	RF24N_begin_d@_node_address,RF24N_pipe_address@node
  2628  002908  C021  F004         	movff	RF24N_begin_d@_node_address+1,RF24N_pipe_address@node+1
  2629  00290C  C029  F005         	movff	RF24N_begin_d@i,RF24N_pipe_address@pipe
  2630  002910  0E22               	movlw	low RF24N_begin_d@addr
  2631  002912  6E06               	movwf	RF24N_pipe_address@address,c
  2632  002914  0E00               	movlw	high RF24N_begin_d@addr
  2633  002916  6E07               	movwf	RF24N_pipe_address@address+1,c
  2634  002918  ECBE  F011         	call	_RF24N_pipe_address	;wreg free
  2635                           
  2636                           ;RF24Network_cg.c: 209: RF24_openReadingPipe_d(i,addr);
  2637  00291C  0E22               	movlw	low RF24N_begin_d@addr
  2638  00291E  6E15               	movwf	RF24_openReadingPipe_d@address_,c
  2639  002920  0E00               	movlw	high RF24N_begin_d@addr
  2640  002922  6E16               	movwf	RF24_openReadingPipe_d@address_+1,c
  2641  002924  5029               	movf	RF24N_begin_d@i,w,c
  2642  002926  EC4D  F012         	call	_RF24_openReadingPipe_d
  2643  00292A                     l6126:
  2644  00292A  0629               	decf	RF24N_begin_d@i,f,c
  2645  00292C  2829               	incf	RF24N_begin_d@i,w,c
  2646  00292E  A4D8               	btfss	status,2,c
  2647  002930  D7E9               	goto	l6122
  2648                           
  2649                           ;RF24Network_cg.c: 210: }
  2650                           ;RF24Network_cg.c: 211: RF24_startListening();
  2651  002932  ECB0  F018         	call	_RF24_startListening	;wreg free
  2652  002936  0012               	return		;funcret
  2653  002938                     __end_of_RF24N_begin_d:
  2654                           	opt stack 0
  2655                           tblptru	equ	0xFF8
  2656                           tblptrh	equ	0xFF7
  2657                           tblptrl	equ	0xFF6
  2658                           tablat	equ	0xFF5
  2659                           intcon	equ	0xFF2
  2660                           postinc0	equ	0xFEE
  2661                           wreg	equ	0xFE8
  2662                           postdec2	equ	0xFDD
  2663                           fsr2h	equ	0xFDA
  2664                           fsr2l	equ	0xFD9
  2665                           status	equ	0xFD8
  2666                           
  2667 ;; *************** function ___wmul *****************
  2668 ;; Defined at:
  2669 ;;		line 15 in file "/opt/microchip/xc8/v1.36/sources/common/Umul16.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  multiplier      2    2[COMRAM] unsigned int 
  2672 ;;  multiplicand    2    4[COMRAM] unsigned int 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  product         2    6[COMRAM] unsigned int 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  2    2[COMRAM] unsigned int 
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0, prodl, prodh
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2684 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;Total ram usage:        6 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    1
  2691 ;; This function calls:
  2692 ;;		Nothing
  2693 ;; This function is called by:
  2694 ;;		_RF24N_begin_d
  2695 ;;		_RF24N_write_
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text11
  2700  0036F6                     __ptext11:
  2701                           	opt stack 0
  2702  0036F6                     ___wmul:
  2703                           	opt stack 27
  2704                           
  2705                           ;incstack = 0
  2706  0036F6  5003               	movf	___wmul@multiplier,w,c
  2707  0036F8  0205               	mulwf	___wmul@multiplicand,c
  2708  0036FA  CFF3 F007          	movff	prodl,___wmul@product
  2709  0036FE  CFF4 F008          	movff	prodh,___wmul@product+1
  2710  003702  5003               	movf	___wmul@multiplier,w,c
  2711  003704  0206               	mulwf	___wmul@multiplicand+1,c
  2712  003706  50F3               	movf	prodl,w,c
  2713  003708  2608               	addwf	___wmul@product+1,f,c
  2714  00370A  5004               	movf	___wmul@multiplier+1,w,c
  2715  00370C  0205               	mulwf	___wmul@multiplicand,c
  2716  00370E  50F3               	movf	prodl,w,c
  2717  003710  2608               	addwf	___wmul@product+1,f,c
  2718  003712  C007  F003         	movff	___wmul@product,?___wmul
  2719  003716  C008  F004         	movff	___wmul@product+1,?___wmul+1
  2720  00371A  0012               	return	
  2721  00371C                     __end_of___wmul:
  2722                           	opt stack 0
  2723                           tblptru	equ	0xFF8
  2724                           tblptrh	equ	0xFF7
  2725                           tblptrl	equ	0xFF6
  2726                           tablat	equ	0xFF5
  2727                           prodh	equ	0xFF4
  2728                           prodl	equ	0xFF3
  2729                           intcon	equ	0xFF2
  2730                           postinc0	equ	0xFEE
  2731                           wreg	equ	0xFE8
  2732                           postdec2	equ	0xFDD
  2733                           fsr2h	equ	0xFDA
  2734                           fsr2l	equ	0xFD9
  2735                           status	equ	0xFD8
  2736                           
  2737 ;; *************** function ___lwmod *****************
  2738 ;; Defined at:
  2739 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwmod.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  dividend        2    2[COMRAM] unsigned int 
  2742 ;;  divisor         2    4[COMRAM] unsigned int 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  counter         1    6[COMRAM] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  2    2[COMRAM] unsigned int 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2754 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;Total ram usage:        5 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    1
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_RF24N_begin_d
  2765 ;;		_RF24N_write_
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text12
  2770  00338C                     __ptext12:
  2771                           	opt stack 0
  2772  00338C                     ___lwmod:
  2773                           	opt stack 27
  2774                           
  2775                           ;incstack = 0
  2776  00338C  5005               	movf	___lwmod@divisor,w,c
  2777  00338E  1006               	iorwf	___lwmod@divisor+1,w,c
  2778  003390  B4D8               	btfsc	status,2,c
  2779  003392  D018               	goto	l1415
  2780  003394  0E01               	movlw	1
  2781  003396  6E07               	movwf	___lwmod@counter,c
  2782  003398  D004               	goto	l4474
  2783  00339A                     l4472:
  2784  00339A  90D8               	bcf	status,0,c
  2785  00339C  3605               	rlcf	___lwmod@divisor,f,c
  2786  00339E  3606               	rlcf	___lwmod@divisor+1,f,c
  2787  0033A0  2A07               	incf	___lwmod@counter,f,c
  2788  0033A2                     l4474:
  2789  0033A2  AE06               	btfss	___lwmod@divisor+1,7,c
  2790  0033A4  D7FA               	goto	l4472
  2791  0033A6                     l4476:
  2792  0033A6  5005               	movf	___lwmod@divisor,w,c
  2793  0033A8  5C03               	subwf	___lwmod@dividend,w,c
  2794  0033AA  5006               	movf	___lwmod@divisor+1,w,c
  2795  0033AC  5804               	subwfb	___lwmod@dividend+1,w,c
  2796  0033AE  A0D8               	btfss	status,0,c
  2797  0033B0  D004               	goto	l4480
  2798  0033B2  5005               	movf	___lwmod@divisor,w,c
  2799  0033B4  5E03               	subwf	___lwmod@dividend,f,c
  2800  0033B6  5006               	movf	___lwmod@divisor+1,w,c
  2801  0033B8  5A04               	subwfb	___lwmod@dividend+1,f,c
  2802  0033BA                     l4480:
  2803  0033BA  90D8               	bcf	status,0,c
  2804  0033BC  3206               	rrcf	___lwmod@divisor+1,f,c
  2805  0033BE  3205               	rrcf	___lwmod@divisor,f,c
  2806  0033C0  2E07               	decfsz	___lwmod@counter,f,c
  2807  0033C2  D7F1               	goto	l4476
  2808  0033C4                     l1415:
  2809  0033C4  C003  F003         	movff	___lwmod@dividend,?___lwmod
  2810  0033C8  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  2811  0033CC  0012               	return		;funcret
  2812  0033CE                     __end_of___lwmod:
  2813                           	opt stack 0
  2814                           tblptru	equ	0xFF8
  2815                           tblptrh	equ	0xFF7
  2816                           tblptrl	equ	0xFF6
  2817                           tablat	equ	0xFF5
  2818                           prodh	equ	0xFF4
  2819                           prodl	equ	0xFF3
  2820                           intcon	equ	0xFF2
  2821                           postinc0	equ	0xFEE
  2822                           wreg	equ	0xFE8
  2823                           postdec2	equ	0xFDD
  2824                           fsr2h	equ	0xFDA
  2825                           fsr2l	equ	0xFD9
  2826                           status	equ	0xFD8
  2827                           
  2828 ;; *************** function _RF24_setRetries *****************
  2829 ;; Defined at:
  2830 ;;		line 1580 in file "../../../RF24_c/RF24_cg.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  delay           1    wreg     unsigned char 
  2833 ;;  count           1   20[COMRAM] unsigned char 
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;  delay           1   23[COMRAM] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2845 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;Total ram usage:        4 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    5
  2852 ;; This function calls:
  2853 ;;		_RF24_write_register_d
  2854 ;; This function is called by:
  2855 ;;		_RF24N_begin_d
  2856 ;;		_RF24_begin
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text13
  2861  00378E                     __ptext13:
  2862                           	opt stack 0
  2863  00378E                     _RF24_setRetries:
  2864                           	opt stack 23
  2865                           
  2866                           ;incstack = 0
  2867                           ;RF24_setRetries@delay stored from wreg
  2868  00378E  6E18               	movwf	RF24_setRetries@delay,c
  2869                           
  2870                           ;RF24_cg.c: 1582: RF24_write_register_d(0x04,(delay&0xf)<<4 | (count&0xf)<<0);
  2871  003790  C015  F016         	movff	RF24_setRetries@count,??_RF24_setRetries
  2872  003794  0E0F               	movlw	15
  2873  003796  1616               	andwf	??_RF24_setRetries,f,c
  2874  003798  C018  F017         	movff	RF24_setRetries@delay,??_RF24_setRetries+1
  2875  00379C  0E0F               	movlw	15
  2876  00379E  1617               	andwf	??_RF24_setRetries+1,f,c
  2877  0037A0  3817               	swapf	??_RF24_setRetries+1,w,c
  2878  0037A2  0BF0               	andlw	240
  2879  0037A4  1016               	iorwf	??_RF24_setRetries,w,c
  2880  0037A6  6E12               	movwf	RF24_write_register_d@value,c
  2881  0037A8  0E04               	movlw	4
  2882  0037AA  ECE9  F01B         	call	_RF24_write_register_d
  2883  0037AE  0012               	return		;funcret
  2884  0037B0                     __end_of_RF24_setRetries:
  2885                           	opt stack 0
  2886                           tblptru	equ	0xFF8
  2887                           tblptrh	equ	0xFF7
  2888                           tblptrl	equ	0xFF6
  2889                           tablat	equ	0xFF5
  2890                           prodh	equ	0xFF4
  2891                           prodl	equ	0xFF3
  2892                           intcon	equ	0xFF2
  2893                           postinc0	equ	0xFEE
  2894                           wreg	equ	0xFE8
  2895                           postdec2	equ	0xFDD
  2896                           fsr2h	equ	0xFDA
  2897                           fsr2l	equ	0xFD9
  2898                           status	equ	0xFD8
  2899                           
  2900 ;; *************** function _RF24_setChannel *****************
  2901 ;; Defined at:
  2902 ;;		line 464 in file "../../../RF24_c/RF24_cg.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  channel         1    wreg     unsigned char 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  channel         1   22[COMRAM] unsigned char 
  2907 ;;  max_channel     1   23[COMRAM] const unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      void 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0, cstack
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;Total ram usage:        4 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:    5
  2924 ;; This function calls:
  2925 ;;		_RF24_write_register_d
  2926 ;; This function is called by:
  2927 ;;		_RF24N_begin_d
  2928 ;;		_RF24_begin
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text14
  2933  00371C                     __ptext14:
  2934                           	opt stack 0
  2935  00371C                     _RF24_setChannel:
  2936                           	opt stack 23
  2937                           
  2938                           ;incstack = 0
  2939                           ;RF24_setChannel@channel stored from wreg
  2940  00371C  6E17               	movwf	RF24_setChannel@channel,c
  2941                           
  2942                           ;RF24_cg.c: 466: const uint8_t max_channel = 125;
  2943  00371E  0E7D               	movlw	125
  2944  003720  6E18               	movwf	RF24_setChannel@max_channel,c
  2945                           
  2946                           ;RF24_cg.c: 467: RF24_write_register_d(0x05,(channel<max_channel?channel:max_channel));
  2947  003722  5018               	movf	RF24_setChannel@max_channel,w,c
  2948  003724  5C17               	subwf	RF24_setChannel@channel,w,c
  2949  003726  A0D8               	btfss	status,0,c
  2950  003728  D003               	goto	l731
  2951  00372A  C018  F015         	movff	RF24_setChannel@max_channel,_RF24_setChannel$2315
  2952  00372E  D002               	goto	L2
  2953  003730                     l731:
  2954  003730  C017  F015         	movff	RF24_setChannel@channel,_RF24_setChannel$2315
  2955  003734                     L2:
  2956  003734  6A16               	clrf	_RF24_setChannel$2315+1,c
  2957  003736  C015  F012         	movff	_RF24_setChannel$2315,RF24_write_register_d@value
  2958  00373A  0E05               	movlw	5
  2959  00373C  ECE9  F01B         	call	_RF24_write_register_d
  2960  003740  0012               	return		;funcret
  2961  003742                     __end_of_RF24_setChannel:
  2962                           	opt stack 0
  2963                           tblptru	equ	0xFF8
  2964                           tblptrh	equ	0xFF7
  2965                           tblptrl	equ	0xFF6
  2966                           tablat	equ	0xFF5
  2967                           prodh	equ	0xFF4
  2968                           prodl	equ	0xFF3
  2969                           intcon	equ	0xFF2
  2970                           postinc0	equ	0xFEE
  2971                           wreg	equ	0xFE8
  2972                           postdec2	equ	0xFDD
  2973                           fsr2h	equ	0xFDA
  2974                           fsr2l	equ	0xFD9
  2975                           status	equ	0xFD8
  2976                           
  2977 ;; *************** function _RF24_openReadingPipe_d *****************
  2978 ;; Defined at:
  2979 ;;		line 1187 in file "../../../RF24_c/RF24_cg.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  child           1    wreg     unsigned char 
  2982 ;;  address_        2   20[COMRAM] PTR const unsigned char 
  2983 ;;		 -> RF24N_multicastLevel@addr(5), RF24N_begin_d@addr(5), 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  child           1   30[COMRAM] unsigned char 
  2986 ;;  address         5   24[COMRAM] unsigned char [5]
  2987 ;;  i               1   29[COMRAM] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;Total ram usage:       11 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:    5
  3004 ;; This function calls:
  3005 ;;		_RF24_read_register_d
  3006 ;;		_RF24_write_register_c_d
  3007 ;;		_RF24_write_register_d
  3008 ;;		_memcpy
  3009 ;; This function is called by:
  3010 ;;		_RF24N_begin_d
  3011 ;;		_RF24N_multicastLevel
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           	psect	text15
  3016  00249A                     __ptext15:
  3017                           	opt stack 0
  3018  00249A                     _RF24_openReadingPipe_d:
  3019                           	opt stack 23
  3020                           
  3021                           ;incstack = 0
  3022                           ;RF24_openReadingPipe_d@child stored from wreg
  3023  00249A  6E1F               	movwf	RF24_openReadingPipe_d@child,c
  3024                           
  3025                           ;RF24_cg.c: 1189: uint8_t i;
  3026                           ;RF24_cg.c: 1190: raddr_t address[5];
  3027                           ;RF24_cg.c: 1191: for(i=0;i<5;i++)
  3028  00249C  0E00               	movlw	0
  3029  00249E  6E1E               	movwf	RF24_openReadingPipe_d@i,c
  3030  0024A0                     l5736:
  3031  0024A0  0E04               	movlw	4
  3032  0024A2  641E               	cpfsgt	RF24_openReadingPipe_d@i,c
  3033  0024A4  D001               	goto	l5740
  3034  0024A6  D01D               	goto	l5746
  3035  0024A8                     l5740:
  3036                           
  3037                           ;RF24_cg.c: 1192: {
  3038                           ;RF24_cg.c: 1193: address[i]=address_[4-i];
  3039  0024A8  501E               	movf	RF24_openReadingPipe_d@i,w,c
  3040  0024AA  6E17               	movwf	??_RF24_openReadingPipe_d& (0+255),c
  3041  0024AC  6A18               	clrf	(??_RF24_openReadingPipe_d+1)& (0+255),c
  3042  0024AE  1E17               	comf	??_RF24_openReadingPipe_d,f,c
  3043  0024B0  1E18               	comf	??_RF24_openReadingPipe_d+1,f,c
  3044  0024B2  4A17               	infsnz	??_RF24_openReadingPipe_d,f,c
  3045  0024B4  2A18               	incf	??_RF24_openReadingPipe_d+1,f,c
  3046  0024B6  0E04               	movlw	4
  3047  0024B8  2617               	addwf	??_RF24_openReadingPipe_d,f,c
  3048  0024BA  0E00               	movlw	0
  3049  0024BC  2218               	addwfc	??_RF24_openReadingPipe_d+1,f,c
  3050  0024BE  5017               	movf	??_RF24_openReadingPipe_d,w,c
  3051  0024C0  2415               	addwf	RF24_openReadingPipe_d@address_,w,c
  3052  0024C2  6ED9               	movwf	fsr2l,c
  3053  0024C4  5018               	movf	??_RF24_openReadingPipe_d+1,w,c
  3054  0024C6  2016               	addwfc	RF24_openReadingPipe_d@address_+1,w,c
  3055  0024C8  6EDA               	movwf	fsr2h,c
  3056  0024CA  501E               	movf	RF24_openReadingPipe_d@i,w,c
  3057  0024CC  0D01               	mullw	1
  3058  0024CE  0E19               	movlw	low RF24_openReadingPipe_d@address
  3059  0024D0  24F3               	addwf	prodl,w,c
  3060  0024D2  6EE9               	movwf	fsr0l,c
  3061  0024D4  0E00               	movlw	high RF24_openReadingPipe_d@address
  3062  0024D6  20F4               	addwfc	prodh,w,c
  3063  0024D8  6EEA               	movwf	fsr0h,c
  3064  0024DA  CFDF FFEF          	movff	indf2,indf0
  3065  0024DE  2A1E               	incf	RF24_openReadingPipe_d@i,f,c
  3066  0024E0  D7DF               	goto	l5736
  3067  0024E2                     l5746:
  3068                           
  3069                           ;RF24_cg.c: 1194: }
  3070                           ;RF24_cg.c: 1198: if (child == 0){
  3071  0024E2  501F               	movf	RF24_openReadingPipe_d@child,w,c
  3072  0024E4  A4D8               	btfss	status,2,c
  3073  0024E6  D00D               	goto	l5750
  3074                           
  3075                           ;RF24_cg.c: 1199: memcpy(rf.pipe0_reading_address,address,rf.addr_width);
  3076  0024E8  0E44               	movlw	low (_rf+7)
  3077  0024EA  6E03               	movwf	memcpy@d1,c
  3078  0024EC  0E00               	movlw	high (_rf+7)
  3079  0024EE  6E04               	movwf	memcpy@d1+1,c
  3080  0024F0  0E19               	movlw	low RF24_openReadingPipe_d@address
  3081  0024F2  6E05               	movwf	memcpy@s1,c
  3082  0024F4  0E00               	movlw	high RF24_openReadingPipe_d@address
  3083  0024F6  6E06               	movwf	memcpy@s1+1,c
  3084  0024F8  C049  F007         	movff	_rf+12,memcpy@n
  3085  0024FC  6A08               	clrf	memcpy@n+1,c
  3086  0024FE  EC47  F01A         	call	_memcpy	;wreg free
  3087  002502                     l5750:
  3088                           
  3089                           ;RF24_cg.c: 1200: }
  3090                           ;RF24_cg.c: 1202: if (child <= 6)
  3091  002502  0E07               	movlw	7
  3092  002504  601F               	cpfslt	RF24_openReadingPipe_d@child,c
  3093  002506  0012               	return	
  3094                           
  3095                           ;RF24_cg.c: 1203: {
  3096                           ;RF24_cg.c: 1205: if ( child < 2 )
  3097  002508  0E02               	movlw	2
  3098  00250A  601F               	cpfslt	RF24_openReadingPipe_d@child,c
  3099  00250C  D013               	goto	l5756
  3100                           
  3101                           ;RF24_cg.c: 1206: RF24_write_register_c_d((*(&child_pipe[child])), (const uint8_t*)(addr
      +                          ess), rf.addr_width);
  3102  00250E  0E19               	movlw	low RF24_openReadingPipe_d@address
  3103  002510  6E10               	movwf	RF24_write_register_c_d@buf,c
  3104  002512  0E00               	movlw	high RF24_openReadingPipe_d@address
  3105  002514  6E11               	movwf	RF24_write_register_c_d@buf+1,c
  3106  002516  C049  F012         	movff	_rf+12,RF24_write_register_c_d@len
  3107  00251A  501F               	movf	RF24_openReadingPipe_d@child,w,c
  3108  00251C  0D01               	mullw	1
  3109  00251E  0E07               	movlw	low _child_pipe
  3110  002520  24F3               	addwf	prodl,w,c
  3111  002522  6EF6               	movwf	tblptrl,c
  3112  002524  0E10               	movlw	high _child_pipe
  3113  002526  20F4               	addwfc	prodh,w,c
  3114  002528  6EF7               	movwf	tblptrh,c
  3115  00252A                     	if	0	;There are less than 3 active tblptr bytes
  3116  00252A                     	endif
  3117  00252A  0008               	tblrd		*
  3118  00252C  50F5               	movf	tablat,w,c
  3119  00252E  ECD5  F01A         	call	_RF24_write_register_c_d
  3120  002532  D012               	goto	l5758
  3121  002534                     l5756:
  3122                           
  3123                           ;RF24_cg.c: 1207: else
  3124                           ;RF24_cg.c: 1208: RF24_write_register_c_d((*(&child_pipe[child])), (const uint8_t*)(addr
      +                          ess), 1);
  3125  002534  0E19               	movlw	low RF24_openReadingPipe_d@address
  3126  002536  6E10               	movwf	RF24_write_register_c_d@buf,c
  3127  002538  0E00               	movlw	high RF24_openReadingPipe_d@address
  3128  00253A  6E11               	movwf	RF24_write_register_c_d@buf+1,c
  3129  00253C  0E01               	movlw	1
  3130  00253E  6E12               	movwf	RF24_write_register_c_d@len,c
  3131  002540  501F               	movf	RF24_openReadingPipe_d@child,w,c
  3132  002542  0D01               	mullw	1
  3133  002544  0E07               	movlw	low _child_pipe
  3134  002546  24F3               	addwf	prodl,w,c
  3135  002548  6EF6               	movwf	tblptrl,c
  3136  00254A  0E10               	movlw	high _child_pipe
  3137  00254C  20F4               	addwfc	prodh,w,c
  3138  00254E  6EF7               	movwf	tblptrh,c
  3139  002550                     	if	0	;There are less than 3 active tblptr bytes
  3140  002550                     	endif
  3141  002550  0008               	tblrd		*
  3142  002552  50F5               	movf	tablat,w,c
  3143  002554  ECD5  F01A         	call	_RF24_write_register_c_d
  3144  002558                     l5758:
  3145                           
  3146                           ;RF24_cg.c: 1210: RF24_write_register_d((*(&child_payload_size[child])),rf.payload_size)
      +                          ;
  3147  002558  C042  F012         	movff	_rf+5,RF24_write_register_d@value
  3148  00255C  501F               	movf	RF24_openReadingPipe_d@child,w,c
  3149  00255E  0D01               	mullw	1
  3150  002560  0E01               	movlw	low _child_payload_size
  3151  002562  24F3               	addwf	prodl,w,c
  3152  002564  6EF6               	movwf	tblptrl,c
  3153  002566  0E10               	movlw	high _child_payload_size
  3154  002568  20F4               	addwfc	prodh,w,c
  3155  00256A  6EF7               	movwf	tblptrh,c
  3156  00256C                     	if	0	;There are less than 3 active tblptr bytes
  3157  00256C                     	endif
  3158  00256C  0008               	tblrd		*
  3159  00256E  50F5               	movf	tablat,w,c
  3160  002570  ECE9  F01B         	call	_RF24_write_register_d
  3161                           
  3162                           ;RF24_cg.c: 1215: RF24_write_register_d(0x02,RF24_read_register_d(0x02) | (1<<((*(&child
      +                          _pipe_enable[child])))));
  3163  002574  501F               	movf	RF24_openReadingPipe_d@child,w,c
  3164  002576  0D01               	mullw	1
  3165  002578  0E0D               	movlw	low _child_pipe_enable
  3166  00257A  24F3               	addwf	prodl,w,c
  3167  00257C  6EF6               	movwf	tblptrl,c
  3168  00257E  0E10               	movlw	high _child_pipe_enable
  3169  002580  20F4               	addwfc	prodh,w,c
  3170  002582  6EF7               	movwf	tblptrh,c
  3171  002584                     	if	0	;There are less than 3 active tblptr bytes
  3172  002584                     	endif
  3173  002584  0008               	tblrd		*
  3174  002586  CFF5 F017          	movff	tablat,??_RF24_openReadingPipe_d
  3175  00258A  0E01               	movlw	1
  3176  00258C  6E18               	movwf	(??_RF24_openReadingPipe_d+1)& (0+255),c
  3177  00258E  2A17               	incf	??_RF24_openReadingPipe_d,f,c
  3178  002590  D002               	goto	u7584
  3179  002592                     u7585:
  3180  002592  90D8               	bcf	status,0,c
  3181  002594  3618               	rlcf	??_RF24_openReadingPipe_d+1,f,c
  3182  002596                     u7584:
  3183  002596  2E17               	decfsz	??_RF24_openReadingPipe_d,f,c
  3184  002598  D7FC               	goto	u7585
  3185  00259A  0E02               	movlw	2
  3186  00259C  ECF9  F01B         	call	_RF24_read_register_d
  3187  0025A0  1018               	iorwf	??_RF24_openReadingPipe_d+1,w,c
  3188  0025A2  6E12               	movwf	RF24_write_register_d@value,c
  3189  0025A4  0E02               	movlw	2
  3190  0025A6  ECE9  F01B         	call	_RF24_write_register_d
  3191  0025AA  0012               	return	
  3192  0025AC                     __end_of_RF24_openReadingPipe_d:
  3193                           	opt stack 0
  3194                           tblptru	equ	0xFF8
  3195                           tblptrh	equ	0xFF7
  3196                           tblptrl	equ	0xFF6
  3197                           tablat	equ	0xFF5
  3198                           prodh	equ	0xFF4
  3199                           prodl	equ	0xFF3
  3200                           intcon	equ	0xFF2
  3201                           indf0	equ	0xFEF
  3202                           postinc0	equ	0xFEE
  3203                           fsr0h	equ	0xFEA
  3204                           fsr0l	equ	0xFE9
  3205                           wreg	equ	0xFE8
  3206                           indf2	equ	0xFDF
  3207                           postdec2	equ	0xFDD
  3208                           fsr2h	equ	0xFDA
  3209                           fsr2l	equ	0xFD9
  3210                           status	equ	0xFD8
  3211                           
  3212 ;; *************** function _RF24_enableDynamicPayloads *****************
  3213 ;; Defined at:
  3214 ;;		line 1276 in file "../../../RF24_c/RF24_cg.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;Total ram usage:        0 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    5
  3235 ;; This function calls:
  3236 ;;		_RF24_read_register_d
  3237 ;;		_RF24_write_register_d
  3238 ;; This function is called by:
  3239 ;;		_RF24N_begin_d
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text16
  3244  003742                     __ptext16:
  3245                           	opt stack 0
  3246  003742                     _RF24_enableDynamicPayloads:
  3247                           	opt stack 23
  3248                           
  3249                           ;RF24_cg.c: 1281: RF24_write_register_d(0x1D,RF24_read_register_d(0x1D) | (1<<(2)) );
  3250                           
  3251                           ;incstack = 0
  3252  003742  0E1D               	movlw	29
  3253  003744  ECF9  F01B         	call	_RF24_read_register_d
  3254  003748  0904               	iorlw	4
  3255  00374A  6E12               	movwf	RF24_write_register_d@value,c
  3256  00374C  0E1D               	movlw	29
  3257  00374E  ECE9  F01B         	call	_RF24_write_register_d
  3258                           
  3259                           ;RF24_cg.c: 1284: ;
  3260                           ;RF24_cg.c: 1290: RF24_write_register_d(0x1C,RF24_read_register_d(0x1C) | (1<<(5)) | (1<
      +                          <(4)) | (1<<(3)) | (1<<(2)) | (1<<(1)) | (1<<(0)));
  3261  003752  0E1C               	movlw	28
  3262  003754  ECF9  F01B         	call	_RF24_read_register_d
  3263  003758  093F               	iorlw	63
  3264  00375A  6E12               	movwf	RF24_write_register_d@value,c
  3265  00375C  0E1C               	movlw	28
  3266  00375E  ECE9  F01B         	call	_RF24_write_register_d
  3267                           
  3268                           ;RF24_cg.c: 1292: rf.dynamic_payloads_enabled = 1;
  3269  003762  0E01               	movlw	1
  3270  003764  6E43               	movwf	_rf+6,c
  3271  003766  0012               	return		;funcret
  3272  003768                     __end_of_RF24_enableDynamicPayloads:
  3273                           	opt stack 0
  3274                           tblptru	equ	0xFF8
  3275                           tblptrh	equ	0xFF7
  3276                           tblptrl	equ	0xFF6
  3277                           tablat	equ	0xFF5
  3278                           prodh	equ	0xFF4
  3279                           prodl	equ	0xFF3
  3280                           intcon	equ	0xFF2
  3281                           indf0	equ	0xFEF
  3282                           postinc0	equ	0xFEE
  3283                           fsr0h	equ	0xFEA
  3284                           fsr0l	equ	0xFE9
  3285                           wreg	equ	0xFE8
  3286                           indf2	equ	0xFDF
  3287                           postdec2	equ	0xFDD
  3288                           fsr2h	equ	0xFDA
  3289                           fsr2l	equ	0xFD9
  3290                           status	equ	0xFD8
  3291                           
  3292 ;; *************** function _RF24N_setup_address *****************
  3293 ;; Defined at:
  3294 ;;		line 1225 in file "../../RF24Network_cg.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  node_mask_ch    2   11[COMRAM] unsigned int 
  3299 ;;  parent_mask     2    9[COMRAM] unsigned int 
  3300 ;;  m               2    6[COMRAM] unsigned int 
  3301 ;;  i               2    4[COMRAM] unsigned int 
  3302 ;;  count           1    8[COMRAM] unsigned char 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;Total ram usage:       11 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; Hardware stack levels required when called:    1
  3319 ;; This function calls:
  3320 ;;		Nothing
  3321 ;; This function is called by:
  3322 ;;		_RF24N_begin_d
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text17
  3327  002784                     __ptext17:
  3328                           	opt stack 0
  3329  002784                     _RF24N_setup_address:
  3330                           	opt stack 27
  3331                           
  3332                           ;RF24Network_cg.c: 1228: uint16_t node_mask_check = 0xFFFF;
  3333                           
  3334                           ;incstack = 0
  3335  002784  680C               	setf	RF24N_setup_address@node_mask_check,c
  3336  002786  680D               	setf	RF24N_setup_address@node_mask_check+1,c
  3337                           
  3338                           ;RF24Network_cg.c: 1230: uint8_t count = 0;
  3339  002788  0E00               	movlw	0
  3340  00278A  6E09               	movwf	RF24N_setup_address@count,c
  3341                           
  3342                           ;RF24Network_cg.c: 1232: uint16_t i;
  3343                           ;RF24Network_cg.c: 1233: uint16_t m;
  3344                           ;RF24Network_cg.c: 1234: uint16_t parent_mask;
  3345                           ;RF24Network_cg.c: 1236: while ( rn.node_address & node_mask_check ){
  3346  00278C  D00A               	goto	l2364
  3347  00278E                     l2362:
  3348                           
  3349                           ;RF24Network_cg.c: 1237: node_mask_check <<= 3;
  3350  00278E  90D8               	bcf	status,0,c
  3351  002790  360C               	rlcf	RF24N_setup_address@node_mask_check,f,c
  3352  002792  360D               	rlcf	RF24N_setup_address@node_mask_check+1,f,c
  3353  002794  90D8               	bcf	status,0,c
  3354  002796  360C               	rlcf	RF24N_setup_address@node_mask_check,f,c
  3355  002798  360D               	rlcf	RF24N_setup_address@node_mask_check+1,f,c
  3356  00279A  90D8               	bcf	status,0,c
  3357  00279C  360C               	rlcf	RF24N_setup_address@node_mask_check,f,c
  3358  00279E  360D               	rlcf	RF24N_setup_address@node_mask_check+1,f,c
  3359                           
  3360                           ;RF24Network_cg.c: 1239: count++;
  3361  0027A0  2A09               	incf	RF24N_setup_address@count,f,c
  3362  0027A2                     l2364:
  3363  0027A2  EE20  F0D6         	lfsr	2,_rn+48
  3364  0027A6  CFDE F003          	movff	postinc2,??_RF24N_setup_address
  3365  0027AA  CFDD F004          	movff	postdec2,??_RF24N_setup_address+1
  3366  0027AE  500C               	movf	RF24N_setup_address@node_mask_check,w,c
  3367  0027B0  1603               	andwf	??_RF24N_setup_address,f,c
  3368  0027B2  500D               	movf	RF24N_setup_address@node_mask_check+1,w,c
  3369  0027B4  1604               	andwf	??_RF24N_setup_address+1,f,c
  3370  0027B6  5003               	movf	??_RF24N_setup_address,w,c
  3371  0027B8  1004               	iorwf	??_RF24N_setup_address+1,w,c
  3372  0027BA  A4D8               	btfss	status,2,c
  3373  0027BC  D7E8               	goto	l2362
  3374                           
  3375                           ;RF24Network_cg.c: 1240: }
  3376                           ;RF24Network_cg.c: 1241: rn.multicast_level = count;
  3377  0027BE  EE20  F0D5         	lfsr	2,_rn+47
  3378  0027C2  C009  FFDF         	movff	RF24N_setup_address@count,indf2
  3379                           
  3380                           ;RF24Network_cg.c: 1246: rn.node_mask = ~ node_mask_check;
  3381  0027C6  1C0C               	comf	RF24N_setup_address@node_mask_check,w,c
  3382  0027C8  6E03               	movwf	??_RF24N_setup_address& (0+255),c
  3383  0027CA  1C0D               	comf	RF24N_setup_address@node_mask_check+1,w,c
  3384  0027CC  6E04               	movwf	(??_RF24N_setup_address+1)& (0+255),c
  3385  0027CE  C003  F0DE         	movff	??_RF24N_setup_address,_rn+56
  3386  0027D2  C004  F0DF         	movff	??_RF24N_setup_address+1,_rn+57
  3387                           
  3388                           ;RF24Network_cg.c: 1249: parent_mask = rn.node_mask >> 3;
  3389  0027D6  EE20  F0DE         	lfsr	2,_rn+56
  3390  0027DA  CFDE F003          	movff	postinc2,??_RF24N_setup_address
  3391  0027DE  CFDD F004          	movff	postdec2,??_RF24N_setup_address+1
  3392  0027E2  90D8               	bcf	status,0,c
  3393  0027E4  3204               	rrcf	??_RF24N_setup_address+1,f,c
  3394  0027E6  3203               	rrcf	??_RF24N_setup_address,f,c
  3395  0027E8  90D8               	bcf	status,0,c
  3396  0027EA  3204               	rrcf	??_RF24N_setup_address+1,f,c
  3397  0027EC  3203               	rrcf	??_RF24N_setup_address,f,c
  3398  0027EE  90D8               	bcf	status,0,c
  3399  0027F0  3204               	rrcf	??_RF24N_setup_address+1,f,c
  3400  0027F2  3203               	rrcf	??_RF24N_setup_address,f,c
  3401  0027F4  C003  F00A         	movff	??_RF24N_setup_address,RF24N_setup_address@parent_mask
  3402  0027F8  C004  F00B         	movff	??_RF24N_setup_address+1,RF24N_setup_address@parent_mask+1
  3403                           
  3404                           ;RF24Network_cg.c: 1252: rn.parent_node = rn.node_address & parent_mask;
  3405  0027FC  EE20  F0D6         	lfsr	2,_rn+48
  3406  002800  CFDE F003          	movff	postinc2,??_RF24N_setup_address
  3407  002804  CFDD F004          	movff	postdec2,??_RF24N_setup_address+1
  3408  002808  500A               	movf	RF24N_setup_address@parent_mask,w,c
  3409  00280A  1603               	andwf	??_RF24N_setup_address,f,c
  3410  00280C  500B               	movf	RF24N_setup_address@parent_mask+1,w,c
  3411  00280E  1604               	andwf	??_RF24N_setup_address+1,f,c
  3412  002810  C003  F0DB         	movff	??_RF24N_setup_address,_rn+53
  3413  002814  C004  F0DC         	movff	??_RF24N_setup_address+1,_rn+54
  3414                           
  3415                           ;RF24Network_cg.c: 1255: i = rn.node_address;
  3416  002818  C0D6  F005         	movff	_rn+48,RF24N_setup_address@i
  3417  00281C  C0D7  F006         	movff	_rn+49,RF24N_setup_address@i+1
  3418                           
  3419                           ;RF24Network_cg.c: 1256: m = parent_mask;
  3420  002820  C00A  F007         	movff	RF24N_setup_address@parent_mask,RF24N_setup_address@m
  3421  002824  C00B  F008         	movff	RF24N_setup_address@parent_mask+1,RF24N_setup_address@m+1
  3422                           
  3423                           ;RF24Network_cg.c: 1257: while (m)
  3424  002828  D012               	goto	l2380
  3425  00282A                     l2378:
  3426                           
  3427                           ;RF24Network_cg.c: 1258: {
  3428                           ;RF24Network_cg.c: 1259: i >>= 3;
  3429  00282A  90D8               	bcf	status,0,c
  3430  00282C  3206               	rrcf	RF24N_setup_address@i+1,f,c
  3431  00282E  3205               	rrcf	RF24N_setup_address@i,f,c
  3432  002830  90D8               	bcf	status,0,c
  3433  002832  3206               	rrcf	RF24N_setup_address@i+1,f,c
  3434  002834  3205               	rrcf	RF24N_setup_address@i,f,c
  3435  002836  90D8               	bcf	status,0,c
  3436  002838  3206               	rrcf	RF24N_setup_address@i+1,f,c
  3437  00283A  3205               	rrcf	RF24N_setup_address@i,f,c
  3438                           
  3439                           ;RF24Network_cg.c: 1260: m >>= 3;
  3440  00283C  90D8               	bcf	status,0,c
  3441  00283E  3208               	rrcf	RF24N_setup_address@m+1,f,c
  3442  002840  3207               	rrcf	RF24N_setup_address@m,f,c
  3443  002842  90D8               	bcf	status,0,c
  3444  002844  3208               	rrcf	RF24N_setup_address@m+1,f,c
  3445  002846  3207               	rrcf	RF24N_setup_address@m,f,c
  3446  002848  90D8               	bcf	status,0,c
  3447  00284A  3208               	rrcf	RF24N_setup_address@m+1,f,c
  3448  00284C  3207               	rrcf	RF24N_setup_address@m,f,c
  3449  00284E                     l2380:
  3450  00284E  5007               	movf	RF24N_setup_address@m,w,c
  3451  002850  1008               	iorwf	RF24N_setup_address@m+1,w,c
  3452  002852  A4D8               	btfss	status,2,c
  3453  002854  D7EA               	goto	l2378
  3454                           
  3455                           ;RF24Network_cg.c: 1261: }
  3456                           ;RF24Network_cg.c: 1262: rn.parent_pipe = i;
  3457  002856  EE20  F0DD         	lfsr	2,_rn+55
  3458  00285A  C005  FFDF         	movff	RF24N_setup_address@i,indf2
  3459  00285E  0012               	return		;funcret
  3460  002860                     __end_of_RF24N_setup_address:
  3461                           	opt stack 0
  3462                           tblptru	equ	0xFF8
  3463                           tblptrh	equ	0xFF7
  3464                           tblptrl	equ	0xFF6
  3465                           tablat	equ	0xFF5
  3466                           prodh	equ	0xFF4
  3467                           prodl	equ	0xFF3
  3468                           intcon	equ	0xFF2
  3469                           indf0	equ	0xFEF
  3470                           postinc0	equ	0xFEE
  3471                           fsr0h	equ	0xFEA
  3472                           fsr0l	equ	0xFE9
  3473                           wreg	equ	0xFE8
  3474                           indf2	equ	0xFDF
  3475                           postinc2	equ	0xFDE
  3476                           postdec2	equ	0xFDD
  3477                           fsr2h	equ	0xFDA
  3478                           fsr2l	equ	0xFD9
  3479                           status	equ	0xFD8
  3480                           
  3481 ;; *************** function _loop *****************
  3482 ;; Defined at:
  3483 ;;		line 50 in file "helloworld_rx.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  payload         8   48[COMRAM] struct .
  3488 ;;  header          8   40[COMRAM] struct .
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      void 
  3491 ;; Registers used:
  3492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3499 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3501 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3502 ;;Total ram usage:       16 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; Hardware stack levels required when called:   11
  3505 ;; This function calls:
  3506 ;;		_RF24N_available
  3507 ;;		_RF24N_read
  3508 ;;		_RF24N_update
  3509 ;;		_Serial_print
  3510 ;;		_Serial_println
  3511 ;;		_itoa_
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text18
  3518  002C84                     __ptext18:
  3519                           	opt stack 0
  3520  002C84                     _loop:
  3521                           	opt stack 19
  3522                           
  3523                           ;helloworld_rx.c: 52: RF24N_update();
  3524                           
  3525                           ;incstack = 0
  3526  002C84  ECE5  F00A         	call	_RF24N_update	;wreg free
  3527                           
  3528                           ;helloworld_rx.c: 55: while ( RF24N_available() ) {
  3529  002C88  D03A               	goto	l6182
  3530  002C8A                     l6172:
  3531                           
  3532                           ;helloworld_rx.c: 57: RF24NetworkHeader header;
  3533                           ;helloworld_rx.c: 58: payload_t payload;
  3534                           ;helloworld_rx.c: 59: RF24N_read( &header,&payload,sizeof(payload));
  3535  002C8A  0E29               	movlw	low loop@header
  3536  002C8C  6E0F               	movwf	RF24N_read@header,c
  3537  002C8E  0E00               	movlw	high loop@header
  3538  002C90  6E10               	movwf	RF24N_read@header+1,c
  3539  002C92  0E31               	movlw	low loop@payload
  3540  002C94  6E11               	movwf	RF24N_read@message,c
  3541  002C96  0E00               	movlw	high loop@payload
  3542  002C98  6E12               	movwf	RF24N_read@message+1,c
  3543  002C9A  0E00               	movlw	0
  3544  002C9C  6E14               	movwf	RF24N_read@maxlen+1,c
  3545  002C9E  0E08               	movlw	8
  3546  002CA0  6E13               	movwf	RF24N_read@maxlen,c
  3547  002CA2  EC2D  F011         	call	_RF24N_read	;wreg free
  3548                           
  3549                           ;helloworld_rx.c: 60: Serial_print("Received packet #");
  3550  002CA6  0E3B               	movlw	low STR_2
  3551  002CA8  6E21               	movwf	Serial_print@val,c
  3552  002CAA  0E10               	movlw	high STR_2
  3553  002CAC  6E22               	movwf	Serial_print@val+1,c
  3554  002CAE  EC43  F017         	call	_Serial_print	;wreg free
  3555                           
  3556                           ;helloworld_rx.c: 61: Serial_print(itoa_(payload.counter));
  3557  002CB2  C035  F01D         	movff	loop@payload+4,itoa_@val
  3558  002CB6  C036  F01E         	movff	loop@payload+5,itoa_@val+1
  3559  002CBA  C037  F01F         	movff	loop@payload+6,itoa_@val+2
  3560  002CBE  C038  F020         	movff	loop@payload+7,itoa_@val+3
  3561  002CC2  EC38  F01B         	call	_itoa_	;wreg free
  3562  002CC6  C01D  F021         	movff	?_itoa_,Serial_print@val
  3563  002CCA  C01E  F022         	movff	?_itoa_+1,Serial_print@val+1
  3564  002CCE  EC43  F017         	call	_Serial_print	;wreg free
  3565                           
  3566                           ;helloworld_rx.c: 62: Serial_print(" at ");
  3567  002CD2  0E4D               	movlw	low STR_3
  3568  002CD4  6E21               	movwf	Serial_print@val,c
  3569  002CD6  0E10               	movlw	high STR_3
  3570  002CD8  6E22               	movwf	Serial_print@val+1,c
  3571  002CDA  EC43  F017         	call	_Serial_print	;wreg free
  3572                           
  3573                           ;helloworld_rx.c: 63: Serial_println(itoa_(payload.ms));
  3574  002CDE  C031  F01D         	movff	loop@payload,itoa_@val
  3575  002CE2  C032  F01E         	movff	loop@payload+1,itoa_@val+1
  3576  002CE6  C033  F01F         	movff	loop@payload+2,itoa_@val+2
  3577  002CEA  C034  F020         	movff	loop@payload+3,itoa_@val+3
  3578  002CEE  EC38  F01B         	call	_itoa_	;wreg free
  3579  002CF2  C01D  F027         	movff	?_itoa_,Serial_println@val
  3580  002CF6  C01E  F028         	movff	?_itoa_+1,Serial_println@val+1
  3581  002CFA  EC23  F01C         	call	_Serial_println	;wreg free
  3582  002CFE                     l6182:
  3583  002CFE  ECD8  F01B         	call	_RF24N_available	;wreg free
  3584  002D02  0900               	iorlw	0
  3585  002D04  B4D8               	btfsc	status,2,c
  3586  002D06  0012               	return	
  3587  002D08  D7C0               	goto	l6172
  3588  002D0A                     __end_of_loop:
  3589                           	opt stack 0
  3590                           tblptru	equ	0xFF8
  3591                           tblptrh	equ	0xFF7
  3592                           tblptrl	equ	0xFF6
  3593                           tablat	equ	0xFF5
  3594                           prodh	equ	0xFF4
  3595                           prodl	equ	0xFF3
  3596                           intcon	equ	0xFF2
  3597                           indf0	equ	0xFEF
  3598                           postinc0	equ	0xFEE
  3599                           fsr0h	equ	0xFEA
  3600                           fsr0l	equ	0xFE9
  3601                           wreg	equ	0xFE8
  3602                           indf2	equ	0xFDF
  3603                           postinc2	equ	0xFDE
  3604                           postdec2	equ	0xFDD
  3605                           fsr2h	equ	0xFDA
  3606                           fsr2l	equ	0xFD9
  3607                           status	equ	0xFD8
  3608                           
  3609 ;; *************** function _itoa_ *****************
  3610 ;; Defined at:
  3611 ;;		line 104 in file "serial.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  val             4   28[COMRAM] unsigned long 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  2   28[COMRAM] PTR const unsigned char 
  3618 ;; Registers used:
  3619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3625 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;Total ram usage:        4 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    3
  3632 ;; This function calls:
  3633 ;;		_ultoa
  3634 ;; This function is called by:
  3635 ;;		_loop
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text19
  3640  003670                     __ptext19:
  3641                           	opt stack 0
  3642  003670                     _itoa_:
  3643                           	opt stack 26
  3644                           
  3645                           ;serial.c: 107: ultoa(buff,val,10);
  3646                           
  3647                           ;incstack = 0
  3648  003670  0E53               	movlw	low _buff
  3649  003672  6E10               	movwf	ultoa@buf,c
  3650  003674  0E00               	movlw	high _buff
  3651  003676  6E11               	movwf	ultoa@buf+1,c
  3652  003678  C01D  F012         	movff	itoa_@val,ultoa@val
  3653  00367C  C01E  F013         	movff	itoa_@val+1,ultoa@val+1
  3654  003680  C01F  F014         	movff	itoa_@val+2,ultoa@val+2
  3655  003684  C020  F015         	movff	itoa_@val+3,ultoa@val+3
  3656  003688  0E00               	movlw	0
  3657  00368A  6E17               	movwf	ultoa@base+1,c
  3658  00368C  0E0A               	movlw	10
  3659  00368E  6E16               	movwf	ultoa@base,c
  3660  003690  ECD6  F012         	call	_ultoa	;wreg free
  3661                           
  3662                           ;serial.c: 111: return buff;
  3663  003694  0E53               	movlw	low _buff
  3664  003696  6E1D               	movwf	?_itoa_,c
  3665  003698  0E00               	movlw	high _buff
  3666  00369A  6E1E               	movwf	?_itoa_+1,c
  3667  00369C  0012               	return	
  3668  00369E                     __end_of_itoa_:
  3669                           	opt stack 0
  3670                           tblptru	equ	0xFF8
  3671                           tblptrh	equ	0xFF7
  3672                           tblptrl	equ	0xFF6
  3673                           tablat	equ	0xFF5
  3674                           prodh	equ	0xFF4
  3675                           prodl	equ	0xFF3
  3676                           intcon	equ	0xFF2
  3677                           indf0	equ	0xFEF
  3678                           postinc0	equ	0xFEE
  3679                           fsr0h	equ	0xFEA
  3680                           fsr0l	equ	0xFE9
  3681                           wreg	equ	0xFE8
  3682                           indf2	equ	0xFDF
  3683                           postinc2	equ	0xFDE
  3684                           postdec2	equ	0xFDD
  3685                           fsr2h	equ	0xFDA
  3686                           fsr2l	equ	0xFD9
  3687                           status	equ	0xFD8
  3688                           
  3689 ;; *************** function _ultoa *****************
  3690 ;; Defined at:
  3691 ;;		line 32 in file "/opt/microchip/xc8/v1.36/sources/common/ltoa.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;  buf             2   15[COMRAM] PTR unsigned char 
  3694 ;;		 -> buff(10), 
  3695 ;;  val             4   17[COMRAM] unsigned long 
  3696 ;;  base            2   21[COMRAM] int 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  v               4   23[COMRAM] unsigned long 
  3699 ;;  c               1   27[COMRAM] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  2   15[COMRAM] PTR unsigned char 
  3702 ;; Registers used:
  3703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3709 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;Total ram usage:       13 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    2
  3716 ;; This function calls:
  3717 ;;		___lldiv
  3718 ;;		___llmod
  3719 ;; This function is called by:
  3720 ;;		_itoa_
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text20
  3725  0025AC                     __ptext20:
  3726                           	opt stack 0
  3727  0025AC                     _ultoa:
  3728                           	opt stack 26
  3729                           
  3730                           ;incstack = 0
  3731  0025AC  C012  F018         	movff	ultoa@val,ultoa@v
  3732  0025B0  C013  F019         	movff	ultoa@val+1,ultoa@v+1
  3733  0025B4  C014  F01A         	movff	ultoa@val+2,ultoa@v+2
  3734  0025B8  C015  F01B         	movff	ultoa@val+3,ultoa@v+3
  3735  0025BC                     l4082:
  3736  0025BC  C018  F003         	movff	ultoa@v,___lldiv@dividend
  3737  0025C0  C019  F004         	movff	ultoa@v+1,___lldiv@dividend+1
  3738  0025C4  C01A  F005         	movff	ultoa@v+2,___lldiv@dividend+2
  3739  0025C8  C01B  F006         	movff	ultoa@v+3,___lldiv@dividend+3
  3740  0025CC  C016  F007         	movff	ultoa@base,___lldiv@divisor
  3741  0025D0  C017  F008         	movff	ultoa@base+1,___lldiv@divisor+1
  3742  0025D4  0E00               	movlw	0
  3743  0025D6  BE08               	btfsc	___lldiv@divisor+1,7,c
  3744  0025D8  0EFF               	movlw	-1
  3745  0025DA  6E09               	movwf	___lldiv@divisor+2,c
  3746  0025DC  6E0A               	movwf	___lldiv@divisor+3,c
  3747  0025DE  EC85  F016         	call	___lldiv	;wreg free
  3748  0025E2  C003  F018         	movff	?___lldiv,ultoa@v
  3749  0025E6  C004  F019         	movff	?___lldiv+1,ultoa@v+1
  3750  0025EA  C005  F01A         	movff	?___lldiv+2,ultoa@v+2
  3751  0025EE  C006  F01B         	movff	?___lldiv+3,ultoa@v+3
  3752  0025F2  4A10               	infsnz	ultoa@buf,f,c
  3753  0025F4  2A11               	incf	ultoa@buf+1,f,c
  3754  0025F6  5018               	movf	ultoa@v,w,c
  3755  0025F8  1019               	iorwf	ultoa@v+1,w,c
  3756  0025FA  101A               	iorwf	ultoa@v+2,w,c
  3757  0025FC  101B               	iorwf	ultoa@v+3,w,c
  3758  0025FE  A4D8               	btfss	status,2,c
  3759  002600  D7DD               	goto	l4082
  3760  002602  C010  FFD9         	movff	ultoa@buf,fsr2l
  3761  002606  C011  FFDA         	movff	ultoa@buf+1,fsr2h
  3762  00260A  0E00               	movlw	0
  3763  00260C  6EDF               	movwf	indf2,c
  3764  00260E  0610               	decf	ultoa@buf,f,c
  3765  002610  A0D8               	btfss	status,0,c
  3766  002612  0611               	decf	ultoa@buf+1,f,c
  3767  002614                     l4092:
  3768  002614  C012  F003         	movff	ultoa@val,___llmod@dividend
  3769  002618  C013  F004         	movff	ultoa@val+1,___llmod@dividend+1
  3770  00261C  C014  F005         	movff	ultoa@val+2,___llmod@dividend+2
  3771  002620  C015  F006         	movff	ultoa@val+3,___llmod@dividend+3
  3772  002624  C016  F007         	movff	ultoa@base,___llmod@divisor
  3773  002628  C017  F008         	movff	ultoa@base+1,___llmod@divisor+1
  3774  00262C  0E00               	movlw	0
  3775  00262E  BE08               	btfsc	___llmod@divisor+1,7,c
  3776  002630  0EFF               	movlw	-1
  3777  002632  6E09               	movwf	___llmod@divisor+2,c
  3778  002634  6E0A               	movwf	___llmod@divisor+3,c
  3779  002636  ECEC  F017         	call	___llmod	;wreg free
  3780  00263A  5003               	movf	?___llmod,w,c
  3781  00263C  6E1C               	movwf	ultoa@c,c
  3782  00263E  C012  F003         	movff	ultoa@val,___lldiv@dividend
  3783  002642  C013  F004         	movff	ultoa@val+1,___lldiv@dividend+1
  3784  002646  C014  F005         	movff	ultoa@val+2,___lldiv@dividend+2
  3785  00264A  C015  F006         	movff	ultoa@val+3,___lldiv@dividend+3
  3786  00264E  C016  F007         	movff	ultoa@base,___lldiv@divisor
  3787  002652  C017  F008         	movff	ultoa@base+1,___lldiv@divisor+1
  3788  002656  0E00               	movlw	0
  3789  002658  BE08               	btfsc	___lldiv@divisor+1,7,c
  3790  00265A  0EFF               	movlw	-1
  3791  00265C  6E09               	movwf	___lldiv@divisor+2,c
  3792  00265E  6E0A               	movwf	___lldiv@divisor+3,c
  3793  002660  EC85  F016         	call	___lldiv	;wreg free
  3794  002664  C003  F012         	movff	?___lldiv,ultoa@val
  3795  002668  C004  F013         	movff	?___lldiv+1,ultoa@val+1
  3796  00266C  C005  F014         	movff	?___lldiv+2,ultoa@val+2
  3797  002670  C006  F015         	movff	?___lldiv+3,ultoa@val+3
  3798  002674  0E09               	movlw	9
  3799  002676  641C               	cpfsgt	ultoa@c,c
  3800  002678  D002               	goto	l1395
  3801  00267A  0E07               	movlw	7
  3802  00267C  261C               	addwf	ultoa@c,f,c
  3803  00267E                     l1395:
  3804  00267E  0E30               	movlw	48
  3805  002680  261C               	addwf	ultoa@c,f,c
  3806  002682  C010  FFD9         	movff	ultoa@buf,fsr2l
  3807  002686  C011  FFDA         	movff	ultoa@buf+1,fsr2h
  3808  00268A  C01C  FFDF         	movff	ultoa@c,indf2
  3809  00268E  0610               	decf	ultoa@buf,f,c
  3810  002690  A0D8               	btfss	status,0,c
  3811  002692  0611               	decf	ultoa@buf+1,f,c
  3812  002694  5012               	movf	ultoa@val,w,c
  3813  002696  1013               	iorwf	ultoa@val+1,w,c
  3814  002698  1014               	iorwf	ultoa@val+2,w,c
  3815  00269A  1015               	iorwf	ultoa@val+3,w,c
  3816  00269C  B4D8               	btfsc	status,2,c
  3817  00269E  0012               	return	
  3818  0026A0  D7B9               	goto	l4092
  3819  0026A2                     __end_of_ultoa:
  3820                           	opt stack 0
  3821                           tblptru	equ	0xFF8
  3822                           tblptrh	equ	0xFF7
  3823                           tblptrl	equ	0xFF6
  3824                           tablat	equ	0xFF5
  3825                           prodh	equ	0xFF4
  3826                           prodl	equ	0xFF3
  3827                           intcon	equ	0xFF2
  3828                           indf0	equ	0xFEF
  3829                           postinc0	equ	0xFEE
  3830                           fsr0h	equ	0xFEA
  3831                           fsr0l	equ	0xFE9
  3832                           wreg	equ	0xFE8
  3833                           indf2	equ	0xFDF
  3834                           postinc2	equ	0xFDE
  3835                           postdec2	equ	0xFDD
  3836                           fsr2h	equ	0xFDA
  3837                           fsr2l	equ	0xFD9
  3838                           status	equ	0xFD8
  3839                           
  3840 ;; *************** function ___llmod *****************
  3841 ;; Defined at:
  3842 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/llmod.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  dividend        4    2[COMRAM] unsigned long 
  3845 ;;  divisor         4    6[COMRAM] unsigned long 
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;  counter         1   10[COMRAM] unsigned char 
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  4    2[COMRAM] unsigned long 
  3850 ;; Registers used:
  3851 ;;		wreg, status,2, status,0
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3857 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;Total ram usage:        9 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; Hardware stack levels required when called:    1
  3864 ;; This function calls:
  3865 ;;		Nothing
  3866 ;; This function is called by:
  3867 ;;		_ultoa
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           	psect	text21
  3872  002FD8                     __ptext21:
  3873                           	opt stack 0
  3874  002FD8                     ___llmod:
  3875                           	opt stack 26
  3876                           
  3877                           ;incstack = 0
  3878  002FD8  5007               	movf	___llmod@divisor,w,c
  3879  002FDA  1008               	iorwf	___llmod@divisor+1,w,c
  3880  002FDC  1009               	iorwf	___llmod@divisor+2,w,c
  3881  002FDE  100A               	iorwf	___llmod@divisor+3,w,c
  3882  002FE0  B4D8               	btfsc	status,2,c
  3883  002FE2  D024               	goto	l1348
  3884  002FE4  0E01               	movlw	1
  3885  002FE6  6E0B               	movwf	___llmod@counter,c
  3886  002FE8  D006               	goto	l4040
  3887  002FEA                     l4038:
  3888  002FEA  90D8               	bcf	status,0,c
  3889  002FEC  3607               	rlcf	___llmod@divisor,f,c
  3890  002FEE  3608               	rlcf	___llmod@divisor+1,f,c
  3891  002FF0  3609               	rlcf	___llmod@divisor+2,f,c
  3892  002FF2  360A               	rlcf	___llmod@divisor+3,f,c
  3893  002FF4  2A0B               	incf	___llmod@counter,f,c
  3894  002FF6                     l4040:
  3895  002FF6  AE0A               	btfss	___llmod@divisor+3,7,c
  3896  002FF8  D7F8               	goto	l4038
  3897  002FFA                     l4042:
  3898  002FFA  5007               	movf	___llmod@divisor,w,c
  3899  002FFC  5C03               	subwf	___llmod@dividend,w,c
  3900  002FFE  5008               	movf	___llmod@divisor+1,w,c
  3901  003000  5804               	subwfb	___llmod@dividend+1,w,c
  3902  003002  5009               	movf	___llmod@divisor+2,w,c
  3903  003004  5805               	subwfb	___llmod@dividend+2,w,c
  3904  003006  500A               	movf	___llmod@divisor+3,w,c
  3905  003008  5806               	subwfb	___llmod@dividend+3,w,c
  3906  00300A  A0D8               	btfss	status,0,c
  3907  00300C  D008               	goto	l4046
  3908  00300E  5007               	movf	___llmod@divisor,w,c
  3909  003010  5E03               	subwf	___llmod@dividend,f,c
  3910  003012  5008               	movf	___llmod@divisor+1,w,c
  3911  003014  5A04               	subwfb	___llmod@dividend+1,f,c
  3912  003016  5009               	movf	___llmod@divisor+2,w,c
  3913  003018  5A05               	subwfb	___llmod@dividend+2,f,c
  3914  00301A  500A               	movf	___llmod@divisor+3,w,c
  3915  00301C  5A06               	subwfb	___llmod@dividend+3,f,c
  3916  00301E                     l4046:
  3917  00301E  90D8               	bcf	status,0,c
  3918  003020  320A               	rrcf	___llmod@divisor+3,f,c
  3919  003022  3209               	rrcf	___llmod@divisor+2,f,c
  3920  003024  3208               	rrcf	___llmod@divisor+1,f,c
  3921  003026  3207               	rrcf	___llmod@divisor,f,c
  3922  003028  2E0B               	decfsz	___llmod@counter,f,c
  3923  00302A  D7E7               	goto	l4042
  3924  00302C                     l1348:
  3925  00302C  C003  F003         	movff	___llmod@dividend,?___llmod
  3926  003030  C004  F004         	movff	___llmod@dividend+1,?___llmod+1
  3927  003034  C005  F005         	movff	___llmod@dividend+2,?___llmod+2
  3928  003038  C006  F006         	movff	___llmod@dividend+3,?___llmod+3
  3929  00303C  0012               	return		;funcret
  3930  00303E                     __end_of___llmod:
  3931                           	opt stack 0
  3932                           tblptru	equ	0xFF8
  3933                           tblptrh	equ	0xFF7
  3934                           tblptrl	equ	0xFF6
  3935                           tablat	equ	0xFF5
  3936                           prodh	equ	0xFF4
  3937                           prodl	equ	0xFF3
  3938                           intcon	equ	0xFF2
  3939                           indf0	equ	0xFEF
  3940                           postinc0	equ	0xFEE
  3941                           fsr0h	equ	0xFEA
  3942                           fsr0l	equ	0xFE9
  3943                           wreg	equ	0xFE8
  3944                           indf2	equ	0xFDF
  3945                           postinc2	equ	0xFDE
  3946                           postdec2	equ	0xFDD
  3947                           fsr2h	equ	0xFDA
  3948                           fsr2l	equ	0xFD9
  3949                           status	equ	0xFD8
  3950                           
  3951 ;; *************** function ___lldiv *****************
  3952 ;; Defined at:
  3953 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lldiv.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  dividend        4    2[COMRAM] unsigned long 
  3956 ;;  divisor         4    6[COMRAM] unsigned long 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  quotient        4   10[COMRAM] unsigned long 
  3959 ;;  counter         1   14[COMRAM] unsigned char 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  4    2[COMRAM] unsigned long 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3969 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3970 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;Total ram usage:       13 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    1
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_Serial_begin
  3980 ;;		_ultoa
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text22
  3985  002D0A                     __ptext22:
  3986                           	opt stack 0
  3987  002D0A                     ___lldiv:
  3988                           	opt stack 27
  3989                           
  3990                           ;incstack = 0
  3991  002D0A  0E00               	movlw	0
  3992  002D0C  6E0B               	movwf	___lldiv@quotient,c
  3993  002D0E  0E00               	movlw	0
  3994  002D10  6E0C               	movwf	___lldiv@quotient+1,c
  3995  002D12  0E00               	movlw	0
  3996  002D14  6E0D               	movwf	___lldiv@quotient+2,c
  3997  002D16  0E00               	movlw	0
  3998  002D18  6E0E               	movwf	___lldiv@quotient+3,c
  3999  002D1A  5007               	movf	___lldiv@divisor,w,c
  4000  002D1C  1008               	iorwf	___lldiv@divisor+1,w,c
  4001  002D1E  1009               	iorwf	___lldiv@divisor+2,w,c
  4002  002D20  100A               	iorwf	___lldiv@divisor+3,w,c
  4003  002D22  B4D8               	btfsc	status,2,c
  4004  002D24  D02A               	goto	l1338
  4005  002D26  0E01               	movlw	1
  4006  002D28  6E0F               	movwf	___lldiv@counter,c
  4007  002D2A  D006               	goto	l4020
  4008  002D2C                     l4018:
  4009  002D2C  90D8               	bcf	status,0,c
  4010  002D2E  3607               	rlcf	___lldiv@divisor,f,c
  4011  002D30  3608               	rlcf	___lldiv@divisor+1,f,c
  4012  002D32  3609               	rlcf	___lldiv@divisor+2,f,c
  4013  002D34  360A               	rlcf	___lldiv@divisor+3,f,c
  4014  002D36  2A0F               	incf	___lldiv@counter,f,c
  4015  002D38                     l4020:
  4016  002D38  AE0A               	btfss	___lldiv@divisor+3,7,c
  4017  002D3A  D7F8               	goto	l4018
  4018  002D3C                     l4022:
  4019  002D3C  90D8               	bcf	status,0,c
  4020  002D3E  360B               	rlcf	___lldiv@quotient,f,c
  4021  002D40  360C               	rlcf	___lldiv@quotient+1,f,c
  4022  002D42  360D               	rlcf	___lldiv@quotient+2,f,c
  4023  002D44  360E               	rlcf	___lldiv@quotient+3,f,c
  4024  002D46  5007               	movf	___lldiv@divisor,w,c
  4025  002D48  5C03               	subwf	___lldiv@dividend,w,c
  4026  002D4A  5008               	movf	___lldiv@divisor+1,w,c
  4027  002D4C  5804               	subwfb	___lldiv@dividend+1,w,c
  4028  002D4E  5009               	movf	___lldiv@divisor+2,w,c
  4029  002D50  5805               	subwfb	___lldiv@dividend+2,w,c
  4030  002D52  500A               	movf	___lldiv@divisor+3,w,c
  4031  002D54  5806               	subwfb	___lldiv@dividend+3,w,c
  4032  002D56  A0D8               	btfss	status,0,c
  4033  002D58  D009               	goto	l4030
  4034  002D5A  5007               	movf	___lldiv@divisor,w,c
  4035  002D5C  5E03               	subwf	___lldiv@dividend,f,c
  4036  002D5E  5008               	movf	___lldiv@divisor+1,w,c
  4037  002D60  5A04               	subwfb	___lldiv@dividend+1,f,c
  4038  002D62  5009               	movf	___lldiv@divisor+2,w,c
  4039  002D64  5A05               	subwfb	___lldiv@dividend+2,f,c
  4040  002D66  500A               	movf	___lldiv@divisor+3,w,c
  4041  002D68  5A06               	subwfb	___lldiv@dividend+3,f,c
  4042  002D6A  800B               	bsf	___lldiv@quotient,0,c
  4043  002D6C                     l4030:
  4044  002D6C  90D8               	bcf	status,0,c
  4045  002D6E  320A               	rrcf	___lldiv@divisor+3,f,c
  4046  002D70  3209               	rrcf	___lldiv@divisor+2,f,c
  4047  002D72  3208               	rrcf	___lldiv@divisor+1,f,c
  4048  002D74  3207               	rrcf	___lldiv@divisor,f,c
  4049  002D76  2E0F               	decfsz	___lldiv@counter,f,c
  4050  002D78  D7E1               	goto	l4022
  4051  002D7A                     l1338:
  4052  002D7A  C00B  F003         	movff	___lldiv@quotient,?___lldiv
  4053  002D7E  C00C  F004         	movff	___lldiv@quotient+1,?___lldiv+1
  4054  002D82  C00D  F005         	movff	___lldiv@quotient+2,?___lldiv+2
  4055  002D86  C00E  F006         	movff	___lldiv@quotient+3,?___lldiv+3
  4056  002D8A  0012               	return		;funcret
  4057  002D8C                     __end_of___lldiv:
  4058                           	opt stack 0
  4059                           tblptru	equ	0xFF8
  4060                           tblptrh	equ	0xFF7
  4061                           tblptrl	equ	0xFF6
  4062                           tablat	equ	0xFF5
  4063                           prodh	equ	0xFF4
  4064                           prodl	equ	0xFF3
  4065                           intcon	equ	0xFF2
  4066                           indf0	equ	0xFEF
  4067                           postinc0	equ	0xFEE
  4068                           fsr0h	equ	0xFEA
  4069                           fsr0l	equ	0xFE9
  4070                           wreg	equ	0xFE8
  4071                           indf2	equ	0xFDF
  4072                           postinc2	equ	0xFDE
  4073                           postdec2	equ	0xFDD
  4074                           fsr2h	equ	0xFDA
  4075                           fsr2l	equ	0xFD9
  4076                           status	equ	0xFD8
  4077                           
  4078 ;; *************** function _Serial_println *****************
  4079 ;; Defined at:
  4080 ;;		line 74 in file "serial.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  val             2   38[COMRAM] PTR const unsigned char 
  4083 ;;		 -> buff(10), STR_1(36), 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;Total ram usage:        2 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    3
  4102 ;; This function calls:
  4103 ;;		_Serial_print
  4104 ;; This function is called by:
  4105 ;;		_setup
  4106 ;;		_loop
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text23
  4111  003846                     __ptext23:
  4112                           	opt stack 0
  4113  003846                     _Serial_println:
  4114                           	opt stack 26
  4115                           
  4116                           ;serial.c: 76: Serial_print(val);
  4117                           
  4118                           ;incstack = 0
  4119  003846  C027  F021         	movff	Serial_println@val,Serial_print@val
  4120  00384A  C028  F022         	movff	Serial_println@val+1,Serial_print@val+1
  4121  00384E  EC43  F017         	call	_Serial_print	;wreg free
  4122                           
  4123                           ;serial.c: 77: Serial_print("\r\n");
  4124  003852  0E52               	movlw	low STR_4
  4125  003854  6E21               	movwf	Serial_print@val,c
  4126  003856  0E10               	movlw	high STR_4
  4127  003858  6E22               	movwf	Serial_print@val+1,c
  4128  00385A  EC43  F017         	call	_Serial_print	;wreg free
  4129  00385E  0012               	return		;funcret
  4130  003860                     __end_of_Serial_println:
  4131                           	opt stack 0
  4132                           tblptru	equ	0xFF8
  4133                           tblptrh	equ	0xFF7
  4134                           tblptrl	equ	0xFF6
  4135                           tablat	equ	0xFF5
  4136                           prodh	equ	0xFF4
  4137                           prodl	equ	0xFF3
  4138                           intcon	equ	0xFF2
  4139                           indf0	equ	0xFEF
  4140                           postinc0	equ	0xFEE
  4141                           fsr0h	equ	0xFEA
  4142                           fsr0l	equ	0xFE9
  4143                           wreg	equ	0xFE8
  4144                           indf2	equ	0xFDF
  4145                           postinc2	equ	0xFDE
  4146                           postdec2	equ	0xFDD
  4147                           fsr2h	equ	0xFDA
  4148                           fsr2l	equ	0xFD9
  4149                           status	equ	0xFD8
  4150                           
  4151 ;; *************** function _Serial_print *****************
  4152 ;; Defined at:
  4153 ;;		line 63 in file "serial.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  val             2   32[COMRAM] PTR const unsigned char 
  4156 ;;		 -> buff(10), STR_4(3), STR_3(5), STR_2(18), 
  4157 ;;		 -> STR_1(36), 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  i               2   36[COMRAM] unsigned int 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      void 
  4162 ;; Registers used:
  4163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;Total ram usage:        6 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    2
  4176 ;; This function calls:
  4177 ;;		_Serial_tx
  4178 ;; This function is called by:
  4179 ;;		_loop
  4180 ;;		_Serial_println
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text24
  4185  002E86                     __ptext24:
  4186                           	opt stack 0
  4187  002E86                     _Serial_print:
  4188                           	opt stack 26
  4189                           
  4190                           ;serial.c: 65: unsigned int i=0;
  4191                           
  4192                           ;incstack = 0
  4193  002E86  0E00               	movlw	0
  4194  002E88  6E26               	movwf	Serial_print@i+1,c
  4195  002E8A  0E00               	movlw	0
  4196  002E8C  6E25               	movwf	Serial_print@i,c
  4197                           
  4198                           ;serial.c: 67: while(val[i])
  4199  002E8E  D01B               	goto	l4078
  4200  002E90                     l4074:
  4201                           
  4202                           ;serial.c: 68: {
  4203                           ;serial.c: 69: Serial_tx(val[i]);
  4204  002E90  5025               	movf	Serial_print@i,w,c
  4205  002E92  2421               	addwf	Serial_print@val,w,c
  4206  002E94  6E23               	movwf	??_Serial_print& (0+255),c
  4207  002E96  5026               	movf	Serial_print@i+1,w,c
  4208  002E98  2022               	addwfc	Serial_print@val+1,w,c
  4209  002E9A  6E24               	movwf	(??_Serial_print+1)& (0+255),c
  4210  002E9C  C023  FFF6         	movff	??_Serial_print,tblptrl
  4211  002EA0  C024  FFF7         	movff	??_Serial_print+1,tblptrh
  4212  002EA4  0E00               	movlw	low (__smallconst shr (0+16))
  4213  002EA6  6EF8               	movwf	tblptru,c
  4214  002EA8  0E0F               	movlw	(high __ramtop+-1)
  4215  002EAA  64F7               	cpfsgt	tblptrh,c
  4216  002EAC  D003               	bra	u4547
  4217  002EAE  0008               	tblrd		*
  4218  002EB0  50F5               	movf	tablat,w,c
  4219  002EB2  D005               	bra	u4540
  4220  002EB4                     u4547:
  4221  002EB4  CFF6 FFE9          	movff	tblptrl,fsr0l
  4222  002EB8  CFF7 FFEA          	movff	tblptrh,fsr0h
  4223  002EBC  50EF               	movf	indf0,w,c
  4224  002EBE                     u4540:
  4225  002EBE  EC7F  F01C         	call	_Serial_tx
  4226                           
  4227                           ;serial.c: 70: i++;
  4228  002EC2  4A25               	infsnz	Serial_print@i,f,c
  4229  002EC4  2A26               	incf	Serial_print@i+1,f,c
  4230  002EC6                     l4078:
  4231  002EC6  5025               	movf	Serial_print@i,w,c
  4232  002EC8  2421               	addwf	Serial_print@val,w,c
  4233  002ECA  6E23               	movwf	??_Serial_print& (0+255),c
  4234  002ECC  5026               	movf	Serial_print@i+1,w,c
  4235  002ECE  2022               	addwfc	Serial_print@val+1,w,c
  4236  002ED0  6E24               	movwf	(??_Serial_print+1)& (0+255),c
  4237  002ED2  C023  FFF6         	movff	??_Serial_print,tblptrl
  4238  002ED6  C024  FFF7         	movff	??_Serial_print+1,tblptrh
  4239  002EDA  0E00               	movlw	low (__smallconst shr (0+16))
  4240  002EDC  6EF8               	movwf	tblptru,c
  4241  002EDE  0E0F               	movlw	(high __ramtop+-1)
  4242  002EE0  64F7               	cpfsgt	tblptrh,c
  4243  002EE2  D003               	bra	u4557
  4244  002EE4  0008               	tblrd		*
  4245  002EE6  50F5               	movf	tablat,w,c
  4246  002EE8  D005               	bra	u4550
  4247  002EEA                     u4557:
  4248  002EEA  CFF6 FFE9          	movff	tblptrl,fsr0l
  4249  002EEE  CFF7 FFEA          	movff	tblptrh,fsr0h
  4250  002EF2  50EF               	movf	indf0,w,c
  4251  002EF4                     u4550:
  4252  002EF4  0900               	iorlw	0
  4253  002EF6  B4D8               	btfsc	status,2,c
  4254  002EF8  0012               	return	
  4255  002EFA  D7CA               	goto	l4074
  4256  002EFC                     __end_of_Serial_print:
  4257                           	opt stack 0
  4258                           tblptru	equ	0xFF8
  4259                           tblptrh	equ	0xFF7
  4260                           tblptrl	equ	0xFF6
  4261                           tablat	equ	0xFF5
  4262                           prodh	equ	0xFF4
  4263                           prodl	equ	0xFF3
  4264                           intcon	equ	0xFF2
  4265                           indf0	equ	0xFEF
  4266                           postinc0	equ	0xFEE
  4267                           fsr0h	equ	0xFEA
  4268                           fsr0l	equ	0xFE9
  4269                           wreg	equ	0xFE8
  4270                           indf2	equ	0xFDF
  4271                           postinc2	equ	0xFDE
  4272                           postdec2	equ	0xFDD
  4273                           fsr2h	equ	0xFDA
  4274                           fsr2l	equ	0xFD9
  4275                           status	equ	0xFD8
  4276                           
  4277 ;; *************** function _Serial_tx *****************
  4278 ;; Defined at:
  4279 ;;		line 57 in file "serial.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  val             1    wreg     const unsigned char 
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;  val             1    2[COMRAM] const unsigned char 
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  1    wreg      void 
  4286 ;; Registers used:
  4287 ;;		wreg
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4297 ;;Total ram usage:        1 bytes
  4298 ;; Hardware stack levels used:    1
  4299 ;; Hardware stack levels required when called:    1
  4300 ;; This function calls:
  4301 ;;		Nothing
  4302 ;; This function is called by:
  4303 ;;		_Serial_print
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           	psect	text25
  4308  0038FE                     __ptext25:
  4309                           	opt stack 0
  4310  0038FE                     _Serial_tx:
  4311                           	opt stack 26
  4312                           
  4313                           ;incstack = 0
  4314                           ;Serial_tx@val stored from wreg
  4315  0038FE  6E03               	movwf	Serial_tx@val,c
  4316                           
  4317                           ;serial.c: 59: TXREG=val;
  4318  003900  C003  FFAD         	movff	Serial_tx@val,4013	;volatile
  4319  003904                     l87:
  4320  003904  B2AC               	btfsc	4012,1,c	;volatile
  4321  003906  0012               	return	
  4322  003908  D7FD               	goto	l87
  4323  00390A                     __end_of_Serial_tx:
  4324                           	opt stack 0
  4325                           tblptru	equ	0xFF8
  4326                           tblptrh	equ	0xFF7
  4327                           tblptrl	equ	0xFF6
  4328                           tablat	equ	0xFF5
  4329                           prodh	equ	0xFF4
  4330                           prodl	equ	0xFF3
  4331                           intcon	equ	0xFF2
  4332                           indf0	equ	0xFEF
  4333                           postinc0	equ	0xFEE
  4334                           fsr0h	equ	0xFEA
  4335                           fsr0l	equ	0xFE9
  4336                           wreg	equ	0xFE8
  4337                           indf2	equ	0xFDF
  4338                           postinc2	equ	0xFDE
  4339                           postdec2	equ	0xFDD
  4340                           fsr2h	equ	0xFDA
  4341                           fsr2l	equ	0xFD9
  4342                           status	equ	0xFD8
  4343                           
  4344 ;; *************** function _RF24N_read *****************
  4345 ;; Defined at:
  4346 ;;		line 726 in file "../../RF24Network_cg.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  header          2   14[COMRAM] PTR struct .
  4349 ;;		 -> loop@header(8), 
  4350 ;;  message         2   16[COMRAM] PTR void 
  4351 ;;		 -> loop@payload(8), 
  4352 ;;  maxlen          2   18[COMRAM] unsigned int 
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;  padding         1   26[COMRAM] unsigned char 
  4355 ;;  bufsize         2   27[COMRAM] unsigned int 
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  2   14[COMRAM] unsigned int 
  4358 ;; Registers used:
  4359 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4365 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4369 ;;Total ram usage:       15 bytes
  4370 ;; Hardware stack levels used:    1
  4371 ;; Hardware stack levels required when called:    2
  4372 ;; This function calls:
  4373 ;;		_RF24N_available
  4374 ;;		_memcpy
  4375 ;;		_memmove
  4376 ;; This function is called by:
  4377 ;;		_loop
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text26
  4382  00225A                     __ptext26:
  4383                           	opt stack 0
  4384  00225A                     _RF24N_read:
  4385                           	opt stack 27
  4386                           
  4387                           ;RF24Network_cg.c: 728: uint16_t bufsize = 0;
  4388                           
  4389                           ;incstack = 0
  4390  00225A  0E00               	movlw	0
  4391  00225C  6E1D               	movwf	RF24N_read@bufsize+1,c
  4392  00225E  0E00               	movlw	0
  4393  002260  6E1C               	movwf	RF24N_read@bufsize,c
  4394                           
  4395                           ;RF24Network_cg.c: 747: if ( RF24N_available() )
  4396  002262  ECD8  F01B         	call	_RF24N_available	;wreg free
  4397  002266  0900               	iorlw	0
  4398  002268  B4D8               	btfsc	status,2,c
  4399  00226A  0012               	return	
  4400                           
  4401                           ;RF24Network_cg.c: 748: {
  4402                           ;RF24Network_cg.c: 749: uint8_t padding;
  4403                           ;RF24Network_cg.c: 751: memcpy(header,rn.frame_queue,8);
  4404  00226C  C00F  F003         	movff	RF24N_read@header,memcpy@d1
  4405  002270  C010  F004         	movff	RF24N_read@header+1,memcpy@d1+1
  4406  002274  0EE0               	movlw	low (_rn+58)
  4407  002276  6E05               	movwf	memcpy@s1,c
  4408  002278  0E00               	movlw	high (_rn+58)
  4409  00227A  6E06               	movwf	memcpy@s1+1,c
  4410  00227C  0E00               	movlw	0
  4411  00227E  6E08               	movwf	memcpy@n+1,c
  4412  002280  0E08               	movlw	8
  4413  002282  6E07               	movwf	memcpy@n,c
  4414  002284  EC47  F01A         	call	_memcpy	;wreg free
  4415                           
  4416                           ;RF24Network_cg.c: 752: memcpy(&bufsize,rn.frame_queue+8,2);
  4417  002288  0E1C               	movlw	low RF24N_read@bufsize
  4418  00228A  6E03               	movwf	memcpy@d1,c
  4419  00228C  0E00               	movlw	high RF24N_read@bufsize
  4420  00228E  6E04               	movwf	memcpy@d1+1,c
  4421  002290  0EE8               	movlw	low (_rn+66)
  4422  002292  6E05               	movwf	memcpy@s1,c
  4423  002294  0E00               	movlw	high (_rn+66)
  4424  002296  6E06               	movwf	memcpy@s1+1,c
  4425  002298  0E00               	movlw	0
  4426  00229A  6E08               	movwf	memcpy@n+1,c
  4427  00229C  0E02               	movlw	2
  4428  00229E  6E07               	movwf	memcpy@n,c
  4429  0022A0  EC47  F01A         	call	_memcpy	;wreg free
  4430                           
  4431                           ;RF24Network_cg.c: 754: if (maxlen > 0)
  4432  0022A4  5013               	movf	RF24N_read@maxlen,w,c
  4433  0022A6  1014               	iorwf	RF24N_read@maxlen+1,w,c
  4434  0022A8  B4D8               	btfsc	status,2,c
  4435  0022AA  D018               	goto	l6144
  4436                           
  4437                           ;RF24Network_cg.c: 755: {
  4438                           ;RF24Network_cg.c: 756: maxlen = (maxlen<bufsize?maxlen:bufsize);
  4439  0022AC  501C               	movf	RF24N_read@bufsize,w,c
  4440  0022AE  5C13               	subwf	RF24N_read@maxlen,w,c
  4441  0022B0  501D               	movf	RF24N_read@bufsize+1,w,c
  4442  0022B2  5814               	subwfb	RF24N_read@maxlen+1,w,c
  4443  0022B4  A0D8               	btfss	status,0,c
  4444  0022B6  D004               	goto	l6142
  4445  0022B8  C01C  F013         	movff	RF24N_read@bufsize,RF24N_read@maxlen
  4446  0022BC  C01D  F014         	movff	RF24N_read@bufsize+1,RF24N_read@maxlen+1
  4447  0022C0                     l6142:
  4448                           
  4449                           ;RF24Network_cg.c: 757: memcpy(message,rn.frame_queue+10,maxlen);
  4450  0022C0  C011  F003         	movff	RF24N_read@message,memcpy@d1
  4451  0022C4  C012  F004         	movff	RF24N_read@message+1,memcpy@d1+1
  4452  0022C8  0EEA               	movlw	low (_rn+68)
  4453  0022CA  6E05               	movwf	memcpy@s1,c
  4454  0022CC  0E00               	movlw	high (_rn+68)
  4455  0022CE  6E06               	movwf	memcpy@s1+1,c
  4456  0022D0  C013  F007         	movff	RF24N_read@maxlen,memcpy@n
  4457  0022D4  C014  F008         	movff	RF24N_read@maxlen+1,memcpy@n+1
  4458  0022D8  EC47  F01A         	call	_memcpy	;wreg free
  4459  0022DC                     l6144:
  4460                           
  4461                           ;RF24Network_cg.c: 763: }
  4462                           ;RF24Network_cg.c: 764: rn.next_frame-=bufsize+10;
  4463  0022DC  0E0A               	movlw	10
  4464  0022DE  241C               	addwf	RF24N_read@bufsize,w,c
  4465  0022E0  6E15               	movwf	??_RF24N_read& (0+255),c
  4466  0022E2  0E00               	movlw	0
  4467  0022E4  201D               	addwfc	RF24N_read@bufsize+1,w,c
  4468  0022E6  6E16               	movwf	(??_RF24N_read+1)& (0+255),c
  4469  0022E8  EE21  F07A         	lfsr	2,_rn+212
  4470  0022EC  5015               	movf	??_RF24N_read,w,c
  4471  0022EE  5EDE               	subwf	postinc2,f,c
  4472  0022F0  5016               	movf	??_RF24N_read+1,w,c
  4473  0022F2  5ADD               	subwfb	postdec2,f,c
  4474                           
  4475                           ;RF24Network_cg.c: 765: padding = 0;
  4476  0022F4  0E00               	movlw	0
  4477  0022F6  6E1B               	movwf	RF24N_read@padding,c
  4478                           
  4479                           ;RF24Network_cg.c: 767: if( (padding = (bufsize+10)%4) ){
  4480  0022F8  501C               	movf	RF24N_read@bufsize,w,c
  4481  0022FA  0F0A               	addlw	10
  4482  0022FC  0B03               	andlw	3
  4483  0022FE  6E1B               	movwf	RF24N_read@padding,c
  4484  002300  501B               	movf	RF24N_read@padding,w,c
  4485  002302  B4D8               	btfsc	status,2,c
  4486  002304  D00C               	goto	l6154
  4487                           
  4488                           ;RF24Network_cg.c: 768: padding = 4-padding;
  4489  002306  501B               	movf	RF24N_read@padding,w,c
  4490  002308  0800               	sublw	0
  4491  00230A  0F04               	addlw	4
  4492  00230C  6E1B               	movwf	RF24N_read@padding,c
  4493                           
  4494                           ;RF24Network_cg.c: 769: rn.next_frame -= padding;
  4495  00230E  501B               	movf	RF24N_read@padding,w,c
  4496  002310  0D01               	mullw	1
  4497  002312  EE21  F07A         	lfsr	2,_rn+212
  4498  002316  50F3               	movf	prodl,w,c
  4499  002318  5EDE               	subwf	postinc2,f,c
  4500  00231A  50F4               	movf	prodh,w,c
  4501  00231C  5ADD               	subwfb	postdec2,f,c
  4502  00231E                     l6154:
  4503                           
  4504                           ;RF24Network_cg.c: 770: }
  4505                           ;RF24Network_cg.c: 772: memmove(rn.frame_queue,rn.frame_queue+bufsize+10+padding,sizeof(
      +                          rn.frame_queue)- bufsize);
  4506  00231E  0EE0               	movlw	low (_rn+58)
  4507  002320  6E03               	movwf	memmove@d1,c
  4508  002322  0E00               	movlw	high (_rn+58)
  4509  002324  6E04               	movwf	memmove@d1+1,c
  4510  002326  501B               	movf	RF24N_read@padding,w,c
  4511  002328  0D01               	mullw	1
  4512  00232A  0E0A               	movlw	10
  4513  00232C  241C               	addwf	RF24N_read@bufsize,w,c
  4514  00232E  6E15               	movwf	??_RF24N_read& (0+255),c
  4515  002330  0E00               	movlw	0
  4516  002332  201D               	addwfc	RF24N_read@bufsize+1,w,c
  4517  002334  6E16               	movwf	(??_RF24N_read+1)& (0+255),c
  4518  002336  0EA6               	movlw	low _rn
  4519  002338  6E17               	movwf	(??_RF24N_read+2)& (0+255),c
  4520  00233A  0E00               	movlw	high _rn
  4521  00233C  6E18               	movwf	(??_RF24N_read+3)& (0+255),c
  4522  00233E  0E3A               	movlw	58
  4523  002340  2617               	addwf	??_RF24N_read+2,f,c
  4524  002342  0E00               	movlw	0
  4525  002344  2218               	addwfc	??_RF24N_read+3,f,c
  4526  002346  5015               	movf	??_RF24N_read,w,c
  4527  002348  2617               	addwf	??_RF24N_read+2,f,c
  4528  00234A  5016               	movf	??_RF24N_read+1,w,c
  4529  00234C  2218               	addwfc	??_RF24N_read+3,f,c
  4530  00234E  50F3               	movf	prodl,w,c
  4531  002350  2417               	addwf	??_RF24N_read+2,w,c
  4532  002352  6E05               	movwf	memmove@s1,c
  4533  002354  50F4               	movf	prodh,w,c
  4534  002356  2018               	addwfc	??_RF24N_read+3,w,c
  4535  002358  6E06               	movwf	memmove@s1+1,c
  4536  00235A  C01C  F019         	movff	RF24N_read@bufsize,??_RF24N_read+4
  4537  00235E  C01D  F01A         	movff	RF24N_read@bufsize+1,??_RF24N_read+5
  4538  002362  1E19               	comf	??_RF24N_read+4,f,c
  4539  002364  1E1A               	comf	??_RF24N_read+5,f,c
  4540  002366  4A19               	infsnz	??_RF24N_read+4,f,c
  4541  002368  2A1A               	incf	??_RF24N_read+5,f,c
  4542  00236A  0E9A               	movlw	154
  4543  00236C  2419               	addwf	??_RF24N_read+4,w,c
  4544  00236E  6E07               	movwf	memmove@n,c
  4545  002370  0E00               	movlw	0
  4546  002372  201A               	addwfc	??_RF24N_read+5,w,c
  4547  002374  6E08               	movwf	memmove@n+1,c
  4548  002376  EC62  F015         	call	_memmove	;wreg free
  4549  00237A  0012               	return	
  4550  00237C                     __end_of_RF24N_read:
  4551                           	opt stack 0
  4552                           tblptru	equ	0xFF8
  4553                           tblptrh	equ	0xFF7
  4554                           tblptrl	equ	0xFF6
  4555                           tablat	equ	0xFF5
  4556                           prodh	equ	0xFF4
  4557                           prodl	equ	0xFF3
  4558                           intcon	equ	0xFF2
  4559                           indf0	equ	0xFEF
  4560                           postinc0	equ	0xFEE
  4561                           fsr0h	equ	0xFEA
  4562                           fsr0l	equ	0xFE9
  4563                           wreg	equ	0xFE8
  4564                           indf2	equ	0xFDF
  4565                           postinc2	equ	0xFDE
  4566                           postdec2	equ	0xFDD
  4567                           fsr2h	equ	0xFDA
  4568                           fsr2l	equ	0xFD9
  4569                           status	equ	0xFD8
  4570                           
  4571 ;; *************** function _memmove *****************
  4572 ;; Defined at:
  4573 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memmove.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;  d1              2    2[COMRAM] PTR void 
  4576 ;;		 -> rn(370), 
  4577 ;;  s1              2    4[COMRAM] PTR const void 
  4578 ;;		 -> rn.frame_queue(154), rn(370), 
  4579 ;;  n               2    6[COMRAM] unsigned int 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  s               2   12[COMRAM] PTR const unsigned char 
  4582 ;;		 -> rn.frame_queue(154), rn(370), 
  4583 ;;  d               2   10[COMRAM] PTR unsigned char 
  4584 ;;		 -> rn(370), 
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  2    2[COMRAM] PTR void 
  4587 ;; Registers used:
  4588 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4594 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;Total ram usage:       12 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    1
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		_RF24N_read
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text27
  4609  002AC4                     __ptext27:
  4610                           	opt stack 0
  4611  002AC4                     _memmove:
  4612                           	opt stack 27
  4613                           
  4614                           ;incstack = 0
  4615  002AC4  C005  F00D         	movff	memmove@s1,memmove@s
  4616  002AC8  C006  F00E         	movff	memmove@s1+1,memmove@s+1
  4617  002ACC  C003  F00B         	movff	memmove@d1,memmove@d
  4618  002AD0  C004  F00C         	movff	memmove@d1+1,memmove@d+1
  4619  002AD4  500B               	movf	memmove@d,w,c
  4620  002AD6  5C0D               	subwf	memmove@s,w,c
  4621  002AD8  500C               	movf	memmove@d+1,w,c
  4622  002ADA  580E               	subwfb	memmove@s+1,w,c
  4623  002ADC  B0D8               	btfsc	status,0,c
  4624  002ADE  D02C               	goto	l4418
  4625  002AE0  5007               	movf	memmove@n,w,c
  4626  002AE2  240D               	addwf	memmove@s,w,c
  4627  002AE4  6E09               	movwf	??_memmove& (0+255),c
  4628  002AE6  5008               	movf	memmove@n+1,w,c
  4629  002AE8  200E               	addwfc	memmove@s+1,w,c
  4630  002AEA  6E0A               	movwf	(??_memmove+1)& (0+255),c
  4631  002AEC  5009               	movf	??_memmove,w,c
  4632  002AEE  5C0B               	subwf	memmove@d,w,c
  4633  002AF0  500A               	movf	??_memmove+1,w,c
  4634  002AF2  580C               	subwfb	memmove@d+1,w,c
  4635  002AF4  B0D8               	btfsc	status,0,c
  4636  002AF6  D020               	goto	l4418
  4637  002AF8  5007               	movf	memmove@n,w,c
  4638  002AFA  260D               	addwf	memmove@s,f,c
  4639  002AFC  5008               	movf	memmove@n+1,w,c
  4640  002AFE  220E               	addwfc	memmove@s+1,f,c
  4641  002B00  5007               	movf	memmove@n,w,c
  4642  002B02  260B               	addwf	memmove@d,f,c
  4643  002B04  5008               	movf	memmove@n+1,w,c
  4644  002B06  220C               	addwfc	memmove@d+1,f,c
  4645  002B08                     l4414:
  4646  002B08  060D               	decf	memmove@s,f,c
  4647  002B0A  A0D8               	btfss	status,0,c
  4648  002B0C  060E               	decf	memmove@s+1,f,c
  4649  002B0E  C00D  FFD9         	movff	memmove@s,fsr2l
  4650  002B12  C00E  FFDA         	movff	memmove@s+1,fsr2h
  4651  002B16  060B               	decf	memmove@d,f,c
  4652  002B18  A0D8               	btfss	status,0,c
  4653  002B1A  060C               	decf	memmove@d+1,f,c
  4654  002B1C  C00B  FFE9         	movff	memmove@d,fsr0l
  4655  002B20  C00C  FFEA         	movff	memmove@d+1,fsr0h
  4656  002B24  CFDF FFEF          	movff	indf2,indf0
  4657  002B28  0607               	decf	memmove@n,f,c
  4658  002B2A  A0D8               	btfss	status,0,c
  4659  002B2C  0608               	decf	memmove@n+1,f,c
  4660  002B2E  5007               	movf	memmove@n,w,c
  4661  002B30  1008               	iorwf	memmove@n+1,w,c
  4662  002B32  B4D8               	btfsc	status,2,c
  4663  002B34  0012               	return	
  4664  002B36  D7E8               	goto	l4414
  4665  002B38                     l4418:
  4666  002B38  5007               	movf	memmove@n,w,c
  4667  002B3A  1008               	iorwf	memmove@n+1,w,c
  4668  002B3C  B4D8               	btfsc	status,2,c
  4669  002B3E  0012               	return	
  4670  002B40  C00D  FFD9         	movff	memmove@s,fsr2l
  4671  002B44  C00E  FFDA         	movff	memmove@s+1,fsr2h
  4672  002B48  C00B  FFE9         	movff	memmove@d,fsr0l
  4673  002B4C  C00C  FFEA         	movff	memmove@d+1,fsr0h
  4674  002B50  CFDF FFEF          	movff	indf2,indf0
  4675  002B54  4A0D               	infsnz	memmove@s,f,c
  4676  002B56  2A0E               	incf	memmove@s+1,f,c
  4677  002B58  4A0B               	infsnz	memmove@d,f,c
  4678  002B5A  2A0C               	incf	memmove@d+1,f,c
  4679  002B5C  0607               	decf	memmove@n,f,c
  4680  002B5E  A0D8               	btfss	status,0,c
  4681  002B60  0608               	decf	memmove@n+1,f,c
  4682  002B62  D7EA               	goto	l4418
  4683  002B64                     __end_of_memmove:
  4684                           	opt stack 0
  4685                           tblptru	equ	0xFF8
  4686                           tblptrh	equ	0xFF7
  4687                           tblptrl	equ	0xFF6
  4688                           tablat	equ	0xFF5
  4689                           prodh	equ	0xFF4
  4690                           prodl	equ	0xFF3
  4691                           intcon	equ	0xFF2
  4692                           indf0	equ	0xFEF
  4693                           postinc0	equ	0xFEE
  4694                           fsr0h	equ	0xFEA
  4695                           fsr0l	equ	0xFE9
  4696                           wreg	equ	0xFE8
  4697                           indf2	equ	0xFDF
  4698                           postinc2	equ	0xFDE
  4699                           postdec2	equ	0xFDD
  4700                           fsr2h	equ	0xFDA
  4701                           fsr2l	equ	0xFD9
  4702                           status	equ	0xFD8
  4703                           
  4704 ;; *************** function _digitalWrite *****************
  4705 ;; Defined at:
  4706 ;;		line 62 in file "../../../RF24_c/utility/XC8/spi.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  pin             1    wreg     unsigned char 
  4709 ;;  mode            1    2[COMRAM] unsigned char 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  pin             1    4[COMRAM] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4721 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;Total ram usage:        3 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    1
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_RF24_csn_d
  4732 ;;		_RF24_ce_d
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           	psect	text28
  4737  001D82                     __ptext28:
  4738                           	opt stack 0
  4739  001D82                     _digitalWrite:
  4740                           	opt stack 24
  4741                           
  4742                           ;incstack = 0
  4743                           ;digitalWrite@pin stored from wreg
  4744  001D82  6E05               	movwf	digitalWrite@pin,c
  4745                           
  4746                           ;spi.c: 64: switch(pin)
  4747  001D84  D0D2               	goto	l5096
  4748  001D86                     l202:
  4749  001D86  B003               	btfsc	digitalWrite@mode,0,c
  4750  001D88  D002               	bra	u6195
  4751  001D8A  9089               	bcf	3977,0,c	;volatile
  4752  001D8C  D001               	bra	u6196
  4753  001D8E                     u6195:
  4754  001D8E  8089               	bsf	3977,0,c	;volatile
  4755  001D90                     u6196:
  4756  001D90  0012               	return	
  4757  001D92                     l204:
  4758  001D92  B003               	btfsc	digitalWrite@mode,0,c
  4759  001D94  D002               	bra	u6205
  4760  001D96  9289               	bcf	3977,1,c	;volatile
  4761  001D98  D001               	bra	u6206
  4762  001D9A                     u6205:
  4763  001D9A  8289               	bsf	3977,1,c	;volatile
  4764  001D9C                     u6206:
  4765  001D9C  0012               	return	
  4766  001D9E                     l205:
  4767  001D9E  B003               	btfsc	digitalWrite@mode,0,c
  4768  001DA0  D002               	bra	u6215
  4769  001DA2  9489               	bcf	3977,2,c	;volatile
  4770  001DA4  D001               	bra	u6216
  4771  001DA6                     u6215:
  4772  001DA6  8489               	bsf	3977,2,c	;volatile
  4773  001DA8                     u6216:
  4774  001DA8  0012               	return	
  4775  001DAA                     l206:
  4776  001DAA  B003               	btfsc	digitalWrite@mode,0,c
  4777  001DAC  D002               	bra	u6225
  4778  001DAE  9689               	bcf	3977,3,c	;volatile
  4779  001DB0  D001               	bra	u6226
  4780  001DB2                     u6225:
  4781  001DB2  8689               	bsf	3977,3,c	;volatile
  4782  001DB4                     u6226:
  4783  001DB4  0012               	return	
  4784  001DB6                     l207:
  4785  001DB6  B003               	btfsc	digitalWrite@mode,0,c
  4786  001DB8  D002               	bra	u6235
  4787  001DBA  9889               	bcf	3977,4,c	;volatile
  4788  001DBC  D001               	bra	u6236
  4789  001DBE                     u6235:
  4790  001DBE  8889               	bsf	3977,4,c	;volatile
  4791  001DC0                     u6236:
  4792  001DC0  0012               	return	
  4793  001DC2                     l208:
  4794  001DC2  B003               	btfsc	digitalWrite@mode,0,c
  4795  001DC4  D002               	bra	u6245
  4796  001DC6  9A89               	bcf	3977,5,c	;volatile
  4797  001DC8  D001               	bra	u6246
  4798  001DCA                     u6245:
  4799  001DCA  8A89               	bsf	3977,5,c	;volatile
  4800  001DCC                     u6246:
  4801  001DCC  0012               	return	
  4802  001DCE                     l209:
  4803  001DCE  B003               	btfsc	digitalWrite@mode,0,c
  4804  001DD0  D002               	bra	u6255
  4805  001DD2  908D               	bcf	3981,0,c	;volatile
  4806  001DD4  D001               	bra	u6256
  4807  001DD6                     u6255:
  4808  001DD6  808D               	bsf	3981,0,c	;volatile
  4809  001DD8                     u6256:
  4810  001DD8  0012               	return	
  4811  001DDA                     l210:
  4812  001DDA  B003               	btfsc	digitalWrite@mode,0,c
  4813  001DDC  D002               	bra	u6265
  4814  001DDE  928D               	bcf	3981,1,c	;volatile
  4815  001DE0  D001               	bra	u6266
  4816  001DE2                     u6265:
  4817  001DE2  828D               	bsf	3981,1,c	;volatile
  4818  001DE4                     u6266:
  4819  001DE4  0012               	return	
  4820  001DE6                     l211:
  4821  001DE6  B003               	btfsc	digitalWrite@mode,0,c
  4822  001DE8  D002               	bra	u6275
  4823  001DEA  948D               	bcf	3981,2,c	;volatile
  4824  001DEC  D001               	bra	u6276
  4825  001DEE                     u6275:
  4826  001DEE  848D               	bsf	3981,2,c	;volatile
  4827  001DF0                     u6276:
  4828  001DF0  0012               	return	
  4829  001DF2                     l212:
  4830  001DF2  B003               	btfsc	digitalWrite@mode,0,c
  4831  001DF4  D002               	bra	u6285
  4832  001DF6  9E89               	bcf	3977,7,c	;volatile
  4833  001DF8  D001               	bra	u6286
  4834  001DFA                     u6285:
  4835  001DFA  8E89               	bsf	3977,7,c	;volatile
  4836  001DFC                     u6286:
  4837  001DFC  0012               	return	
  4838  001DFE                     l213:
  4839  001DFE  B003               	btfsc	digitalWrite@mode,0,c
  4840  001E00  D002               	bra	u6295
  4841  001E02  9C89               	bcf	3977,6,c	;volatile
  4842  001E04  D001               	bra	u6296
  4843  001E06                     u6295:
  4844  001E06  8C89               	bsf	3977,6,c	;volatile
  4845  001E08                     u6296:
  4846  001E08  0012               	return	
  4847  001E0A                     l214:
  4848  001E0A  B003               	btfsc	digitalWrite@mode,0,c
  4849  001E0C  D002               	bra	u6305
  4850  001E0E  908B               	bcf	3979,0,c	;volatile
  4851  001E10  D001               	bra	u6306
  4852  001E12                     u6305:
  4853  001E12  808B               	bsf	3979,0,c	;volatile
  4854  001E14                     u6306:
  4855  001E14  0012               	return	
  4856  001E16                     l215:
  4857  001E16  B003               	btfsc	digitalWrite@mode,0,c
  4858  001E18  D002               	bra	u6315
  4859  001E1A  928B               	bcf	3979,1,c	;volatile
  4860  001E1C  D001               	bra	u6316
  4861  001E1E                     u6315:
  4862  001E1E  828B               	bsf	3979,1,c	;volatile
  4863  001E20                     u6316:
  4864  001E20  0012               	return	
  4865  001E22                     l216:
  4866  001E22  B003               	btfsc	digitalWrite@mode,0,c
  4867  001E24  D002               	bra	u6325
  4868  001E26  948B               	bcf	3979,2,c	;volatile
  4869  001E28  D001               	bra	u6326
  4870  001E2A                     u6325:
  4871  001E2A  848B               	bsf	3979,2,c	;volatile
  4872  001E2C                     u6326:
  4873  001E2C  0012               	return	
  4874  001E2E                     l217:
  4875  001E2E  B003               	btfsc	digitalWrite@mode,0,c
  4876  001E30  D002               	bra	u6335
  4877  001E32  968B               	bcf	3979,3,c	;volatile
  4878  001E34  D001               	bra	u6336
  4879  001E36                     u6335:
  4880  001E36  868B               	bsf	3979,3,c	;volatile
  4881  001E38                     u6336:
  4882  001E38  0012               	return	
  4883  001E3A                     l218:
  4884  001E3A  B003               	btfsc	digitalWrite@mode,0,c
  4885  001E3C  D002               	bra	u6345
  4886  001E3E  908C               	bcf	3980,0,c	;volatile
  4887  001E40  D001               	bra	u6346
  4888  001E42                     u6345:
  4889  001E42  808C               	bsf	3980,0,c	;volatile
  4890  001E44                     u6346:
  4891  001E44  0012               	return	
  4892  001E46                     l219:
  4893  001E46  B003               	btfsc	digitalWrite@mode,0,c
  4894  001E48  D002               	bra	u6355
  4895  001E4A  928C               	bcf	3980,1,c	;volatile
  4896  001E4C  D001               	bra	u6356
  4897  001E4E                     u6355:
  4898  001E4E  828C               	bsf	3980,1,c	;volatile
  4899  001E50                     u6356:
  4900  001E50  0012               	return	
  4901  001E52                     l220:
  4902  001E52  B003               	btfsc	digitalWrite@mode,0,c
  4903  001E54  D002               	bra	u6365
  4904  001E56  948C               	bcf	3980,2,c	;volatile
  4905  001E58  D001               	bra	u6366
  4906  001E5A                     u6365:
  4907  001E5A  848C               	bsf	3980,2,c	;volatile
  4908  001E5C                     u6366:
  4909  001E5C  0012               	return	
  4910  001E5E                     l221:
  4911  001E5E  B003               	btfsc	digitalWrite@mode,0,c
  4912  001E60  D002               	bra	u6375
  4913  001E62  968C               	bcf	3980,3,c	;volatile
  4914  001E64  D001               	bra	u6376
  4915  001E66                     u6375:
  4916  001E66  868C               	bsf	3980,3,c	;volatile
  4917  001E68                     u6376:
  4918  001E68  0012               	return	
  4919  001E6A                     l222:
  4920  001E6A  B003               	btfsc	digitalWrite@mode,0,c
  4921  001E6C  D002               	bra	u6385
  4922  001E6E  988B               	bcf	3979,4,c	;volatile
  4923  001E70  D001               	bra	u6386
  4924  001E72                     u6385:
  4925  001E72  888B               	bsf	3979,4,c	;volatile
  4926  001E74                     u6386:
  4927  001E74  0012               	return	
  4928  001E76                     l223:
  4929  001E76  B003               	btfsc	digitalWrite@mode,0,c
  4930  001E78  D002               	bra	u6395
  4931  001E7A  9A8B               	bcf	3979,5,c	;volatile
  4932  001E7C  D001               	bra	u6396
  4933  001E7E                     u6395:
  4934  001E7E  8A8B               	bsf	3979,5,c	;volatile
  4935  001E80                     u6396:
  4936  001E80  0012               	return	
  4937  001E82                     l224:
  4938  001E82  B003               	btfsc	digitalWrite@mode,0,c
  4939  001E84  D002               	bra	u6405
  4940  001E86  9C8B               	bcf	3979,6,c	;volatile
  4941  001E88  D001               	bra	u6406
  4942  001E8A                     u6405:
  4943  001E8A  8C8B               	bsf	3979,6,c	;volatile
  4944  001E8C                     u6406:
  4945  001E8C  0012               	return	
  4946  001E8E                     l225:
  4947  001E8E  B003               	btfsc	digitalWrite@mode,0,c
  4948  001E90  D002               	bra	u6415
  4949  001E92  9E8B               	bcf	3979,7,c	;volatile
  4950  001E94  D001               	bra	u6416
  4951  001E96                     u6415:
  4952  001E96  8E8B               	bsf	3979,7,c	;volatile
  4953  001E98                     u6416:
  4954  001E98  0012               	return	
  4955  001E9A                     l226:
  4956  001E9A  B003               	btfsc	digitalWrite@mode,0,c
  4957  001E9C  D002               	bra	u6425
  4958  001E9E  988C               	bcf	3980,4,c	;volatile
  4959  001EA0  D001               	bra	u6426
  4960  001EA2                     u6425:
  4961  001EA2  888C               	bsf	3980,4,c	;volatile
  4962  001EA4                     u6426:
  4963  001EA4  0012               	return	
  4964  001EA6                     l227:
  4965  001EA6  B003               	btfsc	digitalWrite@mode,0,c
  4966  001EA8  D002               	bra	u6435
  4967  001EAA  9A8C               	bcf	3980,5,c	;volatile
  4968  001EAC  D001               	bra	u6436
  4969  001EAE                     u6435:
  4970  001EAE  8A8C               	bsf	3980,5,c	;volatile
  4971  001EB0                     u6436:
  4972  001EB0  0012               	return	
  4973  001EB2                     l228:
  4974  001EB2  B003               	btfsc	digitalWrite@mode,0,c
  4975  001EB4  D002               	bra	u6445
  4976  001EB6  9C8C               	bcf	3980,6,c	;volatile
  4977  001EB8  D001               	bra	u6446
  4978  001EBA                     u6445:
  4979  001EBA  8C8C               	bsf	3980,6,c	;volatile
  4980  001EBC                     u6446:
  4981  001EBC  0012               	return	
  4982  001EBE                     l229:
  4983  001EBE  B003               	btfsc	digitalWrite@mode,0,c
  4984  001EC0  D002               	bra	u6455
  4985  001EC2  9E8C               	bcf	3980,7,c	;volatile
  4986  001EC4  D001               	bra	u6456
  4987  001EC6                     u6455:
  4988  001EC6  8E8C               	bsf	3980,7,c	;volatile
  4989  001EC8                     u6456:
  4990  001EC8  0012               	return	
  4991  001ECA                     l230:
  4992  001ECA  B003               	btfsc	digitalWrite@mode,0,c
  4993  001ECC  D002               	bra	u6465
  4994  001ECE  908A               	bcf	3978,0,c	;volatile
  4995  001ED0  D001               	bra	u6466
  4996  001ED2                     u6465:
  4997  001ED2  808A               	bsf	3978,0,c	;volatile
  4998  001ED4                     u6466:
  4999  001ED4  0012               	return	
  5000  001ED6                     l231:
  5001  001ED6  B003               	btfsc	digitalWrite@mode,0,c
  5002  001ED8  D002               	bra	u6475
  5003  001EDA  928A               	bcf	3978,1,c	;volatile
  5004  001EDC  D001               	bra	u6476
  5005  001EDE                     u6475:
  5006  001EDE  828A               	bsf	3978,1,c	;volatile
  5007  001EE0                     u6476:
  5008  001EE0  0012               	return	
  5009  001EE2                     l232:
  5010  001EE2  B003               	btfsc	digitalWrite@mode,0,c
  5011  001EE4  D002               	bra	u6485
  5012  001EE6  948A               	bcf	3978,2,c	;volatile
  5013  001EE8  D001               	bra	u6486
  5014  001EEA                     u6485:
  5015  001EEA  848A               	bsf	3978,2,c	;volatile
  5016  001EEC                     u6486:
  5017  001EEC  0012               	return	
  5018  001EEE                     l233:
  5019  001EEE  B003               	btfsc	digitalWrite@mode,0,c
  5020  001EF0  D002               	bra	u6495
  5021  001EF2  968A               	bcf	3978,3,c	;volatile
  5022  001EF4  D001               	bra	u6496
  5023  001EF6                     u6495:
  5024  001EF6  868A               	bsf	3978,3,c	;volatile
  5025  001EF8                     u6496:
  5026  001EF8  0012               	return	
  5027  001EFA                     l234:
  5028  001EFA  B003               	btfsc	digitalWrite@mode,0,c
  5029  001EFC  D002               	bra	u6505
  5030  001EFE  988A               	bcf	3978,4,c	;volatile
  5031  001F00  D001               	bra	u6506
  5032  001F02                     u6505:
  5033  001F02  888A               	bsf	3978,4,c	;volatile
  5034  001F04                     u6506:
  5035  001F04  0012               	return	
  5036  001F06                     l235:
  5037  001F06  B003               	btfsc	digitalWrite@mode,0,c
  5038  001F08  D002               	bra	u6515
  5039  001F0A  9A8A               	bcf	3978,5,c	;volatile
  5040  001F0C  D001               	bra	u6516
  5041  001F0E                     u6515:
  5042  001F0E  8A8A               	bsf	3978,5,c	;volatile
  5043  001F10                     u6516:
  5044  001F10  0012               	return	
  5045  001F12                     l236:
  5046  001F12  B003               	btfsc	digitalWrite@mode,0,c
  5047  001F14  D002               	bra	u6525
  5048  001F16  9C8A               	bcf	3978,6,c	;volatile
  5049  001F18  D001               	bra	u6526
  5050  001F1A                     u6525:
  5051  001F1A  8C8A               	bsf	3978,6,c	;volatile
  5052  001F1C                     u6526:
  5053  001F1C  0012               	return	
  5054  001F1E                     l237:
  5055  001F1E  B003               	btfsc	digitalWrite@mode,0,c
  5056  001F20  D002               	bra	u6535
  5057  001F22  9E8A               	bcf	3978,7,c	;volatile
  5058  001F24  D001               	bra	u6536
  5059  001F26                     u6535:
  5060  001F26  8E8A               	bsf	3978,7,c	;volatile
  5061  001F28                     u6536:
  5062                           
  5063                           ;spi.c: 113: }
  5064                           
  5065                           ;spi.c: 112: default: break;
  5066  001F28  0012               	return	
  5067  001F2A                     l5096:
  5068  001F2A  5005               	movf	digitalWrite@pin,w,c
  5069                           
  5070                           ; Switch size 1, requested type "space"
  5071                           ; Number of cases is 35, Range of values is 2 to 40
  5072                           ; switch strategies available:
  5073                           ; Name         Instructions Cycles
  5074                           ; simple_byte          106    54 (average)
  5075                           ;	Chosen strategy is simple_byte
  5076  001F2C  0A02               	xorlw	2	; case 2
  5077  001F2E  B4D8               	btfsc	status,2,c
  5078  001F30  D72A               	goto	l202
  5079  001F32  0A01               	xorlw	1	; case 3
  5080  001F34  B4D8               	btfsc	status,2,c
  5081  001F36  D72D               	goto	l204
  5082  001F38  0A07               	xorlw	7	; case 4
  5083  001F3A  B4D8               	btfsc	status,2,c
  5084  001F3C  D730               	goto	l205
  5085  001F3E  0A01               	xorlw	1	; case 5
  5086  001F40  B4D8               	btfsc	status,2,c
  5087  001F42  D733               	goto	l206
  5088  001F44  0A03               	xorlw	3	; case 6
  5089  001F46  B4D8               	btfsc	status,2,c
  5090  001F48  D736               	goto	l207
  5091  001F4A  0A01               	xorlw	1	; case 7
  5092  001F4C  B4D8               	btfsc	status,2,c
  5093  001F4E  D739               	goto	l208
  5094  001F50  0A0F               	xorlw	15	; case 8
  5095  001F52  B4D8               	btfsc	status,2,c
  5096  001F54  D73C               	goto	l209
  5097  001F56  0A01               	xorlw	1	; case 9
  5098  001F58  B4D8               	btfsc	status,2,c
  5099  001F5A  D73F               	goto	l210
  5100  001F5C  0A03               	xorlw	3	; case 10
  5101  001F5E  B4D8               	btfsc	status,2,c
  5102  001F60  D742               	goto	l211
  5103  001F62  0A07               	xorlw	7	; case 13
  5104  001F64  B4D8               	btfsc	status,2,c
  5105  001F66  D745               	goto	l212
  5106  001F68  0A03               	xorlw	3	; case 14
  5107  001F6A  B4D8               	btfsc	status,2,c
  5108  001F6C  D748               	goto	l213
  5109  001F6E  0A01               	xorlw	1	; case 15
  5110  001F70  B4D8               	btfsc	status,2,c
  5111  001F72  D74B               	goto	l214
  5112  001F74  0A1F               	xorlw	31	; case 16
  5113  001F76  B4D8               	btfsc	status,2,c
  5114  001F78  D74E               	goto	l215
  5115  001F7A  0A01               	xorlw	1	; case 17
  5116  001F7C  B4D8               	btfsc	status,2,c
  5117  001F7E  D751               	goto	l216
  5118  001F80  0A03               	xorlw	3	; case 18
  5119  001F82  B4D8               	btfsc	status,2,c
  5120  001F84  D754               	goto	l217
  5121  001F86  0A01               	xorlw	1	; case 19
  5122  001F88  B4D8               	btfsc	status,2,c
  5123  001F8A  D757               	goto	l218
  5124  001F8C  0A07               	xorlw	7	; case 20
  5125  001F8E  B4D8               	btfsc	status,2,c
  5126  001F90  D75A               	goto	l219
  5127  001F92  0A01               	xorlw	1	; case 21
  5128  001F94  B4D8               	btfsc	status,2,c
  5129  001F96  D75D               	goto	l220
  5130  001F98  0A03               	xorlw	3	; case 22
  5131  001F9A  B4D8               	btfsc	status,2,c
  5132  001F9C  D760               	goto	l221
  5133  001F9E  0A01               	xorlw	1	; case 23
  5134  001FA0  B4D8               	btfsc	status,2,c
  5135  001FA2  D763               	goto	l222
  5136  001FA4  0A0F               	xorlw	15	; case 24
  5137  001FA6  B4D8               	btfsc	status,2,c
  5138  001FA8  D766               	goto	l223
  5139  001FAA  0A01               	xorlw	1	; case 25
  5140  001FAC  B4D8               	btfsc	status,2,c
  5141  001FAE  D769               	goto	l224
  5142  001FB0  0A03               	xorlw	3	; case 26
  5143  001FB2  B4D8               	btfsc	status,2,c
  5144  001FB4  D76C               	goto	l225
  5145  001FB6  0A01               	xorlw	1	; case 27
  5146  001FB8  B4D8               	btfsc	status,2,c
  5147  001FBA  D76F               	goto	l226
  5148  001FBC  0A07               	xorlw	7	; case 28
  5149  001FBE  B4D8               	btfsc	status,2,c
  5150  001FC0  D772               	goto	l227
  5151  001FC2  0A01               	xorlw	1	; case 29
  5152  001FC4  B4D8               	btfsc	status,2,c
  5153  001FC6  D775               	goto	l228
  5154  001FC8  0A03               	xorlw	3	; case 30
  5155  001FCA  B4D8               	btfsc	status,2,c
  5156  001FCC  D778               	goto	l229
  5157  001FCE  0A3F               	xorlw	63	; case 33
  5158  001FD0  B4D8               	btfsc	status,2,c
  5159  001FD2  D77B               	goto	l230
  5160  001FD4  0A03               	xorlw	3	; case 34
  5161  001FD6  B4D8               	btfsc	status,2,c
  5162  001FD8  D77E               	goto	l231
  5163  001FDA  0A01               	xorlw	1	; case 35
  5164  001FDC  B4D8               	btfsc	status,2,c
  5165  001FDE  D781               	goto	l232
  5166  001FE0  0A07               	xorlw	7	; case 36
  5167  001FE2  B4D8               	btfsc	status,2,c
  5168  001FE4  D784               	goto	l233
  5169  001FE6  0A01               	xorlw	1	; case 37
  5170  001FE8  B4D8               	btfsc	status,2,c
  5171  001FEA  D787               	goto	l234
  5172  001FEC  0A03               	xorlw	3	; case 38
  5173  001FEE  B4D8               	btfsc	status,2,c
  5174  001FF0  D78A               	goto	l235
  5175  001FF2  0A01               	xorlw	1	; case 39
  5176  001FF4  B4D8               	btfsc	status,2,c
  5177  001FF6  D78D               	goto	l236
  5178  001FF8  0A0F               	xorlw	15	; case 40
  5179  001FFA  A4D8               	btfss	status,2,c
  5180  001FFC  0012               	return	
  5181  001FFE  D78F               	goto	l237
  5182  002000                     __end_of_digitalWrite:
  5183                           	opt stack 0
  5184                           tblptru	equ	0xFF8
  5185                           tblptrh	equ	0xFF7
  5186                           tblptrl	equ	0xFF6
  5187                           tablat	equ	0xFF5
  5188                           prodh	equ	0xFF4
  5189                           prodl	equ	0xFF3
  5190                           intcon	equ	0xFF2
  5191                           indf0	equ	0xFEF
  5192                           postinc0	equ	0xFEE
  5193                           fsr0h	equ	0xFEA
  5194                           fsr0l	equ	0xFE9
  5195                           wreg	equ	0xFE8
  5196                           indf2	equ	0xFDF
  5197                           postinc2	equ	0xFDE
  5198                           postdec2	equ	0xFDD
  5199                           fsr2h	equ	0xFDA
  5200                           fsr2l	equ	0xFD9
  5201                           status	equ	0xFD8
  5202                           
  5203 ;; *************** function _millis *****************
  5204 ;; Defined at:
  5205 ;;		line 173 in file "../../../RF24_c/utility/XC8/spi.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;		None
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;		None
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  4    2[COMRAM] long 
  5212 ;; Registers used:
  5213 ;;		None
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;Total ram usage:        4 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    1
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_RF24N_write
  5230 ;;		_RF24_txStandBy_t
  5231 ;;		_RF24N_write_
  5232 ;;		_RF24_writeBlocking
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text29
  5237  0038CE                     __ptext29:
  5238                           	opt stack 0
  5239  0038CE                     _millis:
  5240                           	opt stack 26
  5241                           
  5242                           ;spi.c: 175: return mtime;
  5243                           
  5244                           ;incstack = 0
  5245  0038CE  C039  F003         	movff	_mtime,?_millis
  5246  0038D2  C03A  F004         	movff	_mtime+1,?_millis+1
  5247  0038D6  C03B  F005         	movff	_mtime+2,?_millis+2
  5248  0038DA  C03C  F006         	movff	_mtime+3,?_millis+3
  5249  0038DE  0012               	return		;funcret
  5250  0038E0                     __end_of_millis:
  5251                           	opt stack 0
  5252                           tblptru	equ	0xFF8
  5253                           tblptrh	equ	0xFF7
  5254                           tblptrl	equ	0xFF6
  5255                           tablat	equ	0xFF5
  5256                           prodh	equ	0xFF4
  5257                           prodl	equ	0xFF3
  5258                           intcon	equ	0xFF2
  5259                           indf0	equ	0xFEF
  5260                           postinc0	equ	0xFEE
  5261                           fsr0h	equ	0xFEA
  5262                           fsr0l	equ	0xFE9
  5263                           wreg	equ	0xFE8
  5264                           indf2	equ	0xFDF
  5265                           postinc2	equ	0xFDE
  5266                           postdec2	equ	0xFDD
  5267                           fsr2h	equ	0xFDA
  5268                           fsr2l	equ	0xFD9
  5269                           status	equ	0xFD8
  5270                           
  5271 ;; *************** function _delayMicroseconds *****************
  5272 ;; Defined at:
  5273 ;;		line 210 in file "../../../RF24_c/utility/XC8/spi.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;  d               1    wreg     unsigned char 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;  d               1    9[COMRAM] unsigned char 
  5278 ;;  j               2   12[COMRAM] unsigned int 
  5279 ;;  i               2   10[COMRAM] unsigned int 
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  1    wreg      void 
  5282 ;; Registers used:
  5283 ;;		wreg, status,2, status,0
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5290 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;Total ram usage:       12 bytes
  5294 ;; Hardware stack levels used:    1
  5295 ;; Hardware stack levels required when called:    1
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		_RF24_csn_d
  5300 ;;		_RF24_stopListening
  5301 ;;		_RF24N_write_
  5302 ;;		_RF24_startWrite
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text30
  5307  0033CE                     __ptext30:
  5308                           	opt stack 0
  5309  0033CE                     _delayMicroseconds:
  5310                           	opt stack 24
  5311                           
  5312                           ;incstack = 0
  5313                           ;delayMicroseconds@d stored from wreg
  5314  0033CE  6E0A               	movwf	delayMicroseconds@d,c
  5315                           
  5316                           ;spi.c: 212: unsigned int i,j;
  5317                           ;spi.c: 213: for(i=0;i<d;i++)
  5318  0033D0  0E00               	movlw	0
  5319  0033D2  6E0C               	movwf	delayMicroseconds@i+1,c
  5320  0033D4  0E00               	movlw	0
  5321  0033D6  6E0B               	movwf	delayMicroseconds@i,c
  5322  0033D8  D010               	goto	l5112
  5323  0033DA                     l5100:
  5324                           
  5325                           ;spi.c: 214: for (j =0 ; j < (32000000/(4000000l)); j++)
  5326  0033DA  0E00               	movlw	0
  5327  0033DC  6E0E               	movwf	delayMicroseconds@j+1,c
  5328  0033DE  0E00               	movlw	0
  5329  0033E0  6E0D               	movwf	delayMicroseconds@j,c
  5330  0033E2                     l5102:
  5331  0033E2  500E               	movf	delayMicroseconds@j+1,w,c
  5332  0033E4  E108               	bnz	l5110
  5333  0033E6  0E08               	movlw	8
  5334  0033E8  5C0D               	subwf	delayMicroseconds@j,w,c
  5335  0033EA  B0D8               	btfsc	status,0,c
  5336  0033EC  D004               	goto	l5110
  5337  0033EE  F000               	nop		;# 
  5338  0033F0  4A0D               	infsnz	delayMicroseconds@j,f,c
  5339  0033F2  2A0E               	incf	delayMicroseconds@j+1,f,c
  5340  0033F4  D7F6               	goto	l5102
  5341  0033F6                     l5110:
  5342  0033F6  4A0B               	infsnz	delayMicroseconds@i,f,c
  5343  0033F8  2A0C               	incf	delayMicroseconds@i+1,f,c
  5344  0033FA                     l5112:
  5345  0033FA  500A               	movf	delayMicroseconds@d,w,c
  5346  0033FC  6E03               	movwf	??_delayMicroseconds& (0+255),c
  5347  0033FE  6A04               	clrf	(??_delayMicroseconds+1)& (0+255),c
  5348  003400  5003               	movf	??_delayMicroseconds,w,c
  5349  003402  5C0B               	subwf	delayMicroseconds@i,w,c
  5350  003404  5004               	movf	??_delayMicroseconds+1,w,c
  5351  003406  580C               	subwfb	delayMicroseconds@i+1,w,c
  5352  003408  B0D8               	btfsc	status,0,c
  5353  00340A  0012               	return	
  5354  00340C  D7E6               	goto	l5100
  5355  00340E                     __end_of_delayMicroseconds:
  5356                           	opt stack 0
  5357                           tblptru	equ	0xFF8
  5358                           tblptrh	equ	0xFF7
  5359                           tblptrl	equ	0xFF6
  5360                           tablat	equ	0xFF5
  5361                           prodh	equ	0xFF4
  5362                           prodl	equ	0xFF3
  5363                           intcon	equ	0xFF2
  5364                           indf0	equ	0xFEF
  5365                           postinc0	equ	0xFEE
  5366                           fsr0h	equ	0xFEA
  5367                           fsr0l	equ	0xFE9
  5368                           wreg	equ	0xFE8
  5369                           indf2	equ	0xFDF
  5370                           postinc2	equ	0xFDE
  5371                           postdec2	equ	0xFDD
  5372                           fsr2h	equ	0xFDA
  5373                           fsr2l	equ	0xFD9
  5374                           status	equ	0xFD8
  5375                           
  5376 ;; *************** function _RF24_getDynamicPayloadSize *****************
  5377 ;; Defined at:
  5378 ;;		line 1067 in file "../../../RF24_c/RF24_cg.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;		None
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;  result          1   18[COMRAM] unsigned char 
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  1    wreg      unsigned char 
  5385 ;; Registers used:
  5386 ;;		wreg, status,2, status,0, cstack
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5393 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;Total ram usage:        2 bytes
  5397 ;; Hardware stack levels used:    1
  5398 ;; Hardware stack levels required when called:    6
  5399 ;; This function calls:
  5400 ;;		_RF24_beginTransaction
  5401 ;;		_RF24_endTransaction
  5402 ;;		_RF24_flush_rx
  5403 ;;		_SPI_transfer
  5404 ;;		_delay
  5405 ;; This function is called by:
  5406 ;;		_RF24N_update
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           	psect	text31
  5411  0034CE                     __ptext31:
  5412                           	opt stack 0
  5413  0034CE                     _RF24_getDynamicPayloadSize:
  5414                           	opt stack 22
  5415                           
  5416                           ;RF24_cg.c: 1069: uint8_t result = 0;
  5417                           
  5418                           ;incstack = 0
  5419  0034CE  0E00               	movlw	0
  5420  0034D0  6E13               	movwf	RF24_getDynamicPayloadSize@result,c
  5421                           
  5422                           ;RF24_cg.c: 1079: RF24_beginTransaction();
  5423  0034D2  EC91  F01C         	call	_RF24_beginTransaction	;wreg free
  5424                           
  5425                           ;RF24_cg.c: 1080: SPI_transfer( 0x60 );
  5426  0034D6  0E60               	movlw	96
  5427  0034D8  EC70  F01C         	call	_SPI_transfer
  5428                           
  5429                           ;RF24_cg.c: 1081: result = SPI_transfer(0xff);
  5430  0034DC  0EFF               	movlw	255
  5431  0034DE  EC70  F01C         	call	_SPI_transfer
  5432  0034E2  6E13               	movwf	RF24_getDynamicPayloadSize@result,c
  5433                           
  5434                           ;RF24_cg.c: 1082: RF24_endTransaction();
  5435  0034E4  EC8D  F01C         	call	_RF24_endTransaction	;wreg free
  5436                           
  5437                           ;RF24_cg.c: 1085: if(result > 32) { RF24_flush_rx();; delay(2); return 0; }
  5438  0034E8  0E20               	movlw	32
  5439  0034EA  6413               	cpfsgt	RF24_getDynamicPayloadSize@result,c
  5440  0034EC  D00A               	goto	l5362
  5441  0034EE  EC85  F01C         	call	_RF24_flush_rx	;wreg free
  5442  0034F2  0E00               	movlw	0
  5443  0034F4  6E04               	movwf	delay@val+1,c
  5444  0034F6  0E02               	movlw	2
  5445  0034F8  6E03               	movwf	delay@val,c
  5446  0034FA  ECA1  F019         	call	_delay	;wreg free
  5447  0034FE  0E00               	movlw	0
  5448  003500  0012               	return	
  5449  003502                     l5362:
  5450                           
  5451                           ;RF24_cg.c: 1086: return result;
  5452  003502  5013               	movf	RF24_getDynamicPayloadSize@result,w,c
  5453  003504  0012               	return	
  5454  003506                     __end_of_RF24_getDynamicPayloadSize:
  5455                           	opt stack 0
  5456                           tblptru	equ	0xFF8
  5457                           tblptrh	equ	0xFF7
  5458                           tblptrl	equ	0xFF6
  5459                           tablat	equ	0xFF5
  5460                           prodh	equ	0xFF4
  5461                           prodl	equ	0xFF3
  5462                           intcon	equ	0xFF2
  5463                           indf0	equ	0xFEF
  5464                           postinc0	equ	0xFEE
  5465                           fsr0h	equ	0xFEA
  5466                           fsr0l	equ	0xFE9
  5467                           wreg	equ	0xFE8
  5468                           indf2	equ	0xFDF
  5469                           postinc2	equ	0xFDE
  5470                           postdec2	equ	0xFDD
  5471                           fsr2h	equ	0xFDA
  5472                           fsr2l	equ	0xFD9
  5473                           status	equ	0xFD8
  5474                           
  5475 ;; *************** function _RF24_flush_rx *****************
  5476 ;; Defined at:
  5477 ;;		line 341 in file "../../../RF24_c/RF24_cg.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;		None
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  1    wreg      unsigned char 
  5484 ;; Registers used:
  5485 ;;		wreg, status,2, status,0, cstack
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;Total ram usage:        0 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    5
  5498 ;; This function calls:
  5499 ;;		_RF24_spiTrans
  5500 ;; This function is called by:
  5501 ;;		_RF24_begin
  5502 ;;		_RF24_getDynamicPayloadSize
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text32
  5507  00390A                     __ptext32:
  5508                           	opt stack 0
  5509  00390A                     _RF24_flush_rx:
  5510                           	opt stack 23
  5511                           
  5512                           ;RF24_cg.c: 343: return RF24_spiTrans( 0xE2 );
  5513                           ;	Return value of _RF24_flush_rx is never used
  5514                           
  5515                           ;incstack = 0
  5516  00390A  0EE2               	movlw	226
  5517  00390C  EC47  F01C         	call	_RF24_spiTrans
  5518  003910  0012               	return	
  5519  003912                     __end_of_RF24_flush_rx:
  5520                           	opt stack 0
  5521                           tblptru	equ	0xFF8
  5522                           tblptrh	equ	0xFF7
  5523                           tblptrl	equ	0xFF6
  5524                           tablat	equ	0xFF5
  5525                           prodh	equ	0xFF4
  5526                           prodl	equ	0xFF3
  5527                           intcon	equ	0xFF2
  5528                           indf0	equ	0xFEF
  5529                           postinc0	equ	0xFEE
  5530                           fsr0h	equ	0xFEA
  5531                           fsr0l	equ	0xFE9
  5532                           wreg	equ	0xFE8
  5533                           indf2	equ	0xFDF
  5534                           postinc2	equ	0xFDE
  5535                           postdec2	equ	0xFDD
  5536                           fsr2h	equ	0xFDA
  5537                           fsr2l	equ	0xFD9
  5538                           status	equ	0xFD8
  5539                           
  5540 ;; *************** function _RF24_read *****************
  5541 ;; Defined at:
  5542 ;;		line 1118 in file "../../../RF24_c/RF24_cg.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  buf             2   26[COMRAM] PTR void 
  5545 ;;		 -> rn(370), 
  5546 ;;  len             1   28[COMRAM] unsigned char 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;		None
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      void 
  5551 ;; Registers used:
  5552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5558 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;Total ram usage:        3 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:    5
  5565 ;; This function calls:
  5566 ;;		_RF24_read_payload
  5567 ;;		_RF24_write_register_d
  5568 ;; This function is called by:
  5569 ;;		_RF24N_update
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text33
  5574  003810                     __ptext33:
  5575                           	opt stack 0
  5576  003810                     _RF24_read:
  5577                           	opt stack 23
  5578                           
  5579                           ;RF24_cg.c: 1121: RF24_read_payload( buf, len );
  5580                           
  5581                           ;incstack = 0
  5582  003810  C01B  F010         	movff	RF24_read@buf,RF24_read_payload@buf
  5583  003814  C01C  F011         	movff	RF24_read@buf+1,RF24_read_payload@buf+1
  5584  003818  C01D  F012         	movff	RF24_read@len,RF24_read_payload@data_len
  5585  00381C  ECC6  F016         	call	_RF24_read_payload	;wreg free
  5586                           
  5587                           ;RF24_cg.c: 1124: RF24_write_register_d(0x07,(1<<(6)) | (1<<(4)) | (1<<(5)) );
  5588  003820  0E70               	movlw	112
  5589  003822  6E12               	movwf	RF24_write_register_d@value,c
  5590  003824  0E07               	movlw	7
  5591  003826  ECE9  F01B         	call	_RF24_write_register_d
  5592  00382A  0012               	return		;funcret
  5593  00382C                     __end_of_RF24_read:
  5594                           	opt stack 0
  5595                           tblptru	equ	0xFF8
  5596                           tblptrh	equ	0xFF7
  5597                           tblptrl	equ	0xFF6
  5598                           tablat	equ	0xFF5
  5599                           prodh	equ	0xFF4
  5600                           prodl	equ	0xFF3
  5601                           intcon	equ	0xFF2
  5602                           indf0	equ	0xFEF
  5603                           postinc0	equ	0xFEE
  5604                           fsr0h	equ	0xFEA
  5605                           fsr0l	equ	0xFE9
  5606                           wreg	equ	0xFE8
  5607                           indf2	equ	0xFDF
  5608                           postinc2	equ	0xFDE
  5609                           postdec2	equ	0xFDD
  5610                           fsr2h	equ	0xFDA
  5611                           fsr2l	equ	0xFD9
  5612                           status	equ	0xFD8
  5613                           
  5614 ;; *************** function _RF24_read_payload *****************
  5615 ;; Defined at:
  5616 ;;		line 272 in file "../../../RF24_c/RF24_cg.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  buf             2   15[COMRAM] PTR void 
  5619 ;;		 -> rn(370), 
  5620 ;;  data_len        1   17[COMRAM] unsigned char 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;  current         2   22[COMRAM] PTR unsigned char 
  5623 ;;		 -> rn(370), 
  5624 ;;  blank_len       1   21[COMRAM] unsigned char 
  5625 ;;  status          1   20[COMRAM] unsigned char 
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      unsigned char 
  5628 ;; Registers used:
  5629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5635 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5636 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5637 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5638 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;Total ram usage:       11 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; Hardware stack levels required when called:    4
  5642 ;; This function calls:
  5643 ;;		_RF24_beginTransaction
  5644 ;;		_RF24_endTransaction
  5645 ;;		_SPI_transfer
  5646 ;; This function is called by:
  5647 ;;		_RF24_read
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           	psect	text34
  5652  002D8C                     __ptext34:
  5653                           	opt stack 0
  5654  002D8C                     _RF24_read_payload:
  5655                           	opt stack 23
  5656                           
  5657                           ;RF24_cg.c: 274: uint8_t status;
  5658                           ;RF24_cg.c: 275: uint8_t* current = (uint8_t*)(buf);
  5659                           
  5660                           ;incstack = 0
  5661  002D8C  C010  F017         	movff	RF24_read_payload@buf,RF24_read_payload@current
  5662  002D90  C011  F018         	movff	RF24_read_payload@buf+1,RF24_read_payload@current+1
  5663                           
  5664                           ;RF24_cg.c: 276: uint8_t blank_len;
  5665                           ;RF24_cg.c: 278: if(data_len > rf.payload_size) data_len = rf.payload_size;
  5666  002D94  5012               	movf	RF24_read_payload@data_len,w,c
  5667  002D96  5C42               	subwf	_rf+5,w,c
  5668  002D98  A0D8               	btfss	status,0,c
  5669  002D9A  C042  F012         	movff	_rf+5,RF24_read_payload@data_len
  5670                           
  5671                           ;RF24_cg.c: 279: blank_len = rf.dynamic_payloads_enabled ? 0 : rf.payload_size - data_le
      +                          n;
  5672  002D9E  5043               	movf	_rf+6,w,c
  5673  002DA0  A4D8               	btfss	status,2,c
  5674  002DA2  D00E               	goto	l5240
  5675  002DA4  5012               	movf	RF24_read_payload@data_len,w,c
  5676  002DA6  6E13               	movwf	??_RF24_read_payload& (0+255),c
  5677  002DA8  6A14               	clrf	(??_RF24_read_payload+1)& (0+255),c
  5678  002DAA  1E13               	comf	??_RF24_read_payload,f,c
  5679  002DAC  1E14               	comf	??_RF24_read_payload+1,f,c
  5680  002DAE  4A13               	infsnz	??_RF24_read_payload,f,c
  5681  002DB0  2A14               	incf	??_RF24_read_payload+1,f,c
  5682  002DB2  5042               	movf	_rf+5,w,c
  5683  002DB4  2413               	addwf	??_RF24_read_payload,w,c
  5684  002DB6  6E19               	movwf	_RF24_read_payload$2300,c
  5685  002DB8  0E00               	movlw	0
  5686  002DBA  2014               	addwfc	??_RF24_read_payload+1,w,c
  5687  002DBC  6E1A               	movwf	_RF24_read_payload$2300+1,c
  5688  002DBE  D004               	goto	l5242
  5689  002DC0                     l5240:
  5690  002DC0  0E00               	movlw	0
  5691  002DC2  6E1A               	movwf	_RF24_read_payload$2300+1,c
  5692  002DC4  0E00               	movlw	0
  5693  002DC6  6E19               	movwf	_RF24_read_payload$2300,c
  5694  002DC8                     l5242:
  5695  002DC8  C019  F016         	movff	_RF24_read_payload$2300,RF24_read_payload@blank_len
  5696                           
  5697                           ;RF24_cg.c: 283: ;
  5698                           ;RF24_cg.c: 311: RF24_beginTransaction();
  5699  002DCC  EC91  F01C         	call	_RF24_beginTransaction	;wreg free
  5700                           
  5701                           ;RF24_cg.c: 312: status = SPI_transfer( 0x61 );
  5702  002DD0  0E61               	movlw	97
  5703  002DD2  EC70  F01C         	call	_SPI_transfer
  5704  002DD6  6E15               	movwf	RF24_read_payload@status,c
  5705                           
  5706                           ;RF24_cg.c: 313: while ( data_len-- ) {
  5707  002DD8  D00A               	goto	l5252
  5708  002DDA                     l5248:
  5709                           
  5710                           ;RF24_cg.c: 314: *current++ = SPI_transfer(0xFF);
  5711  002DDA  0EFF               	movlw	255
  5712  002DDC  EC70  F01C         	call	_SPI_transfer
  5713  002DE0  C017  FFD9         	movff	RF24_read_payload@current,fsr2l
  5714  002DE4  C018  FFDA         	movff	RF24_read_payload@current+1,fsr2h
  5715  002DE8  6EDF               	movwf	indf2,c
  5716  002DEA  4A17               	infsnz	RF24_read_payload@current,f,c
  5717  002DEC  2A18               	incf	RF24_read_payload@current+1,f,c
  5718  002DEE                     l5252:
  5719  002DEE  0612               	decf	RF24_read_payload@data_len,f,c
  5720  002DF0  2812               	incf	RF24_read_payload@data_len,w,c
  5721  002DF2  B4D8               	btfsc	status,2,c
  5722  002DF4  D004               	goto	l5256
  5723  002DF6  D7F1               	goto	l5248
  5724  002DF8                     l5254:
  5725                           
  5726                           ;RF24_cg.c: 317: SPI_transfer(0xff);
  5727  002DF8  0EFF               	movlw	255
  5728  002DFA  EC70  F01C         	call	_SPI_transfer
  5729  002DFE                     l5256:
  5730  002DFE  0616               	decf	RF24_read_payload@blank_len,f,c
  5731  002E00  2816               	incf	RF24_read_payload@blank_len,w,c
  5732  002E02  A4D8               	btfss	status,2,c
  5733  002E04  D7F9               	goto	l5254
  5734                           
  5735                           ;RF24_cg.c: 318: }
  5736                           ;RF24_cg.c: 319: RF24_endTransaction();
  5737  002E06  EC8D  F01C         	call	_RF24_endTransaction	;wreg free
  5738  002E0A  0012               	return	
  5739  002E0C                     __end_of_RF24_read_payload:
  5740                           	opt stack 0
  5741                           tblptru	equ	0xFF8
  5742                           tblptrh	equ	0xFF7
  5743                           tblptrl	equ	0xFF6
  5744                           tablat	equ	0xFF5
  5745                           prodh	equ	0xFF4
  5746                           prodl	equ	0xFF3
  5747                           intcon	equ	0xFF2
  5748                           indf0	equ	0xFEF
  5749                           postinc0	equ	0xFEE
  5750                           fsr0h	equ	0xFEA
  5751                           fsr0l	equ	0xFE9
  5752                           wreg	equ	0xFE8
  5753                           indf2	equ	0xFDF
  5754                           postinc2	equ	0xFDE
  5755                           postdec2	equ	0xFDD
  5756                           fsr2h	equ	0xFDA
  5757                           fsr2l	equ	0xFD9
  5758                           status	equ	0xFD8
  5759                           
  5760 ;; *************** function _RF24N_write *****************
  5761 ;; Defined at:
  5762 ;;		line 981 in file "../../RF24Network_cg.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  to_node         2   51[COMRAM] unsigned int 
  5765 ;;  directTo        1   53[COMRAM] unsigned char 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;  header          2   31[BANK0 ] PTR struct .
  5768 ;;		 -> rn.frame_buffer(32), rn(370), 
  5769 ;;  conversion      4   34[BANK0 ] struct .
  5770 ;;  reply_time      4   26[BANK0 ] unsigned long 
  5771 ;;  ok              1   33[BANK0 ] unsigned char 
  5772 ;;  isAckType       1   30[BANK0 ] unsigned char 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  1    wreg      unsigned char 
  5775 ;; Registers used:
  5776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5782 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Totals:         3      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;Total ram usage:       41 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    9
  5789 ;; This function calls:
  5790 ;;		_RF24N_is_valid_address
  5791 ;;		_RF24N_logicalToPhysicalAddress
  5792 ;;		_RF24N_update
  5793 ;;		_RF24N_write_to_pipe
  5794 ;;		_RF24_setAutoAck_p
  5795 ;;		_RF24_startListening
  5796 ;;		_RF24_txStandBy_t
  5797 ;;		_millis
  5798 ;; This function is called by:
  5799 ;;		_RF24N_update
  5800 ;;		_RF24N__write
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           	psect	text35
  5805  002000                     __ptext35:
  5806                           	opt stack 0
  5807  002000                     _RF24N_write:
  5808                           	opt stack 19
  5809                           
  5810                           ;RF24Network_cg.c: 983: uint8_t ok = 0;
  5811                           
  5812                           ;incstack = 0
  5813  002000  0E00               	movlw	0
  5814  002002  0100               	movlb	0	; () banked
  5815  002004  6FA1               	movwf	RF24N_write@ok& (0+255),b
  5816                           
  5817                           ;RF24Network_cg.c: 984: uint8_t isAckType = 0;
  5818  002006  0E00               	movlw	0
  5819  002008  0100               	movlb	0	; () banked
  5820  00200A  6F9E               	movwf	RF24N_write@isAckType& (0+255),b
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;RF24Network_cg.c: 985: uint32_t reply_time ;
  5824                           ;RF24Network_cg.c: 986: logicalToPhysicalStruct conversion;
  5825                           ;RF24Network_cg.c: 988: if(rn.frame_buffer[6] > 64 && rn.frame_buffer[6] < 192 ){ isAckT
      +                          ype=1; }
  5826  00200C  EE20  F0B3         	lfsr	2,_rn+13
  5827  002010  0E40               	movlw	64
  5828  002012  64DF               	cpfsgt	indf2,c
  5829  002014  D008               	goto	l5770
  5830                           
  5831                           ; BSR set to: 0
  5832  002016  EE20  F0B3         	lfsr	2,_rn+13
  5833  00201A  0EC0               	movlw	192
  5834  00201C  60DF               	cpfslt	indf2,c
  5835  00201E  D003               	goto	l5770
  5836                           
  5837                           ; BSR set to: 0
  5838  002020  0E01               	movlw	1
  5839  002022  0100               	movlb	0	; () banked
  5840  002024  6F9E               	movwf	RF24N_write@isAckType& (0+255),b
  5841  002026                     l5770:
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;RF24Network_cg.c: 995: if ( !RF24N_is_valid_address(to_node) )
  5845  002026  C034  F003         	movff	RF24N_write@to_node,RF24N_is_valid_address@node
  5846  00202A  C035  F004         	movff	RF24N_write@to_node+1,RF24N_is_valid_address@node+1
  5847  00202E  EC9F  F01A         	call	_RF24N_is_valid_address	;wreg free
  5848  002032  0900               	iorlw	0
  5849  002034  A4D8               	btfss	status,2,c
  5850  002036  D002               	goto	l527
  5851                           
  5852                           ;RF24Network_cg.c: 996: return 0;
  5853  002038  0E00               	movlw	0
  5854  00203A  0012               	return	
  5855  00203C                     l527:
  5856                           
  5857                           ;RF24Network_cg.c: 999: conversion.send_node= to_node;
  5858  00203C  C034  F0A2         	movff	RF24N_write@to_node,RF24N_write@conversion
  5859  002040  C035  F0A3         	movff	RF24N_write@to_node+1,RF24N_write@conversion+1
  5860                           
  5861                           ;RF24Network_cg.c: 1000: conversion.send_pipe=directTo;
  5862  002044  C036  F0A4         	movff	RF24N_write@directTo,RF24N_write@conversion+2
  5863                           
  5864                           ;RF24Network_cg.c: 1001: conversion.multicast=0;
  5865  002048  0E00               	movlw	0
  5866  00204A  0100               	movlb	0	; () banked
  5867  00204C  6FA5               	movwf	(RF24N_write@conversion+3)& (0+255),b
  5868                           
  5869                           ; BSR set to: 0
  5870                           ;RF24Network_cg.c: 1002: RF24N_logicalToPhysicalAddress( &conversion);
  5871  00204E  0EA2               	movlw	low RF24N_write@conversion
  5872  002050  6E12               	movwf	RF24N_logicalToPhysicalAddress@conversionInfo,c
  5873  002052  0E00               	movlw	high RF24N_write@conversion
  5874  002054  6E13               	movwf	RF24N_logicalToPhysicalAddress@conversionInfo+1,c
  5875  002056  EC51  F013         	call	_RF24N_logicalToPhysicalAddress	;wreg free
  5876                           
  5877                           ;RF24Network_cg.c: 1007: ;
  5878                           ;RF24Network_cg.c: 1010: ok=RF24N_write_to_pipe(conversion.send_node, conversion.send_pi
      +                          pe, conversion.multicast);
  5879  00205A  C0A2  F02A         	movff	RF24N_write@conversion,RF24N_write_to_pipe@node
  5880  00205E  C0A3  F02B         	movff	RF24N_write@conversion+1,RF24N_write_to_pipe@node+1
  5881  002062  C0A4  F02C         	movff	RF24N_write@conversion+2,RF24N_write_to_pipe@pipe
  5882  002066  C0A5  F02D         	movff	RF24N_write@conversion+3,RF24N_write_to_pipe@multicast
  5883  00206A  ECB2  F015         	call	_RF24N_write_to_pipe	;wreg free
  5884  00206E  0100               	movlb	0	; () banked
  5885  002070  6FA1               	movwf	RF24N_write@ok& (0+255),b
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;RF24Network_cg.c: 1019: }
  5889                           ;RF24Network_cg.c: 1022: if( directTo == 1 && ok && conversion.send_node == to_node && i
      +                          sAckType){
  5890                           
  5891                           ; BSR set to: 0
  5892                           
  5893                           ;RF24Network_cg.c: 1018: ;
  5894                           
  5895                           ; BSR set to: 0
  5896  002072  0436               	decf	RF24N_write@directTo,w,c
  5897  002074  A4D8               	btfss	status,2,c
  5898  002076  D052               	goto	l5810
  5899                           
  5900                           ; BSR set to: 0
  5901  002078  0100               	movlb	0	; () banked
  5902  00207A  51A1               	movf	RF24N_write@ok& (0+255),w,b
  5903  00207C  0100               	movlb	0	; () banked
  5904  00207E  B4D8               	btfsc	status,2,c
  5905  002080  D04D               	goto	l5810
  5906                           
  5907                           ; BSR set to: 0
  5908  002082  5034               	movf	RF24N_write@to_node,w,c
  5909  002084  0100               	movlb	0	; () banked
  5910  002086  19A2               	xorwf	RF24N_write@conversion& (0+255),w,b
  5911  002088  E149               	bnz	l5810
  5912  00208A  5035               	movf	RF24N_write@to_node+1,w,c
  5913  00208C  0100               	movlb	0	; () banked
  5914  00208E  19A3               	xorwf	(RF24N_write@conversion+1)& (0+255),w,b
  5915  002090  A4D8               	btfss	status,2,c
  5916  002092  D044               	goto	l5810
  5917                           
  5918                           ; BSR set to: 0
  5919  002094  0100               	movlb	0	; () banked
  5920  002096  519E               	movf	RF24N_write@isAckType& (0+255),w,b
  5921  002098  0100               	movlb	0	; () banked
  5922  00209A  B4D8               	btfsc	status,2,c
  5923  00209C  D03F               	goto	l5810
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;RF24Network_cg.c: 1024: RF24NetworkHeader* header = (RF24NetworkHeader*)rn.frame_buffer
      +                          ;
  5927  00209E  0EAD               	movlw	low (_rn+7)
  5928  0020A0  0100               	movlb	0	; () banked
  5929  0020A2  6F9F               	movwf	RF24N_write@header& (0+255),b
  5930  0020A4  0E00               	movlw	high (_rn+7)
  5931  0020A6  0100               	movlb	0	; () banked
  5932  0020A8  6FA0               	movwf	(RF24N_write@header+1)& (0+255),b
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;RF24Network_cg.c: 1025: header->type = 193;
  5936  0020AA  0100               	movlb	0	; () banked
  5937  0020AC  EE20 F006          	lfsr	2,6
  5938  0020B0  519F               	movf	RF24N_write@header& (0+255),w,b
  5939  0020B2  26D9               	addwf	fsr2l,f,c
  5940  0020B4  51A0               	movf	(RF24N_write@header+1)& (0+255),w,b
  5941  0020B6  22DA               	addwfc	fsr2h,f,c
  5942  0020B8  0EC1               	movlw	193
  5943  0020BA  6EDF               	movwf	indf2,c
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;RF24Network_cg.c: 1026: header->to_node = header->from_node;
  5947  0020BC  C09F  FFD9         	movff	RF24N_write@header,fsr2l
  5948  0020C0  C0A0  FFDA         	movff	RF24N_write@header+1,fsr2h
  5949  0020C4  0100               	movlb	0	; () banked
  5950  0020C6  EE00 F002          	lfsr	0,2
  5951  0020CA  519F               	movf	RF24N_write@header& (0+255),w,b
  5952  0020CC  26E9               	addwf	fsr0l,f,c
  5953  0020CE  51A0               	movf	(RF24N_write@header+1)& (0+255),w,b
  5954  0020D0  22EA               	addwfc	fsr0h,f,c
  5955  0020D2  CFDE FFEE          	movff	postinc2,postinc0
  5956  0020D6  CFDD FFED          	movff	postdec2,postdec0
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;RF24Network_cg.c: 1028: conversion.send_node = header->from_node;
  5960  0020DA  C09F  FFD9         	movff	RF24N_write@header,fsr2l
  5961  0020DE  C0A0  FFDA         	movff	RF24N_write@header+1,fsr2h
  5962  0020E2  CFDE F0A2          	movff	postinc2,RF24N_write@conversion
  5963  0020E6  CFDD F0A3          	movff	postdec2,RF24N_write@conversion+1
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;RF24Network_cg.c: 1029: conversion.send_pipe = 1;
  5967  0020EA  0E01               	movlw	1
  5968  0020EC  0100               	movlb	0	; () banked
  5969  0020EE  6FA4               	movwf	(RF24N_write@conversion+2)& (0+255),b
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;RF24Network_cg.c: 1030: conversion.multicast = 0;
  5973  0020F0  0E00               	movlw	0
  5974  0020F2  0100               	movlb	0	; () banked
  5975  0020F4  6FA5               	movwf	(RF24N_write@conversion+3)& (0+255),b
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;RF24Network_cg.c: 1031: RF24N_logicalToPhysicalAddress(&conversion);
  5979  0020F6  0EA2               	movlw	low RF24N_write@conversion
  5980  0020F8  6E12               	movwf	RF24N_logicalToPhysicalAddress@conversionInfo,c
  5981  0020FA  0E00               	movlw	high RF24N_write@conversion
  5982  0020FC  6E13               	movwf	RF24N_logicalToPhysicalAddress@conversionInfo+1,c
  5983  0020FE  EC51  F013         	call	_RF24N_logicalToPhysicalAddress	;wreg free
  5984                           
  5985                           ;RF24Network_cg.c: 1034: rn.frame_size = sizeof(RF24NetworkHeader);
  5986  002102  0E08               	movlw	8
  5987  002104  CFE8 F0D8          	movff	wreg,_rn+50
  5988                           
  5989                           ;RF24Network_cg.c: 1035: RF24N_write_to_pipe(conversion.send_node, conversion.send_pipe,
      +                           conversion.multicast);
  5990  002108  C0A2  F02A         	movff	RF24N_write@conversion,RF24N_write_to_pipe@node
  5991  00210C  C0A3  F02B         	movff	RF24N_write@conversion+1,RF24N_write_to_pipe@node+1
  5992  002110  C0A4  F02C         	movff	RF24N_write@conversion+2,RF24N_write_to_pipe@pipe
  5993  002114  C0A5  F02D         	movff	RF24N_write@conversion+3,RF24N_write_to_pipe@multicast
  5994  002118  ECB2  F015         	call	_RF24N_write_to_pipe	;wreg free
  5995  00211C                     l5810:
  5996                           
  5997                           ;RF24Network_cg.c: 1043: }
  5998                           ;RF24Network_cg.c: 1047: if( ok && conversion.send_node != to_node && (directTo==0 || di
      +                          rectTo==3) && isAckType){
  5999  00211C  0100               	movlb	0	; () banked
  6000  00211E  51A1               	movf	RF24N_write@ok& (0+255),w,b
  6001  002120  0100               	movlb	0	; () banked
  6002  002122  B4D8               	btfsc	status,2,c
  6003  002124  D092               	goto	l5838
  6004                           
  6005                           ; BSR set to: 0
  6006  002126  5034               	movf	RF24N_write@to_node,w,c
  6007  002128  0100               	movlb	0	; () banked
  6008  00212A  19A2               	xorwf	RF24N_write@conversion& (0+255),w,b
  6009  00212C  E105               	bnz	u7670
  6010  00212E  5035               	movf	RF24N_write@to_node+1,w,c
  6011  002130  0100               	movlb	0	; () banked
  6012  002132  19A3               	xorwf	(RF24N_write@conversion+1)& (0+255),w,b
  6013  002134  B4D8               	btfsc	status,2,c
  6014  002136  D089               	goto	l5838
  6015  002138                     u7670:
  6016                           
  6017                           ; BSR set to: 0
  6018  002138  5036               	movf	RF24N_write@directTo,w,c
  6019  00213A  B4D8               	btfsc	status,2,c
  6020  00213C  D004               	goto	l5818
  6021                           
  6022                           ; BSR set to: 0
  6023  00213E  0E03               	movlw	3
  6024  002140  1836               	xorwf	RF24N_write@directTo,w,c
  6025  002142  A4D8               	btfss	status,2,c
  6026  002144  D082               	goto	l5838
  6027  002146                     l5818:
  6028                           
  6029                           ; BSR set to: 0
  6030  002146  0100               	movlb	0	; () banked
  6031  002148  519E               	movf	RF24N_write@isAckType& (0+255),w,b
  6032  00214A  0100               	movlb	0	; () banked
  6033  00214C  B4D8               	btfsc	status,2,c
  6034  00214E  D07D               	goto	l5838
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;RF24Network_cg.c: 1050: if(rn.networkFlags & 4){
  6038  002150  EE20  F0D0         	lfsr	2,_rn+42
  6039  002154  A4DF               	btfss	indf2,2,c
  6040  002156  D016               	goto	l5828
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;RF24Network_cg.c: 1051: RF24_txStandBy_t(rn.txTimeout,0);
  6044  002158  C0A7  F017         	movff	_rn+1,RF24_txStandBy_t@timeout
  6045  00215C  C0A8  F018         	movff	_rn+2,RF24_txStandBy_t@timeout+1
  6046  002160  C0A9  F019         	movff	_rn+3,RF24_txStandBy_t@timeout+2
  6047  002164  C0AA  F01A         	movff	_rn+4,RF24_txStandBy_t@timeout+3
  6048  002168  0E00               	movlw	0
  6049  00216A  6E1B               	movwf	RF24_txStandBy_t@startTx,c
  6050  00216C  EC04  F015         	call	_RF24_txStandBy_t	;wreg free
  6051                           
  6052                           ;RF24Network_cg.c: 1052: rn.networkFlags &= ~4;
  6053  002170  C0D0  FFE8         	movff	_rn+42,wreg
  6054  002174  0BFB               	andlw	251
  6055  002176  CFE8 F0D0          	movff	wreg,_rn+42
  6056                           
  6057                           ;RF24Network_cg.c: 1053: RF24_setAutoAck_p(0,0);
  6058  00217A  0E00               	movlw	0
  6059  00217C  6E15               	movwf	RF24_setAutoAck_p@enable,c
  6060  00217E  0E00               	movlw	0
  6061  002180  ECDB  F018         	call	_RF24_setAutoAck_p
  6062  002184                     l5828:
  6063                           
  6064                           ;RF24Network_cg.c: 1054: }
  6065                           ;RF24Network_cg.c: 1055: RF24_startListening();
  6066  002184  ECB0  F018         	call	_RF24_startListening	;wreg free
  6067                           
  6068                           ;RF24Network_cg.c: 1057: reply_time = millis();
  6069  002188  EC67  F01C         	call	_millis	;wreg free
  6070  00218C  C003  F09A         	movff	?_millis,RF24N_write@reply_time
  6071  002190  C004  F09B         	movff	?_millis+1,RF24N_write@reply_time+1
  6072  002194  C005  F09C         	movff	?_millis+2,RF24N_write@reply_time+2
  6073  002198  C006  F09D         	movff	?_millis+3,RF24N_write@reply_time+3
  6074                           
  6075                           ;RF24Network_cg.c: 1059: while( RF24N_update() != 193){
  6076  00219C  D050               	goto	l5836
  6077  00219E                     l5832:
  6078                           
  6079                           ;RF24Network_cg.c: 1063: if(millis() - reply_time > rn.routeTimeout){
  6080  00219E  C09A  F080         	movff	RF24N_write@reply_time,??_RF24N_write
  6081  0021A2  C09B  F081         	movff	RF24N_write@reply_time+1,??_RF24N_write+1
  6082  0021A6  C09C  F082         	movff	RF24N_write@reply_time+2,??_RF24N_write+2
  6083  0021AA  C09D  F083         	movff	RF24N_write@reply_time+3,??_RF24N_write+3
  6084  0021AE  0100               	movlb	0	; () banked
  6085  0021B0  1F80               	comf	??_RF24N_write& (0+255),f,b
  6086  0021B2  1F81               	comf	(??_RF24N_write+1)& (0+255),f,b
  6087  0021B4  1F82               	comf	(??_RF24N_write+2)& (0+255),f,b
  6088  0021B6  1F83               	comf	(??_RF24N_write+3)& (0+255),f,b
  6089  0021B8  2B80               	incf	??_RF24N_write& (0+255),f,b
  6090  0021BA  0E00               	movlw	0
  6091  0021BC  2381               	addwfc	(??_RF24N_write+1)& (0+255),f,b
  6092  0021BE  2382               	addwfc	(??_RF24N_write+2)& (0+255),f,b
  6093  0021C0  2383               	addwfc	(??_RF24N_write+3)& (0+255),f,b
  6094  0021C2  EC67  F01C         	call	_millis	;wreg free
  6095  0021C6  0100               	movlb	0	; () banked
  6096  0021C8  5180               	movf	??_RF24N_write& (0+255),w,b
  6097  0021CA  2403               	addwf	?_millis,w,c
  6098  0021CC  0100               	movlb	0	; () banked
  6099  0021CE  6F84               	movwf	(??_RF24N_write+4)& (0+255),b
  6100  0021D0  0100               	movlb	0	; () banked
  6101  0021D2  5181               	movf	(??_RF24N_write+1)& (0+255),w,b
  6102  0021D4  2004               	addwfc	?_millis+1,w,c
  6103  0021D6  0100               	movlb	0	; () banked
  6104  0021D8  6F85               	movwf	(??_RF24N_write+5)& (0+255),b
  6105  0021DA  0100               	movlb	0	; () banked
  6106  0021DC  5182               	movf	(??_RF24N_write+2)& (0+255),w,b
  6107  0021DE  2005               	addwfc	?_millis+2,w,c
  6108  0021E0  0100               	movlb	0	; () banked
  6109  0021E2  6F86               	movwf	(??_RF24N_write+6)& (0+255),b
  6110  0021E4  0100               	movlb	0	; () banked
  6111  0021E6  5183               	movf	(??_RF24N_write+3)& (0+255),w,b
  6112  0021E8  2006               	addwfc	?_millis+3,w,c
  6113  0021EA  0100               	movlb	0	; () banked
  6114  0021EC  6F87               	movwf	(??_RF24N_write+7)& (0+255),b
  6115  0021EE  EE20  F0AB         	lfsr	2,_rn+5
  6116  0021F2  CFDE F088          	movff	postinc2,??_RF24N_write+8
  6117  0021F6  CFDD F089          	movff	postdec2,??_RF24N_write+9
  6118  0021FA  0100               	movlb	0	; () banked
  6119  0021FC  5188               	movf	(??_RF24N_write+8)& (0+255),w,b
  6120  0021FE  0100               	movlb	0	; () banked
  6121  002200  6F8A               	movwf	(??_RF24N_write+10)& (0+255),b
  6122  002202  0100               	movlb	0	; () banked
  6123  002204  5189               	movf	(??_RF24N_write+9)& (0+255),w,b
  6124  002206  0100               	movlb	0	; () banked
  6125  002208  6F8B               	movwf	(??_RF24N_write+11)& (0+255),b
  6126  00220A  0100               	movlb	0	; () banked
  6127  00220C  6B8C               	clrf	(??_RF24N_write+12)& (0+255),b
  6128  00220E  0100               	movlb	0	; () banked
  6129  002210  6B8D               	clrf	(??_RF24N_write+13)& (0+255),b
  6130  002212  0100               	movlb	0	; () banked
  6131  002214  5184               	movf	(??_RF24N_write+4)& (0+255),w,b
  6132  002216  0100               	movlb	0	; () banked
  6133  002218  5D8A               	subwf	(??_RF24N_write+10)& (0+255),w,b
  6134  00221A  0100               	movlb	0	; () banked
  6135  00221C  5185               	movf	(??_RF24N_write+5)& (0+255),w,b
  6136  00221E  0100               	movlb	0	; () banked
  6137  002220  598B               	subwfb	(??_RF24N_write+11)& (0+255),w,b
  6138  002222  0100               	movlb	0	; () banked
  6139  002224  5186               	movf	(??_RF24N_write+6)& (0+255),w,b
  6140  002226  0100               	movlb	0	; () banked
  6141  002228  598C               	subwfb	(??_RF24N_write+12)& (0+255),w,b
  6142  00222A  0100               	movlb	0	; () banked
  6143  00222C  5187               	movf	(??_RF24N_write+7)& (0+255),w,b
  6144  00222E  0100               	movlb	0	; () banked
  6145  002230  598D               	subwfb	(??_RF24N_write+13)& (0+255),w,b
  6146  002232  B0D8               	btfsc	status,0,c
  6147  002234  D004               	goto	l5836
  6148                           
  6149                           ; BSR set to: 0
  6150                           ;RF24Network_cg.c: 1067: ;
  6151                           ;RF24Network_cg.c: 1069: ok=0;
  6152  002236  0E00               	movlw	0
  6153  002238  0100               	movlb	0	; () banked
  6154  00223A  6FA1               	movwf	RF24N_write@ok& (0+255),b
  6155                           
  6156                           ;RF24Network_cg.c: 1070: break;
  6157  00223C  D006               	goto	l5838
  6158  00223E                     l5836:
  6159  00223E  ECE5  F00A         	call	_RF24N_update	;wreg free
  6160  002242  0EC1               	movlw	193
  6161  002244  186B               	xorwf	btemp,w,c
  6162  002246  A4D8               	btfss	status,2,c
  6163  002248  D7AA               	goto	l5832
  6164  00224A                     l5838:
  6165                           
  6166                           ;RF24Network_cg.c: 1071: }
  6167                           ;RF24Network_cg.c: 1072: }
  6168                           ;RF24Network_cg.c: 1073: }
  6169                           ;RF24Network_cg.c: 1074: if( !(rn.networkFlags & 4) ){
  6170  00224A  EE20  F0D0         	lfsr	2,_rn+42
  6171  00224E  A4DF               	btfss	indf2,2,c
  6172                           
  6173                           ;RF24Network_cg.c: 1077: RF24_startListening();
  6174  002250  ECB0  F018         	call	_RF24_startListening	;wreg free
  6175                           
  6176                           ;RF24Network_cg.c: 1079: }
  6177                           ;RF24Network_cg.c: 1087: return ok;
  6178  002254  0100               	movlb	0	; () banked
  6179  002256  51A1               	movf	RF24N_write@ok& (0+255),w,b
  6180  002258  0012               	return	
  6181  00225A                     __end_of_RF24N_write:
  6182                           	opt stack 0
  6183                           tblptru	equ	0xFF8
  6184                           tblptrh	equ	0xFF7
  6185                           tblptrl	equ	0xFF6
  6186                           tablat	equ	0xFF5
  6187                           prodh	equ	0xFF4
  6188                           prodl	equ	0xFF3
  6189                           intcon	equ	0xFF2
  6190                           indf0	equ	0xFEF
  6191                           postinc0	equ	0xFEE
  6192                           postdec0	equ	0xFED
  6193                           fsr0h	equ	0xFEA
  6194                           fsr0l	equ	0xFE9
  6195                           wreg	equ	0xFE8
  6196                           indf2	equ	0xFDF
  6197                           postinc2	equ	0xFDE
  6198                           postdec2	equ	0xFDD
  6199                           fsr2h	equ	0xFDA
  6200                           fsr2l	equ	0xFD9
  6201                           status	equ	0xFD8
  6202                           
  6203 ;; *************** function _RF24_startListening *****************
  6204 ;; Defined at:
  6205 ;;		line 723 in file "../../../RF24_c/RF24_cg.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;		None
  6208 ;; Auto vars:     Size  Location     Type
  6209 ;;		None
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  1    wreg      void 
  6212 ;; Registers used:
  6213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6214 ;; Tracked objects:
  6215 ;;		On entry : 0/0
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;Total ram usage:        1 bytes
  6224 ;; Hardware stack levels used:    1
  6225 ;; Hardware stack levels required when called:    6
  6226 ;; This function calls:
  6227 ;;		_RF24_ce_d
  6228 ;;		_RF24_closeReadingPipe
  6229 ;;		_RF24_flush_tx
  6230 ;;		_RF24_powerUp
  6231 ;;		_RF24_read_register_d
  6232 ;;		_RF24_write_register_c_d
  6233 ;;		_RF24_write_register_d
  6234 ;; This function is called by:
  6235 ;;		_RF24N_begin_d
  6236 ;;		_RF24N_write
  6237 ;;		_RF24N_write_
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text36
  6242  003160                     __ptext36:
  6243                           	opt stack 0
  6244  003160                     _RF24_startListening:
  6245                           	opt stack 22
  6246                           
  6247                           ;RF24_cg.c: 726: RF24_powerUp();
  6248                           
  6249                           ;incstack = 0
  6250  003160  ECB4  F01B         	call	_RF24_powerUp	;wreg free
  6251                           
  6252                           ;RF24_cg.c: 728: RF24_write_register_d(0x00, RF24_read_register_d(0x00) | (1<<(0)));
  6253  003164  0E00               	movlw	0
  6254  003166  ECF9  F01B         	call	_RF24_read_register_d
  6255  00316A  0901               	iorlw	1
  6256  00316C  6E12               	movwf	RF24_write_register_d@value,c
  6257  00316E  0E00               	movlw	0
  6258  003170  ECE9  F01B         	call	_RF24_write_register_d
  6259                           
  6260                           ;RF24_cg.c: 729: RF24_write_register_d(0x07, (1<<(6)) | (1<<(5)) | (1<<(4)) );
  6261  003174  0E70               	movlw	112
  6262  003176  6E12               	movwf	RF24_write_register_d@value,c
  6263  003178  0E07               	movlw	7
  6264  00317A  ECE9  F01B         	call	_RF24_write_register_d
  6265                           
  6266                           ;RF24_cg.c: 730: RF24_ce_d(1);
  6267  00317E  0E01               	movlw	1
  6268  003180  EC52  F01C         	call	_RF24_ce_d
  6269                           
  6270                           ;RF24_cg.c: 732: if (rf.pipe0_reading_address[0] > 0){
  6271  003184  5044               	movf	_rf+7,w,c
  6272  003186  B4D8               	btfsc	status,2,c
  6273  003188  D00A               	goto	l5618
  6274                           
  6275                           ;RF24_cg.c: 733: RF24_write_register_c_d(0x0A, rf.pipe0_reading_address, rf.addr_width);
  6276  00318A  0E44               	movlw	low (_rf+7)
  6277  00318C  6E10               	movwf	RF24_write_register_c_d@buf,c
  6278  00318E  0E00               	movlw	high (_rf+7)
  6279  003190  6E11               	movwf	RF24_write_register_c_d@buf+1,c
  6280  003192  C049  F012         	movff	_rf+12,RF24_write_register_c_d@len
  6281  003196  0E0A               	movlw	10
  6282  003198  ECD5  F01A         	call	_RF24_write_register_c_d
  6283                           
  6284                           ;RF24_cg.c: 734: }else{
  6285  00319C  D003               	goto	l5620
  6286  00319E                     l5618:
  6287                           
  6288                           ;RF24_cg.c: 735: RF24_closeReadingPipe(0);
  6289  00319E  0E00               	movlw	0
  6290  0031A0  EC07  F01A         	call	_RF24_closeReadingPipe
  6291  0031A4                     l5620:
  6292                           
  6293                           ;RF24_cg.c: 736: }
  6294                           ;RF24_cg.c: 740: if(RF24_read_register_d(0x1D) & (1<<(1))){
  6295  0031A4  0E1D               	movlw	29
  6296  0031A6  ECF9  F01B         	call	_RF24_read_register_d
  6297  0031AA  6E19               	movwf	??_RF24_startListening& (0+255),c
  6298  0031AC  A219               	btfss	??_RF24_startListening,1,c
  6299  0031AE  0012               	return	
  6300                           
  6301                           ;RF24_cg.c: 741: RF24_flush_tx();
  6302  0031B0  EC95  F01C         	call	_RF24_flush_tx	;wreg free
  6303  0031B4  0012               	return	
  6304  0031B6                     __end_of_RF24_startListening:
  6305                           	opt stack 0
  6306                           tblptru	equ	0xFF8
  6307                           tblptrh	equ	0xFF7
  6308                           tblptrl	equ	0xFF6
  6309                           tablat	equ	0xFF5
  6310                           prodh	equ	0xFF4
  6311                           prodl	equ	0xFF3
  6312                           intcon	equ	0xFF2
  6313                           indf0	equ	0xFEF
  6314                           postinc0	equ	0xFEE
  6315                           postdec0	equ	0xFED
  6316                           fsr0h	equ	0xFEA
  6317                           fsr0l	equ	0xFE9
  6318                           wreg	equ	0xFE8
  6319                           indf2	equ	0xFDF
  6320                           postinc2	equ	0xFDE
  6321                           postdec2	equ	0xFDD
  6322                           fsr2h	equ	0xFDA
  6323                           fsr2l	equ	0xFD9
  6324                           status	equ	0xFD8
  6325                           
  6326 ;; *************** function _RF24_powerUp *****************
  6327 ;; Defined at:
  6328 ;;		line 791 in file "../../../RF24_c/RF24_cg.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;		None
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;  cfg             1   20[COMRAM] unsigned char 
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  1    wreg      void 
  6335 ;; Registers used:
  6336 ;;		wreg, status,2, status,0, cstack
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6346 ;;Total ram usage:        1 bytes
  6347 ;; Hardware stack levels used:    1
  6348 ;; Hardware stack levels required when called:    5
  6349 ;; This function calls:
  6350 ;;		_RF24_read_register_d
  6351 ;;		_RF24_write_register_d
  6352 ;;		_delay
  6353 ;; This function is called by:
  6354 ;;		_RF24_begin
  6355 ;;		_RF24_startListening
  6356 ;; This function uses a non-reentrant model
  6357 ;;
  6358                           
  6359                           	psect	text37
  6360  003768                     __ptext37:
  6361                           	opt stack 0
  6362  003768                     _RF24_powerUp:
  6363                           	opt stack 23
  6364                           
  6365                           ;RF24_cg.c: 793: uint8_t cfg = RF24_read_register_d(0x00);
  6366                           
  6367                           ;incstack = 0
  6368  003768  0E00               	movlw	0
  6369  00376A  ECF9  F01B         	call	_RF24_read_register_d
  6370  00376E  6E15               	movwf	RF24_powerUp@cfg,c
  6371                           
  6372                           ;RF24_cg.c: 796: if (!(cfg & (1<<(1)))){
  6373  003770  B215               	btfsc	RF24_powerUp@cfg,1,c
  6374  003772  0012               	return	
  6375                           
  6376                           ;RF24_cg.c: 797: RF24_write_register_d(0x00, cfg | (1<<(1)));
  6377  003774  5015               	movf	RF24_powerUp@cfg,w,c
  6378  003776  0902               	iorlw	2
  6379  003778  6E12               	movwf	RF24_write_register_d@value,c
  6380  00377A  0E00               	movlw	0
  6381  00377C  ECE9  F01B         	call	_RF24_write_register_d
  6382                           
  6383                           ;RF24_cg.c: 802: delay(5);
  6384  003780  0E00               	movlw	0
  6385  003782  6E04               	movwf	delay@val+1,c
  6386  003784  0E05               	movlw	5
  6387  003786  6E03               	movwf	delay@val,c
  6388  003788  ECA1  F019         	call	_delay	;wreg free
  6389  00378C  0012               	return	
  6390  00378E                     __end_of_RF24_powerUp:
  6391                           	opt stack 0
  6392                           tblptru	equ	0xFF8
  6393                           tblptrh	equ	0xFF7
  6394                           tblptrl	equ	0xFF6
  6395                           tablat	equ	0xFF5
  6396                           prodh	equ	0xFF4
  6397                           prodl	equ	0xFF3
  6398                           intcon	equ	0xFF2
  6399                           indf0	equ	0xFEF
  6400                           postinc0	equ	0xFEE
  6401                           postdec0	equ	0xFED
  6402                           fsr0h	equ	0xFEA
  6403                           fsr0l	equ	0xFE9
  6404                           wreg	equ	0xFE8
  6405                           indf2	equ	0xFDF
  6406                           postinc2	equ	0xFDE
  6407                           postdec2	equ	0xFDD
  6408                           fsr2h	equ	0xFDA
  6409                           fsr2l	equ	0xFD9
  6410                           status	equ	0xFD8
  6411                           
  6412 ;; *************** function _RF24_closeReadingPipe *****************
  6413 ;; Defined at:
  6414 ;;		line 1259 in file "../../../RF24_c/RF24_cg.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  pipe            1    wreg     unsigned char 
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;  pipe            1   23[COMRAM] unsigned char 
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  1    wreg      void 
  6421 ;; Registers used:
  6422 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6429 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;Total ram usage:        4 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:    5
  6435 ;; This function calls:
  6436 ;;		_RF24_read_register_d
  6437 ;;		_RF24_write_register_d
  6438 ;; This function is called by:
  6439 ;;		_RF24_startListening
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           	psect	text38
  6444  00340E                     __ptext38:
  6445                           	opt stack 0
  6446  00340E                     _RF24_closeReadingPipe:
  6447                           	opt stack 22
  6448                           
  6449                           ;incstack = 0
  6450                           ;RF24_closeReadingPipe@pipe stored from wreg
  6451  00340E  6E18               	movwf	RF24_closeReadingPipe@pipe,c
  6452                           
  6453                           ;RF24_cg.c: 1261: RF24_write_register_d(0x02,RF24_read_register_d(0x02) & ~(1<<((*(&chil
      +                          d_pipe_enable[pipe])))));
  6454  003410  5018               	movf	RF24_closeReadingPipe@pipe,w,c
  6455  003412  0D01               	mullw	1
  6456  003414  0E0D               	movlw	low _child_pipe_enable
  6457  003416  24F3               	addwf	prodl,w,c
  6458  003418  6EF6               	movwf	tblptrl,c
  6459  00341A  0E10               	movlw	high _child_pipe_enable
  6460  00341C  20F4               	addwfc	prodh,w,c
  6461  00341E  6EF7               	movwf	tblptrh,c
  6462  003420                     	if	0	;There are less than 3 active tblptr bytes
  6463  003420                     	endif
  6464  003420  0008               	tblrd		*
  6465  003422  CFF5 F015          	movff	tablat,??_RF24_closeReadingPipe
  6466  003426  0E01               	movlw	1
  6467  003428  6E16               	movwf	(??_RF24_closeReadingPipe+1)& (0+255),c
  6468  00342A  2A15               	incf	??_RF24_closeReadingPipe,f,c
  6469  00342C  D002               	goto	u7064
  6470  00342E                     u7065:
  6471  00342E  90D8               	bcf	status,0,c
  6472  003430  3616               	rlcf	??_RF24_closeReadingPipe+1,f,c
  6473  003432                     u7064:
  6474  003432  2E15               	decfsz	??_RF24_closeReadingPipe,f,c
  6475  003434  D7FC               	goto	u7065
  6476  003436  5016               	movf	??_RF24_closeReadingPipe+1,w,c
  6477  003438  0AFF               	xorlw	255
  6478  00343A  6E17               	movwf	(??_RF24_closeReadingPipe+2)& (0+255),c
  6479  00343C  0E02               	movlw	2
  6480  00343E  ECF9  F01B         	call	_RF24_read_register_d
  6481  003442  1417               	andwf	??_RF24_closeReadingPipe+2,w,c
  6482  003444  6E12               	movwf	RF24_write_register_d@value,c
  6483  003446  0E02               	movlw	2
  6484  003448  ECE9  F01B         	call	_RF24_write_register_d
  6485  00344C  0012               	return		;funcret
  6486  00344E                     __end_of_RF24_closeReadingPipe:
  6487                           	opt stack 0
  6488                           tblptru	equ	0xFF8
  6489                           tblptrh	equ	0xFF7
  6490                           tblptrl	equ	0xFF6
  6491                           tablat	equ	0xFF5
  6492                           prodh	equ	0xFF4
  6493                           prodl	equ	0xFF3
  6494                           intcon	equ	0xFF2
  6495                           indf0	equ	0xFEF
  6496                           postinc0	equ	0xFEE
  6497                           postdec0	equ	0xFED
  6498                           fsr0h	equ	0xFEA
  6499                           fsr0l	equ	0xFE9
  6500                           wreg	equ	0xFE8
  6501                           indf2	equ	0xFDF
  6502                           postinc2	equ	0xFDE
  6503                           postdec2	equ	0xFDD
  6504                           fsr2h	equ	0xFDA
  6505                           fsr2l	equ	0xFD9
  6506                           status	equ	0xFD8
  6507                           
  6508 ;; *************** function _RF24N_write_to_pipe *****************
  6509 ;; Defined at:
  6510 ;;		line 1143 in file "../../RF24Network_cg.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;  node            2   41[COMRAM] unsigned int 
  6513 ;;  pipe            1   43[COMRAM] unsigned char 
  6514 ;;  multicast       1   44[COMRAM] unsigned char 
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;  out_pipe        5   45[COMRAM] unsigned char [5]
  6517 ;;  ok              1   50[COMRAM] unsigned char 
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  1    wreg      unsigned char 
  6520 ;; Registers used:
  6521 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6527 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6528 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6530 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6531 ;;Total ram usage:       10 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; Hardware stack levels required when called:    8
  6534 ;; This function calls:
  6535 ;;		_RF24N_pipe_address
  6536 ;;		_RF24_openWritingPipe_d
  6537 ;;		_RF24_setAutoAck_p
  6538 ;;		_RF24_stopListening
  6539 ;;		_RF24_txStandBy_t
  6540 ;;		_RF24_writeFast_m
  6541 ;; This function is called by:
  6542 ;;		_RF24N_write
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           	psect	text39
  6547  002B64                     __ptext39:
  6548                           	opt stack 0
  6549  002B64                     _RF24N_write_to_pipe:
  6550                           	opt stack 19
  6551                           
  6552                           ;RF24Network_cg.c: 1145: uint8_t ok = 0;
  6553                           
  6554                           ;incstack = 0
  6555  002B64  0E00               	movlw	0
  6556  002B66  6E33               	movwf	RF24N_write_to_pipe@ok,c
  6557                           
  6558                           ;RF24Network_cg.c: 1146: raddr_t out_pipe[5];
  6559                           ;RF24Network_cg.c: 1147: RF24N_pipe_address( node, pipe, out_pipe);
  6560  002B68  C02A  F003         	movff	RF24N_write_to_pipe@node,RF24N_pipe_address@node
  6561  002B6C  C02B  F004         	movff	RF24N_write_to_pipe@node+1,RF24N_pipe_address@node+1
  6562  002B70  C02C  F005         	movff	RF24N_write_to_pipe@pipe,RF24N_pipe_address@pipe
  6563  002B74  0E2E               	movlw	low RF24N_write_to_pipe@out_pipe
  6564  002B76  6E06               	movwf	RF24N_pipe_address@address,c
  6565  002B78  0E00               	movlw	high RF24N_write_to_pipe@out_pipe
  6566  002B7A  6E07               	movwf	RF24N_pipe_address@address+1,c
  6567  002B7C  ECBE  F011         	call	_RF24N_pipe_address	;wreg free
  6568                           
  6569                           ;RF24Network_cg.c: 1153: if(!(rn.networkFlags & 4)){
  6570  002B80  EE20  F0D0         	lfsr	2,_rn+42
  6571  002B84  A4DF               	btfss	indf2,2,c
  6572                           
  6573                           ;RF24Network_cg.c: 1154: RF24_stopListening();
  6574  002B86  EC51  F018         	call	_RF24_stopListening	;wreg free
  6575                           
  6576                           ;RF24Network_cg.c: 1155: }
  6577                           ;RF24Network_cg.c: 1157: if(multicast){ RF24_setAutoAck_p(0,0);}else{RF24_setAutoAck_p(0
      +                          ,1);}
  6578  002B8A  502D               	movf	RF24N_write_to_pipe@multicast,w,c
  6579  002B8C  B4D8               	btfsc	status,2,c
  6580  002B8E  D006               	goto	l5678
  6581  002B90  0E00               	movlw	0
  6582  002B92  6E15               	movwf	RF24_setAutoAck_p@enable,c
  6583  002B94  0E00               	movlw	0
  6584  002B96  ECDB  F018         	call	_RF24_setAutoAck_p
  6585  002B9A  D005               	goto	l5680
  6586  002B9C                     l5678:
  6587  002B9C  0E01               	movlw	1
  6588  002B9E  6E15               	movwf	RF24_setAutoAck_p@enable,c
  6589  002BA0  0E00               	movlw	0
  6590  002BA2  ECDB  F018         	call	_RF24_setAutoAck_p
  6591  002BA6                     l5680:
  6592                           
  6593                           ;RF24Network_cg.c: 1159: RF24_openWritingPipe_d(out_pipe);
  6594  002BA6  0E2E               	movlw	low RF24N_write_to_pipe@out_pipe
  6595  002BA8  6E15               	movwf	RF24_openWritingPipe_d@value_,c
  6596  002BAA  0E00               	movlw	high RF24N_write_to_pipe@out_pipe
  6597  002BAC  6E16               	movwf	RF24_openWritingPipe_d@value_+1,c
  6598  002BAE  EC7E  F017         	call	_RF24_openWritingPipe_d	;wreg free
  6599                           
  6600                           ;RF24Network_cg.c: 1161: ok = RF24_writeFast_m(rn.frame_buffer, rn.frame_size,0);
  6601  002BB2  0EAD               	movlw	low (_rn+7)
  6602  002BB4  6E25               	movwf	RF24_writeFast_m@buf,c
  6603  002BB6  0E00               	movlw	high (_rn+7)
  6604  002BB8  6E26               	movwf	RF24_writeFast_m@buf+1,c
  6605  002BBA  C0D8  F027         	movff	_rn+50,RF24_writeFast_m@len
  6606  002BBE  0E00               	movlw	0
  6607  002BC0  6E28               	movwf	RF24_writeFast_m@multicast,c
  6608  002BC2  EC27  F01A         	call	_RF24_writeFast_m	;wreg free
  6609  002BC6  6E33               	movwf	RF24N_write_to_pipe@ok,c
  6610                           
  6611                           ;RF24Network_cg.c: 1163: if(!(rn.networkFlags & 4)){
  6612  002BC8  EE20  F0D0         	lfsr	2,_rn+42
  6613  002BCC  B4DF               	btfsc	indf2,2,c
  6614  002BCE  D012               	goto	l5690
  6615                           
  6616                           ;RF24Network_cg.c: 1164: ok = RF24_txStandBy_t(rn.txTimeout,0);
  6617  002BD0  C0A7  F017         	movff	_rn+1,RF24_txStandBy_t@timeout
  6618  002BD4  C0A8  F018         	movff	_rn+2,RF24_txStandBy_t@timeout+1
  6619  002BD8  C0A9  F019         	movff	_rn+3,RF24_txStandBy_t@timeout+2
  6620  002BDC  C0AA  F01A         	movff	_rn+4,RF24_txStandBy_t@timeout+3
  6621  002BE0  0E00               	movlw	0
  6622  002BE2  6E1B               	movwf	RF24_txStandBy_t@startTx,c
  6623  002BE4  EC04  F015         	call	_RF24_txStandBy_t	;wreg free
  6624  002BE8  6E33               	movwf	RF24N_write_to_pipe@ok,c
  6625                           
  6626                           ;RF24Network_cg.c: 1165: RF24_setAutoAck_p(0,0);
  6627  002BEA  0E00               	movlw	0
  6628  002BEC  6E15               	movwf	RF24_setAutoAck_p@enable,c
  6629  002BEE  0E00               	movlw	0
  6630  002BF0  ECDB  F018         	call	_RF24_setAutoAck_p
  6631  002BF4                     l5690:
  6632                           
  6633                           ;RF24Network_cg.c: 1166: }
  6634                           ;RF24Network_cg.c: 1181: return ok;
  6635  002BF4  5033               	movf	RF24N_write_to_pipe@ok,w,c
  6636  002BF6  0012               	return	
  6637  002BF8                     __end_of_RF24N_write_to_pipe:
  6638                           	opt stack 0
  6639                           tblptru	equ	0xFF8
  6640                           tblptrh	equ	0xFF7
  6641                           tblptrl	equ	0xFF6
  6642                           tablat	equ	0xFF5
  6643                           prodh	equ	0xFF4
  6644                           prodl	equ	0xFF3
  6645                           intcon	equ	0xFF2
  6646                           indf0	equ	0xFEF
  6647                           postinc0	equ	0xFEE
  6648                           postdec0	equ	0xFED
  6649                           fsr0h	equ	0xFEA
  6650                           fsr0l	equ	0xFE9
  6651                           wreg	equ	0xFE8
  6652                           indf2	equ	0xFDF
  6653                           postinc2	equ	0xFDE
  6654                           postdec2	equ	0xFDD
  6655                           fsr2h	equ	0xFDA
  6656                           fsr2l	equ	0xFD9
  6657                           status	equ	0xFD8
  6658                           
  6659 ;; *************** function _RF24_writeFast_m *****************
  6660 ;; Defined at:
  6661 ;;		line 909 in file "../../../RF24_c/RF24_cg.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;  buf             2   36[COMRAM] PTR const void 
  6664 ;;		 -> rn.frame_buffer(32), rn(370), 
  6665 ;;  len             1   38[COMRAM] unsigned char 
  6666 ;;  multicast       1   39[COMRAM] const unsigned char 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;		None
  6669 ;; Return value:  Size  Location     Type
  6670 ;;                  1    wreg      unsigned char 
  6671 ;; Registers used:
  6672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6678 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6680 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6681 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6682 ;;Total ram usage:        5 bytes
  6683 ;; Hardware stack levels used:    1
  6684 ;; Hardware stack levels required when called:    6
  6685 ;; This function calls:
  6686 ;;		_RF24_get_status
  6687 ;;		_RF24_startFastWrite
  6688 ;;		_RF24_write_register_d
  6689 ;; This function is called by:
  6690 ;;		_RF24N_write_to_pipe
  6691 ;;		_RF24_writeFast
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695                           	psect	text40
  6696  00344E                     __ptext40:
  6697                           	opt stack 0
  6698  00344E                     _RF24_writeFast_m:
  6699                           	opt stack 20
  6700                           
  6701                           ;RF24_cg.c: 920: while( ( RF24_get_status() & ( (1<<(0)) ))) {
  6702                           
  6703                           ;incstack = 0
  6704  00344E  D00C               	goto	l5456
  6705  003450                     l5448:
  6706                           
  6707                           ;RF24_cg.c: 922: if( RF24_get_status() & (1<<(4))){
  6708  003450  EC89  F01C         	call	_RF24_get_status	;wreg free
  6709  003454  6E29               	movwf	??_RF24_writeFast_m& (0+255),c
  6710  003456  A829               	btfss	??_RF24_writeFast_m,4,c
  6711  003458  D007               	goto	l5456
  6712                           
  6713                           ;RF24_cg.c: 924: RF24_write_register_d(0x07,(1<<(4)) );
  6714  00345A  0E10               	movlw	16
  6715  00345C  6E12               	movwf	RF24_write_register_d@value,c
  6716  00345E  0E07               	movlw	7
  6717  003460  ECE9  F01B         	call	_RF24_write_register_d
  6718                           
  6719                           ;RF24_cg.c: 925: return 0;
  6720  003464  0E00               	movlw	0
  6721  003466  0012               	return	
  6722  003468                     l5456:
  6723  003468  EC89  F01C         	call	_RF24_get_status	;wreg free
  6724  00346C  6E29               	movwf	??_RF24_writeFast_m& (0+255),c
  6725  00346E  B029               	btfsc	??_RF24_writeFast_m,0,c
  6726  003470  D7EF               	goto	l5448
  6727                           
  6728                           ;RF24_cg.c: 927: }
  6729                           ;RF24_cg.c: 936: }
  6730                           ;RF24_cg.c: 938: RF24_startFastWrite(buf,len,multicast,1);
  6731  003472  C025  F01E         	movff	RF24_writeFast_m@buf,RF24_startFastWrite@buf
  6732  003476  C026  F01F         	movff	RF24_writeFast_m@buf+1,RF24_startFastWrite@buf+1
  6733  00347A  C027  F020         	movff	RF24_writeFast_m@len,RF24_startFastWrite@len
  6734  00347E  C028  F021         	movff	RF24_writeFast_m@multicast,RF24_startFastWrite@multicast
  6735  003482  0E01               	movlw	1
  6736  003484  6E22               	movwf	RF24_startFastWrite@startTx,c
  6737  003486  EC83  F01A         	call	_RF24_startFastWrite	;wreg free
  6738                           
  6739                           ;RF24_cg.c: 940: return 1;
  6740  00348A  0E01               	movlw	1
  6741  00348C  0012               	return	
  6742  00348E                     __end_of_RF24_writeFast_m:
  6743                           	opt stack 0
  6744                           tblptru	equ	0xFF8
  6745                           tblptrh	equ	0xFF7
  6746                           tblptrl	equ	0xFF6
  6747                           tablat	equ	0xFF5
  6748                           prodh	equ	0xFF4
  6749                           prodl	equ	0xFF3
  6750                           intcon	equ	0xFF2
  6751                           indf0	equ	0xFEF
  6752                           postinc0	equ	0xFEE
  6753                           postdec0	equ	0xFED
  6754                           fsr0h	equ	0xFEA
  6755                           fsr0l	equ	0xFE9
  6756                           wreg	equ	0xFE8
  6757                           indf2	equ	0xFDF
  6758                           postinc2	equ	0xFDE
  6759                           postdec2	equ	0xFDD
  6760                           fsr2h	equ	0xFDA
  6761                           fsr2l	equ	0xFD9
  6762                           status	equ	0xFD8
  6763                           
  6764 ;; *************** function _RF24_startFastWrite *****************
  6765 ;; Defined at:
  6766 ;;		line 954 in file "../../../RF24_c/RF24_cg.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;  buf             2   29[COMRAM] PTR const void 
  6769 ;;		 -> rn.frame_buffer(32), rn(370), 
  6770 ;;  len             1   31[COMRAM] unsigned char 
  6771 ;;  multicast       1   32[COMRAM] const unsigned char 
  6772 ;;  startTx         1   33[COMRAM] unsigned char 
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;		None
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  1    wreg      void 
  6777 ;; Registers used:
  6778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6784 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6785 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6787 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6788 ;;Total ram usage:        7 bytes
  6789 ;; Hardware stack levels used:    1
  6790 ;; Hardware stack levels required when called:    5
  6791 ;; This function calls:
  6792 ;;		_RF24_ce_d
  6793 ;;		_RF24_write_payload
  6794 ;; This function is called by:
  6795 ;;		_RF24_writeFast_m
  6796 ;;		_RF24_write_m
  6797 ;;		_RF24_writeBlocking
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	text41
  6802  003506                     __ptext41:
  6803                           	opt stack 0
  6804  003506                     _RF24_startFastWrite:
  6805                           	opt stack 20
  6806                           
  6807                           ;RF24_cg.c: 957: RF24_write_payload( buf, len,multicast ? 0xB0 : 0xA0 ) ;
  6808                           
  6809                           ;incstack = 0
  6810  003506  5021               	movf	RF24_startFastWrite@multicast,w,c
  6811  003508  A4D8               	btfss	status,2,c
  6812  00350A  D004               	goto	l5274
  6813  00350C  0E00               	movlw	0
  6814  00350E  6E24               	movwf	_RF24_startFastWrite$2366+1,c
  6815  003510  0EA0               	movlw	160
  6816  003512  D003               	goto	L3
  6817  003514                     l5274:
  6818  003514  0E00               	movlw	0
  6819  003516  6E24               	movwf	_RF24_startFastWrite$2366+1,c
  6820  003518  0EB0               	movlw	176
  6821  00351A                     L3:
  6822  00351A  6E23               	movwf	_RF24_startFastWrite$2366,c
  6823  00351C  C01E  F010         	movff	RF24_startFastWrite@buf,RF24_write_payload@buf
  6824  003520  C01F  F011         	movff	RF24_startFastWrite@buf+1,RF24_write_payload@buf+1
  6825  003524  C020  F012         	movff	RF24_startFastWrite@len,RF24_write_payload@data_len
  6826  003528  C023  F013         	movff	_RF24_startFastWrite$2366,RF24_write_payload@writeType
  6827  00352C  ECFC  F015         	call	_RF24_write_payload	;wreg free
  6828                           
  6829                           ;RF24_cg.c: 958: if(startTx){
  6830  003530  5022               	movf	RF24_startFastWrite@startTx,w,c
  6831  003532  B4D8               	btfsc	status,2,c
  6832  003534  0012               	return	
  6833                           
  6834                           ;RF24_cg.c: 959: RF24_ce_d(1);
  6835  003536  0E01               	movlw	1
  6836  003538  EC52  F01C         	call	_RF24_ce_d
  6837  00353C  0012               	return	
  6838  00353E                     __end_of_RF24_startFastWrite:
  6839                           	opt stack 0
  6840                           tblptru	equ	0xFF8
  6841                           tblptrh	equ	0xFF7
  6842                           tblptrl	equ	0xFF6
  6843                           tablat	equ	0xFF5
  6844                           prodh	equ	0xFF4
  6845                           prodl	equ	0xFF3
  6846                           intcon	equ	0xFF2
  6847                           indf0	equ	0xFEF
  6848                           postinc0	equ	0xFEE
  6849                           postdec0	equ	0xFED
  6850                           fsr0h	equ	0xFEA
  6851                           fsr0l	equ	0xFE9
  6852                           wreg	equ	0xFE8
  6853                           indf2	equ	0xFDF
  6854                           postinc2	equ	0xFDE
  6855                           postdec2	equ	0xFDD
  6856                           fsr2h	equ	0xFDA
  6857                           fsr2l	equ	0xFD9
  6858                           status	equ	0xFD8
  6859                           
  6860 ;; *************** function _RF24_write_payload *****************
  6861 ;; Defined at:
  6862 ;;		line 224 in file "../../../RF24_c/RF24_cg.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;  buf             2   15[COMRAM] PTR const void 
  6865 ;;		 -> rn.frame_buffer(32), rn(370), 
  6866 ;;  data_len        1   17[COMRAM] unsigned char 
  6867 ;;  writeType       1   18[COMRAM] const unsigned char 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  current         2   23[COMRAM] PTR const unsigned char 
  6870 ;;		 -> rn.frame_buffer(32), rn(370), 
  6871 ;;  blank_len       1   22[COMRAM] unsigned char 
  6872 ;;  status          1   21[COMRAM] unsigned char 
  6873 ;; Return value:  Size  Location     Type
  6874 ;;                  1    wreg      unsigned char 
  6875 ;; Registers used:
  6876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6877 ;; Tracked objects:
  6878 ;;		On entry : 0/0
  6879 ;;		On exit  : 0/0
  6880 ;;		Unchanged: 0/0
  6881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6883 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6885 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6886 ;;Total ram usage:       14 bytes
  6887 ;; Hardware stack levels used:    1
  6888 ;; Hardware stack levels required when called:    4
  6889 ;; This function calls:
  6890 ;;		_RF24_beginTransaction
  6891 ;;		_RF24_endTransaction
  6892 ;;		_SPI_transfer
  6893 ;; This function is called by:
  6894 ;;		_RF24_startFastWrite
  6895 ;;		_RF24_startWrite
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text42
  6900  002BF8                     __ptext42:
  6901                           	opt stack 0
  6902  002BF8                     _RF24_write_payload:
  6903                           	opt stack 20
  6904                           
  6905                           ;RF24_cg.c: 226: uint8_t status;
  6906                           ;RF24_cg.c: 227: const uint8_t* current = (const uint8_t*)(buf);
  6907                           
  6908                           ;incstack = 0
  6909  002BF8  C010  F018         	movff	RF24_write_payload@buf,RF24_write_payload@current
  6910  002BFC  C011  F019         	movff	RF24_write_payload@buf+1,RF24_write_payload@current+1
  6911                           
  6912                           ;RF24_cg.c: 228: uint8_t blank_len;
  6913                           ;RF24_cg.c: 230: data_len = (data_len<rf.payload_size?data_len:rf.payload_size);
  6914  002C00  5042               	movf	_rf+5,w,c
  6915  002C02  5C12               	subwf	RF24_write_payload@data_len,w,c
  6916  002C04  A0D8               	btfss	status,0,c
  6917  002C06  D003               	goto	l685
  6918  002C08  C042  F01A         	movff	_rf+5,_RF24_write_payload$2292
  6919  002C0C  D002               	goto	L4
  6920  002C0E                     l685:
  6921  002C0E  C012  F01A         	movff	RF24_write_payload@data_len,_RF24_write_payload$2292
  6922  002C12                     L4:
  6923  002C12  6A1B               	clrf	_RF24_write_payload$2292+1,c
  6924  002C14  C01A  F012         	movff	_RF24_write_payload$2292,RF24_write_payload@data_len
  6925                           
  6926                           ;RF24_cg.c: 231: blank_len = rf.dynamic_payloads_enabled ? 0 : rf.payload_size - data_le
      +                          n;
  6927  002C18  5043               	movf	_rf+6,w,c
  6928  002C1A  A4D8               	btfss	status,2,c
  6929  002C1C  D00E               	goto	l5166
  6930  002C1E  5012               	movf	RF24_write_payload@data_len,w,c
  6931  002C20  6E14               	movwf	??_RF24_write_payload& (0+255),c
  6932  002C22  6A15               	clrf	(??_RF24_write_payload+1)& (0+255),c
  6933  002C24  1E14               	comf	??_RF24_write_payload,f,c
  6934  002C26  1E15               	comf	??_RF24_write_payload+1,f,c
  6935  002C28  4A14               	infsnz	??_RF24_write_payload,f,c
  6936  002C2A  2A15               	incf	??_RF24_write_payload+1,f,c
  6937  002C2C  5042               	movf	_rf+5,w,c
  6938  002C2E  2414               	addwf	??_RF24_write_payload,w,c
  6939  002C30  6E1C               	movwf	_RF24_write_payload$2293,c
  6940  002C32  0E00               	movlw	0
  6941  002C34  2015               	addwfc	??_RF24_write_payload+1,w,c
  6942  002C36  6E1D               	movwf	_RF24_write_payload$2293+1,c
  6943  002C38  D004               	goto	l5168
  6944  002C3A                     l5166:
  6945  002C3A  0E00               	movlw	0
  6946  002C3C  6E1D               	movwf	_RF24_write_payload$2293+1,c
  6947  002C3E  0E00               	movlw	0
  6948  002C40  6E1C               	movwf	_RF24_write_payload$2293,c
  6949  002C42                     l5168:
  6950  002C42  C01C  F017         	movff	_RF24_write_payload$2293,RF24_write_payload@blank_len
  6951                           
  6952                           ;RF24_cg.c: 234: ;
  6953                           ;RF24_cg.c: 255: RF24_beginTransaction();
  6954  002C46  EC91  F01C         	call	_RF24_beginTransaction	;wreg free
  6955                           
  6956                           ;RF24_cg.c: 256: status = SPI_transfer( writeType );
  6957  002C4A  5013               	movf	RF24_write_payload@writeType,w,c
  6958  002C4C  EC70  F01C         	call	_SPI_transfer
  6959  002C50  6E16               	movwf	RF24_write_payload@status,c
  6960                           
  6961                           ;RF24_cg.c: 257: while ( data_len-- ) {
  6962  002C52  D009               	goto	l5178
  6963  002C54                     l5174:
  6964                           
  6965                           ;RF24_cg.c: 258: SPI_transfer(*current++);
  6966  002C54  C018  FFD9         	movff	RF24_write_payload@current,fsr2l
  6967  002C58  C019  FFDA         	movff	RF24_write_payload@current+1,fsr2h
  6968  002C5C  50DF               	movf	indf2,w,c
  6969  002C5E  EC70  F01C         	call	_SPI_transfer
  6970  002C62  4A18               	infsnz	RF24_write_payload@current,f,c
  6971  002C64  2A19               	incf	RF24_write_payload@current+1,f,c
  6972  002C66                     l5178:
  6973  002C66  0612               	decf	RF24_write_payload@data_len,f,c
  6974  002C68  2812               	incf	RF24_write_payload@data_len,w,c
  6975  002C6A  B4D8               	btfsc	status,2,c
  6976  002C6C  D004               	goto	l5182
  6977  002C6E  D7F2               	goto	l5174
  6978  002C70                     l5180:
  6979                           
  6980                           ;RF24_cg.c: 261: SPI_transfer(0);
  6981  002C70  0E00               	movlw	0
  6982  002C72  EC70  F01C         	call	_SPI_transfer
  6983  002C76                     l5182:
  6984  002C76  0617               	decf	RF24_write_payload@blank_len,f,c
  6985  002C78  2817               	incf	RF24_write_payload@blank_len,w,c
  6986  002C7A  A4D8               	btfss	status,2,c
  6987  002C7C  D7F9               	goto	l5180
  6988                           
  6989                           ;RF24_cg.c: 262: }
  6990                           ;RF24_cg.c: 263: RF24_endTransaction();
  6991  002C7E  EC8D  F01C         	call	_RF24_endTransaction	;wreg free
  6992  002C82  0012               	return	
  6993  002C84                     __end_of_RF24_write_payload:
  6994                           	opt stack 0
  6995                           tblptru	equ	0xFF8
  6996                           tblptrh	equ	0xFF7
  6997                           tblptrl	equ	0xFF6
  6998                           tablat	equ	0xFF5
  6999                           prodh	equ	0xFF4
  7000                           prodl	equ	0xFF3
  7001                           intcon	equ	0xFF2
  7002                           indf0	equ	0xFEF
  7003                           postinc0	equ	0xFEE
  7004                           postdec0	equ	0xFED
  7005                           fsr0h	equ	0xFEA
  7006                           fsr0l	equ	0xFE9
  7007                           wreg	equ	0xFE8
  7008                           indf2	equ	0xFDF
  7009                           postinc2	equ	0xFDE
  7010                           postdec2	equ	0xFDD
  7011                           fsr2h	equ	0xFDA
  7012                           fsr2l	equ	0xFD9
  7013                           status	equ	0xFD8
  7014                           
  7015 ;; *************** function _RF24_txStandBy_t *****************
  7016 ;; Defined at:
  7017 ;;		line 1018 in file "../../../RF24_c/RF24_cg.c"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;  timeout         4   22[COMRAM] unsigned long 
  7020 ;;  startTx         1   26[COMRAM] unsigned char 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  start           4   35[COMRAM] unsigned long 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  1    wreg      unsigned char 
  7025 ;; Registers used:
  7026 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7032 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7033 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7034 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7035 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7036 ;;Total ram usage:       17 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:    7
  7039 ;; This function calls:
  7040 ;;		_RF24_ce_d
  7041 ;;		_RF24_flush_tx
  7042 ;;		_RF24_get_status
  7043 ;;		_RF24_read_register_d
  7044 ;;		_RF24_stopListening
  7045 ;;		_RF24_write_register_d
  7046 ;;		_millis
  7047 ;; This function is called by:
  7048 ;;		_RF24N_write
  7049 ;;		_RF24N_write_to_pipe
  7050 ;;		_RF24N_write_
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054                           	psect	text43
  7055  002A08                     __ptext43:
  7056                           	opt stack 0
  7057  002A08                     _RF24_txStandBy_t:
  7058                           	opt stack 20
  7059                           
  7060                           ;RF24_cg.c: 1019: uint32_t start;
  7061                           ;RF24_cg.c: 1021: if(startTx){
  7062                           
  7063                           ;incstack = 0
  7064  002A08  501B               	movf	RF24_txStandBy_t@startTx,w,c
  7065  002A0A  B4D8               	btfsc	status,2,c
  7066  002A0C  D005               	goto	l5392
  7067                           
  7068                           ;RF24_cg.c: 1022: RF24_stopListening();
  7069  002A0E  EC51  F018         	call	_RF24_stopListening	;wreg free
  7070                           
  7071                           ;RF24_cg.c: 1023: RF24_ce_d(1);
  7072  002A12  0E01               	movlw	1
  7073  002A14  EC52  F01C         	call	_RF24_ce_d
  7074  002A18                     l5392:
  7075                           
  7076                           ;RF24_cg.c: 1024: }
  7077                           ;RF24_cg.c: 1026: start = millis();
  7078  002A18  EC67  F01C         	call	_millis	;wreg free
  7079  002A1C  C003  F024         	movff	?_millis,RF24_txStandBy_t@start
  7080  002A20  C004  F025         	movff	?_millis+1,RF24_txStandBy_t@start+1
  7081  002A24  C005  F026         	movff	?_millis+2,RF24_txStandBy_t@start+2
  7082  002A28  C006  F027         	movff	?_millis+3,RF24_txStandBy_t@start+3
  7083                           
  7084                           ;RF24_cg.c: 1028: while( ! (RF24_read_register_d(0x17) & (1<<(4))) ){
  7085  002A2C  D040               	goto	l5404
  7086  002A2E                     l5394:
  7087                           
  7088                           ;RF24_cg.c: 1029: if( RF24_get_status() & (1<<(4))){
  7089  002A2E  EC89  F01C         	call	_RF24_get_status	;wreg free
  7090  002A32  6E1C               	movwf	??_RF24_txStandBy_t& (0+255),c
  7091  002A34  A81C               	btfss	??_RF24_txStandBy_t,4,c
  7092  002A36  D03B               	goto	l5404
  7093                           
  7094                           ;RF24_cg.c: 1030: RF24_write_register_d(0x07,(1<<(4)) );
  7095  002A38  0E10               	movlw	16
  7096  002A3A  6E12               	movwf	RF24_write_register_d@value,c
  7097  002A3C  0E07               	movlw	7
  7098  002A3E  ECE9  F01B         	call	_RF24_write_register_d
  7099                           
  7100                           ;RF24_cg.c: 1031: RF24_ce_d(0);
  7101  002A42  0E00               	movlw	0
  7102  002A44  EC52  F01C         	call	_RF24_ce_d
  7103                           
  7104                           ;RF24_cg.c: 1032: RF24_ce_d(1);
  7105  002A48  0E01               	movlw	1
  7106  002A4A  EC52  F01C         	call	_RF24_ce_d
  7107                           
  7108                           ;RF24_cg.c: 1033: if(millis() - start >= timeout){
  7109  002A4E  C024  F01C         	movff	RF24_txStandBy_t@start,??_RF24_txStandBy_t
  7110  002A52  C025  F01D         	movff	RF24_txStandBy_t@start+1,??_RF24_txStandBy_t+1
  7111  002A56  C026  F01E         	movff	RF24_txStandBy_t@start+2,??_RF24_txStandBy_t+2
  7112  002A5A  C027  F01F         	movff	RF24_txStandBy_t@start+3,??_RF24_txStandBy_t+3
  7113  002A5E  1E1C               	comf	??_RF24_txStandBy_t,f,c
  7114  002A60  1E1D               	comf	??_RF24_txStandBy_t+1,f,c
  7115  002A62  1E1E               	comf	??_RF24_txStandBy_t+2,f,c
  7116  002A64  1E1F               	comf	??_RF24_txStandBy_t+3,f,c
  7117  002A66  2A1C               	incf	??_RF24_txStandBy_t,f,c
  7118  002A68  0E00               	movlw	0
  7119  002A6A  221D               	addwfc	??_RF24_txStandBy_t+1,f,c
  7120  002A6C  221E               	addwfc	??_RF24_txStandBy_t+2,f,c
  7121  002A6E  221F               	addwfc	??_RF24_txStandBy_t+3,f,c
  7122  002A70  EC67  F01C         	call	_millis	;wreg free
  7123  002A74  501C               	movf	??_RF24_txStandBy_t,w,c
  7124  002A76  2403               	addwf	?_millis,w,c
  7125  002A78  6E20               	movwf	(??_RF24_txStandBy_t+4)& (0+255),c
  7126  002A7A  501D               	movf	??_RF24_txStandBy_t+1,w,c
  7127  002A7C  2004               	addwfc	?_millis+1,w,c
  7128  002A7E  6E21               	movwf	(??_RF24_txStandBy_t+5)& (0+255),c
  7129  002A80  501E               	movf	??_RF24_txStandBy_t+2,w,c
  7130  002A82  2005               	addwfc	?_millis+2,w,c
  7131  002A84  6E22               	movwf	(??_RF24_txStandBy_t+6)& (0+255),c
  7132  002A86  501F               	movf	??_RF24_txStandBy_t+3,w,c
  7133  002A88  2006               	addwfc	?_millis+3,w,c
  7134  002A8A  6E23               	movwf	(??_RF24_txStandBy_t+7)& (0+255),c
  7135  002A8C  5017               	movf	RF24_txStandBy_t@timeout,w,c
  7136  002A8E  5C20               	subwf	??_RF24_txStandBy_t+4,w,c
  7137  002A90  5018               	movf	RF24_txStandBy_t@timeout+1,w,c
  7138  002A92  5821               	subwfb	??_RF24_txStandBy_t+5,w,c
  7139  002A94  5019               	movf	RF24_txStandBy_t@timeout+2,w,c
  7140  002A96  5822               	subwfb	??_RF24_txStandBy_t+6,w,c
  7141  002A98  501A               	movf	RF24_txStandBy_t@timeout+3,w,c
  7142  002A9A  5823               	subwfb	??_RF24_txStandBy_t+7,w,c
  7143  002A9C  A0D8               	btfss	status,0,c
  7144  002A9E  D007               	goto	l5404
  7145                           
  7146                           ;RF24_cg.c: 1034: RF24_ce_d(0); RF24_flush_tx();; return 0;
  7147  002AA0  0E00               	movlw	0
  7148  002AA2  EC52  F01C         	call	_RF24_ce_d
  7149  002AA6  EC95  F01C         	call	_RF24_flush_tx	;wreg free
  7150  002AAA  0E00               	movlw	0
  7151  002AAC  0012               	return	
  7152  002AAE                     l5404:
  7153  002AAE  0E17               	movlw	23
  7154  002AB0  ECF9  F01B         	call	_RF24_read_register_d
  7155  002AB4  6E1C               	movwf	??_RF24_txStandBy_t& (0+255),c
  7156  002AB6  A81C               	btfss	??_RF24_txStandBy_t,4,c
  7157  002AB8  D7BA               	goto	l5394
  7158                           
  7159                           ;RF24_cg.c: 1035: }
  7160                           ;RF24_cg.c: 1036: }
  7161                           ;RF24_cg.c: 1045: }
  7162                           ;RF24_cg.c: 1048: RF24_ce_d(0);
  7163  002ABA  0E00               	movlw	0
  7164  002ABC  EC52  F01C         	call	_RF24_ce_d
  7165                           
  7166                           ;RF24_cg.c: 1049: return 1;
  7167  002AC0  0E01               	movlw	1
  7168  002AC2  0012               	return	
  7169  002AC4                     __end_of_RF24_txStandBy_t:
  7170                           	opt stack 0
  7171                           tblptru	equ	0xFF8
  7172                           tblptrh	equ	0xFF7
  7173                           tblptrl	equ	0xFF6
  7174                           tablat	equ	0xFF5
  7175                           prodh	equ	0xFF4
  7176                           prodl	equ	0xFF3
  7177                           intcon	equ	0xFF2
  7178                           indf0	equ	0xFEF
  7179                           postinc0	equ	0xFEE
  7180                           postdec0	equ	0xFED
  7181                           fsr0h	equ	0xFEA
  7182                           fsr0l	equ	0xFE9
  7183                           wreg	equ	0xFE8
  7184                           indf2	equ	0xFDF
  7185                           postinc2	equ	0xFDE
  7186                           postdec2	equ	0xFDD
  7187                           fsr2h	equ	0xFDA
  7188                           fsr2l	equ	0xFD9
  7189                           status	equ	0xFD8
  7190                           
  7191 ;; *************** function _RF24_setAutoAck_p *****************
  7192 ;; Defined at:
  7193 ;;		line 1387 in file "../../../RF24_c/RF24_cg.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;  pipe            1    wreg     unsigned char 
  7196 ;;  enable          1   20[COMRAM] unsigned char 
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;  pipe            1   24[COMRAM] unsigned char 
  7199 ;;  en_aa           1   23[COMRAM] unsigned char 
  7200 ;; Return value:  Size  Location     Type
  7201 ;;                  1    wreg      void 
  7202 ;; Registers used:
  7203 ;;		wreg, status,2, status,0, cstack
  7204 ;; Tracked objects:
  7205 ;;		On entry : 0/0
  7206 ;;		On exit  : 0/0
  7207 ;;		Unchanged: 0/0
  7208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7209 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7210 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7211 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7212 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7213 ;;Total ram usage:        5 bytes
  7214 ;; Hardware stack levels used:    1
  7215 ;; Hardware stack levels required when called:    5
  7216 ;; This function calls:
  7217 ;;		_RF24_read_register_d
  7218 ;;		_RF24_write_register_d
  7219 ;; This function is called by:
  7220 ;;		_RF24N_begin_d
  7221 ;;		_RF24N_write
  7222 ;;		_RF24N_write_to_pipe
  7223 ;;		_RF24N_write_
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227                           	psect	text44
  7228  0031B6                     __ptext44:
  7229                           	opt stack 0
  7230  0031B6                     _RF24_setAutoAck_p:
  7231                           	opt stack 23
  7232                           
  7233                           ;incstack = 0
  7234                           ;RF24_setAutoAck_p@pipe stored from wreg
  7235  0031B6  6E19               	movwf	RF24_setAutoAck_p@pipe,c
  7236                           
  7237                           ;RF24_cg.c: 1389: if ( pipe <= 6 )
  7238  0031B8  0E07               	movlw	7
  7239  0031BA  6019               	cpfslt	RF24_setAutoAck_p@pipe,c
  7240  0031BC  0012               	return	
  7241                           
  7242                           ;RF24_cg.c: 1390: {
  7243                           ;RF24_cg.c: 1391: uint8_t en_aa = RF24_read_register_d( 0x01 ) ;
  7244  0031BE  0E01               	movlw	1
  7245  0031C0  ECF9  F01B         	call	_RF24_read_register_d
  7246  0031C4  6E18               	movwf	RF24_setAutoAck_p@en_aa,c
  7247                           
  7248                           ;RF24_cg.c: 1392: if( enable )
  7249  0031C6  5015               	movf	RF24_setAutoAck_p@enable,w,c
  7250  0031C8  B4D8               	btfsc	status,2,c
  7251  0031CA  D00D               	goto	l5300
  7252                           
  7253                           ;RF24_cg.c: 1393: {
  7254                           ;RF24_cg.c: 1394: en_aa |= (1<<(pipe)) ;
  7255  0031CC  C019  F016         	movff	RF24_setAutoAck_p@pipe,??_RF24_setAutoAck_p
  7256  0031D0  0E01               	movlw	1
  7257  0031D2  6E17               	movwf	(??_RF24_setAutoAck_p+1)& (0+255),c
  7258  0031D4  2A16               	incf	??_RF24_setAutoAck_p,f,c
  7259  0031D6  D002               	goto	u6814
  7260  0031D8                     u6815:
  7261  0031D8  90D8               	bcf	status,0,c
  7262  0031DA  3617               	rlcf	??_RF24_setAutoAck_p+1,f,c
  7263  0031DC                     u6814:
  7264  0031DC  2E16               	decfsz	??_RF24_setAutoAck_p,f,c
  7265  0031DE  D7FC               	goto	u6815
  7266  0031E0  5017               	movf	??_RF24_setAutoAck_p+1,w,c
  7267  0031E2  1218               	iorwf	RF24_setAutoAck_p@en_aa,f,c
  7268                           
  7269                           ;RF24_cg.c: 1395: }
  7270  0031E4  D00D               	goto	l5302
  7271  0031E6                     l5300:
  7272                           
  7273                           ;RF24_cg.c: 1396: else
  7274                           ;RF24_cg.c: 1397: {
  7275                           ;RF24_cg.c: 1398: en_aa &= ~(1<<(pipe)) ;
  7276  0031E6  C019  F016         	movff	RF24_setAutoAck_p@pipe,??_RF24_setAutoAck_p
  7277  0031EA  0E01               	movlw	1
  7278  0031EC  6E17               	movwf	(??_RF24_setAutoAck_p+1)& (0+255),c
  7279  0031EE  2A16               	incf	??_RF24_setAutoAck_p,f,c
  7280  0031F0  D002               	goto	u6824
  7281  0031F2                     u6825:
  7282  0031F2  90D8               	bcf	status,0,c
  7283  0031F4  3617               	rlcf	??_RF24_setAutoAck_p+1,f,c
  7284  0031F6                     u6824:
  7285  0031F6  2E16               	decfsz	??_RF24_setAutoAck_p,f,c
  7286  0031F8  D7FC               	goto	u6825
  7287  0031FA  5017               	movf	??_RF24_setAutoAck_p+1,w,c
  7288  0031FC  0AFF               	xorlw	255
  7289  0031FE  1618               	andwf	RF24_setAutoAck_p@en_aa,f,c
  7290  003200                     l5302:
  7291                           
  7292                           ;RF24_cg.c: 1399: }
  7293                           ;RF24_cg.c: 1400: RF24_write_register_d( 0x01, en_aa ) ;
  7294  003200  C018  F012         	movff	RF24_setAutoAck_p@en_aa,RF24_write_register_d@value
  7295  003204  0E01               	movlw	1
  7296  003206  ECE9  F01B         	call	_RF24_write_register_d
  7297  00320A  0012               	return	
  7298  00320C                     __end_of_RF24_setAutoAck_p:
  7299                           	opt stack 0
  7300                           tblptru	equ	0xFF8
  7301                           tblptrh	equ	0xFF7
  7302                           tblptrl	equ	0xFF6
  7303                           tablat	equ	0xFF5
  7304                           prodh	equ	0xFF4
  7305                           prodl	equ	0xFF3
  7306                           intcon	equ	0xFF2
  7307                           indf0	equ	0xFEF
  7308                           postinc0	equ	0xFEE
  7309                           postdec0	equ	0xFED
  7310                           fsr0h	equ	0xFEA
  7311                           fsr0l	equ	0xFE9
  7312                           wreg	equ	0xFE8
  7313                           indf2	equ	0xFDF
  7314                           postinc2	equ	0xFDE
  7315                           postdec2	equ	0xFDD
  7316                           fsr2h	equ	0xFDA
  7317                           fsr2l	equ	0xFD9
  7318                           status	equ	0xFD8
  7319                           
  7320 ;; *************** function _RF24_openWritingPipe_d *****************
  7321 ;; Defined at:
  7322 ;;		line 1144 in file "../../../RF24_c/RF24_cg.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  value_          2   20[COMRAM] PTR const unsigned char 
  7325 ;;		 -> RF24N_write_to_pipe@out_pipe(5), 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;  value           5   24[COMRAM] unsigned char [5]
  7328 ;;  i               1   29[COMRAM] unsigned char 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  1    wreg      void 
  7331 ;; Registers used:
  7332 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7339 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7341 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7342 ;;Total ram usage:       10 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:    5
  7345 ;; This function calls:
  7346 ;;		_RF24_write_register_c_d
  7347 ;;		_RF24_write_register_d
  7348 ;; This function is called by:
  7349 ;;		_RF24N_write_to_pipe
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           	psect	text45
  7354  002EFC                     __ptext45:
  7355                           	opt stack 0
  7356  002EFC                     _RF24_openWritingPipe_d:
  7357                           	opt stack 21
  7358                           
  7359                           ;RF24_cg.c: 1146: uint8_t i;
  7360                           ;RF24_cg.c: 1147: raddr_t value[5];
  7361                           ;RF24_cg.c: 1148: for(i=0;i<5;i++)
  7362                           
  7363                           ;incstack = 0
  7364  002EFC  0E00               	movlw	0
  7365  002EFE  6E1E               	movwf	RF24_openWritingPipe_d@i,c
  7366  002F00                     l5432:
  7367  002F00  0E04               	movlw	4
  7368  002F02  641E               	cpfsgt	RF24_openWritingPipe_d@i,c
  7369  002F04  D001               	goto	l5436
  7370  002F06  D01D               	goto	l5442
  7371  002F08                     l5436:
  7372                           
  7373                           ;RF24_cg.c: 1149: {
  7374                           ;RF24_cg.c: 1150: value[i]=value_[4-i];
  7375  002F08  501E               	movf	RF24_openWritingPipe_d@i,w,c
  7376  002F0A  6E17               	movwf	??_RF24_openWritingPipe_d& (0+255),c
  7377  002F0C  6A18               	clrf	(??_RF24_openWritingPipe_d+1)& (0+255),c
  7378  002F0E  1E17               	comf	??_RF24_openWritingPipe_d,f,c
  7379  002F10  1E18               	comf	??_RF24_openWritingPipe_d+1,f,c
  7380  002F12  4A17               	infsnz	??_RF24_openWritingPipe_d,f,c
  7381  002F14  2A18               	incf	??_RF24_openWritingPipe_d+1,f,c
  7382  002F16  0E04               	movlw	4
  7383  002F18  2617               	addwf	??_RF24_openWritingPipe_d,f,c
  7384  002F1A  0E00               	movlw	0
  7385  002F1C  2218               	addwfc	??_RF24_openWritingPipe_d+1,f,c
  7386  002F1E  5017               	movf	??_RF24_openWritingPipe_d,w,c
  7387  002F20  2415               	addwf	RF24_openWritingPipe_d@value_,w,c
  7388  002F22  6ED9               	movwf	fsr2l,c
  7389  002F24  5018               	movf	??_RF24_openWritingPipe_d+1,w,c
  7390  002F26  2016               	addwfc	RF24_openWritingPipe_d@value_+1,w,c
  7391  002F28  6EDA               	movwf	fsr2h,c
  7392  002F2A  501E               	movf	RF24_openWritingPipe_d@i,w,c
  7393  002F2C  0D01               	mullw	1
  7394  002F2E  0E19               	movlw	low RF24_openWritingPipe_d@value
  7395  002F30  24F3               	addwf	prodl,w,c
  7396  002F32  6EE9               	movwf	fsr0l,c
  7397  002F34  0E00               	movlw	high RF24_openWritingPipe_d@value
  7398  002F36  20F4               	addwfc	prodh,w,c
  7399  002F38  6EEA               	movwf	fsr0h,c
  7400  002F3A  CFDF FFEF          	movff	indf2,indf0
  7401  002F3E  2A1E               	incf	RF24_openWritingPipe_d@i,f,c
  7402  002F40  D7DF               	goto	l5432
  7403  002F42                     l5442:
  7404                           
  7405                           ;RF24_cg.c: 1151: }
  7406                           ;RF24_cg.c: 1153: RF24_write_register_c_d(0x0A, ((uint8_t*)(value)), rf.addr_width);
  7407  002F42  0E19               	movlw	low RF24_openWritingPipe_d@value
  7408  002F44  6E10               	movwf	RF24_write_register_c_d@buf,c
  7409  002F46  0E00               	movlw	high RF24_openWritingPipe_d@value
  7410  002F48  6E11               	movwf	RF24_write_register_c_d@buf+1,c
  7411  002F4A  C049  F012         	movff	_rf+12,RF24_write_register_c_d@len
  7412  002F4E  0E0A               	movlw	10
  7413  002F50  ECD5  F01A         	call	_RF24_write_register_c_d
  7414                           
  7415                           ;RF24_cg.c: 1154: RF24_write_register_c_d(0x10, ((uint8_t*)(value)), rf.addr_width);
  7416  002F54  0E19               	movlw	low RF24_openWritingPipe_d@value
  7417  002F56  6E10               	movwf	RF24_write_register_c_d@buf,c
  7418  002F58  0E00               	movlw	high RF24_openWritingPipe_d@value
  7419  002F5A  6E11               	movwf	RF24_write_register_c_d@buf+1,c
  7420  002F5C  C049  F012         	movff	_rf+12,RF24_write_register_c_d@len
  7421  002F60  0E10               	movlw	16
  7422  002F62  ECD5  F01A         	call	_RF24_write_register_c_d
  7423                           
  7424                           ;RF24_cg.c: 1159: RF24_write_register_d(0x11,rf.payload_size);
  7425  002F66  C042  F012         	movff	_rf+5,RF24_write_register_d@value
  7426  002F6A  0E11               	movlw	17
  7427  002F6C  ECE9  F01B         	call	_RF24_write_register_d
  7428  002F70  0012               	return		;funcret
  7429  002F72                     __end_of_RF24_openWritingPipe_d:
  7430                           	opt stack 0
  7431                           tblptru	equ	0xFF8
  7432                           tblptrh	equ	0xFF7
  7433                           tblptrl	equ	0xFF6
  7434                           tablat	equ	0xFF5
  7435                           prodh	equ	0xFF4
  7436                           prodl	equ	0xFF3
  7437                           intcon	equ	0xFF2
  7438                           indf0	equ	0xFEF
  7439                           postinc0	equ	0xFEE
  7440                           postdec0	equ	0xFED
  7441                           fsr0h	equ	0xFEA
  7442                           fsr0l	equ	0xFE9
  7443                           wreg	equ	0xFE8
  7444                           indf2	equ	0xFDF
  7445                           postinc2	equ	0xFDE
  7446                           postdec2	equ	0xFDD
  7447                           fsr2h	equ	0xFDA
  7448                           fsr2l	equ	0xFD9
  7449                           status	equ	0xFD8
  7450                           
  7451 ;; *************** function _RF24_write_register_c_d *****************
  7452 ;; Defined at:
  7453 ;;		line 162 in file "../../../RF24_c/RF24_cg.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  reg             1    wreg     unsigned char 
  7456 ;;  buf             2   15[COMRAM] PTR const unsigned char 
  7457 ;;		 -> RF24_openReadingPipe_d@address(5), RF24_openWritingPipe_d@value(5), rf.pipe0_reading_address(5), rf(22), 
  7458 ;;  len             1   17[COMRAM] unsigned char 
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;  reg             1   19[COMRAM] unsigned char 
  7461 ;;  status          1   18[COMRAM] unsigned char 
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  1    wreg      unsigned char 
  7464 ;; Registers used:
  7465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7471 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7474 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7475 ;;Total ram usage:        5 bytes
  7476 ;; Hardware stack levels used:    1
  7477 ;; Hardware stack levels required when called:    4
  7478 ;; This function calls:
  7479 ;;		_RF24_beginTransaction
  7480 ;;		_RF24_endTransaction
  7481 ;;		_SPI_transfer
  7482 ;; This function is called by:
  7483 ;;		_RF24_startListening
  7484 ;;		_RF24_openWritingPipe_d
  7485 ;;		_RF24_openReadingPipe_d
  7486 ;;		_RF24_openWritingPipe
  7487 ;;		_RF24_openReadingPipe
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text46
  7492  0035AA                     __ptext46:
  7493                           	opt stack 0
  7494  0035AA                     _RF24_write_register_c_d:
  7495                           	opt stack 23
  7496                           
  7497                           ;incstack = 0
  7498                           ;RF24_write_register_c_d@reg stored from wreg
  7499  0035AA  6E14               	movwf	RF24_write_register_c_d@reg,c
  7500                           
  7501                           ;RF24_cg.c: 164: uint8_t status;
  7502                           ;RF24_cg.c: 181: RF24_beginTransaction();
  7503  0035AC  EC91  F01C         	call	_RF24_beginTransaction	;wreg free
  7504                           
  7505                           ;RF24_cg.c: 182: status = SPI_transfer( 0x20 | ( 0x1F & reg ) );
  7506  0035B0  5014               	movf	RF24_write_register_c_d@reg,w,c
  7507  0035B2  0B1F               	andlw	31
  7508  0035B4  0920               	iorlw	32
  7509  0035B6  EC70  F01C         	call	_SPI_transfer
  7510  0035BA  6E13               	movwf	RF24_write_register_c_d@status,c
  7511                           
  7512                           ;RF24_cg.c: 183: while ( len-- )
  7513  0035BC  D009               	goto	l5226
  7514  0035BE                     l5222:
  7515                           
  7516                           ;RF24_cg.c: 184: SPI_transfer(*buf++);
  7517  0035BE  C010  FFD9         	movff	RF24_write_register_c_d@buf,fsr2l
  7518  0035C2  C011  FFDA         	movff	RF24_write_register_c_d@buf+1,fsr2h
  7519  0035C6  50DF               	movf	indf2,w,c
  7520  0035C8  EC70  F01C         	call	_SPI_transfer
  7521  0035CC  4A10               	infsnz	RF24_write_register_c_d@buf,f,c
  7522  0035CE  2A11               	incf	RF24_write_register_c_d@buf+1,f,c
  7523  0035D0                     l5226:
  7524  0035D0  0612               	decf	RF24_write_register_c_d@len,f,c
  7525  0035D2  2812               	incf	RF24_write_register_c_d@len,w,c
  7526  0035D4  A4D8               	btfss	status,2,c
  7527  0035D6  D7F3               	goto	l5222
  7528                           
  7529                           ;RF24_cg.c: 185: RF24_endTransaction();
  7530  0035D8  EC8D  F01C         	call	_RF24_endTransaction	;wreg free
  7531  0035DC  0012               	return	
  7532  0035DE                     __end_of_RF24_write_register_c_d:
  7533                           	opt stack 0
  7534                           tblptru	equ	0xFF8
  7535                           tblptrh	equ	0xFF7
  7536                           tblptrl	equ	0xFF6
  7537                           tablat	equ	0xFF5
  7538                           prodh	equ	0xFF4
  7539                           prodl	equ	0xFF3
  7540                           intcon	equ	0xFF2
  7541                           indf0	equ	0xFEF
  7542                           postinc0	equ	0xFEE
  7543                           postdec0	equ	0xFED
  7544                           fsr0h	equ	0xFEA
  7545                           fsr0l	equ	0xFE9
  7546                           wreg	equ	0xFE8
  7547                           indf2	equ	0xFDF
  7548                           postinc2	equ	0xFDE
  7549                           postdec2	equ	0xFDD
  7550                           fsr2h	equ	0xFDA
  7551                           fsr2l	equ	0xFD9
  7552                           status	equ	0xFD8
  7553                           
  7554 ;; *************** function _RF24N_pipe_address *****************
  7555 ;; Defined at:
  7556 ;;		line 1359 in file "../../RF24Network_cg.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  node            2    2[COMRAM] unsigned int 
  7559 ;;  pipe            1    4[COMRAM] unsigned char 
  7560 ;;  address         2    5[COMRAM] PTR unsigned char 
  7561 ;;		 -> RF24N_multicastLevel@addr(5), RF24N_write_to_pipe@out_pipe(5), RF24N_begin_d@addr(5), 
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;  result          5   11[COMRAM] unsigned char [5]
  7564 ;;  out             2   19[COMRAM] PTR unsigned char 
  7565 ;;		 -> RF24N_pipe_address@result(5), 
  7566 ;;  dec             2   16[COMRAM] unsigned int 
  7567 ;;  i               1   21[COMRAM] unsigned char 
  7568 ;;  count           1   18[COMRAM] unsigned char 
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  1    wreg      void 
  7571 ;; Registers used:
  7572 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7578 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7579 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7580 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7581 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7582 ;;Total ram usage:       20 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; Hardware stack levels required when called:    1
  7585 ;; This function calls:
  7586 ;;		Nothing
  7587 ;; This function is called by:
  7588 ;;		_RF24N_begin_d
  7589 ;;		_RF24N_write_to_pipe
  7590 ;;		_RF24N_multicastLevel
  7591 ;; This function uses a non-reentrant model
  7592 ;;
  7593                           
  7594                           	psect	text47
  7595  00237C                     __ptext47:
  7596                           	opt stack 0
  7597  00237C                     _RF24N_pipe_address:
  7598                           	opt stack 27
  7599                           
  7600                           ;RF24Network_cg.c: 1362: static uint8_t address_translation[] = { 0xc3,0x3c,0x33,0xce,0x
      +                          3e,0xe3,0xec };
  7601                           ;RF24Network_cg.c: 1363: raddr_t result[5] = {0xCC,0xCC,0xCC,0xCC,0xCC};
  7602                           
  7603                           ;incstack = 0
  7604  00237C  EE20  F064         	lfsr	2,RF24N_pipe_address@F3842
  7605  002380  EE00  F00C         	lfsr	0,RF24N_pipe_address@result
  7606  002384  0E04               	movlw	4
  7607  002386                     u6831:
  7608  002386  CFDB FFEB          	movff	plusw2,plusw0
  7609  00238A  06E8               	decf	wreg,f,c
  7610  00238C  E2FC               	bc	u6831
  7611                           
  7612                           ;RF24Network_cg.c: 1364: uint8_t* out = (uint8_t*)(result);
  7613  00238E  0E0C               	movlw	low RF24N_pipe_address@result
  7614  002390  6E14               	movwf	RF24N_pipe_address@out,c
  7615  002392  0E00               	movlw	high RF24N_pipe_address@result
  7616  002394  6E15               	movwf	RF24N_pipe_address@out+1,c
  7617                           
  7618                           ;RF24Network_cg.c: 1366: uint8_t i;
  7619                           ;RF24Network_cg.c: 1369: uint8_t count = 1; uint16_t dec = node;
  7620  002396  0E01               	movlw	1
  7621  002398  6E13               	movwf	RF24N_pipe_address@count,c
  7622  00239A  C003  F011         	movff	RF24N_pipe_address@node,RF24N_pipe_address@dec
  7623  00239E  C004  F012         	movff	RF24N_pipe_address@node+1,RF24N_pipe_address@dec+1
  7624                           
  7625                           ;RF24Network_cg.c: 1371: while(dec){
  7626  0023A2  D027               	goto	l5322
  7627  0023A4                     l5312:
  7628                           
  7629                           ;RF24Network_cg.c: 1373: if(pipe != 0 || !node)
  7630  0023A4  5005               	movf	RF24N_pipe_address@pipe,w,c
  7631  0023A6  A4D8               	btfss	status,2,c
  7632  0023A8  D004               	goto	l5316
  7633  0023AA  5003               	movf	RF24N_pipe_address@node,w,c
  7634  0023AC  1004               	iorwf	RF24N_pipe_address@node+1,w,c
  7635  0023AE  A4D8               	btfss	status,2,c
  7636  0023B0  D016               	goto	l5318
  7637  0023B2                     l5316:
  7638                           
  7639                           ;RF24Network_cg.c: 1375: out[count]=address_translation[(dec % 8)];
  7640  0023B2  0E07               	movlw	7
  7641  0023B4  1411               	andwf	RF24N_pipe_address@dec,w,c
  7642  0023B6  6E08               	movwf	??_RF24N_pipe_address& (0+255),c
  7643  0023B8  0E00               	movlw	0
  7644  0023BA  1412               	andwf	RF24N_pipe_address@dec+1,w,c
  7645  0023BC  6E09               	movwf	(??_RF24N_pipe_address+1)& (0+255),c
  7646  0023BE  0E5D               	movlw	low RF24N_pipe_address@address_translation
  7647  0023C0  2408               	addwf	??_RF24N_pipe_address,w,c
  7648  0023C2  6ED9               	movwf	fsr2l,c
  7649  0023C4  0E00               	movlw	high RF24N_pipe_address@address_translation
  7650  0023C6  2009               	addwfc	??_RF24N_pipe_address+1,w,c
  7651  0023C8  6EDA               	movwf	fsr2h,c
  7652  0023CA  5013               	movf	RF24N_pipe_address@count,w,c
  7653  0023CC  0D01               	mullw	1
  7654  0023CE  50F3               	movf	prodl,w,c
  7655  0023D0  2414               	addwf	RF24N_pipe_address@out,w,c
  7656  0023D2  6EE9               	movwf	fsr0l,c
  7657  0023D4  50F4               	movf	prodh,w,c
  7658  0023D6  2015               	addwfc	RF24N_pipe_address@out+1,w,c
  7659  0023D8  6EEA               	movwf	fsr0h,c
  7660  0023DA  CFDF FFEF          	movff	indf2,indf0
  7661  0023DE                     l5318:
  7662                           
  7663                           ;RF24Network_cg.c: 1377: dec /= 8;
  7664  0023DE  90D8               	bcf	status,0,c
  7665  0023E0  3212               	rrcf	RF24N_pipe_address@dec+1,f,c
  7666  0023E2  3211               	rrcf	RF24N_pipe_address@dec,f,c
  7667  0023E4  90D8               	bcf	status,0,c
  7668  0023E6  3212               	rrcf	RF24N_pipe_address@dec+1,f,c
  7669  0023E8  3211               	rrcf	RF24N_pipe_address@dec,f,c
  7670  0023EA  90D8               	bcf	status,0,c
  7671  0023EC  3212               	rrcf	RF24N_pipe_address@dec+1,f,c
  7672  0023EE  3211               	rrcf	RF24N_pipe_address@dec,f,c
  7673                           
  7674                           ;RF24Network_cg.c: 1378: count++;
  7675  0023F0  2A13               	incf	RF24N_pipe_address@count,f,c
  7676  0023F2                     l5322:
  7677  0023F2  5011               	movf	RF24N_pipe_address@dec,w,c
  7678  0023F4  1012               	iorwf	RF24N_pipe_address@dec+1,w,c
  7679  0023F6  A4D8               	btfss	status,2,c
  7680  0023F8  D7D5               	goto	l5312
  7681                           
  7682                           ;RF24Network_cg.c: 1379: }
  7683                           ;RF24Network_cg.c: 1382: if(pipe != 0 || !node)
  7684  0023FA  5005               	movf	RF24N_pipe_address@pipe,w,c
  7685  0023FC  A4D8               	btfss	status,2,c
  7686  0023FE  D004               	goto	l5328
  7687  002400  5003               	movf	RF24N_pipe_address@node,w,c
  7688  002402  1004               	iorwf	RF24N_pipe_address@node+1,w,c
  7689  002404  A4D8               	btfss	status,2,c
  7690  002406  D00D               	goto	l5330
  7691  002408                     l5328:
  7692                           
  7693                           ;RF24Network_cg.c: 1384: out[0] = address_translation[pipe];
  7694  002408  5005               	movf	RF24N_pipe_address@pipe,w,c
  7695  00240A  0D01               	mullw	1
  7696  00240C  0E5D               	movlw	low RF24N_pipe_address@address_translation
  7697  00240E  24F3               	addwf	prodl,w,c
  7698  002410  6ED9               	movwf	fsr2l,c
  7699  002412  0E00               	movlw	high RF24N_pipe_address@address_translation
  7700  002414  20F4               	addwfc	prodh,w,c
  7701  002416  6EDA               	movwf	fsr2h,c
  7702  002418  C014  FFE9         	movff	RF24N_pipe_address@out,fsr0l
  7703  00241C  C015  FFEA         	movff	RF24N_pipe_address@out+1,fsr0h
  7704  002420  D017               	goto	L5
  7705  002422                     l5330:
  7706                           
  7707                           ;RF24Network_cg.c: 1386: else
  7708                           ;RF24Network_cg.c: 1387: out[1] = address_translation[count-1];
  7709  002422  0EFF               	movlw	255
  7710  002424  6E08               	movwf	??_RF24N_pipe_address& (0+255),c
  7711  002426  0EFF               	movlw	255
  7712  002428  6E09               	movwf	(??_RF24N_pipe_address+1)& (0+255),c
  7713  00242A  5013               	movf	RF24N_pipe_address@count,w,c
  7714  00242C  6E0A               	movwf	(??_RF24N_pipe_address+2)& (0+255),c
  7715  00242E  6A0B               	clrf	(??_RF24N_pipe_address+3)& (0+255),c
  7716  002430  5008               	movf	??_RF24N_pipe_address,w,c
  7717  002432  260A               	addwf	??_RF24N_pipe_address+2,f,c
  7718  002434  5009               	movf	??_RF24N_pipe_address+1,w,c
  7719  002436  220B               	addwfc	??_RF24N_pipe_address+3,f,c
  7720  002438  0E5D               	movlw	low RF24N_pipe_address@address_translation
  7721  00243A  240A               	addwf	??_RF24N_pipe_address+2,w,c
  7722  00243C  6ED9               	movwf	fsr2l,c
  7723  00243E  0E00               	movlw	high RF24N_pipe_address@address_translation
  7724  002440  200B               	addwfc	??_RF24N_pipe_address+3,w,c
  7725  002442  6EDA               	movwf	fsr2h,c
  7726  002444  EE00 F001          	lfsr	0,1
  7727  002448  5014               	movf	RF24N_pipe_address@out,w,c
  7728  00244A  26E9               	addwf	fsr0l,f,c
  7729  00244C  5015               	movf	RF24N_pipe_address@out+1,w,c
  7730  00244E  22EA               	addwfc	fsr0h,f,c
  7731  002450                     L5:
  7732  002450  CFDF FFEF          	movff	indf2,indf0
  7733                           
  7734                           ;RF24Network_cg.c: 1395: ;
  7735                           ;RF24Network_cg.c: 1399: for(i=0;i<5;i++)
  7736  002454  0E00               	movlw	0
  7737  002456  6E16               	movwf	RF24N_pipe_address@i,c
  7738  002458                     l5334:
  7739  002458  0E04               	movlw	4
  7740  00245A  6416               	cpfsgt	RF24N_pipe_address@i,c
  7741  00245C  D001               	goto	l5338
  7742  00245E  0012               	return	
  7743  002460                     l5338:
  7744                           
  7745                           ;RF24Network_cg.c: 1400: {
  7746                           ;RF24Network_cg.c: 1401: address[i]=result[4-i];
  7747  002460  5016               	movf	RF24N_pipe_address@i,w,c
  7748  002462  6E08               	movwf	??_RF24N_pipe_address& (0+255),c
  7749  002464  6A09               	clrf	(??_RF24N_pipe_address+1)& (0+255),c
  7750  002466  1E08               	comf	??_RF24N_pipe_address,f,c
  7751  002468  1E09               	comf	??_RF24N_pipe_address+1,f,c
  7752  00246A  4A08               	infsnz	??_RF24N_pipe_address,f,c
  7753  00246C  2A09               	incf	??_RF24N_pipe_address+1,f,c
  7754  00246E  0E04               	movlw	4
  7755  002470  2608               	addwf	??_RF24N_pipe_address,f,c
  7756  002472  0E00               	movlw	0
  7757  002474  2209               	addwfc	??_RF24N_pipe_address+1,f,c
  7758  002476  0E0C               	movlw	low RF24N_pipe_address@result
  7759  002478  2408               	addwf	??_RF24N_pipe_address,w,c
  7760  00247A  6ED9               	movwf	fsr2l,c
  7761  00247C  0E00               	movlw	high RF24N_pipe_address@result
  7762  00247E  2009               	addwfc	??_RF24N_pipe_address+1,w,c
  7763  002480  6EDA               	movwf	fsr2h,c
  7764  002482  5016               	movf	RF24N_pipe_address@i,w,c
  7765  002484  0D01               	mullw	1
  7766  002486  50F3               	movf	prodl,w,c
  7767  002488  2406               	addwf	RF24N_pipe_address@address,w,c
  7768  00248A  6EE9               	movwf	fsr0l,c
  7769  00248C  50F4               	movf	prodh,w,c
  7770  00248E  2007               	addwfc	RF24N_pipe_address@address+1,w,c
  7771  002490  6EEA               	movwf	fsr0h,c
  7772  002492  CFDF FFEF          	movff	indf2,indf0
  7773  002496  2A16               	incf	RF24N_pipe_address@i,f,c
  7774  002498  D7DF               	goto	l5334
  7775  00249A                     __end_of_RF24N_pipe_address:
  7776                           	opt stack 0
  7777                           tblptru	equ	0xFF8
  7778                           tblptrh	equ	0xFF7
  7779                           tblptrl	equ	0xFF6
  7780                           tablat	equ	0xFF5
  7781                           prodh	equ	0xFF4
  7782                           prodl	equ	0xFF3
  7783                           intcon	equ	0xFF2
  7784                           indf0	equ	0xFEF
  7785                           postinc0	equ	0xFEE
  7786                           postdec0	equ	0xFED
  7787                           plusw0	equ	0xFEB
  7788                           fsr0h	equ	0xFEA
  7789                           fsr0l	equ	0xFE9
  7790                           wreg	equ	0xFE8
  7791                           indf2	equ	0xFDF
  7792                           postinc2	equ	0xFDE
  7793                           postdec2	equ	0xFDD
  7794                           plusw2	equ	0xFDB
  7795                           fsr2h	equ	0xFDA
  7796                           fsr2l	equ	0xFD9
  7797                           status	equ	0xFD8
  7798                           
  7799 ;; *************** function _RF24N_update *****************
  7800 ;; Defined at:
  7801 ;;		line 226 in file "../../RF24Network_cg.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;		None
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;  val             1  [STACK] unsigned char 
  7806 ;;  requester       2    0        unsigned int 
  7807 ;;  header          2  [STACK] PTR struct .
  7808 ;;		 -> rn.frame_buffer(32), rn(370), 
  7809 ;;  returnVal       1  [STACK] unsigned char 
  7810 ;;  pipe_num        1  [STACK] unsigned char 
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1  [STACK] unsigned char 
  7813 ;; Registers used:
  7814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7824 ;;Total ram usage:        0 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; Hardware stack levels required when called:   10
  7827 ;; This function calls:
  7828 ;;		_RF24N_available
  7829 ;;		_RF24N_enqueue
  7830 ;;		_RF24N_is_valid_address
  7831 ;;		_RF24N_levelToAddress
  7832 ;;		_RF24N_write
  7833 ;;		_RF24_available_p
  7834 ;;		_RF24_getDynamicPayloadSize
  7835 ;;		_RF24_isValid
  7836 ;;		_RF24_read
  7837 ;;		_delay
  7838 ;; This function is called by:
  7839 ;;		_loop
  7840 ;;		_RF24N_write
  7841 ;;		_RF24N_write_
  7842 ;; This function uses a recursive model
  7843 ;;
  7844                           
  7845                           	psect	text48
  7846  0015CA                     __ptext48:
  7847                           	opt stack 0
  7848  0015CA                     _RF24N_update:
  7849                           	opt stack 19
  7850                           
  7851                           ;incstack = 0
  7852  0015CA  0E07               	movlw	7
  7853  0015CC  26E1               	addwf	fsr1l,f,c
  7854  0015CE  0E00               	movlw	0
  7855  0015D0  22E2               	addwfc	fsr1h,f,c
  7856                           
  7857                           ;RF24Network_cg.c: 229: uint8_t pipe_num;
  7858                           ;RF24Network_cg.c: 230: uint8_t returnVal = 0;
  7859                           ;stkvar	RF24N_update@returnVal @ sp[(-7)+3]
  7860  0015D2  0EFC               	movlw	-4
  7861  0015D4  6AE3               	clrf	plusw1,c
  7862                           
  7863                           ;RF24Network_cg.c: 237: if(!(rn.networkFlags & 2)){
  7864  0015D6  EE20  F0D0         	lfsr	2,_rn+42
  7865  0015DA  B2DF               	btfsc	indf2,1,c
  7866  0015DC  D279               	goto	l5590
  7867                           
  7868                           ;RF24Network_cg.c: 238: if( (rn.networkFlags & 1) || (rn.next_frame-rn.frame_queue) + 34
      +                           > 144 + 10 ){
  7869  0015DE  EE20  F0D0         	lfsr	2,_rn+42
  7870  0015E2  B0DF               	btfsc	indf2,0,c
  7871  0015E4  D01E               	goto	l5480
  7872  0015E6  EE21  F07A         	lfsr	2,_rn+212
  7873  0015EA  CFDE F06C          	movff	postinc2,btemp+1
  7874  0015EE  CFDD F06D          	movff	postdec2,btemp+2
  7875  0015F2  0EA6               	movlw	low _rn
  7876  0015F4  6E75               	movwf	btemp+10,c
  7877  0015F6  0E00               	movlw	high _rn
  7878  0015F8  6E76               	movwf	btemp+11,c
  7879  0015FA  0EE8               	movlw	232
  7880  0015FC  6E73               	movwf	btemp+8,c
  7881  0015FE  0EFF               	movlw	255
  7882  001600  6E74               	movwf	btemp+9,c
  7883  001602  5075               	movf	btemp+10,w,c
  7884  001604  5E73               	subwf	btemp+8,f,c
  7885  001606  5076               	movf	btemp+11,w,c
  7886  001608  5A74               	subwfb	btemp+9,f,c
  7887  00160A  506C               	movf	btemp+1,w,c
  7888  00160C  2673               	addwf	btemp+8,f,c
  7889  00160E  506D               	movf	btemp+2,w,c
  7890  001610  2274               	addwfc	btemp+9,f,c
  7891  001612  BE74               	btfsc	btemp+9,7,c
  7892  001614  D25D               	goto	l5590
  7893  001616  5074               	movf	btemp+9,w,c
  7894  001618  E104               	bnz	u7090
  7895  00161A  0E9B               	movlw	155
  7896  00161C  5C73               	subwf	btemp+8,w,c
  7897  00161E  A0D8               	btfss	status,0,c
  7898  001620  D257               	goto	l5590
  7899  001622                     u7090:
  7900  001622                     l5480:
  7901                           
  7902                           ;RF24Network_cg.c: 239: if(!RF24N_available()){
  7903  001622  ECD8  F01B         	call	_RF24N_available	;wreg free
  7904  001626  0900               	iorlw	0
  7905  001628  A4D8               	btfss	status,2,c
  7906  00162A  D006               	goto	l5484
  7907                           
  7908                           ;RF24Network_cg.c: 240: rn.networkFlags &= ~1;
  7909  00162C  C0D0  FFE8         	movff	_rn+42,wreg
  7910  001630  0BFE               	andlw	254
  7911  001632  CFE8 F0D0          	movff	wreg,_rn+42
  7912                           
  7913                           ;RF24Network_cg.c: 241: }else{
  7914  001636  D24C               	goto	l5590
  7915  001638                     l5484:
  7916                           
  7917                           ;RF24Network_cg.c: 242: return 0;
  7918  001638  0E00               	movlw	0
  7919  00163A  D18F               	goto	L6
  7920  00163C                     l5488:
  7921                           
  7922                           ;RF24Network_cg.c: 249: RF24NetworkHeader *header;
  7923                           ;RF24Network_cg.c: 252: if( (rn.frame_size = RF24_getDynamicPayloadSize() ) < sizeof(RF2
      +                          4NetworkHeader)){
  7924  00163C  EC67  F01A         	call	_RF24_getDynamicPayloadSize	;wreg free
  7925  001640  EE20  F0D8         	lfsr	2,_rn+50
  7926  001644  6EDF               	movwf	indf2,c
  7927  001646  0E08               	movlw	8
  7928  001648  60DF               	cpfslt	indf2,c
  7929  00164A  D007               	goto	l5492
  7930                           
  7931                           ;RF24Network_cg.c: 253: delay(10);
  7932  00164C  0E00               	movlw	0
  7933  00164E  6E04               	movwf	delay@val+1,c
  7934  001650  0E0A               	movlw	10
  7935  001652  6E03               	movwf	delay@val,c
  7936  001654  ECA1  F019         	call	_delay	;wreg free
  7937                           
  7938                           ;RF24Network_cg.c: 254: continue;
  7939  001658  D23B               	goto	l5590
  7940  00165A                     l5492:
  7941                           
  7942                           ;RF24Network_cg.c: 255: }
  7943                           ;RF24Network_cg.c: 261: RF24_read(rn.frame_buffer, rn.frame_size );
  7944  00165A  0EAD               	movlw	low (_rn+7)
  7945  00165C  6E1B               	movwf	RF24_read@buf,c
  7946  00165E  0E00               	movlw	high (_rn+7)
  7947  001660  6E1C               	movwf	RF24_read@buf+1,c
  7948  001662  C0D8  F01D         	movff	_rn+50,RF24_read@len
  7949  001666  EC08  F01C         	call	_RF24_read	;wreg free
  7950                           
  7951                           ;RF24Network_cg.c: 264: header = (RF24NetworkHeader*)(rn.frame_buffer);
  7952                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  7953  00166A  0E00               	movlw	high (_rn+7)
  7954  00166C  6E6B               	movwf	btemp,c
  7955  00166E  0EFB               	movlw	-5
  7956  001670  C06B  FFE3         	movff	btemp,plusw1
  7957  001674  0EAD               	movlw	low (_rn+7)
  7958  001676  6E6B               	movwf	btemp,c
  7959  001678  0EFA               	movlw	-6
  7960  00167A  C06B  FFE3         	movff	btemp,plusw1
  7961                           
  7962                           ;RF24Network_cg.c: 273: ;
  7963                           ;RF24Network_cg.c: 274: ;
  7964                           ;RF24Network_cg.c: 278: if ( !RF24N_is_valid_address( header->to_node) ){
  7965                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  7966  00167E  0EFA               	movlw	-6
  7967  001680  CFE3 F06C          	movff	plusw1,btemp+1
  7968  001684  0EFB               	movlw	-5
  7969  001686  CFE3 F06D          	movff	plusw1,btemp+2
  7970  00168A  0E02               	movlw	2
  7971  00168C  246C               	addwf	btemp+1,w,c
  7972  00168E  6ED9               	movwf	fsr2l,c
  7973  001690  0E00               	movlw	0
  7974  001692  206D               	addwfc	btemp+2,w,c
  7975  001694  6EDA               	movwf	fsr2h,c
  7976  001696  CFDE F003          	movff	postinc2,RF24N_is_valid_address@node
  7977  00169A  CFDD F004          	movff	postdec2,RF24N_is_valid_address@node+1
  7978  00169E  EC9F  F01A         	call	_RF24N_is_valid_address	;wreg free
  7979  0016A2  0900               	iorlw	0
  7980  0016A4  B4D8               	btfsc	status,2,c
  7981  0016A6  D214               	goto	l5590
  7982                           
  7983                           ;RF24Network_cg.c: 280: }
  7984                           ;RF24Network_cg.c: 282: returnVal = header->type;
  7985                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  7986  0016A8  0EFA               	movlw	-6
  7987  0016AA  CFE3 F06C          	movff	plusw1,btemp+1
  7988  0016AE  0EFB               	movlw	-5
  7989  0016B0  CFE3 F06D          	movff	plusw1,btemp+2
  7990  0016B4  0E06               	movlw	6
  7991  0016B6  246C               	addwf	btemp+1,w,c
  7992  0016B8  6ED9               	movwf	fsr2l,c
  7993  0016BA  0E00               	movlw	0
  7994  0016BC  206D               	addwfc	btemp+2,w,c
  7995  0016BE  6EDA               	movwf	fsr2h,c
  7996  0016C0  50DF               	movf	indf2,w,c
  7997  0016C2  6E76               	movwf	btemp+11,c
  7998                           
  7999                           ;stkvar	RF24N_update@returnVal @ sp[(-7)+3]
  8000  0016C4  0EFC               	movlw	-4
  8001  0016C6  C076  FFE3         	movff	btemp+11,plusw1
  8002                           
  8003                           ;RF24Network_cg.c: 285: if ( header->to_node == rn.node_address ){
  8004  0016CA  EE20  F0D6         	lfsr	2,_rn+48
  8005                           
  8006                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8007  0016CE  0EFA               	movlw	-6
  8008  0016D0  CFE3 F06C          	movff	plusw1,btemp+1
  8009  0016D4  0EFB               	movlw	-5
  8010  0016D6  CFE3 F06D          	movff	plusw1,btemp+2
  8011  0016DA  0E02               	movlw	2
  8012  0016DC  246C               	addwf	btemp+1,w,c
  8013  0016DE  6EE9               	movwf	fsr0l,c
  8014  0016E0  0E00               	movlw	0
  8015  0016E2  206D               	addwfc	btemp+2,w,c
  8016  0016E4  6EEA               	movwf	fsr0h,c
  8017  0016E6  50DE               	movf	postinc2,w,c
  8018  0016E8  18EE               	xorwf	postinc0,w,c
  8019  0016EA  E103               	bnz	u7131
  8020  0016EC  50DE               	movf	postinc2,w,c
  8021  0016EE  18EE               	xorwf	postinc0,w,c
  8022  0016F0  A4D8               	btfss	status,2,c
  8023  0016F2                     u7131:
  8024  0016F2  D135               	goto	l5558
  8025                           
  8026                           ;RF24Network_cg.c: 287: if(header->type == 130){
  8027                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8028  0016F4  0EFA               	movlw	-6
  8029  0016F6  CFE3 F06C          	movff	plusw1,btemp+1
  8030  0016FA  0EFB               	movlw	-5
  8031  0016FC  CFE3 F06D          	movff	plusw1,btemp+2
  8032  001700  0E06               	movlw	6
  8033  001702  246C               	addwf	btemp+1,w,c
  8034  001704  6ED9               	movwf	fsr2l,c
  8035  001706  0E00               	movlw	0
  8036  001708  206D               	addwfc	btemp+2,w,c
  8037  00170A  6EDA               	movwf	fsr2h,c
  8038  00170C  0E82               	movlw	130
  8039  00170E  18DE               	xorwf	postinc2,w,c
  8040  001710  B4D8               	btfsc	status,2,c
  8041  001712  D1DE               	goto	l5590
  8042                           
  8043                           ;RF24Network_cg.c: 289: }
  8044                           ;RF24Network_cg.c: 290: if(header->type == 128 ){
  8045                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8046  001714  0EFA               	movlw	-6
  8047  001716  CFE3 F06C          	movff	plusw1,btemp+1
  8048  00171A  0EFB               	movlw	-5
  8049  00171C  CFE3 F06D          	movff	plusw1,btemp+2
  8050  001720  0E06               	movlw	6
  8051  001722  246C               	addwf	btemp+1,w,c
  8052  001724  6ED9               	movwf	fsr2l,c
  8053  001726  0E00               	movlw	0
  8054  001728  206D               	addwfc	btemp+2,w,c
  8055  00172A  6EDA               	movwf	fsr2h,c
  8056  00172C  0E80               	movlw	128
  8057  00172E  18DE               	xorwf	postinc2,w,c
  8058  001730  A4D8               	btfss	status,2,c
  8059  001732  D048               	goto	l5522
  8060                           
  8061                           ;RF24Network_cg.c: 292: if(requester != rn.node_address){
  8062  001734  EE20  F0D6         	lfsr	2,_rn+48
  8063  001738  0E24               	movlw	36
  8064  00173A  18DE               	xorwf	postinc2,w,c
  8065  00173C  E104               	bnz	u7160
  8066  00173E  0E09               	movlw	9
  8067  001740  18DE               	xorwf	postinc2,w,c
  8068  001742  B4D8               	btfsc	status,2,c
  8069  001744  D03F               	goto	l5522
  8070  001746                     u7160:
  8071                           
  8072                           ;RF24Network_cg.c: 293: header->to_node = requester;
  8073                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8074  001746  0EFA               	movlw	-6
  8075  001748  CFE3 F06C          	movff	plusw1,btemp+1
  8076  00174C  0EFB               	movlw	-5
  8077  00174E  CFE3 F06D          	movff	plusw1,btemp+2
  8078  001752  0E02               	movlw	2
  8079  001754  246C               	addwf	btemp+1,w,c
  8080  001756  6ED9               	movwf	fsr2l,c
  8081  001758  0E00               	movlw	0
  8082  00175A  206D               	addwfc	btemp+2,w,c
  8083  00175C  6EDA               	movwf	fsr2h,c
  8084  00175E  0E24               	movlw	36
  8085  001760  6EDE               	movwf	postinc2,c
  8086  001762  0E09               	movlw	9
  8087  001764  6EDD               	movwf	postdec2,c
  8088                           
  8089                           ;RF24Network_cg.c: 294: RF24N_write(header->to_node,2);
  8090                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8091  001766  0EFA               	movlw	-6
  8092  001768  CFE3 F06C          	movff	plusw1,btemp+1
  8093  00176C  0EFB               	movlw	-5
  8094  00176E  CFE3 F06D          	movff	plusw1,btemp+2
  8095  001772  0E02               	movlw	2
  8096  001774  246C               	addwf	btemp+1,w,c
  8097  001776  6ED9               	movwf	fsr2l,c
  8098  001778  0E00               	movlw	0
  8099  00177A  206D               	addwfc	btemp+2,w,c
  8100  00177C  6EDA               	movwf	fsr2h,c
  8101  00177E  CFDE F034          	movff	postinc2,RF24N_write@to_node
  8102  001782  CFDD F035          	movff	postdec2,RF24N_write@to_node+1
  8103  001786  0E02               	movlw	2
  8104  001788  6E36               	movwf	RF24N_write@directTo,c
  8105  00178A  EC00  F010         	call	_RF24N_write	;wreg free
  8106                           
  8107                           ;RF24Network_cg.c: 295: delay(10);
  8108  00178E  0E00               	movlw	0
  8109  001790  6E04               	movwf	delay@val+1,c
  8110  001792  0E0A               	movlw	10
  8111  001794  6E03               	movwf	delay@val,c
  8112  001796  ECA1  F019         	call	_delay	;wreg free
  8113                           
  8114                           ;RF24Network_cg.c: 296: RF24N_write(header->to_node,2);
  8115                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8116  00179A  0EFA               	movlw	-6
  8117  00179C  CFE3 F06C          	movff	plusw1,btemp+1
  8118  0017A0  0EFB               	movlw	-5
  8119  0017A2  CFE3 F06D          	movff	plusw1,btemp+2
  8120  0017A6  0E02               	movlw	2
  8121  0017A8  246C               	addwf	btemp+1,w,c
  8122  0017AA  6ED9               	movwf	fsr2l,c
  8123  0017AC  0E00               	movlw	0
  8124  0017AE  206D               	addwfc	btemp+2,w,c
  8125  0017B0  6EDA               	movwf	fsr2h,c
  8126  0017B2  CFDE F034          	movff	postinc2,RF24N_write@to_node
  8127  0017B6  CFDD F035          	movff	postdec2,RF24N_write@to_node+1
  8128  0017BA  0E02               	movlw	2
  8129  0017BC  6E36               	movwf	RF24N_write@directTo,c
  8130  0017BE  EC00  F010         	call	_RF24N_write	;wreg free
  8131                           
  8132                           ;RF24Network_cg.c: 298: continue;
  8133  0017C2  D186               	goto	l5590
  8134  0017C4                     l5522:
  8135                           
  8136                           ;RF24Network_cg.c: 299: }
  8137                           ;RF24Network_cg.c: 300: }
  8138                           ;RF24Network_cg.c: 301: if(header->type == 195 && rn.node_address){
  8139                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8140  0017C4  0EFA               	movlw	-6
  8141  0017C6  CFE3 F06C          	movff	plusw1,btemp+1
  8142  0017CA  0EFB               	movlw	-5
  8143  0017CC  CFE3 F06D          	movff	plusw1,btemp+2
  8144  0017D0  0E06               	movlw	6
  8145  0017D2  246C               	addwf	btemp+1,w,c
  8146  0017D4  6ED9               	movwf	fsr2l,c
  8147  0017D6  0E00               	movlw	0
  8148  0017D8  206D               	addwfc	btemp+2,w,c
  8149  0017DA  6EDA               	movwf	fsr2h,c
  8150  0017DC  0EC3               	movlw	195
  8151  0017DE  18DE               	xorwf	postinc2,w,c
  8152  0017E0  A4D8               	btfss	status,2,c
  8153  0017E2  D037               	goto	l5532
  8154  0017E4  EE20  F0D6         	lfsr	2,_rn+48
  8155  0017E8  50DE               	movf	postinc2,w,c
  8156  0017EA  10DE               	iorwf	postinc2,w,c
  8157  0017EC  B4D8               	btfsc	status,2,c
  8158  0017EE  D031               	goto	l5532
  8159                           
  8160                           ;RF24Network_cg.c: 303: header->from_node = rn.node_address;
  8161  0017F0  EE20  F0D6         	lfsr	2,_rn+48
  8162                           
  8163                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8164  0017F4  0EFA               	movlw	-6
  8165  0017F6  CFE3 FFE9          	movff	plusw1,fsr0l
  8166  0017FA  0EFB               	movlw	-5
  8167  0017FC  CFE3 FFEA          	movff	plusw1,fsr0h
  8168  001800  CFDE FFEE          	movff	postinc2,postinc0
  8169  001804  CFDD FFED          	movff	postdec2,postdec0
  8170                           
  8171                           ;RF24Network_cg.c: 304: header->to_node = 0;
  8172                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8173  001808  0EFA               	movlw	-6
  8174  00180A  CFE3 F06C          	movff	plusw1,btemp+1
  8175  00180E  0EFB               	movlw	-5
  8176  001810  CFE3 F06D          	movff	plusw1,btemp+2
  8177  001814  0E02               	movlw	2
  8178  001816  246C               	addwf	btemp+1,w,c
  8179  001818  6ED9               	movwf	fsr2l,c
  8180  00181A  0E00               	movlw	0
  8181  00181C  206D               	addwfc	btemp+2,w,c
  8182  00181E  6EDA               	movwf	fsr2h,c
  8183  001820  0E00               	movlw	0
  8184  001822  6EDE               	movwf	postinc2,c
  8185  001824  0E00               	movlw	0
  8186  001826  6EDD               	movwf	postdec2,c
  8187                           
  8188                           ;RF24Network_cg.c: 305: RF24N_write(header->to_node,0);
  8189                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8190  001828  0EFA               	movlw	-6
  8191  00182A  CFE3 F06C          	movff	plusw1,btemp+1
  8192  00182E  0EFB               	movlw	-5
  8193  001830  CFE3 F06D          	movff	plusw1,btemp+2
  8194  001834  0E02               	movlw	2
  8195  001836  246C               	addwf	btemp+1,w,c
  8196  001838  6ED9               	movwf	fsr2l,c
  8197  00183A  0E00               	movlw	0
  8198  00183C  206D               	addwfc	btemp+2,w,c
  8199  00183E  6EDA               	movwf	fsr2h,c
  8200  001840  CFDE F034          	movff	postinc2,RF24N_write@to_node
  8201  001844  CFDD F035          	movff	postdec2,RF24N_write@to_node+1
  8202  001848  0E00               	movlw	0
  8203  00184A  6E36               	movwf	RF24N_write@directTo,c
  8204  00184C  EC00  F010         	call	_RF24N_write	;wreg free
  8205                           
  8206                           ;RF24Network_cg.c: 306: continue;
  8207  001850  D13F               	goto	l5590
  8208  001852                     l5532:
  8209                           
  8210                           ;RF24Network_cg.c: 307: }
  8211                           ;RF24Network_cg.c: 309: if( (rn.returnSysMsgs && header->type > 127) || header->type == 
      +                          193 ){
  8212  001852  EE20  F0CF         	lfsr	2,_rn+41
  8213  001856  50DF               	movf	indf2,w,c
  8214  001858  B4D8               	btfsc	status,2,c
  8215  00185A  D00F               	goto	l5536
  8216                           
  8217                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8218  00185C  0EFA               	movlw	-6
  8219  00185E  CFE3 F06C          	movff	plusw1,btemp+1
  8220  001862  0EFB               	movlw	-5
  8221  001864  CFE3 F06D          	movff	plusw1,btemp+2
  8222  001868  0E06               	movlw	6
  8223  00186A  246C               	addwf	btemp+1,w,c
  8224  00186C  6ED9               	movwf	fsr2l,c
  8225  00186E  0E00               	movlw	0
  8226  001870  206D               	addwfc	btemp+2,w,c
  8227  001872  6EDA               	movwf	fsr2h,c
  8228  001874  0E80               	movlw	128
  8229  001876  60DF               	cpfslt	indf2,c
  8230  001878  D010               	goto	l5538
  8231  00187A                     l5536:
  8232                           
  8233                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8234  00187A  0EFA               	movlw	-6
  8235  00187C  CFE3 F06C          	movff	plusw1,btemp+1
  8236  001880  0EFB               	movlw	-5
  8237  001882  CFE3 F06D          	movff	plusw1,btemp+2
  8238  001886  0E06               	movlw	6
  8239  001888  246C               	addwf	btemp+1,w,c
  8240  00188A  6ED9               	movwf	fsr2l,c
  8241  00188C  0E00               	movlw	0
  8242  00188E  206D               	addwfc	btemp+2,w,c
  8243  001890  6EDA               	movwf	fsr2h,c
  8244  001892  0EC1               	movlw	193
  8245  001894  18DE               	xorwf	postinc2,w,c
  8246  001896  A4D8               	btfss	status,2,c
  8247  001898  D054               	goto	l5552
  8248  00189A                     l5538:
  8249                           
  8250                           ;RF24Network_cg.c: 310: ;
  8251                           ;RF24Network_cg.c: 312: if( header->type != 148 && header->type != 149 && header->type !
      +                          = 200 && header->type != 131 && header->type!= 150){
  8252                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8253  00189A  0EFA               	movlw	-6
  8254  00189C  CFE3 F06C          	movff	plusw1,btemp+1
  8255  0018A0  0EFB               	movlw	-5
  8256  0018A2  CFE3 F06D          	movff	plusw1,btemp+2
  8257  0018A6  0E06               	movlw	6
  8258  0018A8  246C               	addwf	btemp+1,w,c
  8259  0018AA  6ED9               	movwf	fsr2l,c
  8260  0018AC  0E00               	movlw	0
  8261  0018AE  206D               	addwfc	btemp+2,w,c
  8262  0018B0  6EDA               	movwf	fsr2h,c
  8263  0018B2  0E94               	movlw	148
  8264  0018B4  18DE               	xorwf	postinc2,w,c
  8265  0018B6  B4D8               	btfsc	status,2,c
  8266  0018B8  D044               	goto	l5552
  8267                           
  8268                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8269  0018BA  0EFA               	movlw	-6
  8270  0018BC  CFE3 F06C          	movff	plusw1,btemp+1
  8271  0018C0  0EFB               	movlw	-5
  8272  0018C2  CFE3 F06D          	movff	plusw1,btemp+2
  8273  0018C6  0E06               	movlw	6
  8274  0018C8  246C               	addwf	btemp+1,w,c
  8275  0018CA  6ED9               	movwf	fsr2l,c
  8276  0018CC  0E00               	movlw	0
  8277  0018CE  206D               	addwfc	btemp+2,w,c
  8278  0018D0  6EDA               	movwf	fsr2h,c
  8279  0018D2  0E95               	movlw	149
  8280  0018D4  18DE               	xorwf	postinc2,w,c
  8281  0018D6  B4D8               	btfsc	status,2,c
  8282  0018D8  D034               	goto	l5552
  8283                           
  8284                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8285  0018DA  0EFA               	movlw	-6
  8286  0018DC  CFE3 F06C          	movff	plusw1,btemp+1
  8287  0018E0  0EFB               	movlw	-5
  8288  0018E2  CFE3 F06D          	movff	plusw1,btemp+2
  8289  0018E6  0E06               	movlw	6
  8290  0018E8  246C               	addwf	btemp+1,w,c
  8291  0018EA  6ED9               	movwf	fsr2l,c
  8292  0018EC  0E00               	movlw	0
  8293  0018EE  206D               	addwfc	btemp+2,w,c
  8294  0018F0  6EDA               	movwf	fsr2h,c
  8295  0018F2  0EC8               	movlw	200
  8296  0018F4  18DE               	xorwf	postinc2,w,c
  8297  0018F6  B4D8               	btfsc	status,2,c
  8298  0018F8  D024               	goto	l5552
  8299                           
  8300                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8301  0018FA  0EFA               	movlw	-6
  8302  0018FC  CFE3 F06C          	movff	plusw1,btemp+1
  8303  001900  0EFB               	movlw	-5
  8304  001902  CFE3 F06D          	movff	plusw1,btemp+2
  8305  001906  0E06               	movlw	6
  8306  001908  246C               	addwf	btemp+1,w,c
  8307  00190A  6ED9               	movwf	fsr2l,c
  8308  00190C  0E00               	movlw	0
  8309  00190E  206D               	addwfc	btemp+2,w,c
  8310  001910  6EDA               	movwf	fsr2h,c
  8311  001912  0E83               	movlw	131
  8312  001914  18DE               	xorwf	postinc2,w,c
  8313  001916  B4D8               	btfsc	status,2,c
  8314  001918  D014               	goto	l5552
  8315                           
  8316                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8317  00191A  0EFA               	movlw	-6
  8318  00191C  CFE3 F06C          	movff	plusw1,btemp+1
  8319  001920  0EFB               	movlw	-5
  8320  001922  CFE3 F06D          	movff	plusw1,btemp+2
  8321  001926  0E06               	movlw	6
  8322  001928  246C               	addwf	btemp+1,w,c
  8323  00192A  6ED9               	movwf	fsr2l,c
  8324  00192C  0E00               	movlw	0
  8325  00192E  206D               	addwfc	btemp+2,w,c
  8326  001930  6EDA               	movwf	fsr2h,c
  8327  001932  0E96               	movlw	150
  8328  001934  18DE               	xorwf	postinc2,w,c
  8329  001936  B4D8               	btfsc	status,2,c
  8330  001938  D004               	goto	l5552
  8331  00193A                     l5548:
  8332                           
  8333                           ;RF24Network_cg.c: 313: return returnVal;
  8334                           ;stkvar	RF24N_update@returnVal @ sp[(-7)+3]
  8335  00193A  0EFC               	movlw	-4
  8336  00193C  CFE3 F06B          	movff	plusw1,btemp
  8337  001940  D0DC               	goto	l403
  8338  001942                     l5552:
  8339                           
  8340                           ;RF24Network_cg.c: 314: }
  8341                           ;RF24Network_cg.c: 315: }
  8342                           ;RF24Network_cg.c: 317: if( RF24N_enqueue(header) == 2 ){
  8343                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8344  001942  0EFA               	movlw	-6
  8345  001944  CFE3 F017          	movff	plusw1,RF24N_enqueue@header
  8346  001948  0EFB               	movlw	-5
  8347  00194A  CFE3 F018          	movff	plusw1,RF24N_enqueue@header+1
  8348  00194E  EC2B  F008         	call	_RF24N_enqueue	;wreg free
  8349  001952  0A02               	xorlw	2
  8350  001954  A4D8               	btfss	status,2,c
  8351  001956  D0BC               	goto	l5590
  8352                           
  8353                           ;RF24Network_cg.c: 321: return 131;
  8354  001958  0E83               	movlw	131
  8355  00195A                     L6:
  8356  00195A  6E6B               	movwf	btemp,c
  8357  00195C  D0CE               	goto	l403
  8358  00195E                     l5558:
  8359                           
  8360                           ;RF24Network_cg.c: 327: if( header->to_node == 0100){
  8361                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8362  00195E  0EFA               	movlw	-6
  8363  001960  CFE3 F06C          	movff	plusw1,btemp+1
  8364  001964  0EFB               	movlw	-5
  8365  001966  CFE3 F06D          	movff	plusw1,btemp+2
  8366  00196A  0E02               	movlw	2
  8367  00196C  246C               	addwf	btemp+1,w,c
  8368  00196E  6ED9               	movwf	fsr2l,c
  8369  001970  0E00               	movlw	0
  8370  001972  206D               	addwfc	btemp+2,w,c
  8371  001974  6EDA               	movwf	fsr2h,c
  8372  001976  0E40               	movlw	64
  8373  001978  18DE               	xorwf	postinc2,w,c
  8374  00197A  10DE               	iorwf	postinc2,w,c
  8375  00197C  A4D8               	btfss	status,2,c
  8376  00197E  D094               	goto	l5588
  8377                           
  8378                           ;RF24Network_cg.c: 328: uint8_t val;
  8379                           ;RF24Network_cg.c: 330: if(header->type == 194 ){
  8380                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8381  001980  0EFA               	movlw	-6
  8382  001982  CFE3 F06C          	movff	plusw1,btemp+1
  8383  001986  0EFB               	movlw	-5
  8384  001988  CFE3 F06D          	movff	plusw1,btemp+2
  8385  00198C  0E06               	movlw	6
  8386  00198E  246C               	addwf	btemp+1,w,c
  8387  001990  6ED9               	movwf	fsr2l,c
  8388  001992  0E00               	movlw	0
  8389  001994  206D               	addwfc	btemp+2,w,c
  8390  001996  6EDA               	movwf	fsr2h,c
  8391  001998  0EC2               	movlw	194
  8392  00199A  18DE               	xorwf	postinc2,w,c
  8393  00199C  A4D8               	btfss	status,2,c
  8394  00199E  D04B               	goto	l5574
  8395                           
  8396                           ;RF24Network_cg.c: 331: if( !(rn.networkFlags & 8) && rn.node_address != 04444 ){
  8397  0019A0  EE20  F0D0         	lfsr	2,_rn+42
  8398  0019A4  B6DF               	btfsc	indf2,3,c
  8399  0019A6  D094               	goto	l5590
  8400  0019A8  EE20  F0D6         	lfsr	2,_rn+48
  8401  0019AC  0E24               	movlw	36
  8402  0019AE  18DE               	xorwf	postinc2,w,c
  8403  0019B0  E104               	bnz	u7310
  8404  0019B2  0E09               	movlw	9
  8405  0019B4  18DE               	xorwf	postinc2,w,c
  8406  0019B6  B4D8               	btfsc	status,2,c
  8407  0019B8  D08B               	goto	l5590
  8408  0019BA                     u7310:
  8409                           
  8410                           ;RF24Network_cg.c: 332: header->to_node = header->from_node;
  8411                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8412  0019BA  0EFA               	movlw	-6
  8413  0019BC  CFE3 FFD9          	movff	plusw1,fsr2l
  8414  0019C0  0EFB               	movlw	-5
  8415  0019C2  CFE3 FFDA          	movff	plusw1,fsr2h
  8416                           
  8417                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8418  0019C6  0EFA               	movlw	-6
  8419  0019C8  CFE3 F06C          	movff	plusw1,btemp+1
  8420  0019CC  0EFB               	movlw	-5
  8421  0019CE  CFE3 F06D          	movff	plusw1,btemp+2
  8422  0019D2  0E02               	movlw	2
  8423  0019D4  246C               	addwf	btemp+1,w,c
  8424  0019D6  6EE9               	movwf	fsr0l,c
  8425  0019D8  0E00               	movlw	0
  8426  0019DA  206D               	addwfc	btemp+2,w,c
  8427  0019DC  6EEA               	movwf	fsr0h,c
  8428  0019DE  CFDE FFEE          	movff	postinc2,postinc0
  8429  0019E2  CFDD FFED          	movff	postdec2,postdec0
  8430                           
  8431                           ;RF24Network_cg.c: 333: header->from_node = rn.node_address;
  8432  0019E6  EE20  F0D6         	lfsr	2,_rn+48
  8433                           
  8434                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8435  0019EA  0EFA               	movlw	-6
  8436  0019EC  CFE3 FFE9          	movff	plusw1,fsr0l
  8437  0019F0  0EFB               	movlw	-5
  8438  0019F2  CFE3 FFEA          	movff	plusw1,fsr0h
  8439  0019F6  CFDE FFEE          	movff	postinc2,postinc0
  8440  0019FA  CFDD FFED          	movff	postdec2,postdec0
  8441                           
  8442                           ;RF24Network_cg.c: 334: delay(rn.parent_pipe);
  8443  0019FE  EE20  F0DD         	lfsr	2,_rn+55
  8444  001A02  50DF               	movf	indf2,w,c
  8445  001A04  6E03               	movwf	delay@val,c
  8446  001A06  6A04               	clrf	delay@val+1,c
  8447  001A08  ECA1  F019         	call	_delay	;wreg free
  8448                           
  8449                           ;RF24Network_cg.c: 335: RF24N_write(header->to_node,2);
  8450                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8451  001A0C  0EFA               	movlw	-6
  8452  001A0E  CFE3 F06C          	movff	plusw1,btemp+1
  8453  001A12  0EFB               	movlw	-5
  8454  001A14  CFE3 F06D          	movff	plusw1,btemp+2
  8455  001A18  0E02               	movlw	2
  8456  001A1A  246C               	addwf	btemp+1,w,c
  8457  001A1C  6ED9               	movwf	fsr2l,c
  8458  001A1E  0E00               	movlw	0
  8459  001A20  206D               	addwfc	btemp+2,w,c
  8460  001A22  6EDA               	movwf	fsr2h,c
  8461  001A24  CFDE F034          	movff	postinc2,RF24N_write@to_node
  8462  001A28  CFDD F035          	movff	postdec2,RF24N_write@to_node+1
  8463  001A2C  0E02               	movlw	2
  8464  001A2E  6E36               	movwf	RF24N_write@directTo,c
  8465  001A30  EC00  F010         	call	_RF24N_write	;wreg free
  8466  001A34  D04D               	goto	l5590
  8467  001A36                     l5574:
  8468                           
  8469                           ;RF24Network_cg.c: 338: }
  8470                           ;RF24Network_cg.c: 339: val = RF24N_enqueue(header);
  8471                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8472  001A36  0EFA               	movlw	-6
  8473  001A38  CFE3 F017          	movff	plusw1,RF24N_enqueue@header
  8474  001A3C  0EFB               	movlw	-5
  8475  001A3E  CFE3 F018          	movff	plusw1,RF24N_enqueue@header+1
  8476  001A42  EC2B  F008         	call	_RF24N_enqueue	;wreg free
  8477  001A46  6E76               	movwf	btemp+11,c
  8478                           
  8479                           ;stkvar	RF24N_update@val @ sp[(-7)+0]
  8480  001A48  0EF9               	movlw	-7
  8481  001A4A  C076  FFE3         	movff	btemp+11,plusw1
  8482                           
  8483                           ;RF24Network_cg.c: 341: if(rn.multicastRelay){
  8484  001A4E  EE20  F0A6         	lfsr	2,_rn
  8485  001A52  50DF               	movf	indf2,w,c
  8486  001A54  B4D8               	btfsc	status,2,c
  8487  001A56  D022               	goto	l5582
  8488                           
  8489                           ;RF24Network_cg.c: 342: ;
  8490                           ;RF24Network_cg.c: 343: RF24N_write(RF24N_levelToAddress(rn.multicast_level)<<3,4);
  8491  001A58  EE20  F0D5         	lfsr	2,_rn+47
  8492  001A5C  50DF               	movf	indf2,w,c
  8493  001A5E  EC56  F019         	call	_RF24N_levelToAddress
  8494  001A62  C003  F06C         	movff	?_RF24N_levelToAddress,btemp+1
  8495  001A66  C004  F06D         	movff	?_RF24N_levelToAddress+1,btemp+2
  8496  001A6A  90D8               	bcf	status,0,c
  8497  001A6C  366C               	rlcf	btemp+1,f,c
  8498  001A6E  366D               	rlcf	btemp+2,f,c
  8499  001A70  90D8               	bcf	status,0,c
  8500  001A72  366C               	rlcf	btemp+1,f,c
  8501  001A74  366D               	rlcf	btemp+2,f,c
  8502  001A76  90D8               	bcf	status,0,c
  8503  001A78  366C               	rlcf	btemp+1,f,c
  8504  001A7A  366D               	rlcf	btemp+2,f,c
  8505                           
  8506                           ;stkvar	_RF24N_update$3187 @ sp[(-7)+5]
  8507  001A7C  0EFE               	movlw	-2
  8508  001A7E  C06C  FFE3         	movff	btemp+1,plusw1
  8509  001A82  0EFF               	movlw	-1
  8510  001A84  C06D  FFE3         	movff	btemp+2,plusw1
  8511                           
  8512                           ;RF24Network_cg.c: 342: ;
  8513                           ;RF24Network_cg.c: 343: RF24N_write(RF24N_levelToAddress(rn.multicast_level)<<3,4);
  8514                           ;stkvar	_RF24N_update$3187 @ sp[(-7)+5]
  8515  001A88  0EFE               	movlw	-2
  8516  001A8A  CFE3 F034          	movff	plusw1,RF24N_write@to_node
  8517  001A8E  0EFF               	movlw	-1
  8518  001A90  CFE3 F035          	movff	plusw1,RF24N_write@to_node+1
  8519  001A94  0E04               	movlw	4
  8520  001A96  6E36               	movwf	RF24N_write@directTo,c
  8521  001A98  EC00  F010         	call	_RF24N_write	;wreg free
  8522  001A9C                     l5582:
  8523                           
  8524                           ;RF24Network_cg.c: 344: }
  8525                           ;RF24Network_cg.c: 345: if( val == 2 ){
  8526                           ;stkvar	RF24N_update@val @ sp[(-7)+0]
  8527  001A9C  0EF9               	movlw	-7
  8528  001A9E  CFE3 F06B          	movff	plusw1,btemp
  8529  001AA2  0E02               	movlw	2
  8530  001AA4  186B               	xorwf	btemp,w,c
  8531  001AA6  D756               	goto	L7
  8532  001AA8                     l5588:
  8533                           
  8534                           ;RF24Network_cg.c: 351: RF24N_write(header->to_node,1);
  8535                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  8536  001AA8  0EFA               	movlw	-6
  8537  001AAA  CFE3 F06C          	movff	plusw1,btemp+1
  8538  001AAE  0EFB               	movlw	-5
  8539  001AB0  CFE3 F06D          	movff	plusw1,btemp+2
  8540  001AB4  0E02               	movlw	2
  8541  001AB6  246C               	addwf	btemp+1,w,c
  8542  001AB8  6ED9               	movwf	fsr2l,c
  8543  001ABA  0E00               	movlw	0
  8544  001ABC  206D               	addwfc	btemp+2,w,c
  8545  001ABE  6EDA               	movwf	fsr2h,c
  8546  001AC0  CFDE F034          	movff	postinc2,RF24N_write@to_node
  8547  001AC4  CFDD F035          	movff	postdec2,RF24N_write@to_node+1
  8548  001AC8  0E01               	movlw	1
  8549  001ACA  6E36               	movwf	RF24N_write@directTo,c
  8550  001ACC  EC00  F010         	call	_RF24N_write	;wreg free
  8551  001AD0                     l5590:
  8552  001AD0  EC30  F01C         	call	_RF24_isValid	;wreg free
  8553  001AD4  0900               	iorlw	0
  8554  001AD6  B4D8               	btfsc	status,2,c
  8555  001AD8  D730               	goto	l5548
  8556                           
  8557                           ;stkvar	RF24N_update@pipe_num @ sp[(-7)+4]
  8558  001ADA  0EFD               	movlw	253
  8559  001ADC  24E1               	addwf	fsr1l,w,c
  8560  001ADE  6E6C               	movwf	btemp+1,c
  8561  001AE0  0EFF               	movlw	255
  8562  001AE2  20E2               	addwfc	fsr1h,w,c
  8563  001AE4  6E6D               	movwf	btemp+2,c
  8564  001AE6  C06C  F012         	movff	btemp+1,RF24_available_p@pipe_num
  8565  001AEA  C06D  F013         	movff	btemp+2,RF24_available_p@pipe_num+1
  8566  001AEE  ECEF  F01A         	call	_RF24_available_p	;wreg free
  8567  001AF2  0900               	iorlw	0
  8568  001AF4  B4D8               	btfsc	status,2,c
  8569  001AF6  D721               	goto	l5548
  8570  001AF8  D5A1               	goto	l5488
  8571  001AFA                     l403:
  8572                           
  8573                           ; _RF24N_update: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8574  001AFA  0EF9               	movlw	249
  8575  001AFC  26E1               	addwf	fsr1l,f,c
  8576  001AFE  0EFF               	movlw	255
  8577  001B00  22E2               	addwfc	fsr1h,f,c
  8578  001B02  0012               	return		;funcret
  8579  001B04                     __end_of_RF24N_update:
  8580                           	opt stack 0
  8581                           tblptru	equ	0xFF8
  8582                           tblptrh	equ	0xFF7
  8583                           tblptrl	equ	0xFF6
  8584                           tablat	equ	0xFF5
  8585                           prodh	equ	0xFF4
  8586                           prodl	equ	0xFF3
  8587                           intcon	equ	0xFF2
  8588                           indf0	equ	0xFEF
  8589                           postinc0	equ	0xFEE
  8590                           postdec0	equ	0xFED
  8591                           plusw0	equ	0xFEB
  8592                           fsr0h	equ	0xFEA
  8593                           fsr0l	equ	0xFE9
  8594                           wreg	equ	0xFE8
  8595                           plusw1	equ	0xFE3
  8596                           fsr1h	equ	0xFE2
  8597                           fsr1l	equ	0xFE1
  8598                           indf2	equ	0xFDF
  8599                           postinc2	equ	0xFDE
  8600                           postdec2	equ	0xFDD
  8601                           plusw2	equ	0xFDB
  8602                           fsr2h	equ	0xFDA
  8603                           fsr2l	equ	0xFD9
  8604                           status	equ	0xFD8
  8605                           
  8606 ;; *************** function _delay *****************
  8607 ;; Defined at:
  8608 ;;		line 181 in file "../../../RF24_c/utility/XC8/spi.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;  val             2    2[COMRAM] unsigned int 
  8611 ;; Auto vars:     Size  Location     Type
  8612 ;;  j               2    6[COMRAM] unsigned int 
  8613 ;;  i               2    4[COMRAM] unsigned int 
  8614 ;; Return value:  Size  Location     Type
  8615 ;;                  1    wreg      void 
  8616 ;; Registers used:
  8617 ;;		wreg, status,2, status,0
  8618 ;; Tracked objects:
  8619 ;;		On entry : 0/0
  8620 ;;		On exit  : 0/0
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8624 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8626 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8627 ;;Total ram usage:        6 bytes
  8628 ;; Hardware stack levels used:    1
  8629 ;; Hardware stack levels required when called:    1
  8630 ;; This function calls:
  8631 ;;		Nothing
  8632 ;; This function is called by:
  8633 ;;		_RF24N_update
  8634 ;;		_RF24_begin
  8635 ;;		_RF24_powerUp
  8636 ;;		_RF24_getDynamicPayloadSize
  8637 ;;		_RF24N_write_
  8638 ;; This function uses a non-reentrant model
  8639 ;;
  8640                           
  8641                           	psect	text49
  8642  003342                     __ptext49:
  8643                           	opt stack 0
  8644  003342                     _delay:
  8645                           	opt stack 27
  8646                           
  8647                           ;spi.c: 183: unsigned int i;
  8648                           ;spi.c: 184: unsigned int j;
  8649                           ;spi.c: 186: for (i =0; i< val; i++)
  8650                           
  8651                           ;incstack = 0
  8652  003342  0E00               	movlw	0
  8653  003344  6E06               	movwf	delay@i+1,c
  8654  003346  0E00               	movlw	0
  8655  003348  6E05               	movwf	delay@i,c
  8656  00334A  D019               	goto	l5208
  8657  00334C                     l5196:
  8658                           
  8659                           ;spi.c: 187: {
  8660                           ;spi.c: 189: for (j =0 ; j < (32000000/(4000l*10)); j++)
  8661  00334C  0E00               	movlw	0
  8662  00334E  6E08               	movwf	delay@j+1,c
  8663  003350  0E00               	movlw	0
  8664  003352  6E07               	movwf	delay@j,c
  8665  003354                     l5198:
  8666  003354  0E20               	movlw	32
  8667  003356  5C07               	subwf	delay@j,w,c
  8668  003358  0E03               	movlw	3
  8669  00335A  5808               	subwfb	delay@j+1,w,c
  8670  00335C  B0D8               	btfsc	status,0,c
  8671  00335E  D00D               	goto	l5206
  8672  003360  F000               	nop		;# 
  8673  003362  F000               	nop		;# 
  8674  003364  F000               	nop		;# 
  8675  003366  F000               	nop		;# 
  8676  003368  F000               	nop		;# 
  8677  00336A  F000               	nop		;# 
  8678  00336C  F000               	nop		;# 
  8679  00336E  F000               	nop		;# 
  8680  003370  F000               	nop		;# 
  8681  003372  F000               	nop		;# 
  8682  003374  4A07               	infsnz	delay@j,f,c
  8683  003376  2A08               	incf	delay@j+1,f,c
  8684  003378  D7ED               	goto	l5198
  8685  00337A                     l5206:
  8686  00337A  4A05               	infsnz	delay@i,f,c
  8687  00337C  2A06               	incf	delay@i+1,f,c
  8688  00337E                     l5208:
  8689  00337E  5003               	movf	delay@val,w,c
  8690  003380  5C05               	subwf	delay@i,w,c
  8691  003382  5004               	movf	delay@val+1,w,c
  8692  003384  5806               	subwfb	delay@i+1,w,c
  8693  003386  B0D8               	btfsc	status,0,c
  8694  003388  0012               	return	
  8695  00338A  D7E0               	goto	l5196
  8696  00338C                     __end_of_delay:
  8697                           	opt stack 0
  8698                           tblptru	equ	0xFF8
  8699                           tblptrh	equ	0xFF7
  8700                           tblptrl	equ	0xFF6
  8701                           tablat	equ	0xFF5
  8702                           prodh	equ	0xFF4
  8703                           prodl	equ	0xFF3
  8704                           intcon	equ	0xFF2
  8705                           indf0	equ	0xFEF
  8706                           postinc0	equ	0xFEE
  8707                           postdec0	equ	0xFED
  8708                           plusw0	equ	0xFEB
  8709                           fsr0h	equ	0xFEA
  8710                           fsr0l	equ	0xFE9
  8711                           wreg	equ	0xFE8
  8712                           plusw1	equ	0xFE3
  8713                           fsr1h	equ	0xFE2
  8714                           fsr1l	equ	0xFE1
  8715                           indf2	equ	0xFDF
  8716                           postinc2	equ	0xFDE
  8717                           postdec2	equ	0xFDD
  8718                           plusw2	equ	0xFDB
  8719                           fsr2h	equ	0xFDA
  8720                           fsr2l	equ	0xFD9
  8721                           status	equ	0xFD8
  8722                           
  8723 ;; *************** function _RF24_write_register_d *****************
  8724 ;; Defined at:
  8725 ;;		line 194 in file "../../../RF24_c/RF24_cg.c"
  8726 ;; Parameters:    Size  Location     Type
  8727 ;;  reg             1    wreg     unsigned char 
  8728 ;;  value           1   17[COMRAM] unsigned char 
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;  reg             1   18[COMRAM] unsigned char 
  8731 ;;  status          1   19[COMRAM] unsigned char 
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  1    wreg      unsigned char 
  8734 ;; Registers used:
  8735 ;;		wreg, status,2, status,0, cstack
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8741 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8742 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8744 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8745 ;;Total ram usage:        3 bytes
  8746 ;; Hardware stack levels used:    1
  8747 ;; Hardware stack levels required when called:    4
  8748 ;; This function calls:
  8749 ;;		_RF24_beginTransaction
  8750 ;;		_RF24_endTransaction
  8751 ;;		_SPI_transfer
  8752 ;; This function is called by:
  8753 ;;		_RF24_setChannel
  8754 ;;		_RF24_begin
  8755 ;;		_RF24_startListening
  8756 ;;		_RF24_stopListening
  8757 ;;		_RF24_powerUp
  8758 ;;		_RF24_writeFast_m
  8759 ;;		_RF24_txStandBy_t
  8760 ;;		_RF24_read
  8761 ;;		_RF24_openWritingPipe_d
  8762 ;;		_RF24_openReadingPipe_d
  8763 ;;		_RF24_closeReadingPipe
  8764 ;;		_RF24_enableDynamicPayloads
  8765 ;;		_RF24_setAutoAck_p
  8766 ;;		_RF24_setDataRate
  8767 ;;		_RF24_setRetries
  8768 ;;		_RF24_powerDown
  8769 ;;		_RF24_write_m
  8770 ;;		_RF24_reUseTX
  8771 ;;		_RF24_txStandBy
  8772 ;;		_RF24_maskIRQ
  8773 ;;		_RF24_whatHappened
  8774 ;;		_RF24_openWritingPipe
  8775 ;;		_RF24_setAddressWidth
  8776 ;;		_RF24_openReadingPipe
  8777 ;;		_RF24_enableAckPayload
  8778 ;;		_RF24_enableDynamicAck
  8779 ;;		_RF24_setAutoAck
  8780 ;;		_RF24_setPALevel
  8781 ;;		_RF24_setCRCLength
  8782 ;;		_RF24_disableCRC
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text50
  8787  0037D2                     __ptext50:
  8788                           	opt stack 0
  8789  0037D2                     _RF24_write_register_d:
  8790                           	opt stack 24
  8791                           
  8792                           ;incstack = 0
  8793                           ;RF24_write_register_d@reg stored from wreg
  8794  0037D2  6E13               	movwf	RF24_write_register_d@reg,c
  8795                           
  8796                           ;RF24_cg.c: 196: uint8_t status;
  8797                           ;RF24_cg.c: 198: ;
  8798                           ;RF24_cg.c: 212: RF24_beginTransaction();
  8799  0037D4  EC91  F01C         	call	_RF24_beginTransaction	;wreg free
  8800                           
  8801                           ;RF24_cg.c: 213: status = SPI_transfer( 0x20 | ( 0x1F & reg ) );
  8802  0037D8  5013               	movf	RF24_write_register_d@reg,w,c
  8803  0037DA  0B1F               	andlw	31
  8804  0037DC  0920               	iorlw	32
  8805  0037DE  EC70  F01C         	call	_SPI_transfer
  8806  0037E2  6E14               	movwf	RF24_write_register_d@status,c
  8807                           
  8808                           ;RF24_cg.c: 214: SPI_transfer(value);
  8809  0037E4  5012               	movf	RF24_write_register_d@value,w,c
  8810  0037E6  EC70  F01C         	call	_SPI_transfer
  8811                           
  8812                           ;RF24_cg.c: 215: RF24_endTransaction();
  8813  0037EA  EC8D  F01C         	call	_RF24_endTransaction	;wreg free
  8814                           
  8815                           ;RF24_cg.c: 219: return status;
  8816  0037EE  5014               	movf	RF24_write_register_d@status,w,c
  8817  0037F0  0012               	return	
  8818  0037F2                     __end_of_RF24_write_register_d:
  8819                           	opt stack 0
  8820                           tblptru	equ	0xFF8
  8821                           tblptrh	equ	0xFF7
  8822                           tblptrl	equ	0xFF6
  8823                           tablat	equ	0xFF5
  8824                           prodh	equ	0xFF4
  8825                           prodl	equ	0xFF3
  8826                           intcon	equ	0xFF2
  8827                           indf0	equ	0xFEF
  8828                           postinc0	equ	0xFEE
  8829                           postdec0	equ	0xFED
  8830                           plusw0	equ	0xFEB
  8831                           fsr0h	equ	0xFEA
  8832                           fsr0l	equ	0xFE9
  8833                           wreg	equ	0xFE8
  8834                           plusw1	equ	0xFE3
  8835                           fsr1h	equ	0xFE2
  8836                           fsr1l	equ	0xFE1
  8837                           indf2	equ	0xFDF
  8838                           postinc2	equ	0xFDE
  8839                           postdec2	equ	0xFDD
  8840                           plusw2	equ	0xFDB
  8841                           fsr2h	equ	0xFDA
  8842                           fsr2l	equ	0xFD9
  8843                           status	equ	0xFD8
  8844                           
  8845 ;; *************** function _RF24_isValid *****************
  8846 ;; Defined at:
  8847 ;;		line 1420 in file "../../../RF24_c/RF24_cg.c"
  8848 ;; Parameters:    Size  Location     Type
  8849 ;;		None
  8850 ;; Auto vars:     Size  Location     Type
  8851 ;;		None
  8852 ;; Return value:  Size  Location     Type
  8853 ;;                  1    wreg      unsigned char 
  8854 ;; Registers used:
  8855 ;;		wreg, status,2, status,0
  8856 ;; Tracked objects:
  8857 ;;		On entry : 0/0
  8858 ;;		On exit  : 0/0
  8859 ;;		Unchanged: 0/0
  8860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8864 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8865 ;;Total ram usage:        1 bytes
  8866 ;; Hardware stack levels used:    1
  8867 ;; Hardware stack levels required when called:    1
  8868 ;; This function calls:
  8869 ;;		Nothing
  8870 ;; This function is called by:
  8871 ;;		_RF24N_begin_d
  8872 ;;		_RF24N_update
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           	psect	text51
  8877  003860                     __ptext51:
  8878                           	opt stack 0
  8879  003860                     _RF24_isValid:
  8880                           	opt stack 27
  8881                           
  8882                           ;RF24_cg.c: 1422: return rf.ce_pin != 0xff && rf.csn_pin != 0xff;
  8883                           
  8884                           ;incstack = 0
  8885  003860  0E00               	movlw	0
  8886  003862  6E03               	movwf	_RF24_isValid$2441,c
  8887  003864  283D               	incf	_rf,w,c
  8888  003866  B4D8               	btfsc	status,2,c
  8889  003868  D005               	goto	l944
  8890  00386A  283E               	incf	_rf+1,w,c
  8891  00386C  B4D8               	btfsc	status,2,c
  8892  00386E  D002               	goto	l944
  8893  003870  0E01               	movlw	1
  8894  003872  6E03               	movwf	_RF24_isValid$2441,c
  8895  003874                     l944:
  8896  003874  5003               	movf	_RF24_isValid$2441,w,c
  8897  003876  0012               	return	
  8898  003878                     __end_of_RF24_isValid:
  8899                           	opt stack 0
  8900                           tblptru	equ	0xFF8
  8901                           tblptrh	equ	0xFF7
  8902                           tblptrl	equ	0xFF6
  8903                           tablat	equ	0xFF5
  8904                           prodh	equ	0xFF4
  8905                           prodl	equ	0xFF3
  8906                           intcon	equ	0xFF2
  8907                           indf0	equ	0xFEF
  8908                           postinc0	equ	0xFEE
  8909                           postdec0	equ	0xFED
  8910                           plusw0	equ	0xFEB
  8911                           fsr0h	equ	0xFEA
  8912                           fsr0l	equ	0xFE9
  8913                           wreg	equ	0xFE8
  8914                           plusw1	equ	0xFE3
  8915                           fsr1h	equ	0xFE2
  8916                           fsr1l	equ	0xFE1
  8917                           indf2	equ	0xFDF
  8918                           postinc2	equ	0xFDE
  8919                           postdec2	equ	0xFDD
  8920                           plusw2	equ	0xFDB
  8921                           fsr2h	equ	0xFDA
  8922                           fsr2l	equ	0xFD9
  8923                           status	equ	0xFD8
  8924                           
  8925 ;; *************** function _RF24_available_p *****************
  8926 ;; Defined at:
  8927 ;;		line 1098 in file "../../../RF24_c/RF24_cg.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;  pipe_num        2   17[COMRAM] PTR unsigned char 
  8930 ;;		 -> NULL(0), RF24N_update@pipe_num(1), 
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;  status          1   20[COMRAM] unsigned char 
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  1    wreg      unsigned char 
  8935 ;; Registers used:
  8936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8945 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8946 ;;Total ram usage:        4 bytes
  8947 ;; Hardware stack levels used:    1
  8948 ;; Hardware stack levels required when called:    6
  8949 ;; This function calls:
  8950 ;;		_RF24_get_status
  8951 ;;		_RF24_read_register_d
  8952 ;; This function is called by:
  8953 ;;		_RF24N_update
  8954 ;;		_RF24_available
  8955 ;; This function uses a non-reentrant model
  8956 ;;
  8957                           
  8958                           	psect	text52
  8959  0035DE                     __ptext52:
  8960                           	opt stack 0
  8961  0035DE                     _RF24_available_p:
  8962                           	opt stack 22
  8963                           
  8964                           ;RF24_cg.c: 1100: if (!( RF24_read_register_d(0x17) & (1<<(0)) )){
  8965                           
  8966                           ;incstack = 0
  8967  0035DE  0E17               	movlw	23
  8968  0035E0  ECF9  F01B         	call	_RF24_read_register_d
  8969  0035E4  6E14               	movwf	??_RF24_available_p& (0+255),c
  8970  0035E6  B014               	btfsc	??_RF24_available_p,0,c
  8971  0035E8  D011               	goto	l5382
  8972                           
  8973                           ;RF24_cg.c: 1103: if ( pipe_num ){
  8974  0035EA  5012               	movf	RF24_available_p@pipe_num,w,c
  8975  0035EC  1013               	iorwf	RF24_available_p@pipe_num+1,w,c
  8976  0035EE  B4D8               	btfsc	status,2,c
  8977  0035F0  D00B               	goto	l5378
  8978                           
  8979                           ;RF24_cg.c: 1104: uint8_t status = RF24_get_status();
  8980  0035F2  EC89  F01C         	call	_RF24_get_status	;wreg free
  8981  0035F6  6E15               	movwf	RF24_available_p@status,c
  8982                           
  8983                           ;RF24_cg.c: 1105: *pipe_num = ( status >> 1 ) & 0b111;
  8984  0035F8  90D8               	bcf	status,0,c
  8985  0035FA  3015               	rrcf	RF24_available_p@status,w,c
  8986  0035FC  0B07               	andlw	7
  8987  0035FE  C012  FFD9         	movff	RF24_available_p@pipe_num,fsr2l
  8988  003602  C013  FFDA         	movff	RF24_available_p@pipe_num+1,fsr2h
  8989  003606  6EDF               	movwf	indf2,c
  8990  003608                     l5378:
  8991                           
  8992                           ;RF24_cg.c: 1106: }
  8993                           ;RF24_cg.c: 1107: return 1;
  8994  003608  0E01               	movlw	1
  8995  00360A  0012               	return	
  8996  00360C                     l5382:
  8997                           
  8998                           ;RF24_cg.c: 1108: }
  8999                           ;RF24_cg.c: 1111: return 0;
  9000  00360C  0E00               	movlw	0
  9001  00360E  0012               	return	
  9002  003610                     __end_of_RF24_available_p:
  9003                           	opt stack 0
  9004                           tblptru	equ	0xFF8
  9005                           tblptrh	equ	0xFF7
  9006                           tblptrl	equ	0xFF6
  9007                           tablat	equ	0xFF5
  9008                           prodh	equ	0xFF4
  9009                           prodl	equ	0xFF3
  9010                           intcon	equ	0xFF2
  9011                           indf0	equ	0xFEF
  9012                           postinc0	equ	0xFEE
  9013                           postdec0	equ	0xFED
  9014                           plusw0	equ	0xFEB
  9015                           fsr0h	equ	0xFEA
  9016                           fsr0l	equ	0xFE9
  9017                           wreg	equ	0xFE8
  9018                           plusw1	equ	0xFE3
  9019                           fsr1h	equ	0xFE2
  9020                           fsr1l	equ	0xFE1
  9021                           indf2	equ	0xFDF
  9022                           postinc2	equ	0xFDE
  9023                           postdec2	equ	0xFDD
  9024                           plusw2	equ	0xFDB
  9025                           fsr2h	equ	0xFDA
  9026                           fsr2l	equ	0xFD9
  9027                           status	equ	0xFD8
  9028                           
  9029 ;; *************** function _RF24_get_status *****************
  9030 ;; Defined at:
  9031 ;;		line 355 in file "../../../RF24_c/RF24_cg.c"
  9032 ;; Parameters:    Size  Location     Type
  9033 ;;		None
  9034 ;; Auto vars:     Size  Location     Type
  9035 ;;		None
  9036 ;; Return value:  Size  Location     Type
  9037 ;;                  1    wreg      unsigned char 
  9038 ;; Registers used:
  9039 ;;		wreg, status,2, status,0, cstack
  9040 ;; Tracked objects:
  9041 ;;		On entry : 0/0
  9042 ;;		On exit  : 0/0
  9043 ;;		Unchanged: 0/0
  9044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9049 ;;Total ram usage:        0 bytes
  9050 ;; Hardware stack levels used:    1
  9051 ;; Hardware stack levels required when called:    5
  9052 ;; This function calls:
  9053 ;;		_RF24_spiTrans
  9054 ;; This function is called by:
  9055 ;;		_RF24_writeFast_m
  9056 ;;		_RF24_txStandBy_t
  9057 ;;		_RF24_available_p
  9058 ;;		_RF24_write_m
  9059 ;;		_RF24_writeBlocking
  9060 ;;		_RF24_txStandBy
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064                           	psect	text53
  9065  003912                     __ptext53:
  9066                           	opt stack 0
  9067  003912                     _RF24_get_status:
  9068                           	opt stack 22
  9069                           
  9070                           ;RF24_cg.c: 357: return RF24_spiTrans( 0xFF);
  9071                           
  9072                           ;incstack = 0
  9073  003912  0EFF               	movlw	255
  9074  003914  EC47  F01C         	call	_RF24_spiTrans
  9075  003918  0012               	return	
  9076  00391A                     __end_of_RF24_get_status:
  9077                           	opt stack 0
  9078                           tblptru	equ	0xFF8
  9079                           tblptrh	equ	0xFF7
  9080                           tblptrl	equ	0xFF6
  9081                           tablat	equ	0xFF5
  9082                           prodh	equ	0xFF4
  9083                           prodl	equ	0xFF3
  9084                           intcon	equ	0xFF2
  9085                           indf0	equ	0xFEF
  9086                           postinc0	equ	0xFEE
  9087                           postdec0	equ	0xFED
  9088                           plusw0	equ	0xFEB
  9089                           fsr0h	equ	0xFEA
  9090                           fsr0l	equ	0xFE9
  9091                           wreg	equ	0xFE8
  9092                           plusw1	equ	0xFE3
  9093                           fsr1h	equ	0xFE2
  9094                           fsr1l	equ	0xFE1
  9095                           indf2	equ	0xFDF
  9096                           postinc2	equ	0xFDE
  9097                           postdec2	equ	0xFDD
  9098                           plusw2	equ	0xFDB
  9099                           fsr2h	equ	0xFDA
  9100                           fsr2l	equ	0xFD9
  9101                           status	equ	0xFD8
  9102                           
  9103 ;; *************** function _RF24N_levelToAddress *****************
  9104 ;; Defined at:
  9105 ;;		line 1346 in file "../../RF24Network_cg.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;  level           1    wreg     unsigned char 
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;  level           1    7[COMRAM] unsigned char 
  9110 ;;  levelAddr       2    8[COMRAM] unsigned int 
  9111 ;; Return value:  Size  Location     Type
  9112 ;;                  2    2[COMRAM] unsigned int 
  9113 ;; Registers used:
  9114 ;;		wreg, status,2, status,0, prodl, prodh
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/0
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9121 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9122 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9123 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9124 ;;Total ram usage:        8 bytes
  9125 ;; Hardware stack levels used:    1
  9126 ;; Hardware stack levels required when called:    1
  9127 ;; This function calls:
  9128 ;;		Nothing
  9129 ;; This function is called by:
  9130 ;;		_RF24N_update
  9131 ;;		_RF24N_multicast
  9132 ;;		_RF24N_multicastLevel
  9133 ;; This function uses a non-reentrant model
  9134 ;;
  9135                           
  9136                           	psect	text54
  9137  0032AC                     __ptext54:
  9138                           	opt stack 0
  9139  0032AC                     _RF24N_levelToAddress:
  9140                           	opt stack 27
  9141                           
  9142                           ;incstack = 0
  9143                           ;RF24N_levelToAddress@level stored from wreg
  9144  0032AC  6E08               	movwf	RF24N_levelToAddress@level,c
  9145                           
  9146                           ;RF24Network_cg.c: 1348: uint16_t levelAddr = 1;
  9147  0032AE  0E00               	movlw	0
  9148  0032B0  6E0A               	movwf	RF24N_levelToAddress@levelAddr+1,c
  9149  0032B2  0E01               	movlw	1
  9150  0032B4  6E09               	movwf	RF24N_levelToAddress@levelAddr,c
  9151                           
  9152                           ;RF24Network_cg.c: 1349: if(level){
  9153  0032B6  5008               	movf	RF24N_levelToAddress@level,w,c
  9154  0032B8  B4D8               	btfsc	status,2,c
  9155  0032BA  D014               	goto	l6006
  9156                           
  9157                           ;RF24Network_cg.c: 1350: levelAddr = levelAddr << ((level-1) * 3);
  9158  0032BC  0408               	decf	RF24N_levelToAddress@level,w,c
  9159  0032BE  0D03               	mullw	3
  9160  0032C0  CFF3 F005          	movff	prodl,??_RF24N_levelToAddress
  9161  0032C4  C009  F006         	movff	RF24N_levelToAddress@levelAddr,??_RF24N_levelToAddress+1
  9162  0032C8  C00A  F007         	movff	RF24N_levelToAddress@levelAddr+1,??_RF24N_levelToAddress+2
  9163  0032CC  2A05               	incf	??_RF24N_levelToAddress,f,c
  9164  0032CE  D003               	goto	u8014
  9165  0032D0                     u8015:
  9166  0032D0  90D8               	bcf	status,0,c
  9167  0032D2  3606               	rlcf	??_RF24N_levelToAddress+1,f,c
  9168  0032D4  3607               	rlcf	??_RF24N_levelToAddress+2,f,c
  9169  0032D6                     u8014:
  9170  0032D6  2E05               	decfsz	??_RF24N_levelToAddress,f,c
  9171  0032D8  D7FB               	goto	u8015
  9172  0032DA  C006  F009         	movff	??_RF24N_levelToAddress+1,RF24N_levelToAddress@levelAddr
  9173  0032DE  C007  F00A         	movff	??_RF24N_levelToAddress+2,RF24N_levelToAddress@levelAddr+1
  9174                           
  9175                           ;RF24Network_cg.c: 1351: }else{
  9176  0032E2  D005               	goto	l593
  9177  0032E4                     l6006:
  9178                           
  9179                           ;RF24Network_cg.c: 1352: return 0;
  9180  0032E4  0E00               	movlw	0
  9181  0032E6  6E04               	movwf	?_RF24N_levelToAddress+1,c
  9182  0032E8  0E00               	movlw	0
  9183  0032EA  6E03               	movwf	?_RF24N_levelToAddress,c
  9184  0032EC  0012               	return	
  9185  0032EE                     l593:
  9186                           
  9187                           ;RF24Network_cg.c: 1353: }
  9188                           ;RF24Network_cg.c: 1354: return levelAddr;
  9189  0032EE  C009  F003         	movff	RF24N_levelToAddress@levelAddr,?_RF24N_levelToAddress
  9190  0032F2  C00A  F004         	movff	RF24N_levelToAddress@levelAddr+1,?_RF24N_levelToAddress+1
  9191  0032F6  0012               	return		;funcret
  9192  0032F8                     __end_of_RF24N_levelToAddress:
  9193                           	opt stack 0
  9194                           tblptru	equ	0xFF8
  9195                           tblptrh	equ	0xFF7
  9196                           tblptrl	equ	0xFF6
  9197                           tablat	equ	0xFF5
  9198                           prodh	equ	0xFF4
  9199                           prodl	equ	0xFF3
  9200                           intcon	equ	0xFF2
  9201                           indf0	equ	0xFEF
  9202                           postinc0	equ	0xFEE
  9203                           postdec0	equ	0xFED
  9204                           plusw0	equ	0xFEB
  9205                           fsr0h	equ	0xFEA
  9206                           fsr0l	equ	0xFE9
  9207                           wreg	equ	0xFE8
  9208                           plusw1	equ	0xFE3
  9209                           fsr1h	equ	0xFE2
  9210                           fsr1l	equ	0xFE1
  9211                           indf2	equ	0xFDF
  9212                           postinc2	equ	0xFDE
  9213                           postdec2	equ	0xFDD
  9214                           plusw2	equ	0xFDB
  9215                           fsr2h	equ	0xFDA
  9216                           fsr2l	equ	0xFD9
  9217                           status	equ	0xFD8
  9218                           
  9219 ;; *************** function _RF24N_is_valid_address *****************
  9220 ;; Defined at:
  9221 ;;		line 1312 in file "../../RF24Network_cg.c"
  9222 ;; Parameters:    Size  Location     Type
  9223 ;;  node            2    2[COMRAM] unsigned int 
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;  digit           1    4[COMRAM] unsigned char 
  9226 ;;  result          1    5[COMRAM] unsigned char 
  9227 ;; Return value:  Size  Location     Type
  9228 ;;                  1    wreg      unsigned char 
  9229 ;; Registers used:
  9230 ;;		wreg, status,2, status,0
  9231 ;; Tracked objects:
  9232 ;;		On entry : 0/0
  9233 ;;		On exit  : 0/0
  9234 ;;		Unchanged: 0/0
  9235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9237 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9239 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9240 ;;Total ram usage:        4 bytes
  9241 ;; Hardware stack levels used:    1
  9242 ;; Hardware stack levels required when called:    1
  9243 ;; This function calls:
  9244 ;;		Nothing
  9245 ;; This function is called by:
  9246 ;;		_RF24N_begin_d
  9247 ;;		_RF24N_update
  9248 ;;		_RF24N_write
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           	psect	text55
  9253  00353E                     __ptext55:
  9254                           	opt stack 0
  9255  00353E                     _RF24N_is_valid_address:
  9256                           	opt stack 27
  9257                           
  9258                           ;RF24Network_cg.c: 1314: uint8_t result = 1;
  9259                           
  9260                           ;incstack = 0
  9261  00353E  0E01               	movlw	1
  9262  003540  6E06               	movwf	RF24N_is_valid_address@result,c
  9263                           
  9264                           ;RF24Network_cg.c: 1316: while(node)
  9265  003542  D012               	goto	l5606
  9266  003544                     l5600:
  9267                           
  9268                           ;RF24Network_cg.c: 1317: {
  9269                           ;RF24Network_cg.c: 1318: uint8_t digit = node & 0x07;
  9270  003544  5003               	movf	RF24N_is_valid_address@node,w,c
  9271  003546  0B07               	andlw	7
  9272  003548  6E05               	movwf	RF24N_is_valid_address@digit,c
  9273                           
  9274                           ;RF24Network_cg.c: 1322: if ( (digit > 5))
  9275  00354A  0E05               	movlw	5
  9276  00354C  6405               	cpfsgt	RF24N_is_valid_address@digit,c
  9277  00354E  D003               	goto	l5604
  9278                           
  9279                           ;RF24Network_cg.c: 1324: {
  9280                           ;RF24Network_cg.c: 1325: result = 0;
  9281  003550  0E00               	movlw	0
  9282  003552  6E06               	movwf	RF24N_is_valid_address@result,c
  9283                           
  9284                           ;RF24Network_cg.c: 1326: ;
  9285                           ;RF24Network_cg.c: 1327: break;
  9286  003554  D00D               	goto	l5608
  9287  003556                     l5604:
  9288                           
  9289                           ;RF24Network_cg.c: 1328: }
  9290                           ;RF24Network_cg.c: 1329: node >>= 3;
  9291  003556  90D8               	bcf	status,0,c
  9292  003558  3204               	rrcf	RF24N_is_valid_address@node+1,f,c
  9293  00355A  3203               	rrcf	RF24N_is_valid_address@node,f,c
  9294  00355C  90D8               	bcf	status,0,c
  9295  00355E  3204               	rrcf	RF24N_is_valid_address@node+1,f,c
  9296  003560  3203               	rrcf	RF24N_is_valid_address@node,f,c
  9297  003562  90D8               	bcf	status,0,c
  9298  003564  3204               	rrcf	RF24N_is_valid_address@node+1,f,c
  9299  003566  3203               	rrcf	RF24N_is_valid_address@node,f,c
  9300  003568                     l5606:
  9301  003568  5003               	movf	RF24N_is_valid_address@node,w,c
  9302  00356A  1004               	iorwf	RF24N_is_valid_address@node+1,w,c
  9303  00356C  A4D8               	btfss	status,2,c
  9304  00356E  D7EA               	goto	l5600
  9305  003570                     l5608:
  9306                           
  9307                           ;RF24Network_cg.c: 1330: }
  9308                           ;RF24Network_cg.c: 1332: return result;
  9309  003570  5006               	movf	RF24N_is_valid_address@result,w,c
  9310  003572  0012               	return	
  9311  003574                     __end_of_RF24N_is_valid_address:
  9312                           	opt stack 0
  9313                           tblptru	equ	0xFF8
  9314                           tblptrh	equ	0xFF7
  9315                           tblptrl	equ	0xFF6
  9316                           tablat	equ	0xFF5
  9317                           prodh	equ	0xFF4
  9318                           prodl	equ	0xFF3
  9319                           intcon	equ	0xFF2
  9320                           indf0	equ	0xFEF
  9321                           postinc0	equ	0xFEE
  9322                           postdec0	equ	0xFED
  9323                           plusw0	equ	0xFEB
  9324                           fsr0h	equ	0xFEA
  9325                           fsr0l	equ	0xFE9
  9326                           wreg	equ	0xFE8
  9327                           plusw1	equ	0xFE3
  9328                           fsr1h	equ	0xFE2
  9329                           fsr1l	equ	0xFE1
  9330                           indf2	equ	0xFDF
  9331                           postinc2	equ	0xFDE
  9332                           postdec2	equ	0xFDD
  9333                           plusw2	equ	0xFDB
  9334                           fsr2h	equ	0xFDA
  9335                           fsr2l	equ	0xFD9
  9336                           status	equ	0xFD8
  9337                           
  9338 ;; *************** function _RF24N_enqueue *****************
  9339 ;; Defined at:
  9340 ;;		line 527 in file "../../RF24Network_cg.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;  header          2   22[COMRAM] PTR struct .
  9343 ;;		 -> rn.frame_buffer(32), rn(370), 
  9344 ;; Auto vars:     Size  Location     Type
  9345 ;;  padding         1   32[COMRAM] unsigned char 
  9346 ;;  padding         1   33[COMRAM] unsigned char 
  9347 ;;  message_size    2   36[COMRAM] unsigned int 
  9348 ;;  result          1   35[COMRAM] unsigned char 
  9349 ;;  isFragment      1   31[COMRAM] unsigned char 
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  1    wreg      unsigned char 
  9352 ;; Registers used:
  9353 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 0/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9360 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9361 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9362 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;Total ram usage:       16 bytes
  9364 ;; Hardware stack levels used:    1
  9365 ;; Hardware stack levels required when called:    7
  9366 ;; This function calls:
  9367 ;;		_RF24_stopListening
  9368 ;;		___lwdiv
  9369 ;;		_memcpy
  9370 ;; This function is called by:
  9371 ;;		_RF24N_update
  9372 ;; This function uses a non-reentrant model
  9373 ;;
  9374                           
  9375                           	psect	text56
  9376  001056                     __ptext56:
  9377                           	opt stack 0
  9378  001056                     _RF24N_enqueue:
  9379                           	opt stack 21
  9380                           
  9381                           ;RF24Network_cg.c: 529: uint8_t result = 0;
  9382                           
  9383                           ;incstack = 0
  9384  001056  0E00               	movlw	0
  9385  001058  6E24               	movwf	RF24N_enqueue@result,c
  9386                           
  9387                           ;RF24Network_cg.c: 530: uint16_t message_size = rn.frame_size - sizeof(RF24NetworkHeader
      +                          );
  9388  00105A  C0D8  F019         	movff	_rn+50,??_RF24N_enqueue
  9389  00105E  0EF8               	movlw	248
  9390  001060  2419               	addwf	??_RF24N_enqueue,w,c
  9391  001062  6E25               	movwf	RF24N_enqueue@message_size,c
  9392  001064  6A26               	clrf	RF24N_enqueue@message_size+1,c
  9393  001066  0EFF               	movlw	255
  9394  001068  2226               	addwfc	RF24N_enqueue@message_size+1,f,c
  9395                           
  9396                           ;RF24Network_cg.c: 531: uint8_t isFragment;
  9397                           ;RF24Network_cg.c: 533: ;
  9398                           ;RF24Network_cg.c: 537: isFragment = header->type == 148 || header->type == 149 || heade
      +                          r->type == 150 || header->type == 200 ;
  9399  00106A  0E01               	movlw	1
  9400  00106C  6E23               	movwf	_RF24N_enqueue$2037,c
  9401  00106E  EE20 F006          	lfsr	2,6
  9402  001072  5017               	movf	RF24N_enqueue@header,w,c
  9403  001074  26D9               	addwf	fsr2l,f,c
  9404  001076  5018               	movf	RF24N_enqueue@header+1,w,c
  9405  001078  22DA               	addwfc	fsr2h,f,c
  9406  00107A  0E94               	movlw	148
  9407  00107C  18DE               	xorwf	postinc2,w,c
  9408  00107E  B4D8               	btfsc	status,2,c
  9409  001080  D020               	goto	l5862
  9410  001082  EE20 F006          	lfsr	2,6
  9411  001086  5017               	movf	RF24N_enqueue@header,w,c
  9412  001088  26D9               	addwf	fsr2l,f,c
  9413  00108A  5018               	movf	RF24N_enqueue@header+1,w,c
  9414  00108C  22DA               	addwfc	fsr2h,f,c
  9415  00108E  0E95               	movlw	149
  9416  001090  18DE               	xorwf	postinc2,w,c
  9417  001092  B4D8               	btfsc	status,2,c
  9418  001094  D016               	goto	l5862
  9419  001096  EE20 F006          	lfsr	2,6
  9420  00109A  5017               	movf	RF24N_enqueue@header,w,c
  9421  00109C  26D9               	addwf	fsr2l,f,c
  9422  00109E  5018               	movf	RF24N_enqueue@header+1,w,c
  9423  0010A0  22DA               	addwfc	fsr2h,f,c
  9424  0010A2  0E96               	movlw	150
  9425  0010A4  18DE               	xorwf	postinc2,w,c
  9426  0010A6  B4D8               	btfsc	status,2,c
  9427  0010A8  D00C               	goto	l5862
  9428  0010AA  EE20 F006          	lfsr	2,6
  9429  0010AE  5017               	movf	RF24N_enqueue@header,w,c
  9430  0010B0  26D9               	addwf	fsr2l,f,c
  9431  0010B2  5018               	movf	RF24N_enqueue@header+1,w,c
  9432  0010B4  22DA               	addwfc	fsr2h,f,c
  9433  0010B6  0EC8               	movlw	200
  9434  0010B8  18DE               	xorwf	postinc2,w,c
  9435  0010BA  B4D8               	btfsc	status,2,c
  9436  0010BC  D002               	goto	l5862
  9437  0010BE  0E00               	movlw	0
  9438  0010C0  6E23               	movwf	_RF24N_enqueue$2037,c
  9439  0010C2                     l5862:
  9440  0010C2  C023  F020         	movff	_RF24N_enqueue$2037,RF24N_enqueue@isFragment
  9441                           
  9442                           ;RF24Network_cg.c: 539: if(isFragment){
  9443  0010C6  5020               	movf	RF24N_enqueue@isFragment,w,c
  9444  0010C8  B4D8               	btfsc	status,2,c
  9445  0010CA  D1D5               	goto	l5972
  9446                           
  9447                           ;RF24Network_cg.c: 541: if(header->type == 148){
  9448  0010CC  EE20 F006          	lfsr	2,6
  9449  0010D0  5017               	movf	RF24N_enqueue@header,w,c
  9450  0010D2  26D9               	addwf	fsr2l,f,c
  9451  0010D4  5018               	movf	RF24N_enqueue@header+1,w,c
  9452  0010D6  22DA               	addwfc	fsr2h,f,c
  9453  0010D8  0E94               	movlw	148
  9454  0010DA  18DE               	xorwf	postinc2,w,c
  9455  0010DC  A4D8               	btfss	status,2,c
  9456  0010DE  D0A3               	goto	l5904
  9457                           
  9458                           ;RF24Network_cg.c: 543: if(header->reserved > (144 + 10-10 / rn.max_frame_payload_size) 
      +                          ){
  9459  0010E0  EE20 F007          	lfsr	2,7
  9460  0010E4  5017               	movf	RF24N_enqueue@header,w,c
  9461  0010E6  26D9               	addwf	fsr2l,f,c
  9462  0010E8  5018               	movf	RF24N_enqueue@header+1,w,c
  9463  0010EA  22DA               	addwfc	fsr2h,f,c
  9464  0010EC  50DF               	movf	indf2,w,c
  9465  0010EE  6E19               	movwf	??_RF24N_enqueue& (0+255),c
  9466  0010F0  0E00               	movlw	0
  9467  0010F2  6E04               	movwf	___lwdiv@dividend+1,c
  9468  0010F4  0E0A               	movlw	10
  9469  0010F6  6E03               	movwf	___lwdiv@dividend,c
  9470  0010F8  C0D9  F005         	movff	_rn+51,___lwdiv@divisor
  9471  0010FC  C0DA  F006         	movff	_rn+52,___lwdiv@divisor+1
  9472  001100  EC06  F019         	call	___lwdiv	;wreg free
  9473  001104  1E03               	comf	?___lwdiv,f,c
  9474  001106  1E04               	comf	?___lwdiv+1,f,c
  9475  001108  4A03               	infsnz	?___lwdiv,f,c
  9476  00110A  2A04               	incf	?___lwdiv+1,f,c
  9477  00110C  0E9A               	movlw	154
  9478  00110E  2603               	addwf	?___lwdiv,f,c
  9479  001110  0E00               	movlw	0
  9480  001112  2204               	addwfc	?___lwdiv+1,f,c
  9481  001114  5019               	movf	??_RF24N_enqueue,w,c
  9482  001116  5C03               	subwf	?___lwdiv,w,c
  9483  001118  0E00               	movlw	0
  9484  00111A  5804               	subwfb	?___lwdiv+1,w,c
  9485  00111C  B0D8               	btfsc	status,0,c
  9486  00111E  D005               	goto	l5876
  9487                           
  9488                           ;RF24Network_cg.c: 548: rn.frag_queue.header.reserved = 0;
  9489  001120  0E00               	movlw	0
  9490  001122  CFE8 F183          	movff	wreg,_rn+221
  9491                           
  9492                           ;RF24Network_cg.c: 549: return 0;
  9493  001126  0E00               	movlw	0
  9494  001128  0012               	return	
  9495  00112A                     l5876:
  9496                           
  9497                           ;RF24Network_cg.c: 551: if(rn.frag_queue.header.id == header->id && rn.frag_queue.header
      +                          .from_node == header->from_node){
  9498  00112A  EE20 F004          	lfsr	2,4
  9499  00112E  5017               	movf	RF24N_enqueue@header,w,c
  9500  001130  26D9               	addwf	fsr2l,f,c
  9501  001132  5018               	movf	RF24N_enqueue@header+1,w,c
  9502  001134  22DA               	addwfc	fsr2h,f,c
  9503  001136  EE01  F080         	lfsr	0,_rn+218
  9504  00113A  50DE               	movf	postinc2,w,c
  9505  00113C  18EE               	xorwf	postinc0,w,c
  9506  00113E  E113               	bnz	l5884
  9507  001140  50DE               	movf	postinc2,w,c
  9508  001142  18EE               	xorwf	postinc0,w,c
  9509  001144  A4D8               	btfss	status,2,c
  9510  001146  D00F               	goto	l5884
  9511  001148  C017  FFD9         	movff	RF24N_enqueue@header,fsr2l
  9512  00114C  C018  FFDA         	movff	RF24N_enqueue@header+1,fsr2h
  9513  001150  EE01  F07C         	lfsr	0,_rn+214
  9514  001154  50DE               	movf	postinc2,w,c
  9515  001156  18EE               	xorwf	postinc0,w,c
  9516  001158  E106               	bnz	l5884
  9517  00115A  50DE               	movf	postinc2,w,c
  9518  00115C  18EE               	xorwf	postinc0,w,c
  9519  00115E  A4D8               	btfss	status,2,c
  9520  001160  D002               	goto	l5884
  9521                           
  9522                           ;RF24Network_cg.c: 552: return 1;
  9523  001162  0E01               	movlw	1
  9524  001164  0012               	return	
  9525  001166                     l5884:
  9526                           
  9527                           ;RF24Network_cg.c: 553: }
  9528                           ;RF24Network_cg.c: 555: if( (header->reserved * 24) > (144 + 10-10 - (rn.next_frame-rn.f
      +                          rame_queue)) ){
  9529  001166  EE20 F007          	lfsr	2,7
  9530  00116A  5017               	movf	RF24N_enqueue@header,w,c
  9531  00116C  26D9               	addwf	fsr2l,f,c
  9532  00116E  5018               	movf	RF24N_enqueue@header+1,w,c
  9533  001170  22DA               	addwfc	fsr2h,f,c
  9534  001172  50DF               	movf	indf2,w,c
  9535  001174  6E19               	movwf	??_RF24N_enqueue& (0+255),c
  9536  001176  5019               	movf	??_RF24N_enqueue,w,c
  9537  001178  0D18               	mullw	24
  9538  00117A  EE21  F07A         	lfsr	2,_rn+212
  9539  00117E  CFDE F01A          	movff	postinc2,??_RF24N_enqueue+1
  9540  001182  CFDD F01B          	movff	postdec2,??_RF24N_enqueue+2
  9541  001186  0EA6               	movlw	low _rn
  9542  001188  6E1C               	movwf	(??_RF24N_enqueue+3)& (0+255),c
  9543  00118A  0E00               	movlw	high _rn
  9544  00118C  6E1D               	movwf	(??_RF24N_enqueue+4)& (0+255),c
  9545  00118E  0E3A               	movlw	58
  9546  001190  261C               	addwf	??_RF24N_enqueue+3,f,c
  9547  001192  0E00               	movlw	0
  9548  001194  221D               	addwfc	??_RF24N_enqueue+4,f,c
  9549  001196  1E1C               	comf	??_RF24N_enqueue+3,f,c
  9550  001198  1E1D               	comf	??_RF24N_enqueue+4,f,c
  9551  00119A  4A1C               	infsnz	??_RF24N_enqueue+3,f,c
  9552  00119C  2A1D               	incf	??_RF24N_enqueue+4,f,c
  9553  00119E  501A               	movf	??_RF24N_enqueue+1,w,c
  9554  0011A0  261C               	addwf	??_RF24N_enqueue+3,f,c
  9555  0011A2  501B               	movf	??_RF24N_enqueue+2,w,c
  9556  0011A4  221D               	addwfc	??_RF24N_enqueue+4,f,c
  9557  0011A6  1E1C               	comf	??_RF24N_enqueue+3,f,c
  9558  0011A8  1E1D               	comf	??_RF24N_enqueue+4,f,c
  9559  0011AA  4A1C               	infsnz	??_RF24N_enqueue+3,f,c
  9560  0011AC  2A1D               	incf	??_RF24N_enqueue+4,f,c
  9561  0011AE  0E90               	movlw	144
  9562  0011B0  261C               	addwf	??_RF24N_enqueue+3,f,c
  9563  0011B2  0E00               	movlw	0
  9564  0011B4  221D               	addwfc	??_RF24N_enqueue+4,f,c
  9565  0011B6  50F3               	movf	prodl,w,c
  9566  0011B8  5C1C               	subwf	??_RF24N_enqueue+3,w,c
  9567  0011BA  501D               	movf	??_RF24N_enqueue+4,w,c
  9568  0011BC  0A80               	xorlw	128
  9569  0011BE  6E1E               	movwf	(??_RF24N_enqueue+5)& (0+255),c
  9570  0011C0  50F4               	movf	prodh,w,c
  9571  0011C2  0A80               	xorlw	128
  9572  0011C4  581E               	subwfb	(??_RF24N_enqueue+5)& (0+255),w,c
  9573  0011C6  B0D8               	btfsc	status,0,c
  9574  0011C8  D007               	goto	l5890
  9575                           
  9576                           ;RF24Network_cg.c: 556: rn.networkFlags |= 1;
  9577  0011CA  C0D0  FFE8         	movff	_rn+42,wreg
  9578  0011CE  0901               	iorlw	1
  9579  0011D0  CFE8 F0D0          	movff	wreg,_rn+42
  9580                           
  9581                           ;RF24Network_cg.c: 557: RF24_stopListening();
  9582  0011D4  EC51  F018         	call	_RF24_stopListening	;wreg free
  9583  0011D8                     l5890:
  9584                           
  9585                           ;RF24Network_cg.c: 558: }
  9586                           ;RF24Network_cg.c: 560: memcpy(&rn.frag_queue,rn.frame_buffer,8);
  9587  0011D8  0E7C               	movlw	low (_rn+214)
  9588  0011DA  6E03               	movwf	memcpy@d1,c
  9589  0011DC  0E01               	movlw	high (_rn+214)
  9590  0011DE  6E04               	movwf	memcpy@d1+1,c
  9591  0011E0  0EAD               	movlw	low (_rn+7)
  9592  0011E2  6E05               	movwf	memcpy@s1,c
  9593  0011E4  0E00               	movlw	high (_rn+7)
  9594  0011E6  6E06               	movwf	memcpy@s1+1,c
  9595  0011E8  0E00               	movlw	0
  9596  0011EA  6E08               	movwf	memcpy@n+1,c
  9597  0011EC  0E08               	movlw	8
  9598  0011EE  6E07               	movwf	memcpy@n,c
  9599  0011F0  EC47  F01A         	call	_memcpy	;wreg free
  9600                           
  9601                           ;RF24Network_cg.c: 561: memcpy(rn.frag_queue.message_buffer,rn.frame_buffer+sizeof(RF24N
      +                          etworkHeader),message_size);
  9602  0011F4  C186  F003         	movff	_rn+224,memcpy@d1
  9603  0011F8  C187  F004         	movff	_rn+225,memcpy@d1+1
  9604  0011FC  0EB5               	movlw	low (_rn+15)
  9605  0011FE  6E05               	movwf	memcpy@s1,c
  9606  001200  0E00               	movlw	high (_rn+15)
  9607  001202  6E06               	movwf	memcpy@s1+1,c
  9608  001204  C025  F007         	movff	RF24N_enqueue@message_size,memcpy@n
  9609  001208  C026  F008         	movff	RF24N_enqueue@message_size+1,memcpy@n+1
  9610  00120C  EC47  F01A         	call	_memcpy	;wreg free
  9611                           
  9612                           ;RF24Network_cg.c: 565: rn.frag_queue.message_size = message_size;
  9613  001210  C025  F184         	movff	RF24N_enqueue@message_size,_rn+222
  9614  001214  C026  F185         	movff	RF24N_enqueue@message_size+1,_rn+223
  9615                           
  9616                           ;RF24Network_cg.c: 566: --rn.frag_queue.header.reserved;
  9617  001218  C183  FFE8         	movff	_rn+221,wreg
  9618  00121C  0FFF               	addlw	-1
  9619  00121E  CFE8 F183          	movff	wreg,_rn+221
  9620                           
  9621                           ;RF24Network_cg.c: 568: ;
  9622                           ;RF24Network_cg.c: 570: return 1;
  9623  001222  0E01               	movlw	1
  9624  001224  0012               	return	
  9625  001226                     l5904:
  9626                           
  9627                           ;RF24Network_cg.c: 573: if(header->type == 150 || header->type == 149 || header->type ==
      +                           200){
  9628  001226  EE20 F006          	lfsr	2,6
  9629  00122A  5017               	movf	RF24N_enqueue@header,w,c
  9630  00122C  26D9               	addwf	fsr2l,f,c
  9631  00122E  5018               	movf	RF24N_enqueue@header+1,w,c
  9632  001230  22DA               	addwfc	fsr2h,f,c
  9633  001232  0E96               	movlw	150
  9634  001234  18DE               	xorwf	postinc2,w,c
  9635  001236  B4D8               	btfsc	status,2,c
  9636  001238  D014               	goto	l5910
  9637  00123A  EE20 F006          	lfsr	2,6
  9638  00123E  5017               	movf	RF24N_enqueue@header,w,c
  9639  001240  26D9               	addwf	fsr2l,f,c
  9640  001242  5018               	movf	RF24N_enqueue@header+1,w,c
  9641  001244  22DA               	addwfc	fsr2h,f,c
  9642  001246  0E95               	movlw	149
  9643  001248  18DE               	xorwf	postinc2,w,c
  9644  00124A  B4D8               	btfsc	status,2,c
  9645  00124C  D00A               	goto	l5910
  9646  00124E  EE20 F006          	lfsr	2,6
  9647  001252  5017               	movf	RF24N_enqueue@header,w,c
  9648  001254  26D9               	addwf	fsr2l,f,c
  9649  001256  5018               	movf	RF24N_enqueue@header+1,w,c
  9650  001258  22DA               	addwfc	fsr2h,f,c
  9651  00125A  0EC8               	movlw	200
  9652  00125C  18DE               	xorwf	postinc2,w,c
  9653  00125E  A4D8               	btfss	status,2,c
  9654  001260  D12E               	goto	l5984
  9655  001262                     l5910:
  9656                           
  9657                           ;RF24Network_cg.c: 575: if(rn.frag_queue.message_size + message_size > 144 + 10-10){
  9658  001262  EE21  F084         	lfsr	2,_rn+222
  9659  001266  CFDE F019          	movff	postinc2,??_RF24N_enqueue
  9660  00126A  CFDD F01A          	movff	postdec2,??_RF24N_enqueue+1
  9661  00126E  5025               	movf	RF24N_enqueue@message_size,w,c
  9662  001270  2619               	addwf	??_RF24N_enqueue,f,c
  9663  001272  5026               	movf	RF24N_enqueue@message_size+1,w,c
  9664  001274  221A               	addwfc	??_RF24N_enqueue+1,f,c
  9665  001276  501A               	movf	??_RF24N_enqueue+1,w,c
  9666  001278  E104               	bnz	u7880
  9667  00127A  0E91               	movlw	145
  9668  00127C  5C19               	subwf	??_RF24N_enqueue,w,c
  9669  00127E  A0D8               	btfss	status,0,c
  9670  001280  D005               	goto	l5918
  9671  001282                     u7880:
  9672                           
  9673                           ;RF24Network_cg.c: 580: rn.frag_queue.header.reserved=0;
  9674  001282  0E00               	movlw	0
  9675  001284  CFE8 F183          	movff	wreg,_rn+221
  9676                           
  9677                           ;RF24Network_cg.c: 581: return 0;
  9678  001288  0E00               	movlw	0
  9679  00128A  0012               	return	
  9680  00128C                     l5918:
  9681                           
  9682                           ;RF24Network_cg.c: 582: }
  9683                           ;RF24Network_cg.c: 583: if( rn.frag_queue.header.reserved == 0 || (header->type != 150 &
      +                          & header->reserved != rn.frag_queue.header.reserved ) || rn.frag_queue.header.id != head
      +                          er->id ){
  9684  00128C  EE21  F083         	lfsr	2,_rn+221
  9685  001290  50DF               	movf	indf2,w,c
  9686  001292  B4D8               	btfsc	status,2,c
  9687  001294  D025               	goto	l5926
  9688  001296  EE20 F006          	lfsr	2,6
  9689  00129A  5017               	movf	RF24N_enqueue@header,w,c
  9690  00129C  26D9               	addwf	fsr2l,f,c
  9691  00129E  5018               	movf	RF24N_enqueue@header+1,w,c
  9692  0012A0  22DA               	addwfc	fsr2h,f,c
  9693  0012A2  0E96               	movlw	150
  9694  0012A4  18DE               	xorwf	postinc2,w,c
  9695  0012A6  B4D8               	btfsc	status,2,c
  9696  0012A8  D00C               	goto	l5924
  9697  0012AA  EE21  F083         	lfsr	2,_rn+221
  9698  0012AE  EE00 F007          	lfsr	0,7
  9699  0012B2  5017               	movf	RF24N_enqueue@header,w,c
  9700  0012B4  26E9               	addwf	fsr0l,f,c
  9701  0012B6  5018               	movf	RF24N_enqueue@header+1,w,c
  9702  0012B8  22EA               	addwfc	fsr0h,f,c
  9703  0012BA  50DE               	movf	postinc2,w,c
  9704  0012BC  18EE               	xorwf	postinc0,w,c
  9705  0012BE  A4D8               	btfss	status,2,c
  9706  0012C0  D00F               	goto	l5926
  9707  0012C2                     l5924:
  9708  0012C2  EE20 F004          	lfsr	2,4
  9709  0012C6  5017               	movf	RF24N_enqueue@header,w,c
  9710  0012C8  26D9               	addwf	fsr2l,f,c
  9711  0012CA  5018               	movf	RF24N_enqueue@header+1,w,c
  9712  0012CC  22DA               	addwfc	fsr2h,f,c
  9713  0012CE  EE01  F080         	lfsr	0,_rn+218
  9714  0012D2  50DE               	movf	postinc2,w,c
  9715  0012D4  18EE               	xorwf	postinc0,w,c
  9716  0012D6  E104               	bnz	l5926
  9717  0012D8  50DE               	movf	postinc2,w,c
  9718  0012DA  18EE               	xorwf	postinc0,w,c
  9719  0012DC  B4D8               	btfsc	status,2,c
  9720  0012DE  D002               	goto	l5930
  9721  0012E0                     l5926:
  9722                           
  9723                           ;RF24Network_cg.c: 589: return 0;
  9724  0012E0  0E00               	movlw	0
  9725  0012E2  0012               	return	
  9726  0012E4                     l5930:
  9727                           
  9728                           ;RF24Network_cg.c: 590: }
  9729                           ;RF24Network_cg.c: 592: memcpy(rn.frag_queue.message_buffer+rn.frag_queue.message_size,r
      +                          n.frame_buffer+sizeof(RF24NetworkHeader),message_size);
  9730  0012E4  EE21  F084         	lfsr	2,_rn+222
  9731  0012E8  CFDE F019          	movff	postinc2,??_RF24N_enqueue
  9732  0012EC  CFDD F01A          	movff	postdec2,??_RF24N_enqueue+1
  9733  0012F0  EE21  F086         	lfsr	2,_rn+224
  9734  0012F4  CFDE F01B          	movff	postinc2,??_RF24N_enqueue+2
  9735  0012F8  CFDD F01C          	movff	postdec2,??_RF24N_enqueue+3
  9736  0012FC  5019               	movf	??_RF24N_enqueue,w,c
  9737  0012FE  241B               	addwf	??_RF24N_enqueue+2,w,c
  9738  001300  6E03               	movwf	memcpy@d1,c
  9739  001302  501A               	movf	??_RF24N_enqueue+1,w,c
  9740  001304  201C               	addwfc	??_RF24N_enqueue+3,w,c
  9741  001306  6E04               	movwf	memcpy@d1+1,c
  9742  001308  0EB5               	movlw	low (_rn+15)
  9743  00130A  6E05               	movwf	memcpy@s1,c
  9744  00130C  0E00               	movlw	high (_rn+15)
  9745  00130E  6E06               	movwf	memcpy@s1+1,c
  9746  001310  C025  F007         	movff	RF24N_enqueue@message_size,memcpy@n
  9747  001314  C026  F008         	movff	RF24N_enqueue@message_size+1,memcpy@n+1
  9748  001318  EC47  F01A         	call	_memcpy	;wreg free
  9749                           
  9750                           ;RF24Network_cg.c: 593: rn.frag_queue.message_size += message_size;
  9751  00131C  EE21  F084         	lfsr	2,_rn+222
  9752  001320  5025               	movf	RF24N_enqueue@message_size,w,c
  9753  001322  26DE               	addwf	postinc2,f,c
  9754  001324  5026               	movf	RF24N_enqueue@message_size+1,w,c
  9755  001326  22DD               	addwfc	postdec2,f,c
  9756                           
  9757                           ;RF24Network_cg.c: 595: if(header->type != 150){
  9758  001328  EE20 F006          	lfsr	2,6
  9759  00132C  5017               	movf	RF24N_enqueue@header,w,c
  9760  00132E  26D9               	addwf	fsr2l,f,c
  9761  001330  5018               	movf	RF24N_enqueue@header+1,w,c
  9762  001332  22DA               	addwfc	fsr2h,f,c
  9763  001334  0E96               	movlw	150
  9764  001336  18DE               	xorwf	postinc2,w,c
  9765  001338  B4D8               	btfsc	status,2,c
  9766  00133A  D007               	goto	l451
  9767                           
  9768                           ;RF24Network_cg.c: 596: --rn.frag_queue.header.reserved;
  9769  00133C  C183  FFE8         	movff	_rn+221,wreg
  9770  001340  0FFF               	addlw	-1
  9771  001342  CFE8 F183          	movff	wreg,_rn+221
  9772                           
  9773                           ;RF24Network_cg.c: 597: return 1;
  9774  001346  0E01               	movlw	1
  9775  001348  0012               	return	
  9776  00134A                     l451:
  9777                           
  9778                           ;RF24Network_cg.c: 598: }
  9779                           ;RF24Network_cg.c: 599: rn.frag_queue.header.reserved = 0;
  9780  00134A  0E00               	movlw	0
  9781  00134C  CFE8 F183          	movff	wreg,_rn+221
  9782                           
  9783                           ;RF24Network_cg.c: 600: rn.frag_queue.header.type = header->reserved;
  9784  001350  EE20 F007          	lfsr	2,7
  9785  001354  5017               	movf	RF24N_enqueue@header,w,c
  9786  001356  26D9               	addwf	fsr2l,f,c
  9787  001358  5018               	movf	RF24N_enqueue@header+1,w,c
  9788  00135A  22DA               	addwfc	fsr2h,f,c
  9789  00135C  50DF               	movf	indf2,w,c
  9790  00135E  6E19               	movwf	??_RF24N_enqueue& (0+255),c
  9791  001360  C019  F182         	movff	??_RF24N_enqueue,_rn+220
  9792                           
  9793                           ;RF24Network_cg.c: 602: ;
  9794                           ;RF24Network_cg.c: 603: ;
  9795                           ;RF24Network_cg.c: 606: if(rn.frag_queue.header.type == 131){
  9796  001364  C182  FFE8         	movff	_rn+220,wreg
  9797  001368  0A83               	xorlw	131
  9798  00136A  A4D8               	btfss	status,2,c
  9799  00136C  D002               	goto	l5948
  9800                           
  9801                           ;RF24Network_cg.c: 607: return 2;
  9802  00136E  0E02               	movlw	2
  9803  001370  0012               	return	
  9804  001372                     l5948:
  9805                           
  9806                           ;RF24Network_cg.c: 608: }
  9807                           ;RF24Network_cg.c: 613: if(144 + 10-10 - (rn.next_frame-rn.frame_queue) >= rn.frag_queue
      +                          .message_size){
  9808  001372  EE21  F084         	lfsr	2,_rn+222
  9809  001376  EE01  F07A         	lfsr	0,_rn+212
  9810  00137A  CFEE F01B          	movff	postinc0,??_RF24N_enqueue+2
  9811  00137E  CFED F01C          	movff	postdec0,??_RF24N_enqueue+3
  9812  001382  0EA6               	movlw	low _rn
  9813  001384  6E1D               	movwf	(??_RF24N_enqueue+4)& (0+255),c
  9814  001386  0E00               	movlw	high _rn
  9815  001388  6E1E               	movwf	(??_RF24N_enqueue+5)& (0+255),c
  9816  00138A  0E3A               	movlw	58
  9817  00138C  261D               	addwf	??_RF24N_enqueue+4,f,c
  9818  00138E  0E00               	movlw	0
  9819  001390  221E               	addwfc	??_RF24N_enqueue+5,f,c
  9820  001392  1E1D               	comf	??_RF24N_enqueue+4,f,c
  9821  001394  1E1E               	comf	??_RF24N_enqueue+5,f,c
  9822  001396  4A1D               	infsnz	??_RF24N_enqueue+4,f,c
  9823  001398  2A1E               	incf	??_RF24N_enqueue+5,f,c
  9824  00139A  501B               	movf	??_RF24N_enqueue+2,w,c
  9825  00139C  261D               	addwf	??_RF24N_enqueue+4,f,c
  9826  00139E  501C               	movf	??_RF24N_enqueue+3,w,c
  9827  0013A0  221E               	addwfc	??_RF24N_enqueue+5,f,c
  9828  0013A2  1E1D               	comf	??_RF24N_enqueue+4,f,c
  9829  0013A4  1E1E               	comf	??_RF24N_enqueue+5,f,c
  9830  0013A6  4A1D               	infsnz	??_RF24N_enqueue+4,f,c
  9831  0013A8  2A1E               	incf	??_RF24N_enqueue+5,f,c
  9832  0013AA  0E90               	movlw	144
  9833  0013AC  261D               	addwf	??_RF24N_enqueue+4,f,c
  9834  0013AE  0E00               	movlw	0
  9835  0013B0  221E               	addwfc	??_RF24N_enqueue+5,f,c
  9836  0013B2  50DE               	movf	postinc2,w,c
  9837  0013B4  5C1D               	subwf	??_RF24N_enqueue+4,w,c
  9838  0013B6  501E               	movf	??_RF24N_enqueue+5,w,c
  9839  0013B8  0A80               	xorlw	128
  9840  0013BA  6E1F               	movwf	(??_RF24N_enqueue+6)& (0+255),c
  9841  0013BC  50DE               	movf	postinc2,w,c
  9842  0013BE  0A80               	xorlw	128
  9843  0013C0  581F               	subwfb	(??_RF24N_enqueue+6)& (0+255),w,c
  9844  0013C2  A0D8               	btfss	status,0,c
  9845  0013C4  D04F               	goto	l5964
  9846                           
  9847                           ;RF24Network_cg.c: 614: uint8_t padding;
  9848                           ;RF24Network_cg.c: 615: memcpy(rn.next_frame,&rn.frag_queue,10);
  9849  0013C6  C17A  F003         	movff	_rn+212,memcpy@d1
  9850  0013CA  C17B  F004         	movff	_rn+213,memcpy@d1+1
  9851  0013CE  0E7C               	movlw	low (_rn+214)
  9852  0013D0  6E05               	movwf	memcpy@s1,c
  9853  0013D2  0E01               	movlw	high (_rn+214)
  9854  0013D4  6E06               	movwf	memcpy@s1+1,c
  9855  0013D6  0E00               	movlw	0
  9856  0013D8  6E08               	movwf	memcpy@n+1,c
  9857  0013DA  0E0A               	movlw	10
  9858  0013DC  6E07               	movwf	memcpy@n,c
  9859  0013DE  EC47  F01A         	call	_memcpy	;wreg free
  9860                           
  9861                           ;RF24Network_cg.c: 616: memcpy(rn.next_frame+10,rn.frag_queue.message_buffer,rn.frag_que
      +                          ue.message_size);
  9862  0013E2  EE21  F07A         	lfsr	2,_rn+212
  9863  0013E6  CFDE F019          	movff	postinc2,??_RF24N_enqueue
  9864  0013EA  CFDD F01A          	movff	postdec2,??_RF24N_enqueue+1
  9865  0013EE  0E0A               	movlw	10
  9866  0013F0  2419               	addwf	??_RF24N_enqueue,w,c
  9867  0013F2  6E03               	movwf	memcpy@d1,c
  9868  0013F4  0E00               	movlw	0
  9869  0013F6  201A               	addwfc	??_RF24N_enqueue+1,w,c
  9870  0013F8  6E04               	movwf	memcpy@d1+1,c
  9871  0013FA  C186  F005         	movff	_rn+224,memcpy@s1
  9872  0013FE  C187  F006         	movff	_rn+225,memcpy@s1+1
  9873  001402  C184  F007         	movff	_rn+222,memcpy@n
  9874  001406  C185  F008         	movff	_rn+223,memcpy@n+1
  9875  00140A  EC47  F01A         	call	_memcpy	;wreg free
  9876                           
  9877                           ;RF24Network_cg.c: 617: rn.next_frame += (10+rn.frag_queue.message_size);
  9878  00140E  EE21  F084         	lfsr	2,_rn+222
  9879  001412  CFDE F019          	movff	postinc2,??_RF24N_enqueue
  9880  001416  CFDD F01A          	movff	postdec2,??_RF24N_enqueue+1
  9881  00141A  0E0A               	movlw	10
  9882  00141C  2619               	addwf	??_RF24N_enqueue,f,c
  9883  00141E  0E00               	movlw	0
  9884  001420  221A               	addwfc	??_RF24N_enqueue+1,f,c
  9885  001422  EE21  F07A         	lfsr	2,_rn+212
  9886  001426  5019               	movf	??_RF24N_enqueue,w,c
  9887  001428  26DE               	addwf	postinc2,f,c
  9888  00142A  501A               	movf	??_RF24N_enqueue+1,w,c
  9889  00142C  22DD               	addwfc	postdec2,f,c
  9890                           
  9891                           ;RF24Network_cg.c: 619: if((padding = (rn.frag_queue.message_size+10)%4)){
  9892                           ; multi bank
  9893  00142E  0101               	movlb	(_rn+222) shr (0+8)
  9894  001430  5184               	movf	(_rn+222)& (0+255),w,b
  9895  001432  0F0A               	addlw	10
  9896  001434  0B03               	andlw	3
  9897  001436  6E21               	movwf	RF24N_enqueue@padding,c
  9898  001438  5021               	movf	RF24N_enqueue@padding,w,c
  9899  00143A  B4D8               	btfsc	status,2,c
  9900  00143C  D011               	goto	l5958
  9901                           
  9902                           ;RF24Network_cg.c: 620: rn.next_frame += 4 - padding;
  9903  00143E  5021               	movf	RF24N_enqueue@padding,w,c
  9904  001440  6E19               	movwf	??_RF24N_enqueue& (0+255),c
  9905  001442  6A1A               	clrf	(??_RF24N_enqueue+1)& (0+255),c
  9906  001444  1E19               	comf	??_RF24N_enqueue,f,c
  9907  001446  1E1A               	comf	??_RF24N_enqueue+1,f,c
  9908  001448  4A19               	infsnz	??_RF24N_enqueue,f,c
  9909  00144A  2A1A               	incf	??_RF24N_enqueue+1,f,c
  9910  00144C  0E04               	movlw	4
  9911  00144E  2619               	addwf	??_RF24N_enqueue,f,c
  9912  001450  0E00               	movlw	0
  9913  001452  221A               	addwfc	??_RF24N_enqueue+1,f,c
  9914  001454  EE21  F07A         	lfsr	2,_rn+212
  9915  001458  5019               	movf	??_RF24N_enqueue,w,c
  9916  00145A  26DE               	addwf	postinc2,f,c
  9917  00145C  501A               	movf	??_RF24N_enqueue+1,w,c
  9918  00145E  22DD               	addwfc	postdec2,f,c
  9919  001460                     l5958:
  9920                           
  9921                           ;RF24Network_cg.c: 621: }
  9922                           ;RF24Network_cg.c: 623: ;
  9923                           ;RF24Network_cg.c: 624: return 1;
  9924  001460  0E01               	movlw	1
  9925  001462  0012               	return	
  9926  001464                     l5964:
  9927                           
  9928                           ;RF24Network_cg.c: 626: RF24_stopListening();
  9929  001464  EC51  F018         	call	_RF24_stopListening	;wreg free
  9930                           
  9931                           ;RF24Network_cg.c: 627: rn.networkFlags |= 1;
  9932  001468  C0D0  FFE8         	movff	_rn+42,wreg
  9933  00146C  0901               	iorlw	1
  9934  00146E  CFE8 F0D0          	movff	wreg,_rn+42
  9935                           
  9936                           ;RF24Network_cg.c: 628: }
  9937                           ;RF24Network_cg.c: 629: ;
  9938                           ;RF24Network_cg.c: 630: return 0;
  9939  001472  0E00               	movlw	0
  9940  001474  0012               	return	
  9941  001476                     l5972:
  9942                           
  9943                           ;RF24Network_cg.c: 640: if(header->type == 131){
  9944  001476  EE20 F006          	lfsr	2,6
  9945  00147A  5017               	movf	RF24N_enqueue@header,w,c
  9946  00147C  26D9               	addwf	fsr2l,f,c
  9947  00147E  5018               	movf	RF24N_enqueue@header+1,w,c
  9948  001480  22DA               	addwfc	fsr2h,f,c
  9949  001482  0E83               	movlw	131
  9950  001484  18DE               	xorwf	postinc2,w,c
  9951  001486  A4D8               	btfss	status,2,c
  9952  001488  D01A               	goto	l5984
  9953                           
  9954                           ;RF24Network_cg.c: 641: memcpy(&rn.frag_queue,rn.frame_buffer,8);
  9955  00148A  0E7C               	movlw	low (_rn+214)
  9956  00148C  6E03               	movwf	memcpy@d1,c
  9957  00148E  0E01               	movlw	high (_rn+214)
  9958  001490  6E04               	movwf	memcpy@d1+1,c
  9959  001492  0EAD               	movlw	low (_rn+7)
  9960  001494  6E05               	movwf	memcpy@s1,c
  9961  001496  0E00               	movlw	high (_rn+7)
  9962  001498  6E06               	movwf	memcpy@s1+1,c
  9963  00149A  0E00               	movlw	0
  9964  00149C  6E08               	movwf	memcpy@n+1,c
  9965  00149E  0E08               	movlw	8
  9966  0014A0  6E07               	movwf	memcpy@n,c
  9967  0014A2  EC47  F01A         	call	_memcpy	;wreg free
  9968                           
  9969                           ;RF24Network_cg.c: 642: rn.frag_queue.message_buffer = rn.frame_buffer+sizeof(RF24Networ
      +                          kHeader);
  9970  0014A6  0EB5               	movlw	low (_rn+15)
  9971  0014A8  CFE8 F186          	movff	wreg,_rn+224
  9972  0014AC  0E00               	movlw	high (_rn+15)
  9973  0014AE  CFE8 F187          	movff	wreg,_rn+225
  9974                           
  9975                           ;RF24Network_cg.c: 643: rn.frag_queue.message_size = message_size;
  9976  0014B2  C025  F184         	movff	RF24N_enqueue@message_size,_rn+222
  9977  0014B6  C026  F185         	movff	RF24N_enqueue@message_size+1,_rn+223
  9978                           
  9979                           ;RF24Network_cg.c: 644: return 2;
  9980  0014BA  0E02               	movlw	2
  9981  0014BC  0012               	return	
  9982  0014BE                     l5984:
  9983                           
  9984                           ;RF24Network_cg.c: 645: }
  9985                           ;RF24Network_cg.c: 651: if(message_size + (rn.next_frame-rn.frame_queue) <= 144 + 10){
  9986  0014BE  EE21  F07A         	lfsr	2,_rn+212
  9987  0014C2  CFDE F019          	movff	postinc2,??_RF24N_enqueue
  9988  0014C6  CFDD F01A          	movff	postdec2,??_RF24N_enqueue+1
  9989  0014CA  0EA6               	movlw	low _rn
  9990  0014CC  6E1B               	movwf	(??_RF24N_enqueue+2)& (0+255),c
  9991  0014CE  0E00               	movlw	high _rn
  9992  0014D0  6E1C               	movwf	(??_RF24N_enqueue+3)& (0+255),c
  9993  0014D2  0E3A               	movlw	58
  9994  0014D4  261B               	addwf	??_RF24N_enqueue+2,f,c
  9995  0014D6  0E00               	movlw	0
  9996  0014D8  221C               	addwfc	??_RF24N_enqueue+3,f,c
  9997  0014DA  1E1B               	comf	??_RF24N_enqueue+2,f,c
  9998  0014DC  1E1C               	comf	??_RF24N_enqueue+3,f,c
  9999  0014DE  4A1B               	infsnz	??_RF24N_enqueue+2,f,c
 10000  0014E0  2A1C               	incf	??_RF24N_enqueue+3,f,c
 10001  0014E2  5019               	movf	??_RF24N_enqueue,w,c
 10002  0014E4  261B               	addwf	??_RF24N_enqueue+2,f,c
 10003  0014E6  501A               	movf	??_RF24N_enqueue+1,w,c
 10004  0014E8  221C               	addwfc	??_RF24N_enqueue+3,f,c
 10005  0014EA  5025               	movf	RF24N_enqueue@message_size,w,c
 10006  0014EC  261B               	addwf	??_RF24N_enqueue+2,f,c
 10007  0014EE  5026               	movf	RF24N_enqueue@message_size+1,w,c
 10008  0014F0  221C               	addwfc	??_RF24N_enqueue+3,f,c
 10009  0014F2  BE1C               	btfsc	??_RF24N_enqueue+3,7,c
 10010  0014F4  D006               	goto	l5986
 10011  0014F6  501C               	movf	??_RF24N_enqueue+3,w,c
 10012  0014F8  E164               	bnz	l5996
 10013  0014FA  0E9B               	movlw	155
 10014  0014FC  5C1B               	subwf	??_RF24N_enqueue+2,w,c
 10015  0014FE  B0D8               	btfsc	status,0,c
 10016  001500  D060               	goto	l5996
 10017  001502                     l5986:
 10018                           
 10019                           ;RF24Network_cg.c: 652: uint8_t padding;
 10020                           ;RF24Network_cg.c: 653: memcpy(rn.next_frame,rn.frame_buffer,8);
 10021  001502  C17A  F003         	movff	_rn+212,memcpy@d1
 10022  001506  C17B  F004         	movff	_rn+213,memcpy@d1+1
 10023  00150A  0EAD               	movlw	low (_rn+7)
 10024  00150C  6E05               	movwf	memcpy@s1,c
 10025  00150E  0E00               	movlw	high (_rn+7)
 10026  001510  6E06               	movwf	memcpy@s1+1,c
 10027  001512  0E00               	movlw	0
 10028  001514  6E08               	movwf	memcpy@n+1,c
 10029  001516  0E08               	movlw	8
 10030  001518  6E07               	movwf	memcpy@n,c
 10031  00151A  EC47  F01A         	call	_memcpy	;wreg free
 10032                           
 10033                           ;RF24Network_cg.c: 654: memcpy(rn.next_frame+8,&message_size,2);
 10034  00151E  EE21  F07A         	lfsr	2,_rn+212
 10035  001522  CFDE F019          	movff	postinc2,??_RF24N_enqueue
 10036  001526  CFDD F01A          	movff	postdec2,??_RF24N_enqueue+1
 10037  00152A  0E08               	movlw	8
 10038  00152C  2419               	addwf	??_RF24N_enqueue,w,c
 10039  00152E  6E03               	movwf	memcpy@d1,c
 10040  001530  0E00               	movlw	0
 10041  001532  201A               	addwfc	??_RF24N_enqueue+1,w,c
 10042  001534  6E04               	movwf	memcpy@d1+1,c
 10043  001536  0E25               	movlw	low RF24N_enqueue@message_size
 10044  001538  6E05               	movwf	memcpy@s1,c
 10045  00153A  0E00               	movlw	high RF24N_enqueue@message_size
 10046  00153C  6E06               	movwf	memcpy@s1+1,c
 10047  00153E  0E00               	movlw	0
 10048  001540  6E08               	movwf	memcpy@n+1,c
 10049  001542  0E02               	movlw	2
 10050  001544  6E07               	movwf	memcpy@n,c
 10051  001546  EC47  F01A         	call	_memcpy	;wreg free
 10052                           
 10053                           ;RF24Network_cg.c: 655: memcpy(rn.next_frame+10,rn.frame_buffer+8,message_size);
 10054  00154A  EE21  F07A         	lfsr	2,_rn+212
 10055  00154E  CFDE F019          	movff	postinc2,??_RF24N_enqueue
 10056  001552  CFDD F01A          	movff	postdec2,??_RF24N_enqueue+1
 10057  001556  0E0A               	movlw	10
 10058  001558  2419               	addwf	??_RF24N_enqueue,w,c
 10059  00155A  6E03               	movwf	memcpy@d1,c
 10060  00155C  0E00               	movlw	0
 10061  00155E  201A               	addwfc	??_RF24N_enqueue+1,w,c
 10062  001560  6E04               	movwf	memcpy@d1+1,c
 10063  001562  0EB5               	movlw	low (_rn+15)
 10064  001564  6E05               	movwf	memcpy@s1,c
 10065  001566  0E00               	movlw	high (_rn+15)
 10066  001568  6E06               	movwf	memcpy@s1+1,c
 10067  00156A  C025  F007         	movff	RF24N_enqueue@message_size,memcpy@n
 10068  00156E  C026  F008         	movff	RF24N_enqueue@message_size+1,memcpy@n+1
 10069  001572  EC47  F01A         	call	_memcpy	;wreg free
 10070                           
 10071                           ;RF24Network_cg.c: 659: rn.next_frame += (message_size + 10);
 10072  001576  0E0A               	movlw	10
 10073  001578  2425               	addwf	RF24N_enqueue@message_size,w,c
 10074  00157A  6E19               	movwf	??_RF24N_enqueue& (0+255),c
 10075  00157C  0E00               	movlw	0
 10076  00157E  2026               	addwfc	RF24N_enqueue@message_size+1,w,c
 10077  001580  6E1A               	movwf	(??_RF24N_enqueue+1)& (0+255),c
 10078  001582  EE21  F07A         	lfsr	2,_rn+212
 10079  001586  5019               	movf	??_RF24N_enqueue,w,c
 10080  001588  26DE               	addwf	postinc2,f,c
 10081  00158A  501A               	movf	??_RF24N_enqueue+1,w,c
 10082  00158C  22DD               	addwfc	postdec2,f,c
 10083                           
 10084                           ;RF24Network_cg.c: 661: if((padding = (message_size+10)%4)){
 10085  00158E  5025               	movf	RF24N_enqueue@message_size,w,c
 10086  001590  0F0A               	addlw	10
 10087  001592  0B03               	andlw	3
 10088  001594  6E22               	movwf	RF24N_enqueue@padding_2039,c
 10089  001596  5022               	movf	RF24N_enqueue@padding_2039,w,c
 10090  001598  B4D8               	btfsc	status,2,c
 10091  00159A  D011               	goto	l5994
 10092                           
 10093                           ;RF24Network_cg.c: 662: rn.next_frame += 4 - padding;
 10094  00159C  5022               	movf	RF24N_enqueue@padding_2039,w,c
 10095  00159E  6E19               	movwf	??_RF24N_enqueue& (0+255),c
 10096  0015A0  6A1A               	clrf	(??_RF24N_enqueue+1)& (0+255),c
 10097  0015A2  1E19               	comf	??_RF24N_enqueue,f,c
 10098  0015A4  1E1A               	comf	??_RF24N_enqueue+1,f,c
 10099  0015A6  4A19               	infsnz	??_RF24N_enqueue,f,c
 10100  0015A8  2A1A               	incf	??_RF24N_enqueue+1,f,c
 10101  0015AA  0E04               	movlw	4
 10102  0015AC  2619               	addwf	??_RF24N_enqueue,f,c
 10103  0015AE  0E00               	movlw	0
 10104  0015B0  221A               	addwfc	??_RF24N_enqueue+1,f,c
 10105  0015B2  EE21  F07A         	lfsr	2,_rn+212
 10106  0015B6  5019               	movf	??_RF24N_enqueue,w,c
 10107  0015B8  26DE               	addwf	postinc2,f,c
 10108  0015BA  501A               	movf	??_RF24N_enqueue+1,w,c
 10109  0015BC  22DD               	addwfc	postdec2,f,c
 10110  0015BE                     l5994:
 10111                           
 10112                           ;RF24Network_cg.c: 663: }
 10113                           ;RF24Network_cg.c: 667: result = 1;
 10114  0015BE  0E01               	movlw	1
 10115  0015C0  D001               	goto	L8
 10116  0015C2                     l5996:
 10117                           
 10118                           ;RF24Network_cg.c: 669: result = 0;
 10119  0015C2  0E00               	movlw	0
 10120  0015C4                     L8:
 10121  0015C4  6E24               	movwf	RF24N_enqueue@result,c
 10122                           
 10123                           ;RF24Network_cg.c: 671: }
 10124                           ;RF24Network_cg.c: 672: return result;
 10125                           
 10126                           ;RF24Network_cg.c: 670: ;
 10127  0015C6  5024               	movf	RF24N_enqueue@result,w,c
 10128  0015C8  0012               	return	
 10129  0015CA                     __end_of_RF24N_enqueue:
 10130                           	opt stack 0
 10131                           tblptru	equ	0xFF8
 10132                           tblptrh	equ	0xFF7
 10133                           tblptrl	equ	0xFF6
 10134                           tablat	equ	0xFF5
 10135                           prodh	equ	0xFF4
 10136                           prodl	equ	0xFF3
 10137                           intcon	equ	0xFF2
 10138                           indf0	equ	0xFEF
 10139                           postinc0	equ	0xFEE
 10140                           postdec0	equ	0xFED
 10141                           plusw0	equ	0xFEB
 10142                           fsr0h	equ	0xFEA
 10143                           fsr0l	equ	0xFE9
 10144                           wreg	equ	0xFE8
 10145                           plusw1	equ	0xFE3
 10146                           fsr1h	equ	0xFE2
 10147                           fsr1l	equ	0xFE1
 10148                           indf2	equ	0xFDF
 10149                           postinc2	equ	0xFDE
 10150                           postdec2	equ	0xFDD
 10151                           plusw2	equ	0xFDB
 10152                           fsr2h	equ	0xFDA
 10153                           fsr2l	equ	0xFD9
 10154                           status	equ	0xFD8
 10155                           
 10156 ;; *************** function _memcpy *****************
 10157 ;; Defined at:
 10158 ;;		line 11 in file "/opt/microchip/xc8/v1.36/sources/common/memcpy.c"
 10159 ;; Parameters:    Size  Location     Type
 10160 ;;  d1              2    2[COMRAM] PTR void 
 10161 ;;		 -> rf(22), RF24N_read@bufsize(2), RF24N_peek@msg_size(2), rn.frame_buffer(32), 
 10162 ;;		 -> rn.frag_queue_message_buffer(144), rn.frame_queue(154), rn(370), loop@payload(8), 
 10163 ;;		 -> loop@header(8), 
 10164 ;;  s1              2    4[COMRAM] PTR const void 
 10165 ;;		 -> rn.header(8), rn.frame_queue.header(8), RF24_openReadingPipe_d@address(5), RF24N_enqueue@message_size(2), 
 10166 ;;		 -> rn.frame_buffer(32), rn.frag_queue_message_buffer(144), rn.frag_queue(13), rn.frame_queue(154), 
 10167 ;;		 -> rn(370), 
 10168 ;;  n               2    6[COMRAM] unsigned int 
 10169 ;; Auto vars:     Size  Location     Type
 10170 ;;  s               2   10[COMRAM] PTR const unsigned char 
 10171 ;;		 -> rn.header(8), rn.frame_queue.header(8), RF24_openReadingPipe_d@address(5), RF24N_enqueue@message_size(2), 
 10172 ;;		 -> rn.frame_buffer(32), rn.frag_queue_message_buffer(144), rn.frag_queue(13), rn.frame_queue(154), 
 10173 ;;		 -> rn(370), 
 10174 ;;  d               2    8[COMRAM] PTR unsigned char 
 10175 ;;		 -> rf(22), RF24N_read@bufsize(2), RF24N_peek@msg_size(2), rn.frame_buffer(32), 
 10176 ;;		 -> rn.frag_queue_message_buffer(144), rn.frame_queue(154), rn(370), loop@payload(8), 
 10177 ;;		 -> loop@header(8), 
 10178 ;; Return value:  Size  Location     Type
 10179 ;;                  2    2[COMRAM] PTR void 
 10180 ;; Registers used:
 10181 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 10182 ;; Tracked objects:
 10183 ;;		On entry : 0/0
 10184 ;;		On exit  : 0/0
 10185 ;;		Unchanged: 0/0
 10186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10187 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10188 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10190 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10191 ;;Total ram usage:       10 bytes
 10192 ;; Hardware stack levels used:    1
 10193 ;; Hardware stack levels required when called:    1
 10194 ;; This function calls:
 10195 ;;		Nothing
 10196 ;; This function is called by:
 10197 ;;		_RF24N_enqueue
 10198 ;;		_RF24N_read
 10199 ;;		_RF24_openReadingPipe_d
 10200 ;;		_RF24N_peek
 10201 ;;		_RF24N__write
 10202 ;;		_RF24_openReadingPipe
 10203 ;; This function uses a non-reentrant model
 10204 ;;
 10205                           
 10206                           	psect	text57
 10207  00348E                     __ptext57:
 10208                           	opt stack 0
 10209  00348E                     _memcpy:
 10210                           	opt stack 26
 10211                           
 10212                           ;incstack = 0
 10213  00348E  C005  F00B         	movff	memcpy@s1,memcpy@s
 10214  003492  C006  F00C         	movff	memcpy@s1+1,memcpy@s+1
 10215  003496  C003  F009         	movff	memcpy@d1,memcpy@d
 10216  00349A  C004  F00A         	movff	memcpy@d1+1,memcpy@d+1
 10217  00349E  D00E               	goto	l5632
 10218  0034A0                     l5626:
 10219  0034A0  C00B  FFD9         	movff	memcpy@s,fsr2l
 10220  0034A4  C00C  FFDA         	movff	memcpy@s+1,fsr2h
 10221  0034A8  C009  FFE9         	movff	memcpy@d,fsr0l
 10222  0034AC  C00A  FFEA         	movff	memcpy@d+1,fsr0h
 10223  0034B0  CFDF FFEF          	movff	indf2,indf0
 10224  0034B4  4A0B               	infsnz	memcpy@s,f,c
 10225  0034B6  2A0C               	incf	memcpy@s+1,f,c
 10226  0034B8  4A09               	infsnz	memcpy@d,f,c
 10227  0034BA  2A0A               	incf	memcpy@d+1,f,c
 10228  0034BC                     l5632:
 10229  0034BC  0607               	decf	memcpy@n,f,c
 10230  0034BE  A0D8               	btfss	status,0,c
 10231  0034C0  0608               	decf	memcpy@n+1,f,c
 10232  0034C2  2807               	incf	memcpy@n,w,c
 10233  0034C4  E1ED               	bnz	l5626
 10234  0034C6  2808               	incf	memcpy@n+1,w,c
 10235  0034C8  B4D8               	btfsc	status,2,c
 10236  0034CA  0012               	return	
 10237  0034CC  D7E9               	goto	l5626
 10238  0034CE                     __end_of_memcpy:
 10239                           	opt stack 0
 10240                           tblptru	equ	0xFF8
 10241                           tblptrh	equ	0xFF7
 10242                           tblptrl	equ	0xFF6
 10243                           tablat	equ	0xFF5
 10244                           prodh	equ	0xFF4
 10245                           prodl	equ	0xFF3
 10246                           intcon	equ	0xFF2
 10247                           indf0	equ	0xFEF
 10248                           postinc0	equ	0xFEE
 10249                           postdec0	equ	0xFED
 10250                           plusw0	equ	0xFEB
 10251                           fsr0h	equ	0xFEA
 10252                           fsr0l	equ	0xFE9
 10253                           wreg	equ	0xFE8
 10254                           plusw1	equ	0xFE3
 10255                           fsr1h	equ	0xFE2
 10256                           fsr1l	equ	0xFE1
 10257                           indf2	equ	0xFDF
 10258                           postinc2	equ	0xFDE
 10259                           postdec2	equ	0xFDD
 10260                           plusw2	equ	0xFDB
 10261                           fsr2h	equ	0xFDA
 10262                           fsr2l	equ	0xFD9
 10263                           status	equ	0xFD8
 10264                           
 10265 ;; *************** function ___lwdiv *****************
 10266 ;; Defined at:
 10267 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwdiv.c"
 10268 ;; Parameters:    Size  Location     Type
 10269 ;;  dividend        2    2[COMRAM] unsigned int 
 10270 ;;  divisor         2    4[COMRAM] unsigned int 
 10271 ;; Auto vars:     Size  Location     Type
 10272 ;;  quotient        2    7[COMRAM] unsigned int 
 10273 ;;  counter         1    6[COMRAM] unsigned char 
 10274 ;; Return value:  Size  Location     Type
 10275 ;;                  2    2[COMRAM] unsigned int 
 10276 ;; Registers used:
 10277 ;;		wreg, status,2, status,0
 10278 ;; Tracked objects:
 10279 ;;		On entry : 0/0
 10280 ;;		On exit  : 0/0
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10284 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10286 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10287 ;;Total ram usage:        7 bytes
 10288 ;; Hardware stack levels used:    1
 10289 ;; Hardware stack levels required when called:    1
 10290 ;; This function calls:
 10291 ;;		Nothing
 10292 ;; This function is called by:
 10293 ;;		_RF24N_enqueue
 10294 ;;		_RF24N_write_
 10295 ;; This function uses a non-reentrant model
 10296 ;;
 10297                           
 10298                           	psect	text58
 10299  00320C                     __ptext58:
 10300                           	opt stack 0
 10301  00320C                     ___lwdiv:
 10302                           	opt stack 26
 10303                           
 10304                           ;incstack = 0
 10305  00320C  0E00               	movlw	0
 10306  00320E  6E09               	movwf	___lwdiv@quotient+1,c
 10307  003210  0E00               	movlw	0
 10308  003212  6E08               	movwf	___lwdiv@quotient,c
 10309  003214  5005               	movf	___lwdiv@divisor,w,c
 10310  003216  1006               	iorwf	___lwdiv@divisor+1,w,c
 10311  003218  B4D8               	btfsc	status,2,c
 10312  00321A  D01C               	goto	l1405
 10313  00321C  0E01               	movlw	1
 10314  00321E  6E07               	movwf	___lwdiv@counter,c
 10315  003220  D004               	goto	l5702
 10316  003222                     l5700:
 10317  003222  90D8               	bcf	status,0,c
 10318  003224  3605               	rlcf	___lwdiv@divisor,f,c
 10319  003226  3606               	rlcf	___lwdiv@divisor+1,f,c
 10320  003228  2A07               	incf	___lwdiv@counter,f,c
 10321  00322A                     l5702:
 10322  00322A  AE06               	btfss	___lwdiv@divisor+1,7,c
 10323  00322C  D7FA               	goto	l5700
 10324  00322E                     l5704:
 10325  00322E  90D8               	bcf	status,0,c
 10326  003230  3608               	rlcf	___lwdiv@quotient,f,c
 10327  003232  3609               	rlcf	___lwdiv@quotient+1,f,c
 10328  003234  5005               	movf	___lwdiv@divisor,w,c
 10329  003236  5C03               	subwf	___lwdiv@dividend,w,c
 10330  003238  5006               	movf	___lwdiv@divisor+1,w,c
 10331  00323A  5804               	subwfb	___lwdiv@dividend+1,w,c
 10332  00323C  A0D8               	btfss	status,0,c
 10333  00323E  D005               	goto	l5712
 10334  003240  5005               	movf	___lwdiv@divisor,w,c
 10335  003242  5E03               	subwf	___lwdiv@dividend,f,c
 10336  003244  5006               	movf	___lwdiv@divisor+1,w,c
 10337  003246  5A04               	subwfb	___lwdiv@dividend+1,f,c
 10338  003248  8008               	bsf	___lwdiv@quotient,0,c
 10339  00324A                     l5712:
 10340  00324A  90D8               	bcf	status,0,c
 10341  00324C  3206               	rrcf	___lwdiv@divisor+1,f,c
 10342  00324E  3205               	rrcf	___lwdiv@divisor,f,c
 10343  003250  2E07               	decfsz	___lwdiv@counter,f,c
 10344  003252  D7ED               	goto	l5704
 10345  003254                     l1405:
 10346  003254  C008  F003         	movff	___lwdiv@quotient,?___lwdiv
 10347  003258  C009  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10348  00325C  0012               	return		;funcret
 10349  00325E                     __end_of___lwdiv:
 10350                           	opt stack 0
 10351                           tblptru	equ	0xFF8
 10352                           tblptrh	equ	0xFF7
 10353                           tblptrl	equ	0xFF6
 10354                           tablat	equ	0xFF5
 10355                           prodh	equ	0xFF4
 10356                           prodl	equ	0xFF3
 10357                           intcon	equ	0xFF2
 10358                           indf0	equ	0xFEF
 10359                           postinc0	equ	0xFEE
 10360                           postdec0	equ	0xFED
 10361                           plusw0	equ	0xFEB
 10362                           fsr0h	equ	0xFEA
 10363                           fsr0l	equ	0xFE9
 10364                           wreg	equ	0xFE8
 10365                           plusw1	equ	0xFE3
 10366                           fsr1h	equ	0xFE2
 10367                           fsr1l	equ	0xFE1
 10368                           indf2	equ	0xFDF
 10369                           postinc2	equ	0xFDE
 10370                           postdec2	equ	0xFDD
 10371                           plusw2	equ	0xFDB
 10372                           fsr2h	equ	0xFDA
 10373                           fsr2l	equ	0xFD9
 10374                           status	equ	0xFD8
 10375                           
 10376 ;; *************** function _RF24_stopListening *****************
 10377 ;; Defined at:
 10378 ;;		line 754 in file "../../../RF24_c/RF24_cg.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;		None
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;		None
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  1    wreg      void 
 10385 ;; Registers used:
 10386 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10394 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10396 ;;Total ram usage:        2 bytes
 10397 ;; Hardware stack levels used:    1
 10398 ;; Hardware stack levels required when called:    6
 10399 ;; This function calls:
 10400 ;;		_RF24_ce_d
 10401 ;;		_RF24_flush_tx
 10402 ;;		_RF24_read_register_d
 10403 ;;		_RF24_write_register_d
 10404 ;;		_delayMicroseconds
 10405 ;; This function is called by:
 10406 ;;		_RF24N_enqueue
 10407 ;;		_RF24N_write_to_pipe
 10408 ;;		_RF24_txStandBy_t
 10409 ;;		_RF24N_write_
 10410 ;; This function uses a non-reentrant model
 10411 ;;
 10412                           
 10413                           	psect	text59
 10414  0030A2                     __ptext59:
 10415                           	opt stack 0
 10416  0030A2                     _RF24_stopListening:
 10417                           	opt stack 20
 10418                           
 10419                           ;RF24_cg.c: 756: RF24_ce_d(0);
 10420                           
 10421                           ;incstack = 0
 10422  0030A2  0E00               	movlw	0
 10423  0030A4  EC52  F01C         	call	_RF24_ce_d
 10424                           
 10425                           ;RF24_cg.c: 758: delayMicroseconds(rf.txDelay);
 10426  0030A8  504A               	movf	_rf+13,w,c
 10427  0030AA  ECE7  F019         	call	_delayMicroseconds
 10428                           
 10429                           ;RF24_cg.c: 760: if(RF24_read_register_d(0x1D) & (1<<(1))){
 10430  0030AE  0E1D               	movlw	29
 10431  0030B0  ECF9  F01B         	call	_RF24_read_register_d
 10432  0030B4  6E15               	movwf	??_RF24_stopListening& (0+255),c
 10433  0030B6  A215               	btfss	??_RF24_stopListening,1,c
 10434  0030B8  D005               	goto	l766
 10435                           
 10436                           ;RF24_cg.c: 761: delayMicroseconds(rf.txDelay);
 10437  0030BA  504A               	movf	_rf+13,w,c
 10438  0030BC  ECE7  F019         	call	_delayMicroseconds
 10439                           
 10440                           ;RF24_cg.c: 762: RF24_flush_tx();
 10441  0030C0  EC95  F01C         	call	_RF24_flush_tx	;wreg free
 10442  0030C4                     l766:
 10443                           
 10444                           ;RF24_cg.c: 763: }
 10445                           ;RF24_cg.c: 765: RF24_write_register_d(0x00, ( RF24_read_register_d(0x00) ) & ~(1<<(0)) 
      +                          );
 10446  0030C4  0E00               	movlw	0
 10447  0030C6  ECF9  F01B         	call	_RF24_read_register_d
 10448  0030CA  0BFE               	andlw	254
 10449  0030CC  6E12               	movwf	RF24_write_register_d@value,c
 10450  0030CE  0E00               	movlw	0
 10451  0030D0  ECE9  F01B         	call	_RF24_write_register_d
 10452                           
 10453                           ;RF24_cg.c: 774: RF24_write_register_d(0x02,RF24_read_register_d(0x02) | (1<<((*(&child_
      +                          pipe_enable[0])))));
 10454  0030D4  0E0D               	movlw	low _child_pipe_enable
 10455  0030D6  6EF6               	movwf	tblptrl,c
 10456  0030D8                     	if	1	;There is more than 1 active tblptr byte
 10457  0030D8  0E10               	movlw	high _child_pipe_enable
 10458  0030DA  6EF7               	movwf	tblptrh,c
 10459  0030DC                     	endif
 10460  0030DC                     	if	0	;There are less than 3 active tblptr bytes
 10461  0030DC                     	endif
 10462  0030DC  0008               	tblrd		*
 10463  0030DE  CFF5 F015          	movff	tablat,??_RF24_stopListening
 10464  0030E2  0E01               	movlw	1
 10465  0030E4  6E16               	movwf	(??_RF24_stopListening+1)& (0+255),c
 10466  0030E6  2A15               	incf	??_RF24_stopListening,f,c
 10467  0030E8  D002               	goto	u6674
 10468  0030EA                     u6675:
 10469  0030EA  90D8               	bcf	status,0,c
 10470  0030EC  3616               	rlcf	??_RF24_stopListening+1,f,c
 10471  0030EE                     u6674:
 10472  0030EE  2E15               	decfsz	??_RF24_stopListening,f,c
 10473  0030F0  D7FC               	goto	u6675
 10474  0030F2  0E02               	movlw	2
 10475  0030F4  ECF9  F01B         	call	_RF24_read_register_d
 10476  0030F8  1016               	iorwf	??_RF24_stopListening+1,w,c
 10477  0030FA  6E12               	movwf	RF24_write_register_d@value,c
 10478  0030FC  0E02               	movlw	2
 10479  0030FE  ECE9  F01B         	call	_RF24_write_register_d
 10480  003102  0012               	return		;funcret
 10481  003104                     __end_of_RF24_stopListening:
 10482                           	opt stack 0
 10483                           tblptru	equ	0xFF8
 10484                           tblptrh	equ	0xFF7
 10485                           tblptrl	equ	0xFF6
 10486                           tablat	equ	0xFF5
 10487                           prodh	equ	0xFF4
 10488                           prodl	equ	0xFF3
 10489                           intcon	equ	0xFF2
 10490                           indf0	equ	0xFEF
 10491                           postinc0	equ	0xFEE
 10492                           postdec0	equ	0xFED
 10493                           plusw0	equ	0xFEB
 10494                           fsr0h	equ	0xFEA
 10495                           fsr0l	equ	0xFE9
 10496                           wreg	equ	0xFE8
 10497                           plusw1	equ	0xFE3
 10498                           fsr1h	equ	0xFE2
 10499                           fsr1l	equ	0xFE1
 10500                           indf2	equ	0xFDF
 10501                           postinc2	equ	0xFDE
 10502                           postdec2	equ	0xFDD
 10503                           plusw2	equ	0xFDB
 10504                           fsr2h	equ	0xFDA
 10505                           fsr2l	equ	0xFD9
 10506                           status	equ	0xFD8
 10507                           
 10508 ;; *************** function _RF24_read_register_d *****************
 10509 ;; Defined at:
 10510 ;;		line 131 in file "../../../RF24_c/RF24_cg.c"
 10511 ;; Parameters:    Size  Location     Type
 10512 ;;  reg             1    wreg     unsigned char 
 10513 ;; Auto vars:     Size  Location     Type
 10514 ;;  reg             1   15[COMRAM] unsigned char 
 10515 ;;  result          1   16[COMRAM] unsigned char 
 10516 ;; Return value:  Size  Location     Type
 10517 ;;                  1    wreg      unsigned char 
 10518 ;; Registers used:
 10519 ;;		wreg, status,2, status,0, cstack
 10520 ;; Tracked objects:
 10521 ;;		On entry : 0/0
 10522 ;;		On exit  : 0/0
 10523 ;;		Unchanged: 0/0
 10524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10526 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10529 ;;Total ram usage:        2 bytes
 10530 ;; Hardware stack levels used:    1
 10531 ;; Hardware stack levels required when called:    4
 10532 ;; This function calls:
 10533 ;;		_RF24_beginTransaction
 10534 ;;		_RF24_endTransaction
 10535 ;;		_SPI_transfer
 10536 ;; This function is called by:
 10537 ;;		_RF24_begin
 10538 ;;		_RF24_startListening
 10539 ;;		_RF24_stopListening
 10540 ;;		_RF24_powerUp
 10541 ;;		_RF24_txStandBy_t
 10542 ;;		_RF24_available_p
 10543 ;;		_RF24_openReadingPipe_d
 10544 ;;		_RF24_closeReadingPipe
 10545 ;;		_RF24_enableDynamicPayloads
 10546 ;;		_RF24_setAutoAck_p
 10547 ;;		_RF24_setDataRate
 10548 ;;		_RF24_getChannel
 10549 ;;		_RF24_powerDown
 10550 ;;		_RF24_rxFifoFull
 10551 ;;		_RF24_txStandBy
 10552 ;;		_RF24_maskIRQ
 10553 ;;		_RF24_openReadingPipe
 10554 ;;		_RF24_enableAckPayload
 10555 ;;		_RF24_enableDynamicAck
 10556 ;;		_RF24_isAckPayloadAvailable
 10557 ;;		_RF24_testCarrier
 10558 ;;		_RF24_testRPD
 10559 ;;		_RF24_setPALevel
 10560 ;;		_RF24_getPALevel
 10561 ;;		_RF24_getDataRate
 10562 ;;		_RF24_setCRCLength
 10563 ;;		_RF24_getCRCLength
 10564 ;;		_RF24_disableCRC
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568                           	psect	text60
 10569  0037F2                     __ptext60:
 10570                           	opt stack 0
 10571  0037F2                     _RF24_read_register_d:
 10572                           	opt stack 23
 10573                           
 10574                           ;incstack = 0
 10575                           ;RF24_read_register_d@reg stored from wreg
 10576  0037F2  6E10               	movwf	RF24_read_register_d@reg,c
 10577                           
 10578                           ;RF24_cg.c: 133: uint8_t result;
 10579                           ;RF24_cg.c: 150: RF24_beginTransaction();
 10580  0037F4  EC91  F01C         	call	_RF24_beginTransaction	;wreg free
 10581                           
 10582                           ;RF24_cg.c: 151: SPI_transfer( 0x00 | ( 0x1F & reg ) );
 10583  0037F8  5010               	movf	RF24_read_register_d@reg,w,c
 10584  0037FA  0B1F               	andlw	31
 10585  0037FC  EC70  F01C         	call	_SPI_transfer
 10586                           
 10587                           ;RF24_cg.c: 152: result = SPI_transfer(0xff);
 10588  003800  0EFF               	movlw	255
 10589  003802  EC70  F01C         	call	_SPI_transfer
 10590  003806  6E11               	movwf	RF24_read_register_d@result,c
 10591                           
 10592                           ;RF24_cg.c: 153: RF24_endTransaction();
 10593  003808  EC8D  F01C         	call	_RF24_endTransaction	;wreg free
 10594                           
 10595                           ;RF24_cg.c: 157: return result;
 10596  00380C  5011               	movf	RF24_read_register_d@result,w,c
 10597  00380E  0012               	return	
 10598  003810                     __end_of_RF24_read_register_d:
 10599                           	opt stack 0
 10600                           tblptru	equ	0xFF8
 10601                           tblptrh	equ	0xFF7
 10602                           tblptrl	equ	0xFF6
 10603                           tablat	equ	0xFF5
 10604                           prodh	equ	0xFF4
 10605                           prodl	equ	0xFF3
 10606                           intcon	equ	0xFF2
 10607                           indf0	equ	0xFEF
 10608                           postinc0	equ	0xFEE
 10609                           postdec0	equ	0xFED
 10610                           plusw0	equ	0xFEB
 10611                           fsr0h	equ	0xFEA
 10612                           fsr0l	equ	0xFE9
 10613                           wreg	equ	0xFE8
 10614                           plusw1	equ	0xFE3
 10615                           fsr1h	equ	0xFE2
 10616                           fsr1l	equ	0xFE1
 10617                           indf2	equ	0xFDF
 10618                           postinc2	equ	0xFDE
 10619                           postdec2	equ	0xFDD
 10620                           plusw2	equ	0xFDB
 10621                           fsr2h	equ	0xFDA
 10622                           fsr2l	equ	0xFD9
 10623                           status	equ	0xFD8
 10624                           
 10625 ;; *************** function _SPI_transfer *****************
 10626 ;; Defined at:
 10627 ;;		line 250 in file "../../../RF24_c/utility/XC8/spi.c"
 10628 ;; Parameters:    Size  Location     Type
 10629 ;;  data            1    wreg     unsigned char 
 10630 ;; Auto vars:     Size  Location     Type
 10631 ;;  data            1    2[COMRAM] unsigned char 
 10632 ;; Return value:  Size  Location     Type
 10633 ;;                  1    wreg      unsigned char 
 10634 ;; Registers used:
 10635 ;;		wreg, status,2
 10636 ;; Tracked objects:
 10637 ;;		On entry : 0/0
 10638 ;;		On exit  : 0/0
 10639 ;;		Unchanged: 0/0
 10640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10645 ;;Total ram usage:        1 bytes
 10646 ;; Hardware stack levels used:    1
 10647 ;; Hardware stack levels required when called:    1
 10648 ;; This function calls:
 10649 ;;		Nothing
 10650 ;; This function is called by:
 10651 ;;		_RF24_read_register_d
 10652 ;;		_RF24_write_register_c_d
 10653 ;;		_RF24_write_register_d
 10654 ;;		_RF24_write_payload
 10655 ;;		_RF24_read_payload
 10656 ;;		_RF24_spiTrans
 10657 ;;		_RF24_getDynamicPayloadSize
 10658 ;;		_RF24_toggle_features_d
 10659 ;;		_RF24_read_register_m_d
 10660 ;;		_RF24_writeAckPayload
 10661 ;; This function uses a non-reentrant model
 10662 ;;
 10663                           
 10664                           	psect	text61
 10665  0038E0                     __ptext61:
 10666                           	opt stack 0
 10667  0038E0                     _SPI_transfer:
 10668                           	opt stack 26
 10669                           
 10670                           ;incstack = 0
 10671                           ;SPI_transfer@data stored from wreg
 10672  0038E0  6E03               	movwf	SPI_transfer@data,c
 10673                           
 10674                           ;spi.c: 252: SSPSTATbits.BF = 0;
 10675  0038E2  90C7               	bcf	4039,0,c	;volatile
 10676                           
 10677                           ;spi.c: 253: SSPBUF = data;
 10678  0038E4  C003  FFC9         	movff	SPI_transfer@data,4041	;volatile
 10679  0038E8                     l306:
 10680  0038E8  A0C7               	btfss	4039,0,c	;volatile
 10681  0038EA  D7FE               	goto	l306
 10682                           
 10683                           ;spi.c: 255: return SSPBUF;
 10684  0038EC  50C9               	movf	4041,w,c	;volatile
 10685  0038EE  0012               	return		;funcret
 10686  0038F0                     __end_of_SPI_transfer:
 10687                           	opt stack 0
 10688                           tblptru	equ	0xFF8
 10689                           tblptrh	equ	0xFF7
 10690                           tblptrl	equ	0xFF6
 10691                           tablat	equ	0xFF5
 10692                           prodh	equ	0xFF4
 10693                           prodl	equ	0xFF3
 10694                           intcon	equ	0xFF2
 10695                           indf0	equ	0xFEF
 10696                           postinc0	equ	0xFEE
 10697                           postdec0	equ	0xFED
 10698                           plusw0	equ	0xFEB
 10699                           fsr0h	equ	0xFEA
 10700                           fsr0l	equ	0xFE9
 10701                           wreg	equ	0xFE8
 10702                           plusw1	equ	0xFE3
 10703                           fsr1h	equ	0xFE2
 10704                           fsr1l	equ	0xFE1
 10705                           indf2	equ	0xFDF
 10706                           postinc2	equ	0xFDE
 10707                           postdec2	equ	0xFDD
 10708                           plusw2	equ	0xFDB
 10709                           fsr2h	equ	0xFDA
 10710                           fsr2l	equ	0xFD9
 10711                           status	equ	0xFD8
 10712                           
 10713 ;; *************** function _RF24_endTransaction *****************
 10714 ;; Defined at:
 10715 ;;		line 84 in file "../../../RF24_c/RF24_cg.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;		None
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;		None
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  1    wreg      void 
 10722 ;; Registers used:
 10723 ;;		wreg, status,2, status,0, cstack
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10733 ;;Total ram usage:        0 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; Hardware stack levels required when called:    3
 10736 ;; This function calls:
 10737 ;;		_RF24_csn_d
 10738 ;; This function is called by:
 10739 ;;		_RF24_read_register_d
 10740 ;;		_RF24_write_register_c_d
 10741 ;;		_RF24_write_register_d
 10742 ;;		_RF24_write_payload
 10743 ;;		_RF24_read_payload
 10744 ;;		_RF24_spiTrans
 10745 ;;		_RF24_getDynamicPayloadSize
 10746 ;;		_RF24_toggle_features_d
 10747 ;;		_RF24_read_register_m_d
 10748 ;;		_RF24_writeAckPayload
 10749 ;; This function uses a non-reentrant model
 10750 ;;
 10751                           
 10752                           	psect	text62
 10753  00391A                     __ptext62:
 10754                           	opt stack 0
 10755  00391A                     _RF24_endTransaction:
 10756                           	opt stack 24
 10757                           
 10758                           ;RF24_cg.c: 85: RF24_csn_d(1);
 10759                           
 10760                           ;incstack = 0
 10761  00391A  0E01               	movlw	1
 10762  00391C  EC5D  F01C         	call	_RF24_csn_d
 10763  003920  0012               	return		;funcret
 10764  003922                     __end_of_RF24_endTransaction:
 10765                           	opt stack 0
 10766                           tblptru	equ	0xFF8
 10767                           tblptrh	equ	0xFF7
 10768                           tblptrl	equ	0xFF6
 10769                           tablat	equ	0xFF5
 10770                           prodh	equ	0xFF4
 10771                           prodl	equ	0xFF3
 10772                           intcon	equ	0xFF2
 10773                           indf0	equ	0xFEF
 10774                           postinc0	equ	0xFEE
 10775                           postdec0	equ	0xFED
 10776                           plusw0	equ	0xFEB
 10777                           fsr0h	equ	0xFEA
 10778                           fsr0l	equ	0xFE9
 10779                           wreg	equ	0xFE8
 10780                           plusw1	equ	0xFE3
 10781                           fsr1h	equ	0xFE2
 10782                           fsr1l	equ	0xFE1
 10783                           indf2	equ	0xFDF
 10784                           postinc2	equ	0xFDE
 10785                           postdec2	equ	0xFDD
 10786                           plusw2	equ	0xFDB
 10787                           fsr2h	equ	0xFDA
 10788                           fsr2l	equ	0xFD9
 10789                           status	equ	0xFD8
 10790                           
 10791 ;; *************** function _RF24_beginTransaction *****************
 10792 ;; Defined at:
 10793 ;;		line 75 in file "../../../RF24_c/RF24_cg.c"
 10794 ;; Parameters:    Size  Location     Type
 10795 ;;		None
 10796 ;; Auto vars:     Size  Location     Type
 10797 ;;		None
 10798 ;; Return value:  Size  Location     Type
 10799 ;;                  1    wreg      void 
 10800 ;; Registers used:
 10801 ;;		wreg, status,2, status,0, cstack
 10802 ;; Tracked objects:
 10803 ;;		On entry : 0/0
 10804 ;;		On exit  : 0/0
 10805 ;;		Unchanged: 0/0
 10806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10811 ;;Total ram usage:        0 bytes
 10812 ;; Hardware stack levels used:    1
 10813 ;; Hardware stack levels required when called:    3
 10814 ;; This function calls:
 10815 ;;		_RF24_csn_d
 10816 ;; This function is called by:
 10817 ;;		_RF24_read_register_d
 10818 ;;		_RF24_write_register_c_d
 10819 ;;		_RF24_write_register_d
 10820 ;;		_RF24_write_payload
 10821 ;;		_RF24_read_payload
 10822 ;;		_RF24_spiTrans
 10823 ;;		_RF24_getDynamicPayloadSize
 10824 ;;		_RF24_toggle_features_d
 10825 ;;		_RF24_read_register_m_d
 10826 ;;		_RF24_writeAckPayload
 10827 ;; This function uses a non-reentrant model
 10828 ;;
 10829                           
 10830                           	psect	text63
 10831  003922                     __ptext63:
 10832                           	opt stack 0
 10833  003922                     _RF24_beginTransaction:
 10834                           	opt stack 24
 10835                           
 10836                           ;RF24_cg.c: 79: RF24_csn_d(0);
 10837                           
 10838                           ;incstack = 0
 10839  003922  0E00               	movlw	0
 10840  003924  EC5D  F01C         	call	_RF24_csn_d
 10841  003928  0012               	return		;funcret
 10842  00392A                     __end_of_RF24_beginTransaction:
 10843                           	opt stack 0
 10844                           tblptru	equ	0xFF8
 10845                           tblptrh	equ	0xFF7
 10846                           tblptrl	equ	0xFF6
 10847                           tablat	equ	0xFF5
 10848                           prodh	equ	0xFF4
 10849                           prodl	equ	0xFF3
 10850                           intcon	equ	0xFF2
 10851                           indf0	equ	0xFEF
 10852                           postinc0	equ	0xFEE
 10853                           postdec0	equ	0xFED
 10854                           plusw0	equ	0xFEB
 10855                           fsr0h	equ	0xFEA
 10856                           fsr0l	equ	0xFE9
 10857                           wreg	equ	0xFE8
 10858                           plusw1	equ	0xFE3
 10859                           fsr1h	equ	0xFE2
 10860                           fsr1l	equ	0xFE1
 10861                           indf2	equ	0xFDF
 10862                           postinc2	equ	0xFDE
 10863                           postdec2	equ	0xFDD
 10864                           plusw2	equ	0xFDB
 10865                           fsr2h	equ	0xFDA
 10866                           fsr2l	equ	0xFD9
 10867                           status	equ	0xFD8
 10868                           
 10869 ;; *************** function _RF24_csn_d *****************
 10870 ;; Defined at:
 10871 ;;		line 22 in file "../../../RF24_c/RF24_cg.c"
 10872 ;; Parameters:    Size  Location     Type
 10873 ;;  mode            1    wreg     unsigned char 
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;  mode            1   14[COMRAM] unsigned char 
 10876 ;; Return value:  Size  Location     Type
 10877 ;;                  1    wreg      void 
 10878 ;; Registers used:
 10879 ;;		wreg, status,2, status,0, cstack
 10880 ;; Tracked objects:
 10881 ;;		On entry : 0/0
 10882 ;;		On exit  : 0/0
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10889 ;;Total ram usage:        1 bytes
 10890 ;; Hardware stack levels used:    1
 10891 ;; Hardware stack levels required when called:    2
 10892 ;; This function calls:
 10893 ;;		_delayMicroseconds
 10894 ;;		_digitalWrite
 10895 ;; This function is called by:
 10896 ;;		_RF24_beginTransaction
 10897 ;;		_RF24_endTransaction
 10898 ;;		_RF24_begin
 10899 ;; This function uses a non-reentrant model
 10900 ;;
 10901                           
 10902                           	psect	text64
 10903  0038BA                     __ptext64:
 10904                           	opt stack 0
 10905  0038BA                     _RF24_csn_d:
 10906                           	opt stack 24
 10907                           
 10908                           ;incstack = 0
 10909                           ;RF24_csn_d@mode stored from wreg
 10910  0038BA  6E0F               	movwf	RF24_csn_d@mode,c
 10911                           
 10912                           ;RF24_cg.c: 59: digitalWrite(rf.csn_pin,mode);
 10913  0038BC  C00F  F003         	movff	RF24_csn_d@mode,digitalWrite@mode
 10914  0038C0  503E               	movf	_rf+1,w,c
 10915  0038C2  ECC1  F00E         	call	_digitalWrite
 10916                           
 10917                           ;RF24_cg.c: 60: delayMicroseconds(rf.csDelay);
 10918  0038C6  504E               	movf	_rf+17,w,c
 10919  0038C8  ECE7  F019         	call	_delayMicroseconds
 10920  0038CC  0012               	return		;funcret
 10921  0038CE                     __end_of_RF24_csn_d:
 10922                           	opt stack 0
 10923                           tblptru	equ	0xFF8
 10924                           tblptrh	equ	0xFF7
 10925                           tblptrl	equ	0xFF6
 10926                           tablat	equ	0xFF5
 10927                           prodh	equ	0xFF4
 10928                           prodl	equ	0xFF3
 10929                           intcon	equ	0xFF2
 10930                           indf0	equ	0xFEF
 10931                           postinc0	equ	0xFEE
 10932                           postdec0	equ	0xFED
 10933                           plusw0	equ	0xFEB
 10934                           fsr0h	equ	0xFEA
 10935                           fsr0l	equ	0xFE9
 10936                           wreg	equ	0xFE8
 10937                           plusw1	equ	0xFE3
 10938                           fsr1h	equ	0xFE2
 10939                           fsr1l	equ	0xFE1
 10940                           indf2	equ	0xFDF
 10941                           postinc2	equ	0xFDE
 10942                           postdec2	equ	0xFDD
 10943                           plusw2	equ	0xFDB
 10944                           fsr2h	equ	0xFDA
 10945                           fsr2l	equ	0xFD9
 10946                           status	equ	0xFD8
 10947                           
 10948 ;; *************** function _RF24_flush_tx *****************
 10949 ;; Defined at:
 10950 ;;		line 348 in file "../../../RF24_c/RF24_cg.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;		None
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;		None
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  1    wreg      unsigned char 
 10957 ;; Registers used:
 10958 ;;		wreg, status,2, status,0, cstack
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10968 ;;Total ram usage:        0 bytes
 10969 ;; Hardware stack levels used:    1
 10970 ;; Hardware stack levels required when called:    5
 10971 ;; This function calls:
 10972 ;;		_RF24_spiTrans
 10973 ;; This function is called by:
 10974 ;;		_RF24_begin
 10975 ;;		_RF24_startListening
 10976 ;;		_RF24_stopListening
 10977 ;;		_RF24_txStandBy_t
 10978 ;;		_RF24_write_m
 10979 ;;		_RF24_txStandBy
 10980 ;; This function uses a non-reentrant model
 10981 ;;
 10982                           
 10983                           	psect	text65
 10984  00392A                     __ptext65:
 10985                           	opt stack 0
 10986  00392A                     _RF24_flush_tx:
 10987                           	opt stack 23
 10988                           
 10989                           ;RF24_cg.c: 350: return RF24_spiTrans( 0xE1 );
 10990                           ;	Return value of _RF24_flush_tx is never used
 10991                           
 10992                           ;incstack = 0
 10993  00392A  0EE1               	movlw	225
 10994  00392C  EC47  F01C         	call	_RF24_spiTrans
 10995  003930  0012               	return	
 10996  003932                     __end_of_RF24_flush_tx:
 10997                           	opt stack 0
 10998                           tblptru	equ	0xFF8
 10999                           tblptrh	equ	0xFF7
 11000                           tblptrl	equ	0xFF6
 11001                           tablat	equ	0xFF5
 11002                           prodh	equ	0xFF4
 11003                           prodl	equ	0xFF3
 11004                           intcon	equ	0xFF2
 11005                           indf0	equ	0xFEF
 11006                           postinc0	equ	0xFEE
 11007                           postdec0	equ	0xFED
 11008                           plusw0	equ	0xFEB
 11009                           fsr0h	equ	0xFEA
 11010                           fsr0l	equ	0xFE9
 11011                           wreg	equ	0xFE8
 11012                           plusw1	equ	0xFE3
 11013                           fsr1h	equ	0xFE2
 11014                           fsr1l	equ	0xFE1
 11015                           indf2	equ	0xFDF
 11016                           postinc2	equ	0xFDE
 11017                           postdec2	equ	0xFDD
 11018                           plusw2	equ	0xFDB
 11019                           fsr2h	equ	0xFDA
 11020                           fsr2l	equ	0xFD9
 11021                           status	equ	0xFD8
 11022                           
 11023 ;; *************** function _RF24_spiTrans *****************
 11024 ;; Defined at:
 11025 ;;		line 327 in file "../../../RF24_c/RF24_cg.c"
 11026 ;; Parameters:    Size  Location     Type
 11027 ;;  cmd             1    wreg     unsigned char 
 11028 ;; Auto vars:     Size  Location     Type
 11029 ;;  cmd             1   15[COMRAM] unsigned char 
 11030 ;;  status          1   16[COMRAM] unsigned char 
 11031 ;; Return value:  Size  Location     Type
 11032 ;;                  1    wreg      unsigned char 
 11033 ;; Registers used:
 11034 ;;		wreg, status,2, status,0, cstack
 11035 ;; Tracked objects:
 11036 ;;		On entry : 0/0
 11037 ;;		On exit  : 0/0
 11038 ;;		Unchanged: 0/0
 11039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11041 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11043 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11044 ;;Total ram usage:        2 bytes
 11045 ;; Hardware stack levels used:    1
 11046 ;; Hardware stack levels required when called:    4
 11047 ;; This function calls:
 11048 ;;		_RF24_beginTransaction
 11049 ;;		_RF24_endTransaction
 11050 ;;		_SPI_transfer
 11051 ;; This function is called by:
 11052 ;;		_RF24_flush_rx
 11053 ;;		_RF24_flush_tx
 11054 ;;		_RF24_get_status
 11055 ;;		_RF24_reUseTX
 11056 ;; This function uses a non-reentrant model
 11057 ;;
 11058                           
 11059                           	psect	text66
 11060  00388E                     __ptext66:
 11061                           	opt stack 0
 11062  00388E                     _RF24_spiTrans:
 11063                           	opt stack 23
 11064                           
 11065                           ;incstack = 0
 11066                           ;RF24_spiTrans@cmd stored from wreg
 11067  00388E  6E10               	movwf	RF24_spiTrans@cmd,c
 11068                           
 11069                           ;RF24_cg.c: 329: uint8_t status;
 11070                           ;RF24_cg.c: 331: RF24_beginTransaction();
 11071  003890  EC91  F01C         	call	_RF24_beginTransaction	;wreg free
 11072                           
 11073                           ;RF24_cg.c: 332: status = SPI_transfer( cmd );
 11074  003894  5010               	movf	RF24_spiTrans@cmd,w,c
 11075  003896  EC70  F01C         	call	_SPI_transfer
 11076  00389A  6E11               	movwf	RF24_spiTrans@status,c
 11077                           
 11078                           ;RF24_cg.c: 333: RF24_endTransaction();
 11079  00389C  EC8D  F01C         	call	_RF24_endTransaction	;wreg free
 11080                           
 11081                           ;RF24_cg.c: 335: return status;
 11082  0038A0  5011               	movf	RF24_spiTrans@status,w,c
 11083  0038A2  0012               	return	
 11084  0038A4                     __end_of_RF24_spiTrans:
 11085                           	opt stack 0
 11086                           tblptru	equ	0xFF8
 11087                           tblptrh	equ	0xFF7
 11088                           tblptrl	equ	0xFF6
 11089                           tablat	equ	0xFF5
 11090                           prodh	equ	0xFF4
 11091                           prodl	equ	0xFF3
 11092                           intcon	equ	0xFF2
 11093                           indf0	equ	0xFEF
 11094                           postinc0	equ	0xFEE
 11095                           postdec0	equ	0xFED
 11096                           plusw0	equ	0xFEB
 11097                           fsr0h	equ	0xFEA
 11098                           fsr0l	equ	0xFE9
 11099                           wreg	equ	0xFE8
 11100                           plusw1	equ	0xFE3
 11101                           fsr1h	equ	0xFE2
 11102                           fsr1l	equ	0xFE1
 11103                           indf2	equ	0xFDF
 11104                           postinc2	equ	0xFDE
 11105                           postdec2	equ	0xFDD
 11106                           plusw2	equ	0xFDB
 11107                           fsr2h	equ	0xFDA
 11108                           fsr2l	equ	0xFD9
 11109                           status	equ	0xFD8
 11110                           
 11111 ;; *************** function _RF24_ce_d *****************
 11112 ;; Defined at:
 11113 ;;		line 67 in file "../../../RF24_c/RF24_cg.c"
 11114 ;; Parameters:    Size  Location     Type
 11115 ;;  level           1    wreg     unsigned char 
 11116 ;; Auto vars:     Size  Location     Type
 11117 ;;  level           1    5[COMRAM] unsigned char 
 11118 ;; Return value:  Size  Location     Type
 11119 ;;                  1    wreg      void 
 11120 ;; Registers used:
 11121 ;;		wreg, status,2, status,0, cstack
 11122 ;; Tracked objects:
 11123 ;;		On entry : 0/0
 11124 ;;		On exit  : 0/0
 11125 ;;		Unchanged: 0/0
 11126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11128 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11130 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11131 ;;Total ram usage:        1 bytes
 11132 ;; Hardware stack levels used:    1
 11133 ;; Hardware stack levels required when called:    2
 11134 ;; This function calls:
 11135 ;;		_digitalWrite
 11136 ;; This function is called by:
 11137 ;;		_RF24_begin
 11138 ;;		_RF24_startListening
 11139 ;;		_RF24_stopListening
 11140 ;;		_RF24_startFastWrite
 11141 ;;		_RF24_txStandBy_t
 11142 ;;		_RF24_powerDown
 11143 ;;		_RF24_write_m
 11144 ;;		_RF24_reUseTX
 11145 ;;		_RF24_startWrite
 11146 ;;		_RF24_txStandBy
 11147 ;; This function uses a non-reentrant model
 11148 ;;
 11149                           
 11150                           	psect	text67
 11151  0038A4                     __ptext67:
 11152                           	opt stack 0
 11153  0038A4                     _RF24_ce_d:
 11154                           	opt stack 26
 11155                           
 11156                           ;incstack = 0
 11157                           ;RF24_ce_d@level stored from wreg
 11158  0038A4  6E06               	movwf	RF24_ce_d@level,c
 11159                           
 11160                           ;RF24_cg.c: 70: if (rf.ce_pin != rf.csn_pin) digitalWrite(rf.ce_pin,level);
 11161  0038A6  503D               	movf	_rf,w,c
 11162  0038A8  183E               	xorwf	_rf+1,w,c
 11163  0038AA  B4D8               	btfsc	status,2,c
 11164  0038AC  0012               	return	
 11165  0038AE  C006  F003         	movff	RF24_ce_d@level,digitalWrite@mode
 11166  0038B2  503D               	movf	_rf,w,c
 11167  0038B4  ECC1  F00E         	call	_digitalWrite
 11168  0038B8  0012               	return	
 11169  0038BA                     __end_of_RF24_ce_d:
 11170                           	opt stack 0
 11171                           tblptru	equ	0xFF8
 11172                           tblptrh	equ	0xFF7
 11173                           tblptrl	equ	0xFF6
 11174                           tablat	equ	0xFF5
 11175                           prodh	equ	0xFF4
 11176                           prodl	equ	0xFF3
 11177                           intcon	equ	0xFF2
 11178                           indf0	equ	0xFEF
 11179                           postinc0	equ	0xFEE
 11180                           postdec0	equ	0xFED
 11181                           plusw0	equ	0xFEB
 11182                           fsr0h	equ	0xFEA
 11183                           fsr0l	equ	0xFE9
 11184                           wreg	equ	0xFE8
 11185                           plusw1	equ	0xFE3
 11186                           fsr1h	equ	0xFE2
 11187                           fsr1l	equ	0xFE1
 11188                           indf2	equ	0xFDF
 11189                           postinc2	equ	0xFDE
 11190                           postdec2	equ	0xFDD
 11191                           plusw2	equ	0xFDB
 11192                           fsr2h	equ	0xFDA
 11193                           fsr2l	equ	0xFD9
 11194                           status	equ	0xFD8
 11195                           
 11196 ;; *************** function _RF24N_available *****************
 11197 ;; Defined at:
 11198 ;;		line 679 in file "../../RF24Network_cg.c"
 11199 ;; Parameters:    Size  Location     Type
 11200 ;;		None
 11201 ;; Auto vars:     Size  Location     Type
 11202 ;;		None
 11203 ;; Return value:  Size  Location     Type
 11204 ;;                  1    wreg      unsigned char 
 11205 ;; Registers used:
 11206 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11207 ;; Tracked objects:
 11208 ;;		On entry : 0/0
 11209 ;;		On exit  : 0/0
 11210 ;;		Unchanged: 0/0
 11211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11214 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11215 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11216 ;;Total ram usage:        2 bytes
 11217 ;; Hardware stack levels used:    1
 11218 ;; Hardware stack levels required when called:    1
 11219 ;; This function calls:
 11220 ;;		Nothing
 11221 ;; This function is called by:
 11222 ;;		_loop
 11223 ;;		_RF24N_update
 11224 ;;		_RF24N_read
 11225 ;;		_RF24N_peek
 11226 ;; This function uses a non-reentrant model
 11227 ;;
 11228                           
 11229                           	psect	text68
 11230  0037B0                     __ptext68:
 11231                           	opt stack 0
 11232  0037B0                     _RF24N_available:
 11233                           	opt stack 27
 11234                           
 11235                           ;RF24Network_cg.c: 685: return (rn.next_frame > rn.frame_queue);
 11236                           
 11237                           ;incstack = 0
 11238  0037B0  EE21  F07A         	lfsr	2,_rn+212
 11239  0037B4  CFDE F003          	movff	postinc2,??_RF24N_available
 11240  0037B8  CFDD F004          	movff	postdec2,??_RF24N_available+1
 11241  0037BC  5004               	movf	??_RF24N_available+1,w,c
 11242  0037BE  0800               	sublw	high (_rn+58)
 11243  0037C0  E102               	bnz	u7505
 11244  0037C2  5003               	movf	??_RF24N_available,w,c
 11245  0037C4  08E0               	sublw	low (_rn+58)
 11246  0037C6                     u7505:
 11247  0037C6  B0D8               	btfsc	status,0,c
 11248  0037C8  D002               	goto	u7500
 11249  0037CA  0E01               	movlw	1
 11250  0037CC  0012               	return	
 11251  0037CE                     u7500:
 11252  0037CE  0E00               	movlw	0
 11253  0037D0  0012               	return	
 11254  0037D2                     __end_of_RF24N_available:
 11255                           	opt stack 0
 11256                           tblptru	equ	0xFF8
 11257                           tblptrh	equ	0xFF7
 11258                           tblptrl	equ	0xFF6
 11259                           tablat	equ	0xFF5
 11260                           prodh	equ	0xFF4
 11261                           prodl	equ	0xFF3
 11262                           intcon	equ	0xFF2
 11263                           indf0	equ	0xFEF
 11264                           postinc0	equ	0xFEE
 11265                           postdec0	equ	0xFED
 11266                           plusw0	equ	0xFEB
 11267                           fsr0h	equ	0xFEA
 11268                           fsr0l	equ	0xFE9
 11269                           wreg	equ	0xFE8
 11270                           plusw1	equ	0xFE3
 11271                           fsr1h	equ	0xFE2
 11272                           fsr1l	equ	0xFE1
 11273                           indf2	equ	0xFDF
 11274                           postinc2	equ	0xFDE
 11275                           postdec2	equ	0xFDD
 11276                           plusw2	equ	0xFDB
 11277                           fsr2h	equ	0xFDA
 11278                           fsr2l	equ	0xFD9
 11279                           status	equ	0xFD8
 11280                           
 11281 ;; *************** function _RF24N_logicalToPhysicalAddress *****************
 11282 ;; Defined at:
 11283 ;;		line 1093 in file "../../RF24Network_cg.c"
 11284 ;; Parameters:    Size  Location     Type
 11285 ;;  conversionIn    2   17[COMRAM] PTR struct .
 11286 ;;		 -> RF24N_write@conversion(4), 
 11287 ;; Auto vars:     Size  Location     Type
 11288 ;;  to_node         2   27[COMRAM] PTR unsigned int 
 11289 ;;		 -> conversion.send_node(2), RF24N_write@conversion(4), 
 11290 ;;  directTo        2   24[COMRAM] PTR unsigned char 
 11291 ;;		 -> conversion.send_pipe(1), RF24N_write@conversion(4), 
 11292 ;;  pre_conversi    2   22[COMRAM] unsigned int 
 11293 ;;  multicast       2   20[COMRAM] PTR unsigned char 
 11294 ;;		 -> conversion.multicast(1), RF24N_write@conversion(4), 
 11295 ;;  pre_conversi    1   26[COMRAM] unsigned char 
 11296 ;; Return value:  Size  Location     Type
 11297 ;;                  1    wreg      unsigned char 
 11298 ;; Registers used:
 11299 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 11300 ;; Tracked objects:
 11301 ;;		On entry : 0/0
 11302 ;;		On exit  : 0/0
 11303 ;;		Unchanged: 0/0
 11304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11306 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11307 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11308 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11309 ;;Total ram usage:       12 bytes
 11310 ;; Hardware stack levels used:    1
 11311 ;; Hardware stack levels required when called:    3
 11312 ;; This function calls:
 11313 ;;		_RF24N_direct_child_route_to
 11314 ;;		_RF24N_is_descendant
 11315 ;;		_RF24N_is_direct_child
 11316 ;; This function is called by:
 11317 ;;		_RF24N_write
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321                           	psect	text69
 11322  0026A2                     __ptext69:
 11323                           	opt stack 0
 11324  0026A2                     _RF24N_logicalToPhysicalAddress:
 11325                           	opt stack 24
 11326                           
 11327                           ;RF24Network_cg.c: 1098: uint16_t *to_node = &conversionInfo->send_node;
 11328                           
 11329                           ;incstack = 0
 11330  0026A2  C012  F01C         	movff	RF24N_logicalToPhysicalAddress@conversionInfo,RF24N_logicalToPhysicalAddress@to_n
      +                          ode
 11331  0026A6  C013  F01D         	movff	RF24N_logicalToPhysicalAddress@conversionInfo+1,RF24N_logicalToPhysicalAddress@to
      +                          _node+1
 11332                           
 11333                           ;RF24Network_cg.c: 1099: uint8_t *directTo = &conversionInfo->send_pipe;
 11334  0026AA  0E02               	movlw	2
 11335  0026AC  2412               	addwf	RF24N_logicalToPhysicalAddress@conversionInfo,w,c
 11336  0026AE  6E19               	movwf	RF24N_logicalToPhysicalAddress@directTo,c
 11337  0026B0  0E00               	movlw	0
 11338  0026B2  2013               	addwfc	RF24N_logicalToPhysicalAddress@conversionInfo+1,w,c
 11339  0026B4  6E1A               	movwf	RF24N_logicalToPhysicalAddress@directTo+1,c
 11340                           
 11341                           ;RF24Network_cg.c: 1100: uint8_t *multicast = &conversionInfo->multicast;
 11342  0026B6  0E03               	movlw	3
 11343  0026B8  2412               	addwf	RF24N_logicalToPhysicalAddress@conversionInfo,w,c
 11344  0026BA  6E15               	movwf	RF24N_logicalToPhysicalAddress@multicast,c
 11345  0026BC  0E00               	movlw	0
 11346  0026BE  2013               	addwfc	RF24N_logicalToPhysicalAddress@conversionInfo+1,w,c
 11347  0026C0  6E16               	movwf	RF24N_logicalToPhysicalAddress@multicast+1,c
 11348                           
 11349                           ;RF24Network_cg.c: 1103: uint16_t pre_conversion_send_node = rn.parent_node;
 11350  0026C2  C0DB  F017         	movff	_rn+53,RF24N_logicalToPhysicalAddress@pre_conversion_send_node
 11351  0026C6  C0DC  F018         	movff	_rn+54,RF24N_logicalToPhysicalAddress@pre_conversion_send_node+1
 11352                           
 11353                           ;RF24Network_cg.c: 1106: uint8_t pre_conversion_send_pipe = rn.parent_pipe;
 11354  0026CA  C0DD  F01B         	movff	_rn+55,RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe
 11355                           
 11356                           ;RF24Network_cg.c: 1108: if(*directTo > 1 ){
 11357  0026CE  C019  FFD9         	movff	RF24N_logicalToPhysicalAddress@directTo,fsr2l
 11358  0026D2  C01A  FFDA         	movff	RF24N_logicalToPhysicalAddress@directTo+1,fsr2h
 11359  0026D6  0E01               	movlw	1
 11360  0026D8  64DF               	cpfsgt	indf2,c
 11361  0026DA  D010               	goto	l5648
 11362                           
 11363                           ;RF24Network_cg.c: 1109: pre_conversion_send_node = *to_node;
 11364  0026DC  C01C  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
 11365  0026E0  C01D  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
 11366  0026E4  CFDE F017          	movff	postinc2,RF24N_logicalToPhysicalAddress@pre_conversion_send_node
 11367  0026E8  CFDD F018          	movff	postdec2,RF24N_logicalToPhysicalAddress@pre_conversion_send_node+1
 11368                           
 11369                           ;RF24Network_cg.c: 1110: *multicast = 1;
 11370  0026EC  C015  FFD9         	movff	RF24N_logicalToPhysicalAddress@multicast,fsr2l
 11371  0026F0  C016  FFDA         	movff	RF24N_logicalToPhysicalAddress@multicast+1,fsr2h
 11372  0026F4  0E01               	movlw	1
 11373  0026F6  6EDF               	movwf	indf2,c
 11374                           
 11375                           ;RF24Network_cg.c: 1112: pre_conversion_send_pipe=0;
 11376  0026F8  0E00               	movlw	0
 11377  0026FA  D016               	goto	L9
 11378  0026FC                     l5648:
 11379                           
 11380                           ;RF24Network_cg.c: 1116: else
 11381                           ;RF24Network_cg.c: 1117: if ( RF24N_is_direct_child(*to_node) )
 11382  0026FC  C01C  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
 11383  002700  C01D  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
 11384  002704  CFDE F009          	movff	postinc2,RF24N_is_direct_child@node
 11385  002708  CFDD F00A          	movff	postdec2,RF24N_is_direct_child@node+1
 11386  00270C  EC1F  F018         	call	_RF24N_is_direct_child	;wreg free
 11387  002710  0900               	iorlw	0
 11388  002712  B4D8               	btfsc	status,2,c
 11389  002714  D00B               	goto	l5654
 11390                           
 11391                           ;RF24Network_cg.c: 1118: {
 11392                           ;RF24Network_cg.c: 1120: pre_conversion_send_node = *to_node;
 11393  002716  C01C  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
 11394  00271A  C01D  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
 11395  00271E  CFDE F017          	movff	postinc2,RF24N_logicalToPhysicalAddress@pre_conversion_send_node
 11396  002722  CFDD F018          	movff	postdec2,RF24N_logicalToPhysicalAddress@pre_conversion_send_node+1
 11397  002726  D01D               	goto	l5658
 11398  002728                     L9:
 11399  002728  6E1B               	movwf	RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe,c
 11400                           
 11401                           ;RF24Network_cg.c: 1123: }
 11402  00272A  D01D               	goto	l5660
 11403  00272C                     l5654:
 11404                           
 11405                           ;RF24Network_cg.c: 1127: else if ( RF24N_is_descendant(*to_node) )
 11406  00272C  C01C  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
 11407  002730  C01D  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
 11408  002734  CFDE F003          	movff	postinc2,RF24N_is_descendant@node
 11409  002738  CFDD F004          	movff	postdec2,RF24N_is_descendant@node+1
 11410  00273C  EC4F  F01B         	call	_RF24N_is_descendant	;wreg free
 11411  002740  0900               	iorlw	0
 11412  002742  B4D8               	btfsc	status,2,c
 11413  002744  D010               	goto	l5660
 11414                           
 11415                           ;RF24Network_cg.c: 1128: {
 11416                           ;RF24Network_cg.c: 1129: pre_conversion_send_node = RF24N_direct_child_route_to(*to_node
      +                          );
 11417  002746  C01C  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
 11418  00274A  C01D  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
 11419  00274E  CFDE F003          	movff	postinc2,RF24N_direct_child_route_to@node
 11420  002752  CFDD F004          	movff	postdec2,RF24N_direct_child_route_to@node+1
 11421  002756  ECBA  F01A         	call	_RF24N_direct_child_route_to	;wreg free
 11422  00275A  C003  F017         	movff	?_RF24N_direct_child_route_to,RF24N_logicalToPhysicalAddress@pre_conversion_send_
      +                          node
 11423  00275E  C004  F018         	movff	?_RF24N_direct_child_route_to+1,RF24N_logicalToPhysicalAddress@pre_conversion_sen
      +                          d_node+1
 11424  002762                     l5658:
 11425                           
 11426                           ;RF24Network_cg.c: 1130: pre_conversion_send_pipe = 5;
 11427  002762  0E05               	movlw	5
 11428  002764  D7E1               	goto	L9
 11429  002766                     l5660:
 11430                           
 11431                           ;RF24Network_cg.c: 1131: }
 11432                           ;RF24Network_cg.c: 1133: *to_node = pre_conversion_send_node;
 11433  002766  C01C  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
 11434  00276A  C01D  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
 11435  00276E  C017  FFDE         	movff	RF24N_logicalToPhysicalAddress@pre_conversion_send_node,postinc2
 11436  002772  C018  FFDD         	movff	RF24N_logicalToPhysicalAddress@pre_conversion_send_node+1,postdec2
 11437                           
 11438                           ;RF24Network_cg.c: 1134: *directTo = pre_conversion_send_pipe;
 11439  002776  C019  FFD9         	movff	RF24N_logicalToPhysicalAddress@directTo,fsr2l
 11440  00277A  C01A  FFDA         	movff	RF24N_logicalToPhysicalAddress@directTo+1,fsr2h
 11441  00277E  C01B  FFDF         	movff	RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe,indf2
 11442  002782  0012               	return	
 11443  002784                     __end_of_RF24N_logicalToPhysicalAddress:
 11444                           	opt stack 0
 11445                           tblptru	equ	0xFF8
 11446                           tblptrh	equ	0xFF7
 11447                           tblptrl	equ	0xFF6
 11448                           tablat	equ	0xFF5
 11449                           prodh	equ	0xFF4
 11450                           prodl	equ	0xFF3
 11451                           intcon	equ	0xFF2
 11452                           indf0	equ	0xFEF
 11453                           postinc0	equ	0xFEE
 11454                           postdec0	equ	0xFED
 11455                           plusw0	equ	0xFEB
 11456                           fsr0h	equ	0xFEA
 11457                           fsr0l	equ	0xFE9
 11458                           wreg	equ	0xFE8
 11459                           plusw1	equ	0xFE3
 11460                           fsr1h	equ	0xFE2
 11461                           fsr1l	equ	0xFE1
 11462                           indf2	equ	0xFDF
 11463                           postinc2	equ	0xFDE
 11464                           postdec2	equ	0xFDD
 11465                           plusw2	equ	0xFDB
 11466                           fsr2h	equ	0xFDA
 11467                           fsr2l	equ	0xFD9
 11468                           status	equ	0xFD8
 11469                           
 11470 ;; *************** function _RF24N_is_direct_child *****************
 11471 ;; Defined at:
 11472 ;;		line 1196 in file "../../RF24Network_cg.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  node            2    8[COMRAM] unsigned int 
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;  child_node_m    2   14[COMRAM] unsigned int 
 11477 ;;  result          1   16[COMRAM] unsigned char 
 11478 ;; Return value:  Size  Location     Type
 11479 ;;                  1    wreg      unsigned char 
 11480 ;; Registers used:
 11481 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 11482 ;; Tracked objects:
 11483 ;;		On entry : 0/0
 11484 ;;		On exit  : 0/0
 11485 ;;		Unchanged: 0/0
 11486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11487 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11488 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11489 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11490 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11491 ;;Total ram usage:        9 bytes
 11492 ;; Hardware stack levels used:    1
 11493 ;; Hardware stack levels required when called:    2
 11494 ;; This function calls:
 11495 ;;		_RF24N_is_descendant
 11496 ;; This function is called by:
 11497 ;;		_RF24N_logicalToPhysicalAddress
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           	psect	text70
 11502  00303E                     __ptext70:
 11503                           	opt stack 0
 11504  00303E                     _RF24N_is_direct_child:
 11505                           	opt stack 24
 11506                           
 11507                           ;RF24Network_cg.c: 1198: uint8_t result = 0;
 11508                           
 11509                           ;incstack = 0
 11510  00303E  0E00               	movlw	0
 11511  003040  6E11               	movwf	RF24N_is_direct_child@result,c
 11512                           
 11513                           ;RF24Network_cg.c: 1207: if ( RF24N_is_descendant(node) )
 11514  003042  C009  F003         	movff	RF24N_is_direct_child@node,RF24N_is_descendant@node
 11515  003046  C00A  F004         	movff	RF24N_is_direct_child@node+1,RF24N_is_descendant@node+1
 11516  00304A  EC4F  F01B         	call	_RF24N_is_descendant	;wreg free
 11517  00304E  0900               	iorlw	0
 11518  003050  B4D8               	btfsc	status,2,c
 11519  003052  D025               	goto	l5420
 11520                           
 11521                           ;RF24Network_cg.c: 1208: {
 11522                           ;RF24Network_cg.c: 1210: uint16_t child_node_mask = ( ~ rn.node_mask ) << 3;
 11523  003054  EE20  F0DE         	lfsr	2,_rn+56
 11524  003058  CFDE F00B          	movff	postinc2,??_RF24N_is_direct_child
 11525  00305C  CFDD F00C          	movff	postdec2,??_RF24N_is_direct_child+1
 11526  003060  1C0B               	comf	??_RF24N_is_direct_child,w,c
 11527  003062  6E0D               	movwf	(??_RF24N_is_direct_child+2)& (0+255),c
 11528  003064  1C0C               	comf	??_RF24N_is_direct_child+1,w,c
 11529  003066  6E0E               	movwf	(??_RF24N_is_direct_child+3)& (0+255),c
 11530  003068  90D8               	bcf	status,0,c
 11531  00306A  360D               	rlcf	??_RF24N_is_direct_child+2,f,c
 11532  00306C  360E               	rlcf	??_RF24N_is_direct_child+3,f,c
 11533  00306E  90D8               	bcf	status,0,c
 11534  003070  360D               	rlcf	??_RF24N_is_direct_child+2,f,c
 11535  003072  360E               	rlcf	??_RF24N_is_direct_child+3,f,c
 11536  003074  90D8               	bcf	status,0,c
 11537  003076  360D               	rlcf	??_RF24N_is_direct_child+2,f,c
 11538  003078  360E               	rlcf	??_RF24N_is_direct_child+3,f,c
 11539  00307A  C00D  F00F         	movff	??_RF24N_is_direct_child+2,RF24N_is_direct_child@child_node_mask
 11540  00307E  C00E  F010         	movff	??_RF24N_is_direct_child+3,RF24N_is_direct_child@child_node_mask+1
 11541                           
 11542                           ;RF24Network_cg.c: 1211: result = ( node & child_node_mask ) == 0 ;
 11543  003082  500F               	movf	RF24N_is_direct_child@child_node_mask,w,c
 11544  003084  1409               	andwf	RF24N_is_direct_child@node,w,c
 11545  003086  6E0B               	movwf	??_RF24N_is_direct_child& (0+255),c
 11546  003088  5010               	movf	RF24N_is_direct_child@child_node_mask+1,w,c
 11547  00308A  140A               	andwf	RF24N_is_direct_child@node+1,w,c
 11548  00308C  6E0C               	movwf	(??_RF24N_is_direct_child+1)& (0+255),c
 11549  00308E  500B               	movf	??_RF24N_is_direct_child,w,c
 11550  003090  100C               	iorwf	??_RF24N_is_direct_child+1,w,c
 11551  003092  A4D8               	btfss	status,2,c
 11552  003094  D002               	goto	u6990
 11553  003096  0E01               	movlw	1
 11554  003098  D001               	goto	u7000
 11555  00309A                     u6990:
 11556  00309A  0E00               	movlw	0
 11557  00309C                     u7000:
 11558  00309C  6E11               	movwf	RF24N_is_direct_child@result,c
 11559  00309E                     l5420:
 11560                           
 11561                           ;RF24Network_cg.c: 1212: }
 11562                           ;RF24Network_cg.c: 1213: return result;
 11563  00309E  5011               	movf	RF24N_is_direct_child@result,w,c
 11564  0030A0  0012               	return	
 11565  0030A2                     __end_of_RF24N_is_direct_child:
 11566                           	opt stack 0
 11567                           tblptru	equ	0xFF8
 11568                           tblptrh	equ	0xFF7
 11569                           tblptrl	equ	0xFF6
 11570                           tablat	equ	0xFF5
 11571                           prodh	equ	0xFF4
 11572                           prodl	equ	0xFF3
 11573                           intcon	equ	0xFF2
 11574                           indf0	equ	0xFEF
 11575                           postinc0	equ	0xFEE
 11576                           postdec0	equ	0xFED
 11577                           plusw0	equ	0xFEB
 11578                           fsr0h	equ	0xFEA
 11579                           fsr0l	equ	0xFE9
 11580                           wreg	equ	0xFE8
 11581                           plusw1	equ	0xFE3
 11582                           fsr1h	equ	0xFE2
 11583                           fsr1l	equ	0xFE1
 11584                           indf2	equ	0xFDF
 11585                           postinc2	equ	0xFDE
 11586                           postdec2	equ	0xFDD
 11587                           plusw2	equ	0xFDB
 11588                           fsr2h	equ	0xFDA
 11589                           fsr2l	equ	0xFD9
 11590                           status	equ	0xFD8
 11591                           
 11592 ;; *************** function _RF24N_is_descendant *****************
 11593 ;; Defined at:
 11594 ;;		line 1218 in file "../../RF24Network_cg.c"
 11595 ;; Parameters:    Size  Location     Type
 11596 ;;  node            2    2[COMRAM] unsigned int 
 11597 ;; Auto vars:     Size  Location     Type
 11598 ;;		None
 11599 ;; Return value:  Size  Location     Type
 11600 ;;                  1    wreg      unsigned char 
 11601 ;; Registers used:
 11602 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 11603 ;; Tracked objects:
 11604 ;;		On entry : 0/0
 11605 ;;		On exit  : 0/0
 11606 ;;		Unchanged: 0/0
 11607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11610 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11611 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11612 ;;Total ram usage:        6 bytes
 11613 ;; Hardware stack levels used:    1
 11614 ;; Hardware stack levels required when called:    1
 11615 ;; This function calls:
 11616 ;;		Nothing
 11617 ;; This function is called by:
 11618 ;;		_RF24N_logicalToPhysicalAddress
 11619 ;;		_RF24N_is_direct_child
 11620 ;; This function uses a non-reentrant model
 11621 ;;
 11622                           
 11623                           	psect	text71
 11624  00369E                     __ptext71:
 11625                           	opt stack 0
 11626  00369E                     _RF24N_is_descendant:
 11627                           	opt stack 24
 11628                           
 11629                           ;RF24Network_cg.c: 1220: return ( node & rn.node_mask ) == rn.node_address;
 11630                           
 11631                           ;incstack = 0
 11632  00369E  EE20  F0D6         	lfsr	2,_rn+48
 11633  0036A2  EE00  F0DE         	lfsr	0,_rn+56
 11634  0036A6  CFEE F007          	movff	postinc0,??_RF24N_is_descendant+2
 11635  0036AA  CFED F008          	movff	postdec0,??_RF24N_is_descendant+3
 11636  0036AE  5003               	movf	RF24N_is_descendant@node,w,c
 11637  0036B0  1607               	andwf	??_RF24N_is_descendant+2,f,c
 11638  0036B2  5004               	movf	RF24N_is_descendant@node+1,w,c
 11639  0036B4  1608               	andwf	??_RF24N_is_descendant+3,f,c
 11640  0036B6  50DE               	movf	postinc2,w,c
 11641  0036B8  1807               	xorwf	??_RF24N_is_descendant+2,w,c
 11642  0036BA  E106               	bnz	u6680
 11643  0036BC  50DE               	movf	postinc2,w,c
 11644  0036BE  1808               	xorwf	??_RF24N_is_descendant+3,w,c
 11645  0036C0  A4D8               	btfss	status,2,c
 11646  0036C2  D002               	goto	u6680
 11647  0036C4  0E01               	movlw	1
 11648  0036C6  0012               	return	
 11649  0036C8                     u6680:
 11650  0036C8  0E00               	movlw	0
 11651  0036CA  0012               	return	
 11652  0036CC                     __end_of_RF24N_is_descendant:
 11653                           	opt stack 0
 11654                           tblptru	equ	0xFF8
 11655                           tblptrh	equ	0xFF7
 11656                           tblptrl	equ	0xFF6
 11657                           tablat	equ	0xFF5
 11658                           prodh	equ	0xFF4
 11659                           prodl	equ	0xFF3
 11660                           intcon	equ	0xFF2
 11661                           indf0	equ	0xFEF
 11662                           postinc0	equ	0xFEE
 11663                           postdec0	equ	0xFED
 11664                           plusw0	equ	0xFEB
 11665                           fsr0h	equ	0xFEA
 11666                           fsr0l	equ	0xFE9
 11667                           wreg	equ	0xFE8
 11668                           plusw1	equ	0xFE3
 11669                           fsr1h	equ	0xFE2
 11670                           fsr1l	equ	0xFE1
 11671                           indf2	equ	0xFDF
 11672                           postinc2	equ	0xFDE
 11673                           postdec2	equ	0xFDD
 11674                           plusw2	equ	0xFDB
 11675                           fsr2h	equ	0xFDA
 11676                           fsr2l	equ	0xFD9
 11677                           status	equ	0xFD8
 11678                           
 11679 ;; *************** function _RF24N_direct_child_route_to *****************
 11680 ;; Defined at:
 11681 ;;		line 1286 in file "../../RF24Network_cg.c"
 11682 ;; Parameters:    Size  Location     Type
 11683 ;;  node            2    2[COMRAM] unsigned int 
 11684 ;; Auto vars:     Size  Location     Type
 11685 ;;  child_mask      2    6[COMRAM] unsigned int 
 11686 ;; Return value:  Size  Location     Type
 11687 ;;                  2    2[COMRAM] unsigned int 
 11688 ;; Registers used:
 11689 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11690 ;; Tracked objects:
 11691 ;;		On entry : 0/0
 11692 ;;		On exit  : 0/0
 11693 ;;		Unchanged: 0/0
 11694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11698 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11699 ;;Total ram usage:        6 bytes
 11700 ;; Hardware stack levels used:    1
 11701 ;; Hardware stack levels required when called:    1
 11702 ;; This function calls:
 11703 ;;		Nothing
 11704 ;; This function is called by:
 11705 ;;		_RF24N_logicalToPhysicalAddress
 11706 ;; This function uses a non-reentrant model
 11707 ;;
 11708                           
 11709                           	psect	text72
 11710  003574                     __ptext72:
 11711                           	opt stack 0
 11712  003574                     _RF24N_direct_child_route_to:
 11713                           	opt stack 25
 11714                           
 11715                           ;RF24Network_cg.c: 1289: uint16_t child_mask = ( rn.node_mask << 3 ) | 0x07;
 11716                           
 11717                           ;incstack = 0
 11718  003574  0E07               	movlw	7
 11719  003576  EE20  F0DE         	lfsr	2,_rn+56
 11720  00357A  CFDE F005          	movff	postinc2,??_RF24N_direct_child_route_to
 11721  00357E  CFDD F006          	movff	postdec2,??_RF24N_direct_child_route_to+1
 11722  003582  90D8               	bcf	status,0,c
 11723  003584  3605               	rlcf	??_RF24N_direct_child_route_to,f,c
 11724  003586  3606               	rlcf	??_RF24N_direct_child_route_to+1,f,c
 11725  003588  90D8               	bcf	status,0,c
 11726  00358A  3605               	rlcf	??_RF24N_direct_child_route_to,f,c
 11727  00358C  3606               	rlcf	??_RF24N_direct_child_route_to+1,f,c
 11728  00358E  90D8               	bcf	status,0,c
 11729  003590  3605               	rlcf	??_RF24N_direct_child_route_to,f,c
 11730  003592  3606               	rlcf	??_RF24N_direct_child_route_to+1,f,c
 11731  003594  1005               	iorwf	??_RF24N_direct_child_route_to,w,c
 11732  003596  6E07               	movwf	RF24N_direct_child_route_to@child_mask,c
 11733  003598  5006               	movf	??_RF24N_direct_child_route_to+1,w,c
 11734  00359A  6E08               	movwf	RF24N_direct_child_route_to@child_mask+1,c
 11735                           
 11736                           ;RF24Network_cg.c: 1290: return node & child_mask;
 11737  00359C  5007               	movf	RF24N_direct_child_route_to@child_mask,w,c
 11738  00359E  1403               	andwf	RF24N_direct_child_route_to@node,w,c
 11739  0035A0  6E03               	movwf	?_RF24N_direct_child_route_to,c
 11740  0035A2  5008               	movf	RF24N_direct_child_route_to@child_mask+1,w,c
 11741  0035A4  1404               	andwf	RF24N_direct_child_route_to@node+1,w,c
 11742  0035A6  6E04               	movwf	?_RF24N_direct_child_route_to+1,c
 11743  0035A8  0012               	return	
 11744  0035AA                     __end_of_RF24N_direct_child_route_to:
 11745                           	opt stack 0
 11746                           tblptru	equ	0xFF8
 11747                           tblptrh	equ	0xFF7
 11748                           tblptrl	equ	0xFF6
 11749                           tablat	equ	0xFF5
 11750                           prodh	equ	0xFF4
 11751                           prodl	equ	0xFF3
 11752                           intcon	equ	0xFF2
 11753                           indf0	equ	0xFEF
 11754                           postinc0	equ	0xFEE
 11755                           postdec0	equ	0xFED
 11756                           plusw0	equ	0xFEB
 11757                           fsr0h	equ	0xFEA
 11758                           fsr0l	equ	0xFE9
 11759                           wreg	equ	0xFE8
 11760                           plusw1	equ	0xFE3
 11761                           fsr1h	equ	0xFE2
 11762                           fsr1l	equ	0xFE1
 11763                           indf2	equ	0xFDF
 11764                           postinc2	equ	0xFDE
 11765                           postdec2	equ	0xFDD
 11766                           plusw2	equ	0xFDB
 11767                           fsr2h	equ	0xFDA
 11768                           fsr2l	equ	0xFD9
 11769                           status	equ	0xFD8
 11770                           
 11771 ;; *************** function _isr *****************
 11772 ;; Defined at:
 11773 ;;		line 12 in file "pic_main.c"
 11774 ;; Parameters:    Size  Location     Type
 11775 ;;		None
 11776 ;; Auto vars:     Size  Location     Type
 11777 ;;		None
 11778 ;; Return value:  Size  Location     Type
 11779 ;;                  1    wreg      void 
 11780 ;; Registers used:
 11781 ;;		wreg, status,2, status,0
 11782 ;; Tracked objects:
 11783 ;;		On entry : 0/0
 11784 ;;		On exit  : 0/0
 11785 ;;		Unchanged: 0/0
 11786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11789 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11790 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11791 ;;Total ram usage:        2 bytes
 11792 ;; Hardware stack levels used:    1
 11793 ;; This function calls:
 11794 ;;		Nothing
 11795 ;; This function is called by:
 11796 ;;		Interrupt level 2
 11797 ;; This function uses a non-reentrant model
 11798 ;;
 11799                           
 11800                           	psect	intcode
 11801  000008                     __pintcode:
 11802                           	opt stack 0
 11803  000008                     _isr:
 11804                           	opt stack 19
 11805                           
 11806                           ;incstack = 0
 11807  000008  CFE1 F001          	movff	fsr1l,??_isr
 11808  00000C  CFE2 F002          	movff	fsr1h,??_isr+1
 11809  000010  ED66  F01B         	call	int_func,f	;refresh shadow registers
 11810                           tblptru	equ	0xFF8
 11811                           tblptrh	equ	0xFF7
 11812                           tblptrl	equ	0xFF6
 11813                           tablat	equ	0xFF5
 11814                           prodh	equ	0xFF4
 11815                           prodl	equ	0xFF3
 11816                           intcon	equ	0xFF2
 11817                           indf0	equ	0xFEF
 11818                           postinc0	equ	0xFEE
 11819                           postdec0	equ	0xFED
 11820                           plusw0	equ	0xFEB
 11821                           fsr0h	equ	0xFEA
 11822                           fsr0l	equ	0xFE9
 11823                           wreg	equ	0xFE8
 11824                           plusw1	equ	0xFE3
 11825                           fsr1h	equ	0xFE2
 11826                           fsr1l	equ	0xFE1
 11827                           indf2	equ	0xFDF
 11828                           postinc2	equ	0xFDE
 11829                           postdec2	equ	0xFDD
 11830                           plusw2	equ	0xFDB
 11831                           fsr2h	equ	0xFDA
 11832                           fsr2l	equ	0xFD9
 11833                           status	equ	0xFD8
 11834                           
 11835                           	psect	intcode_body
 11836  0036CC                     __pintcode_body:
 11837                           	opt stack 19
 11838  0036CC                     int_func:
 11839                           	opt stack 19
 11840  0036CC  0006               	pop		; remove dummy address from shadow register refresh
 11841  0036CE  EE16  F090         	lfsr	1,___inthi_sp
 11842                           
 11843                           ;pic_main.c: 14: if(INTCONbits.TMR0IF)
 11844  0036D2  A4F2               	btfss	intcon,2,c	;volatile
 11845  0036D4  D00B               	goto	i2l53
 11846                           
 11847                           ;pic_main.c: 15: {
 11848                           ;pic_main.c: 16: TMR0H=(65536l-(32000000/4000l)&0xFF00)>>8;
 11849  0036D6  0EE0               	movlw	224
 11850  0036D8  6ED7               	movwf	4055,c	;volatile
 11851                           
 11852                           ;pic_main.c: 17: TMR0L=(65536l-(32000000/4000l)&0x00FF);
 11853  0036DA  0EC0               	movlw	192
 11854  0036DC  6ED6               	movwf	4054,c	;volatile
 11855                           
 11856                           ;pic_main.c: 18: mtime++;
 11857  0036DE  0E01               	movlw	1
 11858  0036E0  2639               	addwf	_mtime,f,c
 11859  0036E2  0E00               	movlw	0
 11860  0036E4  223A               	addwfc	_mtime+1,f,c
 11861  0036E6  223B               	addwfc	_mtime+2,f,c
 11862  0036E8  223C               	addwfc	_mtime+3,f,c
 11863                           
 11864                           ;pic_main.c: 19: INTCONbits.TMR0IF=0;
 11865  0036EA  94F2               	bcf	intcon,2,c	;volatile
 11866  0036EC                     i2l53:
 11867  0036EC  C002  FFE2         	movff	??_isr+1,fsr1h
 11868  0036F0  C001  FFE1         	movff	??_isr,fsr1l
 11869  0036F4  0011               	retfie		f
 11870  0036F6                     __end_of_isr:
 11871                           	opt stack 0
 11872                           tblptru	equ	0xFF8
 11873                           tblptrh	equ	0xFF7
 11874                           tblptrl	equ	0xFF6
 11875                           tablat	equ	0xFF5
 11876                           prodh	equ	0xFF4
 11877                           prodl	equ	0xFF3
 11878                           intcon	equ	0xFF2
 11879                           indf0	equ	0xFEF
 11880                           postinc0	equ	0xFEE
 11881                           postdec0	equ	0xFED
 11882                           plusw0	equ	0xFEB
 11883                           fsr0h	equ	0xFEA
 11884                           fsr0l	equ	0xFE9
 11885                           wreg	equ	0xFE8
 11886                           plusw1	equ	0xFE3
 11887                           fsr1h	equ	0xFE2
 11888                           fsr1l	equ	0xFE1
 11889                           indf2	equ	0xFDF
 11890                           postinc2	equ	0xFDE
 11891                           postdec2	equ	0xFDD
 11892                           plusw2	equ	0xFDB
 11893                           fsr2h	equ	0xFDA
 11894                           fsr2l	equ	0xFD9
 11895                           status	equ	0xFD8
 11896                           tblptru	equ	0xFF8
 11897                           tblptrh	equ	0xFF7
 11898                           tblptrl	equ	0xFF6
 11899                           tablat	equ	0xFF5
 11900                           prodh	equ	0xFF4
 11901                           prodl	equ	0xFF3
 11902                           intcon	equ	0xFF2
 11903                           indf0	equ	0xFEF
 11904                           postinc0	equ	0xFEE
 11905                           postdec0	equ	0xFED
 11906                           plusw0	equ	0xFEB
 11907                           fsr0h	equ	0xFEA
 11908                           fsr0l	equ	0xFE9
 11909                           wreg	equ	0xFE8
 11910                           plusw1	equ	0xFE3
 11911                           fsr1h	equ	0xFE2
 11912                           fsr1l	equ	0xFE1
 11913                           indf2	equ	0xFDF
 11914                           postinc2	equ	0xFDE
 11915                           postdec2	equ	0xFDD
 11916                           plusw2	equ	0xFDB
 11917                           fsr2h	equ	0xFDA
 11918                           fsr2l	equ	0xFD9
 11919                           status	equ	0xFD8
 11920                           
 11921                           	psect	rparam
 11922  0000                     tblptru	equ	0xFF8
 11923                           tblptrh	equ	0xFF7
 11924                           tblptrl	equ	0xFF6
 11925                           tablat	equ	0xFF5
 11926                           prodh	equ	0xFF4
 11927                           prodl	equ	0xFF3
 11928                           intcon	equ	0xFF2
 11929                           indf0	equ	0xFEF
 11930                           postinc0	equ	0xFEE
 11931                           postdec0	equ	0xFED
 11932                           plusw0	equ	0xFEB
 11933                           fsr0h	equ	0xFEA
 11934                           fsr0l	equ	0xFE9
 11935                           wreg	equ	0xFE8
 11936                           plusw1	equ	0xFE3
 11937                           fsr1h	equ	0xFE2
 11938                           fsr1l	equ	0xFE1
 11939                           indf2	equ	0xFDF
 11940                           postinc2	equ	0xFDE
 11941                           postdec2	equ	0xFDD
 11942                           plusw2	equ	0xFDB
 11943                           fsr2h	equ	0xFDA
 11944                           fsr2l	equ	0xFD9
 11945                           status	equ	0xFD8
 11946                           
 11947                           	psect	temp
 11948  00006B                     btemp:
 11949                           	opt stack 0
 11950  00006B                     	ds	12
 11951                           tblptru	equ	0xFF8
 11952                           tblptrh	equ	0xFF7
 11953                           tblptrl	equ	0xFF6
 11954                           tablat	equ	0xFF5
 11955                           prodh	equ	0xFF4
 11956                           prodl	equ	0xFF3
 11957                           intcon	equ	0xFF2
 11958                           indf0	equ	0xFEF
 11959                           postinc0	equ	0xFEE
 11960                           postdec0	equ	0xFED
 11961                           plusw0	equ	0xFEB
 11962                           fsr0h	equ	0xFEA
 11963                           fsr0l	equ	0xFE9
 11964                           wreg	equ	0xFE8
 11965                           plusw1	equ	0xFE3
 11966                           fsr1h	equ	0xFE2
 11967                           fsr1l	equ	0xFE1
 11968                           indf2	equ	0xFDF
 11969                           postinc2	equ	0xFDE
 11970                           postdec2	equ	0xFDD
 11971                           plusw2	equ	0xFDB
 11972                           fsr2h	equ	0xFDA
 11973                           fsr2l	equ	0xFD9
 11974                           status	equ	0xFD8


Data Sizes:
    Strings     62
    Constant    22
    Data        14
    BSS         406
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          115     56     106
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    rn.message_buffer	PTR unsigned char  size(2) Largest target is 0
		 -> rn(BIGRAM[370]), 

    rn.frame_queue.message_buffer	PTR unsigned char  size(2) Largest target is 0
		 -> rn(BIGRAM[370]), 

    memmove@d1	PTR void  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    memmove@s1	PTR const void  size(2) Largest target is 373
		 -> rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 373
		 -> rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), 

    memcpy@d1	PTR void  size(2) Largest target is 373
		 -> rf(COMRAM[22]), RF24N_read@bufsize(COMRAM[2]), RF24N_peek@msg_size(COMRAM[2]), rn.frame_buffer(BIGRAM[32]), 
		 -> rn.frag_queue_message_buffer(BIGRAM[144]), rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), loop@payload(COMRAM[8]), 
		 -> loop@header(COMRAM[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 373
		 -> rf(COMRAM[22]), RF24N_read@bufsize(COMRAM[2]), RF24N_peek@msg_size(COMRAM[2]), rn.frame_buffer(BIGRAM[32]), 
		 -> rn.frag_queue_message_buffer(BIGRAM[144]), rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), loop@payload(COMRAM[8]), 
		 -> loop@header(COMRAM[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 373
		 -> rn.header(BIGRAM[8]), rn.frame_queue.header(BIGRAM[8]), RF24_openReadingPipe_d@address(COMRAM[5]), RF24N_enqueue@message_size(COMRAM[2]), 
		 -> rn.frame_buffer(BIGRAM[32]), rn.frag_queue_message_buffer(BIGRAM[144]), rn.frag_queue(BIGRAM[13]), rn.frame_queue(BIGRAM[154]), 
		 -> rn(BIGRAM[370]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 373
		 -> rn.header(BIGRAM[8]), rn.frame_queue.header(BIGRAM[8]), RF24_openReadingPipe_d@address(COMRAM[5]), RF24N_enqueue@message_size(COMRAM[2]), 
		 -> rn.frame_buffer(BIGRAM[32]), rn.frag_queue_message_buffer(BIGRAM[144]), rn.frag_queue(BIGRAM[13]), rn.frame_queue(BIGRAM[154]), 
		 -> rn(BIGRAM[370]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> buff(COMRAM[10]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    RF24_openReadingPipe_d@address_	PTR const unsigned char  size(2) Largest target is 5
		 -> RF24N_multicastLevel@addr(COMRAM[5]), RF24N_begin_d@addr(COMRAM[5]), 

    RF24_openWritingPipe_d@value_	PTR const unsigned char  size(2) Largest target is 5
		 -> RF24N_write_to_pipe@out_pipe(COMRAM[5]), 

    RF24_read@buf	PTR void  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24_available_p@pipe_num	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), RF24N_update@pipe_num(UNKNOWN), 

    RF24_startFastWrite@buf	PTR const void  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24_writeFast_m@buf	PTR const void  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24_read_payload@buf	PTR void  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24_read_payload@current	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24_write_payload@buf	PTR const void  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24_write_payload@current	PTR const unsigned char  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24_write_register_c_d@buf	PTR const unsigned char  size(2) Largest target is 22
		 -> RF24_openReadingPipe_d@address(COMRAM[5]), RF24_openWritingPipe_d@value(COMRAM[5]), rf.pipe0_reading_address(COMRAM[5]), rf(COMRAM[22]), 

    RF24N_pipe_address@address	PTR unsigned char  size(2) Largest target is 5
		 -> RF24N_multicastLevel@addr(COMRAM[5]), RF24N_write_to_pipe@out_pipe(COMRAM[5]), RF24N_begin_d@addr(COMRAM[5]), 

    RF24N_pipe_address@out	PTR unsigned char  size(2) Largest target is 5
		 -> RF24N_pipe_address@result(COMRAM[5]), 

    RF24N_logicalToPhysicalAddress@multicast	PTR unsigned char  size(2) Largest target is 4
		 -> conversion.multicast(COMRAM[1]), RF24N_write@conversion(BANK0[4]), 

    RF24N_logicalToPhysicalAddress@directTo	PTR unsigned char  size(2) Largest target is 4
		 -> conversion.send_pipe(COMRAM[1]), RF24N_write@conversion(BANK0[4]), 

    RF24N_logicalToPhysicalAddress@conversionInfo	PTR struct . size(2) Largest target is 4
		 -> RF24N_write@conversion(BANK0[4]), 

    RF24N_logicalToPhysicalAddress@to_node	PTR unsigned int  size(2) Largest target is 4
		 -> conversion.send_node(COMRAM[2]), RF24N_write@conversion(BANK0[4]), 

    RF24N_write@header	PTR struct . size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    sp__memmove	PTR void  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24N_read@message	PTR void  size(2) Largest target is 8
		 -> loop@payload(COMRAM[8]), 

    RF24N_read@header	PTR struct . size(2) Largest target is 8
		 -> loop@header(COMRAM[8]), 

    RF24N_peek@frame.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    sp__memcpy	PTR void  size(2) Largest target is 373
		 -> rf(COMRAM[22]), RF24N_read@bufsize(COMRAM[2]), RF24N_peek@msg_size(COMRAM[2]), rn.frame_buffer(BIGRAM[32]), 
		 -> rn.frag_queue_message_buffer(BIGRAM[144]), rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), loop@payload(COMRAM[8]), 
		 -> loop@header(COMRAM[8]), 

    RF24N_enqueue@header	PTR struct . size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24N_update@header	PTR struct . size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    rn.frag_ptr.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    S1769$message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    rn.frag_queue.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn.frag_queue_message_buffer(BIGRAM[144]), rn(BIGRAM[370]), 

    S1773$next_frame	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    rn.next_frame	PTR unsigned char  size(2) Largest target is 373
		 -> rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), 

    S1773$frag_ptr	PTR struct . size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    rn.frag_ptr	PTR struct . size(2) Largest target is 373
		 -> rn.frag_queue(BIGRAM[13]), rn(BIGRAM[370]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 10
		 -> buff(COMRAM[10]), 

    Serial_println@val	PTR const unsigned char  size(2) Largest target is 36
		 -> buff(COMRAM[10]), STR_1(CODE[36]), 

    Serial_print@val	PTR const unsigned char  size(2) Largest target is 36
		 -> buff(COMRAM[10]), STR_4(CODE[3]), STR_3(CODE[5]), STR_2(CODE[18]), 
		 -> STR_1(CODE[36]), 

    sp__itoa_	PTR const unsigned char  size(2) Largest target is 10
		 -> buff(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_loop
    _setup->_RF24N_begin_d
    _Serial_begin->___lldiv
    _RF24_begin->_RF24_setChannel
    _RF24_begin->_RF24_setRetries
    _RF24_setDataRate->_RF24_write_register_d
    _RF24N_begin_d->_RF24_openReadingPipe_d
    _RF24_setRetries->_RF24_write_register_d
    _RF24_setChannel->_RF24_write_register_d
    _RF24_openReadingPipe_d->_RF24_write_register_c_d
    _RF24_openReadingPipe_d->_RF24_write_register_d
    _RF24_enableDynamicPayloads->_RF24_write_register_d
    _loop->_Serial_println
    _itoa_->_ultoa
    _ultoa->___lldiv
    _Serial_println->_Serial_print
    _Serial_print->_itoa_
    _RF24N_read->_memmove
    _RF24_flush_rx->_RF24_spiTrans
    _RF24_read->_RF24_read_payload
    _RF24N_write->_RF24N_write_to_pipe
    _RF24_startListening->_RF24_closeReadingPipe
    _RF24_powerUp->_RF24_write_register_d
    _RF24_closeReadingPipe->_RF24_write_register_d
    _RF24N_write_to_pipe->_RF24_writeFast_m
    _RF24_writeFast_m->_RF24_startFastWrite
    _RF24_startFastWrite->_RF24_write_payload
    _RF24_txStandBy_t->_RF24_stopListening
    _RF24_setAutoAck_p->_RF24_write_register_d
    _RF24_openWritingPipe_d->_RF24_write_register_c_d
    _RF24_openWritingPipe_d->_RF24_write_register_d
    _RF24N_update->_RF24_read
    _RF24_read->_RF24_read_payload
    _RF24_write_register_d->_RF24_read_register_d
    _RF24_available_p->_RF24_read_register_d
    _RF24_get_status->_RF24_spiTrans
    _RF24N_write->_RF24N_write_to_pipe
    _RF24N_enqueue->_RF24_stopListening
    _RF24_stopListening->_RF24_write_register_d
    _RF24_endTransaction->_RF24_csn_d
    _RF24_beginTransaction->_RF24_csn_d
    _RF24_csn_d->_delayMicroseconds
    _RF24_flush_tx->_RF24_spiTrans
    _RF24_ce_d->_digitalWrite
    _RF24N_logicalToPhysicalAddress->_RF24N_is_direct_child
    _RF24N_is_direct_child->_RF24N_is_descendant

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  198533
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0  145745
                      _RF24N_begin_d
                         _RF24N_init
                         _RF24_begin
                          _RF24_init
                       _Serial_begin
                     _Serial_println
 ---------------------------------------------------------------------------------
 (2) _Serial_begin                                         8     4      4     677
                                             15 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _RF24_init                                            2     1      1     108
                                              2 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _RF24_begin                                           2     2      0   54252
                                             24 COMRAM     2     2      0
                          _RF24_ce_d
                         _RF24_csn_d
                      _RF24_flush_rx
                      _RF24_flush_tx
                       _RF24_powerUp
               _RF24_read_register_d
                    _RF24_setChannel
                   _RF24_setDataRate
                    _RF24_setRetries
             _RF24_toggle_features_d
              _RF24_write_register_d
                          _SPI_begin
                              _delay
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              2     1      1     920
                                              2 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _SPI_begin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RF24_toggle_features_d                               0     0      0    2905
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _RF24_setDataRate                                     3     3      0    9301
                                             20 COMRAM     3     3      0
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (2) _RF24N_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RF24N_begin_d                                       10     8      2   90133
                                             31 COMRAM    10     8      2
             _RF24N_is_valid_address
                 _RF24N_pipe_address
                _RF24N_setup_address
         _RF24_enableDynamicPayloads
                       _RF24_isValid
             _RF24_openReadingPipe_d
                  _RF24_setAutoAck_p
                    _RF24_setChannel
                    _RF24_setRetries
                _RF24_startListening
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     415
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     415
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _RF24_setRetries                                      4     3      1    6374
                                             20 COMRAM     4     3      1
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24_setChannel                                      4     4      0    6322
                                             20 COMRAM     4     4      0
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24_openReadingPipe_d                              11     9      2   18525
                                             20 COMRAM    11     9      2
               _RF24_read_register_d
            _RF24_write_register_c_d
              _RF24_write_register_d
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _RF24_enableDynamicPayloads                           0     0      0    9128
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24N_setup_address                                 11    11      0     105
                                              2 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 (1) _loop                                                16    16      0   52788
                                             40 COMRAM    16    16      0
                    _RF24N_available
                         _RF24N_read
                       _RF24N_update
                       _Serial_print
                     _Serial_println
                              _itoa_
 ---------------------------------------------------------------------------------
 (2) _itoa_                                                4     0      4    1629
                                             28 COMRAM     4     0      4
                              _ultoa
 ---------------------------------------------------------------------------------
 (3) _ultoa                                               13     5      8    1479
                                             15 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     287
                                              2 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     546
                                              2 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _Serial_println                                       2     0      2     575
                                             38 COMRAM     2     0      2
                       _Serial_print
                              _itoa_ (ARG)
 ---------------------------------------------------------------------------------
 (3) _Serial_print                                         6     4      2     425
                                             32 COMRAM     6     4      2
                          _Serial_tx
                              _itoa_ (ARG)
 ---------------------------------------------------------------------------------
 (4) _Serial_tx                                            1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RF24N_read                                          15     9      6    5612
                                             14 COMRAM    15     9      6
                    _RF24N_available
                             _memcpy
                            _memmove
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     6      6     556
                                              2 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (6) _digitalWrite                                         2     1      1    1270
                                              2 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (4) _millis                                               4     0      4       0
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _delayMicroseconds                                    7     7      0     136
                                              2 COMRAM    12    12      0
 ---------------------------------------------------------------------------------
 (3) _RF24_getDynamicPayloadSize                           1     1      0   13168
                                             17 COMRAM     2     2      0
              _RF24_beginTransaction
                _RF24_endTransaction
                      _RF24_flush_rx
                       _SPI_transfer
                              _delay
 ---------------------------------------------------------------------------------
 (3) _RF24_flush_rx                                        0     0      0    2970
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (3) _RF24_read                                            3     0      3   19140
                                             26 COMRAM     3     0      3
                  _RF24_read_payload
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (4) _RF24_read_payload                                   11     8      3    3304
                                             15 COMRAM    11     8      3
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _RF24N_write                                         29    26      3  413568
                                             51 COMRAM     3     0      3
                                              0 BANK0     38    38      0
             _RF24N_is_valid_address
     _RF24N_logicalToPhysicalAddress
                       _RF24N_update
                _RF24N_write_to_pipe
                  _RF24_setAutoAck_p
                _RF24_startListening
                   _RF24_txStandBy_t
                             _millis
 ---------------------------------------------------------------------------------
 (3) _RF24_startListening                                  1     1      0   36823
                                             24 COMRAM     1     1      0
                          _RF24_ce_d
              _RF24_closeReadingPipe
                      _RF24_flush_tx
                       _RF24_powerUp
               _RF24_read_register_d
            _RF24_write_register_c_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24_powerUp                                         1     1      0    9868
                                             20 COMRAM     1     1      0
               _RF24_read_register_d
              _RF24_write_register_d
                              _delay
 ---------------------------------------------------------------------------------
 (4) _RF24_closeReadingPipe                                4     4      0    9159
                                             20 COMRAM     4     4      0
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (4) _RF24N_write_to_pipe                                 10     6      4   82450
                                             41 COMRAM    10     6      4
                 _RF24N_pipe_address
             _RF24_openWritingPipe_d
                  _RF24_setAutoAck_p
                 _RF24_stopListening
                   _RF24_txStandBy_t
                   _RF24_writeFast_m
 ---------------------------------------------------------------------------------
 (5) _RF24_writeFast_m                                     5     1      4   15780
                                             36 COMRAM     5     1      4
                    _RF24_get_status
                _RF24_startFastWrite
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (6) _RF24_startFastWrite                                  7     2      5    6097
                                             29 COMRAM     7     2      5
                          _RF24_ce_d
                 _RF24_write_payload
 ---------------------------------------------------------------------------------
 (7) _RF24_write_payload                                  14    10      4    3711
                                             15 COMRAM    14    10      4
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _RF24_txStandBy_t                                    17    12      5   30462
                                             22 COMRAM    17    12      5
                          _RF24_ce_d
                      _RF24_flush_tx
                    _RF24_get_status
               _RF24_read_register_d
                 _RF24_stopListening
              _RF24_write_register_d
                             _millis
 ---------------------------------------------------------------------------------
 (4) _millis                                               4     0      4       0
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _RF24_setAutoAck_p                                    5     4      1    9754
                                             20 COMRAM     5     4      1
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (5) _RF24_openWritingPipe_d                              10     8      2   10895
                                             20 COMRAM    10     8      2
            _RF24_write_register_c_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (4) _RF24_write_register_c_d                              5     2      3    4397
                                             15 COMRAM     5     2      3
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _RF24N_pipe_address                                  20    15      5    1358
                                              2 COMRAM    20    15      5
 ---------------------------------------------------------------------------------
 (2) _RF24N_update                                         9     9      0   44408
                    _RF24N_available
                      _RF24N_enqueue
             _RF24N_is_valid_address
               _RF24N_levelToAddress
                        _RF24N_write
                   _RF24_available_p
         _RF24_getDynamicPayloadSize
                       _RF24_isValid
                          _RF24_read
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                6     4      2     675
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _RF24_read                                            3     0      3   19140
                                             26 COMRAM     3     0      3
                  _RF24_read_payload
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24_write_register_d                                3     2      1    6158
                                             17 COMRAM     3     2      1
              _RF24_beginTransaction
                _RF24_endTransaction
               _RF24_read_register_d (ARG)
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _RF24_isValid                                         1     1      0      37
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RF24_getDynamicPayloadSize                           1     1      0   13168
                                             17 COMRAM     2     2      0
              _RF24_beginTransaction
                _RF24_endTransaction
                      _RF24_flush_rx
                       _SPI_transfer
                              _delay
 ---------------------------------------------------------------------------------
 (3) _RF24_available_p                                     4     2      2    6190
                                             17 COMRAM     4     2      2
                    _RF24_get_status
               _RF24_read_register_d
 ---------------------------------------------------------------------------------
 (4) _RF24_get_status                                      0     0      0    2970
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (3) _RF24N_write                                         29    26      3  413568
                                             51 COMRAM     3     0      3
                                              0 BANK0     38    38      0
             _RF24N_is_valid_address
     _RF24N_logicalToPhysicalAddress
                       _RF24N_update
                _RF24N_write_to_pipe
                  _RF24_setAutoAck_p
                _RF24_startListening
                   _RF24_txStandBy_t
                             _millis
 ---------------------------------------------------------------------------------
 (3) _RF24N_levelToAddress                                 8     6      2     130
                                              2 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _RF24N_is_valid_address                               4     2      2     367
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _RF24N_enqueue                                       16    14      2   19654
                                             22 COMRAM    16    14      2
                 _RF24_stopListening
                            ___lwdiv
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6    4332
                                              2 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     549
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _RF24_stopListening                                   2     2      0   13535
                                             20 COMRAM     2     2      0
                          _RF24_ce_d
                      _RF24_flush_tx
               _RF24_read_register_d
              _RF24_write_register_d
                  _delayMicroseconds
 ---------------------------------------------------------------------------------
 (4) _RF24_read_register_d                                 2     2      0    2970
                                             15 COMRAM     2     2      0
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _SPI_transfer                                         1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RF24_endTransaction                                  0     0      0    1437
                         _RF24_csn_d
 ---------------------------------------------------------------------------------
 (4) _RF24_beginTransaction                                0     0      0    1437
                         _RF24_csn_d
 ---------------------------------------------------------------------------------
 (5) _RF24_csn_d                                           1     1      0    1437
                                             14 COMRAM     1     1      0
                  _delayMicroseconds
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _delayMicroseconds                                    7     7      0     136
                                              2 COMRAM    12    12      0
 ---------------------------------------------------------------------------------
 (3) _RF24_flush_tx                                        0     0      0    2970
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (4) _RF24_spiTrans                                        2     2      0    2970
                                             15 COMRAM     2     2      0
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _RF24_ce_d                                            1     1      0    1301
                                              5 COMRAM     1     1      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _digitalWrite                                         2     1      1    1270
                                              2 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (3) _RF24N_available                                      2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _RF24N_logicalToPhysicalAddress                      12    10      2    1343
                                             17 COMRAM    12    10      2
        _RF24N_direct_child_route_to
                _RF24N_is_descendant
              _RF24N_is_direct_child
 ---------------------------------------------------------------------------------
 (5) _RF24N_is_direct_child                                9     7      2     395
                                              8 COMRAM     9     7      2
                _RF24N_is_descendant
 ---------------------------------------------------------------------------------
 (6) _RF24N_is_descendant                                  6     4      2     185
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _RF24N_direct_child_route_to                          6     4      2     142
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isr                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _RF24N_available
     _RF24N_read
       _RF24N_available
       _memcpy
       _memmove
     _RF24N_update
       _RF24N_available
       _RF24N_enqueue
         _RF24_stopListening
           _RF24_ce_d
             _digitalWrite
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
           _delayMicroseconds
         ___lwdiv
         _memcpy
       _RF24N_is_valid_address
       _RF24N_levelToAddress
       _RF24N_write
         _RF24N_is_valid_address
         _RF24N_logicalToPhysicalAddress
           _RF24N_direct_child_route_to
           _RF24N_is_descendant
           _RF24N_is_direct_child
             _RF24N_is_descendant
         _RF24N_write_to_pipe
           _RF24N_pipe_address
           _RF24_openWritingPipe_d
             _RF24_write_register_c_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
           _RF24_setAutoAck_p
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
           _RF24_stopListening
             _RF24_ce_d
               _digitalWrite
             _RF24_flush_tx
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _delayMicroseconds
           _RF24_txStandBy_t
             _RF24_ce_d
               _digitalWrite
             _RF24_flush_tx
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_get_status
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_stopListening
               _RF24_ce_d
                 _digitalWrite
               _RF24_flush_tx
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
               _delayMicroseconds
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _millis
           _RF24_writeFast_m
             _RF24_get_status
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_startFastWrite
               _RF24_ce_d
                 _digitalWrite
               _RF24_write_payload
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
         _RF24_setAutoAck_p
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
         _RF24_startListening
           _RF24_ce_d
             _digitalWrite
           _RF24_closeReadingPipe
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_powerUp
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _delay
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_c_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
         _RF24_txStandBy_t
           _RF24_ce_d
             _digitalWrite
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_get_status
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_stopListening
             _RF24_ce_d
               _digitalWrite
             _RF24_flush_tx
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _delayMicroseconds
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
           _millis
         _millis
       _RF24_available_p
         _RF24_get_status
           _RF24_spiTrans
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
       _RF24_getDynamicPayloadSize
         _RF24_beginTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_endTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_flush_rx
           _RF24_spiTrans
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
         _SPI_transfer
         _delay
       _RF24_isValid
       _RF24_read
         _RF24_read_payload
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _delay
     _Serial_print
       _Serial_tx
       _itoa_ (ARG)
         _ultoa
           ___lldiv
           ___llmod
     _Serial_println
       _Serial_print
         _Serial_tx
         _itoa_ (ARG)
           _ultoa
             ___lldiv
             ___llmod
       _itoa_ (ARG)
         _ultoa
           ___lldiv
           ___llmod
     _itoa_
       _ultoa
         ___lldiv
         ___llmod
   _setup
     _RF24N_begin_d
       _RF24N_is_valid_address
       _RF24N_pipe_address
       _RF24N_setup_address
       _RF24_enableDynamicPayloads
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_isValid
       _RF24_openReadingPipe_d
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_c_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
         _memcpy
       _RF24_setAutoAck_p
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_setChannel
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_setRetries
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_startListening
         _RF24_ce_d
           _digitalWrite
         _RF24_closeReadingPipe
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
         _RF24_flush_tx
           _RF24_spiTrans
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
         _RF24_powerUp
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
           _delay
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_c_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       ___lwmod
       ___wmul
     _RF24N_init
     _RF24_begin
       _RF24_ce_d
         _digitalWrite
       _RF24_csn_d
         _delayMicroseconds
         _digitalWrite
       _RF24_flush_rx
         _RF24_spiTrans
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
       _RF24_flush_tx
         _RF24_spiTrans
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
       _RF24_powerUp
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
         _delay
       _RF24_read_register_d
         _RF24_beginTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_endTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _SPI_transfer
       _RF24_setChannel
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_setDataRate
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_setRetries
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_toggle_features_d
         _RF24_beginTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_endTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _SPI_transfer
       _RF24_write_register_d
         _RF24_beginTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_endTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_read_register_d (ARG)
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _SPI_transfer (ARG)
       _SPI_begin
       _delay
       _pinMode
     _RF24_init
     _Serial_begin
       ___lldiv
     _Serial_println
       _Serial_print
         _Serial_tx
         _itoa_ (ARG)
           _ultoa
             ___lldiv
             ___llmod
       _itoa_ (ARG)
         _ultoa
           ___lldiv
           ___llmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0     172      37        9.3%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           73      0       0       0        0.0%
COMRAM              73     38      6A       1       92.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6A      34        0.0%
DATA                 0      0     1DC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Dec  3 00:02:38 2016

                          __size_of_RF24N_write_to_pipe 0094  
                                         ?_RF24_powerUp 0001  
                                       ??_RF24N_begin_d 0022  
                                        ?_RF24_spiTrans 0001  
                                           _SSPSTATbits 000FC7  
                                                    l87 3904  
                            RF24_read_register_d@result 0011  
                                                    _rf 003D  
                                                    _rn 00A6  
                                   ___wmul@multiplicand 0005  
                                           __CFG_BORV$3 000000  
                                          __CFG_CP0$OFF 000000  
                                       ??_RF24N_enqueue 0019  
                                          __CFG_CP1$OFF 000000  
                                          __CFG_CP2$OFF 000000  
                                          __CFG_CP3$OFF 000000  
                                _RF24_openReadingPipe_d 249A  
                                                   l210 1DDA  
                                                   l202 1D86  
                                                   l211 1DE6  
                                                   l220 1E52  
                                                   l212 1DF2  
                                                   l204 1D92  
                                                   l221 1E5E  
                                                   l213 1DFE  
                                                   l205 1D9E  
                                                   l230 1ECA  
                                                   l222 1E6A  
                                                   l214 1E0A  
                                                   l206 1DAA  
                                                   l231 1ED6  
                                                   l223 1E76  
                                                   l215 1E16  
                                                   l207 1DB6  
                                                   l232 1EE2  
                                                   l224 1E82  
                                                   l216 1E22  
                                                   l208 1DC2  
                                                   l233 1EEE  
                                                   l225 1E8E  
                                                   l217 1E2E  
                                                   l209 1DCE  
                                                   l161 1B08  
                                                   l306 38E8  
                                                   l234 1EFA  
                                                   l226 1E9A  
                                                   l218 1E3A  
                                                   l170 1B68  
                                                   l403 1AFA  
                                                   l235 1F06  
                                                   l227 1EA6  
                                                   l219 1E46  
                                                   l171 1B74  
                                                   l163 1B14  
                                                   l236 1F12  
                                                   l228 1EB2  
                                                   l180 1BE0  
                                                   l172 1B80  
                                                   l164 1B20  
                                                   l237 1F1E  
                                                   l229 1EBE  
                                                   l181 1BEC  
                                                   l173 1B8C  
                                                   l165 1B2C  
                                                   l190 1C58  
                                                   l182 1BF8  
                                                   l174 1B98  
                                                   l166 1B38  
                                                   l191 1C64  
                                                   l183 1C04  
                                                   l175 1BA4  
                                                   l167 1B44  
                                                   l192 1C70  
                                                   l184 1C10  
                                                   l176 1BB0  
                                                   l168 1B50  
                                                   l193 1C7C  
                                                   l185 1C1C  
                                                   l177 1BBC  
                                                   l169 1B5C  
                                                   l194 1C88  
                                                   l186 1C28  
                                                   l178 1BC8  
                                                   l451 134A  
                                                   l195 1C94  
                                                   l187 1C34  
                                                   l179 1BD4  
                                                   l196 1CA0  
                                                   l188 1C40  
                                                   l189 1C4C  
                                                   l527 203C  
                                                   l391 2892  
                                                   l731 3730  
                                                   l593 32EE  
                                                   l685 2C0E  
                                                   l766 30C4  
                                                   l944 3874  
                                                   l959 2FD4  
                                ??_RF24_read_register_d 0010  
                                          __CFG_CPB$OFF 000000  
                                          __CFG_CPD$OFF 000000  
                            __end_of_child_payload_size 1007  
                                                   _isr 0008  
                                 _RF24_write_register_d 37D2  
                                                   prod 000FF3  
                                                   wreg 000FE8  
                         ??_RF24N_direct_child_route_to 0005  
                                          __CFG_LVP$OFF 000000  
                                   _RF24N_is_descendant 369E  
                                          __CFG_WDT$OFF 000000  
                                 __size_of_SPI_transfer 0010  
                                                  l1405 3254  
                                                  l1415 33C4  
                                                  l1338 2D7A  
                                                  l4020 2D38  
                                                  l1348 302C  
                                                  l4030 2D6C  
                                                  l4022 2D3C  
                                                  l4110 1CAC  
                                                  l4040 2FF6  
                                                  l4018 2D2C  
                                                  l4042 2FFA  
                                                  l2362 278E  
                                                  l1395 267E  
                                                  l5100 33DA  
                                                  l2380 284E  
                                                  l2364 27A2  
                                RF24_startFastWrite@buf 001E  
                                                  l5110 33F6  
                                                  l5102 33E2  
                                                  l4046 301E  
                                                  l4038 2FEA  
                                                  l5112 33FA  
                                                  l4074 2E90  
                                                  l4082 25BC  
                                                  l2378 282A  
                                                  l5300 31E6  
                                                  l4092 2614  
                                                  l6006 32E4  
                                                  l5206 337A  
                                                  l5222 35BE  
                                                  l5302 3200  
                                                  l4414 2B08  
                                                  l4078 2EC6  
                                                  l6030 2FBA  
                                                  l5208 337E  
                                                  l5312 23A4  
                                                  l5240 2DC0  
                                                  l6024 2FA2  
                                                  l5330 2422  
                                                  l5322 23F2  
                                                  l5226 35D0  
                                                  l5242 2DC8  
                                                  l4418 2B38  
                                                  l6122 2904  
                                                  l6050 294E  
                                                  l5420 309E  
                                                  l5316 23B2  
                                                  l5404 2AAE  
                                                  l5180 2C70  
                                                  l5252 2DEE  
                                                  l6220 363A  
                                RF24_startFastWrite@len 0020  
                                                  l5334 2458  
                                                  l5318 23DE  
                                                  l5182 2C76  
                                                  l5174 2C54  
                                                  l5166 2C3A  
                                                  l5254 2DF8  
                                                  l6142 22C0  
                                                  l6126 292A  
                                                  l6070 29A0  
                                                  l6054 2960  
                                                  l5600 3544  
                                                  l5328 2408  
                                                  l5432 2F00  
                                                  l5168 2C42  
                                                  l5256 2DFE  
                                                  l5248 2DDA  
                                                  l5096 1F2A  
                                                  l6144 22DC  
                                                  l4480 33BA  
                                                  l4472 339A  
                                                  l5522 17C4  
                                                  l5338 2460  
                                                  l5442 2F42  
                                                  l5178 2C66  
                                                  l5274 3514  
                                                  l5362 3502  
                                                  l6154 231E  
                                                  l4474 33A2  
                                                  l5700 3222  
                                                  l5604 3556  
                                                  l5196 334C  
                                                  l5532 1852  
                                                  l5436 2F08  
                                                  l5620 31A4  
                                                  l6172 2C8A  
                                                  l4476 33A6  
                                                  l5702 322A  
                                                  l5606 3568  
                                                  l5382 360C  
                                                  l5198 3354  
                                                  l6182 2CFE  
                                                  l5712 324A  
                                                  l5704 322E  
                                                  l5632 34BC  
                                                  l5608 3570  
                                                  l5552 1942  
                                                  l5536 187A  
                                                  l5480 1622  
                                                  l5392 2A18  
                                                  l5448 3450  
                                                  l5456 3468  
                                                  l5626 34A0  
                                                  l5378 3608  
                                                  l5538 189A  
                                                  l5394 2A2E  
                                                  l5618 319E  
                                                  l5810 211C  
                                                  l5660 2766  
                                                  l5548 193A  
                                                  l5492 165A  
                                                  l5484 1638  
                                                  l5740 24A8  
                                                  l5654 272C  
                                                  l5910 1262  
                                                  l5582 1A9C  
                                                  l5574 1A36  
                                                  l5558 195E  
                                                  l5590 1AD0  
                                                  l5750 2502  
                                                  l5648 26FC  
                                                  l5904 1226  
                                                  l5488 163C  
                                                  l5680 2BA6  
                                                  l5832 219E  
                                                  l5736 24A0  
                                                  l5658 2762  
                                                  l5930 12E4  
                                                  l5690 2BF4  
                                                  l5818 2146  
                                                  l5770 2026  
                                                  l5746 24E2  
                                                  l5924 12C2  
                                                  l5588 1AA8  
                                                  l5836 223E  
                                                  l5828 2184  
                                                  l5756 2534  
                                                  ?_isr 0001  
                                                  l5926 12E0  
                                                  l5918 128C  
                                                  l5862 10C2  
                                                  l5678 2B9C  
                                                  l5838 224A  
                                                  l5758 2558  
                                                  l5890 11D8  
                                                  l5964 1464  
                                                  l5948 1372  
                                                  l5884 1166  
                                                  l5876 112A  
                                                  l5972 1476  
                                                  l5958 1460  
                                                  l5984 14BE  
                                                  l5994 15BE  
                                                  l5986 1502  
                                                  l5996 15C2  
                                                  STR_1 1017  
                                                  STR_2 103B  
                                                  STR_3 104D  
                                                  STR_4 1052  
                            __size_of_RF24_read_payload 0080  
                                                  u7000 309C  
                                                  u4540 2EBE  
                                                  u6205 1D9A  
                                                  u4605 1B10  
                                                  u6206 1D9C  
                                                  u4550 2EF4  
                                                  u4606 1B12  
                                                  u6215 1DA6  
                                                  u4615 1B1C  
                                                  u6216 1DA8  
                                                  u4616 1B1E  
                                                  u6305 1E12  
                                                  u6225 1DB2  
                                                  u4705 1B88  
                                                  u4625 1B28  
                                                  u6306 1E14  
                                                  u6226 1DB4  
                                                  u4706 1B8A  
                                                  u4626 1B2A  
                                                  u7131 16F2  
                                                  u6315 1E1E  
                                                  u6235 1DBE  
                                                  u4547 2EB4  
                                                  u4715 1B94  
                                                  u4635 1B34  
                                                  u6316 1E20  
                                                  u6236 1DC0  
                                                  u4716 1B96  
                                                  u4636 1B36  
                                                  u6405 1E8A  
                                                  u6325 1E2A  
                                                  u6245 1DCA  
                                                  u4557 2EEA  
                                                  u4805 1C00  
                                                  u4725 1BA0  
                                                  u4645 1B40  
                                                  u8014 32D6  
                                                  u7310 19BA  
                                                  u6406 1E8C  
                                                  u6326 1E2C  
                                                  u6246 1DCC  
                                                  u4806 1C02  
                                                  u4726 1BA2  
                                                  u4646 1B42  
                                                  u8015 32D0  
                                                  u6415 1E96  
                                                  u6335 1E36  
                                                  u6255 1DD6  
                                                  u4815 1C0C  
                                                  u4735 1BAC  
                                                  u4655 1B4C  
                                                  u7160 1746  
                                                  u7064 3432  
                                                  u6416 1E98  
                                                  u6336 1E38  
                                                  u6256 1DD8  
                                                  u4816 1C0E  
                                                  u4736 1BAE  
                                                  u4656 1B4E  
                                                  u7065 342E  
                                                  u6505 1F02  
                                                  u6425 1EA2  
                                                  u6345 1E42  
                                                  u6265 1DE2  
                                                  u4905 1C78  
                                                  u4825 1C18  
                                                  u4745 1BB8  
                                                  u4665 1B58  
                                                  u7090 1622  
                                                  u6506 1F04  
                                                  u6426 1EA4  
                                                  u6346 1E44  
                                                  u6266 1DE4  
                                                  u4906 1C7A  
                                                  u4826 1C1A  
                                                  u4746 1BBA  
                                                  u4666 1B5A  
                                                  u6515 1F0E  
                                                  u6435 1EAE  
                                                  u6355 1E4E  
                                                  u6275 1DEE  
                                                  u6195 1D8E  
                                                  u4915 1C84  
                                                  u4835 1C24  
                                                  u4755 1BC4  
                                                  u4675 1B64  
                                                  u7500 37CE  
                                                  u6516 1F10  
                                                  u6436 1EB0  
                                                  u6356 1E50  
                                                  u6276 1DF0  
                                                  u6196 1D90  
                                                  u4916 1C86  
                                                  u4836 1C26  
                                                  u4756 1BC6  
                                                  u4676 1B66  
                                   RF24_writeFast_m@buf 0025  
                                                  i2l53 36EC  
                                                  u6525 1F1A  
                                                  u6445 1EBA  
                                                  u6365 1E5A  
                                                  u6285 1DFA  
                                                  u4925 1C90  
                                                  u4845 1C30  
                                                  u4765 1BD0  
                                                  u4685 1B70  
                                                  u5565 2E32  
                                                  u6526 1F1C  
                                                  u6446 1EBC  
                                                  u6366 1E5C  
                                                  u6286 1DFC  
                                                  u4926 1C92  
                                                  u4846 1C32  
                                                  u4766 1BD2  
                                                  u4686 1B72  
                                                  u6535 1F26  
                                                  u6455 1EC6  
                                                  u6375 1E66  
                                                  u6295 1E06  
                                                  u4935 1C9C  
                                                  u4855 1C3C  
                                                  u4775 1BDC  
                                                  u4695 1B7C  
                                                  u6536 1F28  
                                                  u6456 1EC8  
                                                  u6376 1E68  
                                                  u6296 1E08  
                                                  u4936 1C9E  
                                                  u4856 1C3E  
                                                  u4776 1BDE  
                                                  u4696 1B7E  
                                                  u7505 37C6  
                                                  u6465 1ED2  
                                                  u6385 1E72  
                                                  u4945 1CA8  
                                                  u4865 1C48  
                                                  u4785 1BE8  
                                                  u6466 1ED4  
                                                  u6386 1E74  
                                                  u4946 1CAA  
                                                  u4866 1C4A  
                                                  u4786 1BEA  
                                                  u6475 1EDE  
                                                  u6395 1E7E  
                                                  u4875 1C54  
                                                  u4795 1BF4  
                                                  u6476 1EE0  
                                                  u6396 1E80  
                                                  u4876 1C56  
                                                  u4796 1BF6  
                                                  u6485 1EEA  
                                                  u4885 1C60  
                                                  u6814 31DC  
                                                  u6486 1EEC  
                                                  u4886 1C62  
                                                  u6831 2386  
                                                  u6815 31D8  
                                                  u6495 1EF6  
                                                  u4895 1C6C  
                                                  u6680 36C8  
                                                  u6824 31F6  
                                                  u6496 1EF8  
                                                  u4896 1C6E  
                                                  u6825 31F2  
                                                  u6674 30EE  
                                                  u6675 30EA  
                                   RF24_writeFast_m@len 0027  
                                                  u7670 2138  
                                                  u7584 2596  
                                                  u7585 2592  
                                                  u6990 309A  
                                                  u7880 1282  
                                 RF24N_write_to_pipe@ok 0033  
                                     ??_RF24N_available 0003  
                           RF24_write_register_d@status 0014  
                                          __CFG_PWRT$ON 000000  
                          RF24N_is_valid_address@result 0006  
                                    __size_of_RF24_ce_d 0016  
                                    __size_of_RF24_init 0030  
                                    __size_of_RF24_read 001C  
                                                  _buff 0053  
                                                  _main 3610  
                                        ??_RF24_isValid 0003  
                                                  _loop 2C84  
                                                  fsr0h 000FEA  
                                                  fsr1h 000FE2  
                                                  indf0 000FEF  
                                                  fsr0l 000FE9  
                                                  fsr2h 000FDA  
                                                  fsr1l 000FE1  
                                                  indf2 000FDF  
                                                  fsr2l 000FD9  
                                                  btemp 006B  
                           ?_RF24_enableDynamicPayloads 0001  
                                          RF24_read@buf 001B  
                                                  prodh 000FF4  
                                                  prodl 000FF3  
                                          RF24_read@len 001D  
                                                  start 0014  
                                         __CFG_IESO$OFF 000000  
                                         __CFG_MCLRE$ON 000000  
                                        ??_RF24_powerUp 0015  
                                          ___param_bank 000010  
                              ??_RF24N_is_valid_address 0005  
                                _RF24_openWritingPipe_d 2EFC  
                                  ?_RF24N_is_descendant 0003  
                                   RF24_spiTrans@status 0011  
                          __end_of_RF24N_levelToAddress 32F8  
                                                 ??_isr 0001  
                                ?_RF24_closeReadingPipe 0001  
                               _RF24_write_payload$2292 001A  
                               _RF24_write_payload$2293 001C  
                                                 ?_main 0001  
                                                 ?_loop 0001  
                                       __end_of___lldiv 2D8C  
                                       __end_of___llmod 303E  
                           __size_of_RF24N_pipe_address 011E  
                                       __end_of___lwdiv 325E  
                                       __end_of___lwmod 33CE  
                                      SPI_transfer@data 0003  
                                                 _RCREG 000FAE  
                                 RF24N_begin_d@_channel 0028  
                                   __size_of_RF24N_init 005C  
                                   __size_of_RF24N_read 0122  
                                          _SPI_transfer 38E0  
                                                 _TMR0H 000FD7  
                                                 _TMR0L 000FD6  
                                                 _SPBRG 000FAF  
                                                 _TXREG 000FAD  
                                     ?_RF24_txStandBy_t 0017  
                                         __CFG_WRT0$OFF 000000  
                                         __CFG_WRT1$OFF 000000  
                                         __CFG_WRT2$OFF 000000  
                                         __CFG_WRT3$OFF 000000  
                             __size_of_RF24_available_p 0032  
                                        __CFG_EBTR0$OFF 000000  
                                        __CFG_FCMEN$OFF 000000  
                                        __CFG_EBTR1$OFF 000000  
                                        __CFG_EBTR2$OFF 000000  
                                        __CFG_EBTR3$OFF 000000  
                                   __size_of_RF24_begin 00D0  
                                         __CFG_WRTB$OFF 000000  
                                         __CFG_WRTC$OFF 000000  
                                         __CFG_WRTD$OFF 000000  
                                   __size_of_RF24_csn_d 0014  
                          ??_RF24_getDynamicPayloadSize 0012  
                                    ??_RF24_txStandBy_t 001C  
                                        __CFG_EBTRB$OFF 000000  
                                                 _delay 3342  
                                        RF24_ce_d@level 0006  
                                                 _itoa_ 3670  
                                       __end_of_memmove 2B64  
                                   RF24N_pipe_address@i 0016  
                                                 _mtime 0039  
                                       __end_of_pinMode 1D82  
                                                 _setup 325E  
                                                 _ultoa 25AC  
                                        __CFG_BOREN$OFF 000000  
                                                 tablat 000FF5  
                                       ??_RF24_flush_rx 0012  
                                       ??_RF24_flush_tx 0012  
                               _RF24_write_register_c_d 35AA  
                                                 plusw0 000FEB  
                                                 plusw1 000FE3  
                                                 plusw2 000FDB  
                          RF24_startFastWrite@multicast 0021  
                                                 status 000FD8  
                                    __size_of_SPI_begin 001A  
                       __size_of_RF24_toggle_features_d 0016  
                  __size_of_RF24N_direct_child_route_to 0036  
                                       ??_RF24_spiTrans 0010  
                                  __end_of_digitalWrite 2000  
                                       __initialization 32F8  
                            __size_of_RF24_setAutoAck_p 0056  
                                 ??_RF24N_is_descendant 0005  
                           __size_of_RF24_write_payload 008C  
                                          __end_of_main 3640  
                                          __end_of_loop 2D0A  
RF24N_logicalToPhysicalAddress@pre_conversion_send_node 0017  
RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe 001B  
                  RF24N_is_direct_child@child_node_mask 000F  
                                 RF24N_begin_d@retryVar 0027  
                                        __CFG_OSC$HSPLL 000000  
                   __size_of_RF24_getDynamicPayloadSize 0038  
                                     __end_of_RF24_ce_d 38BA  
                                                ??_main 0039  
                                     __end_of_RF24_init 3670  
                               RF24_setAutoAck_p@enable 0015  
                                     __end_of_RF24_read 382C  
                                                ??_loop 0029  
                                         __activetblptr 000002  
                 RF24N_pipe_address@address_translation 005D  
                                ?_RF24_write_register_d 0012  
                           __end_of_RF24N_setup_address 2860  
                                     _child_pipe_enable 100D  
                                        _Serial_println 3846  
                                                ?_delay 0003  
                                      ___llmod@dividend 0003  
                                                ?_itoa_ 001D  
                                                ?_setup 0001  
                                                ?_ultoa 0010  
                                     ?_RF24_writeFast_m 0025  
                                    delayMicroseconds@d 000A  
                                    delayMicroseconds@i 000B  
                                    delayMicroseconds@j 000D  
                              RF24_available_p@pipe_num 0012  
                                  RF24N_write@isAckType 009E  
                                    ??_RF24_writeFast_m 0029  
                                                _SPBRGH 000FB0  
                                  __end_of_RF24N_update 1B04  
                                                _SSPBUF 000FC9  
                                  __size_of_RF24N_write 025A  
                             RF24N_is_direct_child@node 0009  
                               RF24N_write_to_pipe@node 002A  
                               RF24N_write_to_pipe@pipe 002C  
                                 RF24_write_payload@buf 0010  
                                        __CFG_XINST$OFF 000000  
                                        RF24_csn_d@mode 000F  
                       __size_of_RF24N_is_valid_address 0036  
                                                ___wmul 36F6  
                        RF24_openReadingPipe_d@address_ 0015  
                                   _RF24_endTransaction 391A  
                                             ??___lldiv 000B  
                                             ??___llmod 000B  
                                             ??___lwdiv 0007  
                                             ??___lwmod 0007  
                           __end_of_RF24_startFastWrite 353E  
                                                _memcpy 348E  
                                                delay@i 0005  
                                                delay@j 0007  
                                                _millis 38CE  
                                                clear_0 3300  
                                                clear_1 3312  
                                    __size_of_Serial_tx 000C  
                             __end_of_child_pipe_enable 1013  
                                __end_of_Serial_println 3860  
                                _RF24_toggle_features_d 3878  
                                  __end_of_RF24_isValid 3878  
                                     __end_of_SPI_begin 3846  
                                          __pdataCOMRAM 005D  
                                  RF24_read_payload@buf 0010  
                                             ??_memmove 0009  
                                             ??_pinMode 0004  
                                 _RF24N_is_direct_child 303E  
                                          __mediumconst 0000  
                                 _RF24_beginTransaction 3922  
                                                tblptrh 000FF7  
                                                tblptrl 000FF6  
                                                tblptru 000FF8  
                                                ultoa@c 001C  
                                  __end_of_RF24_powerUp 378E  
                                                ultoa@v 0018  
                                   _RF24N_write_to_pipe 2B64  
                             ??_RF24_write_register_c_d 0013  
                                  ?_RF24_endTransaction 0001  
                                      Serial_begin@baud 0010  
                                  _RF24N_levelToAddress 32AC  
                            __end_of_RF24_stopListening 3104  
                 RF24N_direct_child_route_to@child_mask 0007  
                                            __accesstop 0080  
                               __end_of__initialization 3338  
                                          ??_RF24N_init 0003  
                          RF24_openWritingPipe_d@value_ 0015  
                                          ??_RF24N_read 0015  
                                       __CFG_PBADEN$OFF 000000  
                                 RF24_setDataRate@speed 0016  
                                 RF24_setDataRate@setup 0017  
                             __size_of_RF24_setDataRate 0066  
                           __end_of_RF24_startListening 31B6  
                                      RF24_spiTrans@cmd 0010  
                                         ___rparam_used 000001  
                                          ??_RF24_begin 0019  
                                          ??_RF24_csn_d 000F  
                                           pinMode@mode 0003  
                                       RF24_begin@setup 001A  
                                        __pcstackCOMRAM 0001  
                                            ___inthi_sp 0690  
                       RF24N_direct_child_route_to@node 0003  
                                  ?_RF24N_write_to_pipe 002A  
                              __size_of_RF24_get_status 0008  
                                         __end_of_delay 338C  
                               ?_RF24_openReadingPipe_d 0015  
                                         __end_of_itoa_ 369E  
                                         __end_of_setup 32AC  
                                         __end_of_ultoa 26A2  
                                       ?_Serial_println 0027  
                                 RF24_setAutoAck_p@pipe 0019  
                                  _RF24_setChannel$2315 0015  
                                _RF24_read_payload$2300 0019  
                                       _RF24N_available 37B0  
                                    __end_of_RF24N_init 3160  
                                    __end_of_RF24N_read 237C  
                                      _RF24_available_p 35DE  
                    __end_of_RF24_getDynamicPayloadSize 3506  
                            _RF24_getDynamicPayloadSize 34CE  
                                RF24_available_p@status 0015  
                                _RF24N_is_valid_address 353E  
                                 ??_RF24_endTransaction 0010  
                                    __end_of_RF24_begin 2A08  
                                               ??_delay 0005  
                                    __end_of_RF24_csn_d 38CE  
                                               ??_itoa_ 0021  
                                               ??_setup 002A  
                                               ??_ultoa 0018  
                                 ?_RF24N_levelToAddress 0003  
                                           loop@payload 0031  
                                         ?_Serial_begin 0010  
                                    _child_payload_size 1001  
                                     __end_of_Serial_tx 390A  
                                 __size_of_digitalWrite 027E  
                                         ?_Serial_print 0021  
                             RF24_closeReadingPipe@pipe 0018  
                               ?_RF24_openWritingPipe_d 0015  
                                            _child_pipe 1007  
                              __size_of_RF24_setChannel 0026  
                                 ??_RF24N_write_to_pipe 002E  
                        __end_of_RF24_openReadingPipe_d 25AC  
                               ??_RF24_closeReadingPipe 0015  
                                               ?___wmul 0003  
          RF24N_logicalToPhysicalAddress@conversionInfo 0012  
                                 __end_of_RF24N_begin_d 2938  
                                               ?_memcpy 0003  
                                               ?_millis 0003  
                            RF24_write_payload@data_len 0012  
                                   RF24N_enqueue@header 0017  
                              __size_of_RF24_setRetries 0022  
                                ?_RF24N_is_direct_child 0009  
                                 __end_of_RF24N_enqueue 15CA  
                                ?_RF24_beginTransaction 0001  
                                   RF24N_enqueue@result 0024  
                         __size_of_RF24_read_register_d 001E  
                            RF24N_is_valid_address@node 0003  
                                          _digitalWrite 1D82  
                                 __size_of_RF24N_update 053A  
                                        ??_Serial_begin 0014  
                                        ??_Serial_print 0023  
                        __end_of_RF24_openWritingPipe_d 2F72  
                          RF24N_write_to_pipe@multicast 002D  
                             __size_of_RF24_txStandBy_t 00BC  
                                               __Hparam 0000  
                                     RF24N_write@header 009F  
                                               __Lparam 0000  
                           RF24N_write_to_pipe@out_pipe 002E  
                                               ___lldiv 2D0A  
                                       __size_of___wmul 0026  
                      ??_RF24N_logicalToPhysicalAddress 0014  
                       ?_RF24N_logicalToPhysicalAddress 0012  
                                               ___llmod 2FD8  
                               __end_of_RF24N_available 37D2  
                                               ___lwdiv 320C  
                                 __size_of_RF24_isValid 0018  
                                               ___lwmod 338C  
                                          __psmallconst 1000  
                               ??_RF24_write_register_d 0013  
                            __end_of_RF24N_pipe_address 249A  
                                       __CFG_STVREN$OFF 000000  
                                               __pcinit 32F8  
                                       __size_of_memcpy 0040  
                         RF24_write_register_c_d@status 0013  
                                       __size_of_millis 0012  
                                               __ramtop 1000  
                                      RF24N_read@header 000F  
                                               __ptext0 3610  
                                               __ptext1 325E  
                                               __ptext2 2E0C  
                                               __ptext3 3640  
                                               __ptext4 2938  
                                               __ptext5 1B04  
                                               __ptext6 382C  
                                               __ptext7 3878  
                                               __ptext8 2F72  
                                               __ptext9 3104  
                                 RF24N_write@conversion 00A2  
                                          _RF24N_update 15CA  
                                             _T0CONbits 000FD5  
                                      RF24N_read@maxlen 0013  
                                     ??_RF24_get_status 0012  
                   __end_of_RF24N_direct_child_route_to 35AA  
                           _RF24N_direct_child_route_to 3574  
                                 __size_of_RF24_powerUp 0026  
                                          __size_of_isr 36EE  
                                               _memmove 2AC4  
                                               _pinMode 1B04  
                                         Serial_print@i 0025  
                                 RF24N_pipe_address@dec 0011  
                                             _RF24_ce_d 38A4  
                                               _next_id 0069  
                                 RF24N_pipe_address@out 0014  
                                             _RF24_init 3640  
                                             _RF24_read 3810  
                             RF24N_enqueue@padding_2039 0022  
                                ??_RF24N_levelToAddress 0005  
                                        __pintcode_body 36CC  
                                     RF24N_begin_d@addr 0022  
                                  end_of_initialization 3338  
                                  RF24_setRetries@delay 0018  
                                  RF24_setRetries@count 0015  
                                               memcpy@d 0009  
                                               memcpy@n 0007  
                                               memcpy@s 000B  
                                         __Lmediumconst 0000  
                                               int_func 36CC  
                                 __end_of_RF24_flush_rx 3912  
                                 __end_of_RF24_flush_tx 3932  
                                      _RF24_setDataRate 2F72  
                                       RF24_init@_cepin 0004  
                           __end_of_RF24N_is_descendant 36CC  
                              RF24N_pipe_address@result 000C  
                                       RF24_init@_cspin 0003  
                      RF24_getDynamicPayloadSize@result 0013  
                                          _RF24_isValid 3860  
                            __end_of_RF24_write_payload 2C84  
                                     __end_of_this_node 1017  
                                       ___lldiv@divisor 0007  
                                       ___lldiv@counter 000F  
                                             _RCSTAbits 000FAB  
                                               postdec0 000FED  
                                               postdec2 000FDD  
                                               postinc0 000FEE  
                                               postinc2 000FDE  
                                 __end_of_RF24_spiTrans 38A4  
                             __size_of_RF24_writeFast_m 0040  
                                          _RF24_powerUp 3768  
                               ?_RF24_toggle_features_d 0001  
                             RF24N_pipe_address@address 0006  
                                            _other_node 1013  
                                     ??_RF24_setChannel 0015  
                                             _PORTAbits 000F80  
                                             _PORTBbits 000F81  
                                             _PORTCbits 000F82  
                                             _PORTDbits 000F83  
                                             _PORTEbits 000F84  
                                    _RF24N_enqueue$2037 0023  
                                            ?_RF24_ce_d 0001  
                                             _TRISAbits 000F92  
                                             _TRISBbits 000F93  
                                             _TRISCbits 000F94  
                                            ?_RF24_init 0003  
                                            ?_RF24_read 001B  
                                             _TRISDbits 000F95  
                                             _TRISEbits 000F96  
                 RF24N_logicalToPhysicalAddress@to_node 001C  
                              _RF24_startFastWrite$2366 0023  
                                 RF24N_write@reply_time 009A  
                                     ??_RF24_setRetries 0016  
                                             _SPI_begin 382C  
                                RF24_setDataRate@result 0015  
                                         ??_RF24N_write 0080  
                          __size_of_RF24N_setup_address 00DC  
                                             _TXSTAbits 000FAC  
                            RF24_write_register_d@value 0012  
                            RF24_write_register_c_d@buf 0010  
                            RF24_write_register_c_d@len 0012  
                            RF24_write_register_c_d@reg 0014  
                              __end_of_RF24_available_p 3610  
                                      ??_Serial_println 0029  
                        __end_of_RF24_toggle_features_d 388E  
                            RF24_setChannel@max_channel 0018  
                                    _RF24_stopListening 30A2  
                                      ?_RF24N_available 0001  
                            RF24N_begin_d@_node_address 0020  
                                        __end_of___wmul 371C  
                                  RF24N_setup_address@i 0005  
                                  RF24N_setup_address@m 0007  
                                           _BAUDCONbits 000FB8  
                                         __pidataCOMRAM 38F0  
                                  __end_of_Serial_begin 2E86  
                                        __end_of_memcpy 34CE  
                              RF24_write_payload@status 0016  
                                        __end_of_millis 38E0  
                                  __end_of_Serial_print 2EFC  
                                   ?_RF24_stopListening 0001  
                               ?_RF24N_is_valid_address 0003  
                                   start_initialization 32F8  
                          __size_of_RF24_startFastWrite 0038  
                           ?_RF24_getDynamicPayloadSize 0001  
                                           __end_of_isr 36F6  
                                       _RF24_begin$2329 0019  
                                            ?_SPI_begin 0001  
                                RF24_setAutoAck_p@en_aa 0018  
                             RF24_writeFast_m@multicast 0028  
                             RF24N_enqueue@message_size 0025  
                              RF24_write_register_d@reg 0013  
                                       ___llmod@divisor 0007  
                                  ??_RF24_stopListening 0015  
                                       ___llmod@counter 000B  
                                      _RF24_txStandBy_t 2A08  
                                   __end_of_RF24N_write 225A  
                          ??_RF24_enableDynamicPayloads 0015  
               RF24N_logicalToPhysicalAddress@multicast 0015  
                                   RF24N_write@directTo 0036  
                                             _Serial_tx 38FE  
                                              ??___wmul 0007  
                        __size_of_RF24_closeReadingPipe 0040  
                          __size_of_RF24_startListening 0056  
                         __end_of_RF24_closeReadingPipe 344E  
                                      __CFG_LPT1OSC$OFF 000000  
                               ??_RF24N_is_direct_child 000B  
                                              ??_memcpy 0009  
                                              ??_millis 0007  
                               ??_RF24_beginTransaction 0010  
                        __end_of_RF24N_is_valid_address 3574  
                           __end_of_RF24_endTransaction 3922  
                                         ?_SPI_transfer 0001  
                                           __pbssBIGRAM 00A6  
                              ?_RF24_write_register_c_d 0010  
                                           __pbssCOMRAM 0039  
                                           ??_RF24_ce_d 0006  
                                         __pcstackBANK0 0080  
                                           ??_RF24_init 0004  
                                           ??_RF24_read 001E  
                              RF24_read_payload@current 0017  
                                            pinMode@pin 0004  
                                     _delayMicroseconds 33CE  
                   __size_of_RF24_enableDynamicPayloads 0026  
                                    ?_delayMicroseconds 0001  
                               RF24_openReadingPipe_d@i 001E  
                                            loop@header 0029  
                           __end_of_RF24N_write_to_pipe 2BF8  
                                       RF24_powerUp@cfg 0015  
                           RF24_openReadingPipe_d@child 001F  
                                   ??_delayMicroseconds 0003  
                          __end_of_RF24_read_register_d 3810  
                                      ___lwdiv@dividend 0003  
                                            ?_Serial_tx 0001  
                                     _RF24_isValid$2441 0003  
                            RF24_read_payload@blank_len 0016  
                                     __CFG_CCP2MX$PORTC 000000  
                                       _RF24_get_status 3912  
                             RF24N_levelToAddress@level 0008  
                                             __pintcode 0008  
                                      _RF24_writeFast_m 344E  
                                              ?___lldiv 0003  
                                              ?___llmod 0003  
                                              ?___lwdiv 0003  
                                              ?___lwmod 0003  
                               RF24N_enqueue@isFragment 0020  
                        __size_of_RF24_write_register_d 0020  
                             RF24_write_payload@current 0018  
                                        ??_SPI_transfer 0003  
                         __end_of_RF24_write_register_d 37F2  
                              __end_of_RF24_setDataRate 2FD8  
                                           __smallconst 1000  
                             __end_of_delayMicroseconds 340E  
                                              ?_memmove 0003  
                                              ?_pinMode 0003  
                           RF24_write_payload@blank_len 0017  
                               RF24N_pipe_address@F3842 0064  
                __end_of_RF24N_logicalToPhysicalAddress 2784  
               __size_of_RF24N_logicalToPhysicalAddress 00E2  
                        _RF24N_logicalToPhysicalAddress 26A2  
                                           ??_SPI_begin 0003  
                                      ___lwdiv@quotient 0008  
                                        __size_of_delay 004A  
                                    _RF24N_pipe_address 237C  
                                        __size_of_itoa_ 002E  
                                        __size_of_setup 004E  
                    RF24N_setup_address@node_mask_check 000C  
                                        __size_of_ultoa 00F6  
                                           _RF24N_write 2000  
                                          Serial_tx@val 0003  
                                  RF24N_enqueue@padding 0021  
                                       Serial_print@val 0021  
                                __size_of_RF24N_begin_d 00D8  
                                        ___wmul@product 0007  
                                              _LATAbits 000F89  
                                              _LATBbits 000F8A  
                                              _LATCbits 000F8B  
                                              _LATDbits 000F8C  
                                              _LATEbits 000F8D  
                                   ?_RF24N_pipe_address 0003  
                               RF24N_pipe_address@count 0013  
                           RF24N_is_valid_address@digit 0005  
                                       _RF24_setChannel 371C  
                                __size_of_RF24N_enqueue 0574  
                                              _PIR1bits 000F9E  
                                 __size_of_Serial_begin 007A  
                                      __CFG_WDTPS$32768 000000  
                                             _this_node 1015  
                                 __size_of_Serial_print 0076  
                                   _RF24N_setup_address 2784  
                       __end_of_RF24_write_register_c_d 35DE  
                                       _RF24_setRetries 378E  
                                    _RF24_write_payload 2BF8  
                                  ??_RF24N_pipe_address 0008  
                                     ___wmul@multiplier 0003  
                           RF24N_is_direct_child@result 0011  
                              RF24N_setup_address@count 0009  
                                RF24_setChannel@channel 0017  
                                   ?_RF24_write_payload 0010  
                                    __end_of_child_pipe 100D  
                                             copy_data0 332C  
                                  ?_RF24N_setup_address 0001  
                         __size_of_RF24N_levelToAddress 004C  
                               __end_of_RF24_get_status 391A  
                                          _Serial_begin 2E0C  
                              ??_RF24_openReadingPipe_d 0017  
                    __end_of_RF24_enableDynamicPayloads 3768  
                            _RF24_enableDynamicPayloads 3742  
                                          _Serial_print 2E86  
                                              __Hrparam 0000  
                                   _RF24_startFastWrite 3506  
                                           ??_Serial_tx 0003  
                                              __Lrparam 0000  
                                     ?_RF24_available_p 0012  
                                  ??_RF24_write_payload 0014  
                                        RF24N_begin_d@i 0029  
                          __size_of_RF24N_is_descendant 002E  
                         RF24_openReadingPipe_d@address 0019  
                                    ??_RF24_available_p 0014  
                                             memmove@d1 0003  
                                             memmove@s1 0005  
                           RF24_write_payload@writeType 0013  
                                      __size_of___lldiv 0082  
                                      __size_of___llmod 0066  
                                      __size_of___lwdiv 0052  
                                      __size_of___lwmod 0042  
                                    RF24N_write@to_node 0034  
                                         _RF24N_begin_d 2860  
                               RF24_read_payload@status 0015  
                              __end_of_RF24_txStandBy_t 2AC4  
                            __size_of_delayMicroseconds 0040  
                                __size_of_RF24_flush_rx 0008  
                                __size_of_RF24_flush_tx 0008  
                                         _RF24N_enqueue 1056  
                                  ?_RF24_startFastWrite 001E  
                                  _RF24_read_register_d 37F2  
                           RF24_openWritingPipe_d@value 0019  
                             RF24_read_payload@data_len 0012  
                                      __size_of_memmove 00A0  
                                      __size_of_pinMode 027E  
                                       ___lwdiv@divisor 0005  
                                       ___lwdiv@counter 0007  
                              ??_RF24_openWritingPipe_d 0017  
                                              __ptext10 2860  
                                              __ptext11 36F6  
                                              __ptext20 25AC  
                                              __ptext12 338C  
                                              __ptext21 2FD8  
                                              __ptext13 378E  
                                              __ptext30 33CE  
                                              __ptext22 2D0A  
                                              __ptext14 371C  
                                              __ptext31 34CE  
                                              __ptext23 3846  
                                              __ptext15 249A  
                                              __ptext40 344E  
                                              __ptext32 390A  
                                              __ptext24 2E86  
                                              __ptext16 3742  
                                              __ptext41 3506  
                                              __ptext33 3810  
                                              __ptext25 38FE  
                                              __ptext17 2784  
                                              __ptext50 37D2  
                                              __ptext42 2BF8  
                                              __ptext34 2D8C  
                                              __ptext26 225A  
                                              __ptext18 2C84  
                                              __ptext51 3860  
                                              __ptext43 2A08  
                                              __ptext35 2000  
                                              __ptext27 2AC4  
                                              __ptext19 3670  
                                              __ptext60 37F2  
                                              __ptext52 35DE  
                                              __ptext44 31B6  
                                              __ptext36 3160  
                                              __ptext28 1D82  
                                              __ptext61 38E0  
                                              __ptext53 3912  
                                              __ptext45 2EFC  
                                              __ptext37 3768  
                                              __ptext29 38CE  
                                              __ptext70 303E  
                                              __ptext62 391A  
                                              __ptext54 32AC  
                                              __ptext46 35AA  
                                              __ptext38 340E  
                                              __ptext71 369E  
                                              __ptext63 3922  
                                              __ptext55 353E  
                                              __ptext47 237C  
                                              __ptext39 2B64  
                                              __ptext72 3574  
                                              __ptext64 38BA  
                                              __ptext56 1056  
                                              __ptext48 15CA  
                                              __ptext65 392A  
                                              __ptext57 348E  
                                              __ptext49 3342  
                                              __ptext66 388E  
                                              __ptext58 320C  
                                              __ptext67 38A4  
                                              __ptext59 30A2  
                                              __ptext68 37B0  
                                              __ptext69 26A2  
                                 ??_RF24N_setup_address 0003  
                                     RF24N_read@bufsize 001C  
                               RF24_openWritingPipe_d@i 001E  
                                     RF24N_read@padding 001B  
                                   _RF24_startListening 3160  
                                __size_of_RF24_spiTrans 0016  
                               __end_of_RF24_setChannel 3742  
                                     RF24N_read@message 0011  
                                         __size_of_main 0030  
                               RF24_read_register_d@reg 0010  
                                     _RF24_read_payload 2D8C  
                                            _RF24N_init 3104  
                                            _RF24N_read 225A  
                                         __size_of_loop 0086  
                                  __end_of_SPI_transfer 38F0  
                                              delay@val 0003  
                                    ?_RF24_read_payload 0010  
                               RF24N_is_descendant@node 0003  
                                            _RF24_begin 2938  
                                RF24N_pipe_address@node 0003  
                                RF24N_pipe_address@pipe 0005  
                                            _RF24_csn_d 38BA  
                               __end_of_RF24_setRetries 37B0  
                                  ?_RF24_startListening 0001  
                                   ??_RF24_read_payload 0013  
                                        ?_RF24N_begin_d 0020  
                         RF24N_levelToAddress@levelAddr 0009  
                                     Serial_println@val 0027  
                            RF24_startFastWrite@startTx 0022  
                        __size_of_RF24N_is_direct_child 0064  
                         __end_of_RF24N_is_direct_child 30A2  
                        __size_of_RF24_beginTransaction 0008  
                         __end_of_RF24_beginTransaction 392A  
                                        ?_RF24N_enqueue 0017  
                                 ??_RF24_startFastWrite 0023  
                                            _INTCONbits 000FF2  
                                 ?_RF24_read_register_d 0001  
                              __size_of_RF24N_available 0022  
                                              memcpy@d1 0003  
                                              memcpy@s1 0005  
                                         ?_digitalWrite 0003  
                                             ultoa@base 0016  
                                              memmove@d 000B  
                                              memmove@n 0007  
                                              memmove@s 000D  
                               RF24_txStandBy_t@timeout 0017  
                                              itoa_@val 001D  
                              __end_of_RF24_writeFast_m 348E  
                               RF24_txStandBy_t@startTx 001B  
                                              intlevel2 0000  
                             __end_of_RF24_read_payload 2E0C  
                                      ___lwmod@dividend 0003  
                                      ?_RF24_get_status 0001  
                                      ___lldiv@dividend 0003  
                                    __end_of_other_node 1015  
                      __size_of_RF24_write_register_c_d 0034  
                       __size_of_RF24_openReadingPipe_d 0112  
                           __size_of_RF24_stopListening 0062  
                                         _RF24_flush_rx 390A  
                                         _RF24_flush_tx 392A  
                                 ??_RF24_startListening 0019  
                                     _RF24_setAutoAck_p 31B6  
                                         _RF24_spiTrans 388E  
                                    ?_RF24_setAutoAck_p 0015  
                                 _RF24_closeReadingPipe 340E  
                                              ultoa@buf 0010  
                                              ultoa@val 0012  
                                      digitalWrite@mode 0003  
                                     ?_RF24_setDataRate 0001  
                                      ___lldiv@quotient 000B  
                          ?_RF24N_direct_child_route_to 0003  
                                       ___lwmod@divisor 0005  
                                         RF24N_write@ok 00A1  
                                       ___lwmod@counter 0007  
                               __size_of_Serial_println 001A  
                                        ??_digitalWrite 0004  
                                   ??_RF24_setAutoAck_p 0016  
                                    ??_RF24_setDataRate 0015  
                                           _SSPCON1bits 000FC6  
                RF24N_logicalToPhysicalAddress@directTo 0019  
                       __size_of_RF24_openWritingPipe_d 0076  
                          __size_of_RF24_endTransaction 0008  
                                 RF24_txStandBy_t@start 0024  
                                          ?_RF24N_write 0034  
                                       digitalWrite@pin 0005  
                                      ?_RF24_setChannel 0001  
                                           ?_RF24N_init 0001  
                                           ?_RF24N_read 000F  
                                        ?_RF24_flush_rx 0001  
                                        ?_RF24_flush_tx 0001  
                              ??_RF24_toggle_features_d 0010  
                                         ?_RF24_isValid 0001  
                        RF24N_setup_address@parent_mask 000A  
                                           ?_RF24_begin 0001  
                                           ?_RF24_csn_d 0001  
                                      ?_RF24_setRetries 0015  
                             __end_of_RF24_setAutoAck_p 320C  
