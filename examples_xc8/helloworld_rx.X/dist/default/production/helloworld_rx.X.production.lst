

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Dec  5 19:28:17 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91  0000                     
    92 ;;RF24N_update@val	offset	0
    93 ;;RF24N_update@header	offset	1
    94 ;;RF24N_update@returnVal	offset	3
    95 ;;RF24N_update@pipe_num	offset	4
    96 ;;_RF24N_update$3246	offset	5
    97                           
    98                           	psect	idataCOMRAM
    99  00390C                     __pidataCOMRAM:
   100                           	opt stack 0
   101                           
   102                           ;initializer for RF24N_pipe_address@address_translation
   103  00390C  C3                 	db	195
   104  00390D  3C                 	db	60
   105  00390E  33                 	db	51
   106  00390F  CE                 	db	206
   107  003910  3E                 	db	62
   108  003911  E3                 	db	227
   109  003912  EC                 	db	236
   110                           
   111                           ;initializer for RF24N_pipe_address@F3856
   112  003913  CC                 	db	204
   113  003914  CC                 	db	204
   114  003915  CC                 	db	204
   115  003916  CC                 	db	204
   116  003917  CC                 	db	204
   117                           
   118                           ;initializer for _next_id
   119  003918  0001               	dw	1
   120                           
   121                           	psect	smallconst
   122  001000                     __psmallconst:
   123                           	opt stack 0
   124  001000  00                 	db	0
   125  001001                     _child_payload_size:
   126                           	opt stack 0
   127  001001  11                 	db	17
   128  001002  12                 	db	18
   129  001003  13                 	db	19
   130  001004  14                 	db	20
   131  001005  15                 	db	21
   132  001006  16                 	db	22
   133  001007                     __end_of_child_payload_size:
   134                           	opt stack 0
   135  001007                     _child_pipe:
   136                           	opt stack 0
   137  001007  0A                 	db	10
   138  001008  0B                 	db	11
   139  001009  0C                 	db	12
   140  00100A  0D                 	db	13
   141  00100B  0E                 	db	14
   142  00100C  0F                 	db	15
   143  00100D                     __end_of_child_pipe:
   144                           	opt stack 0
   145  00100D                     _child_pipe_enable:
   146                           	opt stack 0
   147  00100D  00                 	db	0
   148  00100E  01                 	db	1
   149  00100F  02                 	db	2
   150  001010  03                 	db	3
   151  001011  04                 	db	4
   152  001012  05                 	db	5
   153  001013                     __end_of_child_pipe_enable:
   154                           	opt stack 0
   155  001013                     _other_node:
   156                           	opt stack 0
   157  001013  0001               	dw	1
   158  001015                     __end_of_other_node:
   159                           	opt stack 0
   160  001015                     _this_node:
   161                           	opt stack 0
   162  001015  0000               	dw	0
   163  001017                     __end_of_this_node:
   164                           	opt stack 0
   165  0000                     _BAUDCONbits	set	4024
   166  0000                     _INTCONbits	set	4082
   167  0000                     _LATAbits	set	3977
   168  0000                     _LATBbits	set	3978
   169  0000                     _LATCbits	set	3979
   170  0000                     _LATDbits	set	3980
   171  0000                     _LATEbits	set	3981
   172  0000                     _PIR1bits	set	3998
   173  0000                     _PORTAbits	set	3968
   174  0000                     _PORTBbits	set	3969
   175  0000                     _PORTCbits	set	3970
   176  0000                     _PORTDbits	set	3971
   177  0000                     _PORTEbits	set	3972
   178  0000                     _RCREG	set	4014
   179  0000                     _RCSTAbits	set	4011
   180  0000                     _SPBRG	set	4015
   181  0000                     _SPBRGH	set	4016
   182  0000                     _SSPBUF	set	4041
   183  0000                     _SSPCON1bits	set	4038
   184  0000                     _SSPSTATbits	set	4039
   185  0000                     _T0CONbits	set	4053
   186  0000                     _TMR0H	set	4055
   187  0000                     _TMR0L	set	4054
   188  0000                     _TRISAbits	set	3986
   189  0000                     _TRISBbits	set	3987
   190  0000                     _TRISCbits	set	3988
   191  0000                     _TRISDbits	set	3989
   192  0000                     _TRISEbits	set	3990
   193  0000                     _TXREG	set	4013
   194  0000                     _TXSTAbits	set	4012
   195  001017                     STR_1:
   196  001017  52                 	db	82	;'R'
   197  001018  46                 	db	70	;'F'
   198  001019  32                 	db	50	;'2'
   199  00101A  34                 	db	52	;'4'
   200  00101B  4E                 	db	78	;'N'
   201  00101C  65                 	db	101	;'e'
   202  00101D  74                 	db	116	;'t'
   203  00101E  77                 	db	119	;'w'
   204  00101F  6F                 	db	111	;'o'
   205  001020  72                 	db	114	;'r'
   206  001021  6B                 	db	107	;'k'
   207  001022  2F                 	db	47
   208  001023  65                 	db	101	;'e'
   209  001024  78                 	db	120	;'x'
   210  001025  61                 	db	97	;'a'
   211  001026  6D                 	db	109	;'m'
   212  001027  70                 	db	112	;'p'
   213  001028  6C                 	db	108	;'l'
   214  001029  65                 	db	101	;'e'
   215  00102A  73                 	db	115	;'s'
   216  00102B  2F                 	db	47
   217  00102C  68                 	db	104	;'h'
   218  00102D  65                 	db	101	;'e'
   219  00102E  6C                 	db	108	;'l'
   220  00102F  6C                 	db	108	;'l'
   221  001030  6F                 	db	111	;'o'
   222  001031  77                 	db	119	;'w'
   223  001032  6F                 	db	111	;'o'
   224  001033  72                 	db	114	;'r'
   225  001034  6C                 	db	108	;'l'
   226  001035  64                 	db	100	;'d'
   227  001036  5F                 	db	95	;'_'
   228  001037  72                 	db	114	;'r'
   229  001038  78                 	db	120	;'x'
   230  001039  2F                 	db	47
   231  00103A  00                 	db	0
   232  00103B                     STR_2:
   233  00103B  52                 	db	82	;'R'
   234  00103C  65                 	db	101	;'e'
   235  00103D  63                 	db	99	;'c'
   236  00103E  65                 	db	101	;'e'
   237  00103F  69                 	db	105	;'i'
   238  001040  76                 	db	118	;'v'
   239  001041  65                 	db	101	;'e'
   240  001042  64                 	db	100	;'d'
   241  001043  20                 	db	32
   242  001044  70                 	db	112	;'p'
   243  001045  61                 	db	97	;'a'
   244  001046  63                 	db	99	;'c'
   245  001047  6B                 	db	107	;'k'
   246  001048  65                 	db	101	;'e'
   247  001049  74                 	db	116	;'t'
   248  00104A  20                 	db	32
   249  00104B  23                 	db	35
   250  00104C  00                 	db	0
   251  00104D                     STR_3:
   252  00104D  20                 	db	32
   253  00104E  61                 	db	97	;'a'
   254  00104F  74                 	db	116	;'t'
   255  001050  20                 	db	32
   256  001051  00                 	db	0
   257  001052                     STR_4:
   258  001052  0D                 	db	13
   259  001053  0A                 	db	10
   260  001054  00                 	db	0
   261                           
   262                           ; #config settings
   263  001055  00                 	db	0	; dummy byte at the end
   264  0000                     
   265                           	psect	cinit
   266  003314                     __pcinit:
   267                           	opt stack 0
   268  003314                     start_initialization:
   269                           	opt stack 0
   270  003314                     __initialization:
   271                           	opt stack 0
   272                           
   273                           ; Clear objects allocated to BIGRAM (370 bytes)
   274  003314  EE00  F0A9         	lfsr	0,__pbssBIGRAM
   275  003318  EE21 F072          	lfsr	2,370
   276  00331C                     clear_0:
   277  00331C  6AEE               	clrf	postinc0,c
   278  00331E  50DD               	movf	postdec2,w,c
   279  003320  50D9               	movf	fsr2l,w,c
   280  003322  E1FC               	bnz	clear_0
   281  003324  50DA               	movf	fsr2h,w,c
   282  003326  E1FA               	bnz	clear_0
   283                           
   284                           ; Clear objects allocated to COMRAM (36 bytes)
   285  003328  EE00  F03E         	lfsr	0,__pbssCOMRAM
   286  00332C  0E24               	movlw	36
   287  00332E                     clear_1:
   288  00332E  6AEE               	clrf	postinc0,c
   289  003330  06E8               	decf	wreg,f,c
   290  003332  E1FD               	bnz	clear_1
   291                           
   292                           ; Initialize objects allocated to COMRAM (14 bytes)
   293                           ; load TBLPTR registers with __pidataCOMRAM
   294  003334  0E0C               	movlw	low __pidataCOMRAM
   295  003336  6EF6               	movwf	tblptrl,c
   296  003338  0E39               	movlw	high __pidataCOMRAM
   297  00333A  6EF7               	movwf	tblptrh,c
   298  00333C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   299  00333E  6EF8               	movwf	tblptru,c
   300  003340  EE00  F062         	lfsr	0,__pdataCOMRAM
   301  003344  EE20 F00E          	lfsr	2,14
   302  003348                     copy_data0:
   303  003348  0009               	tblrd		*+
   304  00334A  CFF5 FFEE          	movff	tablat,postinc0
   305  00334E  50DD               	movf	postdec2,w,c
   306  003350  50D9               	movf	fsr2l,w,c
   307  003352  E1FA               	bnz	copy_data0
   308  003354                     end_of_initialization:
   309                           	opt stack 0
   310  003354                     __end_of__initialization:
   311                           	opt stack 0
   312  003354  0E00               	movlw	low (__Lmediumconst shr (0+16))
   313  003356  6EF8               	movwf	tblptru,c
   314  003358  0100               	movlb	0
   315  00335A  EF16  F01B         	goto	_main	;jump to C main() function
   316                           tblptru	equ	0xFF8
   317                           tblptrh	equ	0xFF7
   318                           tblptrl	equ	0xFF6
   319                           tablat	equ	0xFF5
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           postdec2	equ	0xFDD
   323                           fsr2h	equ	0xFDA
   324                           fsr2l	equ	0xFD9
   325                           
   326                           	psect	bssCOMRAM
   327  00003E                     __pbssCOMRAM:
   328                           	opt stack 0
   329  00003E                     _mtime:
   330                           	opt stack 0
   331  00003E                     	ds	4
   332  000042                     _rf:
   333                           	opt stack 0
   334  000042                     	ds	22
   335  000058                     _buff:
   336                           	opt stack 0
   337  000058                     	ds	10
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           postdec2	equ	0xFDD
   345                           fsr2h	equ	0xFDA
   346                           fsr2l	equ	0xFD9
   347                           
   348                           	psect	dataCOMRAM
   349  000062                     __pdataCOMRAM:
   350                           	opt stack 0
   351  000062                     RF24N_pipe_address@address_translation:
   352                           	opt stack 0
   353  000062                     	ds	7
   354  000069                     RF24N_pipe_address@F3856:
   355                           	opt stack 0
   356  000069                     	ds	5
   357  00006E                     _next_id:
   358                           	opt stack 0
   359  00006E                     	ds	2
   360                           tblptru	equ	0xFF8
   361                           tblptrh	equ	0xFF7
   362                           tblptrl	equ	0xFF6
   363                           tablat	equ	0xFF5
   364                           postinc0	equ	0xFEE
   365                           wreg	equ	0xFE8
   366                           postdec2	equ	0xFDD
   367                           fsr2h	equ	0xFDA
   368                           fsr2l	equ	0xFD9
   369                           
   370                           	psect	bssBIGRAM
   371  0000A9                     __pbssBIGRAM:
   372                           	opt stack 0
   373  0000A9                     _rn:
   374                           	opt stack 0
   375  0000A9                     	ds	370
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec2	equ	0xFDD
   383                           fsr2h	equ	0xFDA
   384                           fsr2l	equ	0xFD9
   385                           
   386                           	psect	cstackBANK0
   387  000080                     __pcstackBANK0:
   388                           	opt stack 0
   389  000080                     RF24N_write@to_node:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x0
   393  000080                     	ds	2
   394  000082                     RF24N_write@directTo:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x2
   398  000082                     	ds	1
   399  000083                     ??_RF24N_write:
   400                           
   401                           ; 1 bytes @ 0x3
   402  000083                     	ds	26
   403  00009D                     RF24N_write@reply_time:
   404                           	opt stack 0
   405                           
   406                           ; 4 bytes @ 0x1D
   407  00009D                     	ds	4
   408  0000A1                     RF24N_write@isAckType:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x21
   412  0000A1                     	ds	1
   413  0000A2                     RF24N_write@header:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x22
   417  0000A2                     	ds	2
   418  0000A4                     RF24N_write@ok:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x24
   422  0000A4                     	ds	1
   423  0000A5                     RF24N_write@conversion:
   424                           	opt stack 0
   425                           
   426                           ; 4 bytes @ 0x25
   427  0000A5                     	ds	4
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec2	equ	0xFDD
   435                           fsr2h	equ	0xFDA
   436                           fsr2l	equ	0xFD9
   437                           
   438                           	psect	cstackCOMRAM
   439  000001                     __pcstackCOMRAM:
   440                           	opt stack 0
   441  000001                     ??_isr:
   442  000001                     
   443                           ; 1 bytes @ 0x0
   444  000001                     	ds	2
   445  000003                     ??_RF24N_available:
   446  000003                     ??_RF24N_setup_address:
   447  000003                     ??_delayMicroseconds:
   448  000003                     ?_RF24N_levelToAddress:
   449                           	opt stack 0
   450  000003                     ?_RF24N_direct_child_route_to:
   451                           	opt stack 0
   452  000003                     ?___wmul:
   453                           	opt stack 0
   454  000003                     ?___lwdiv:
   455                           	opt stack 0
   456  000003                     ?___lwmod:
   457                           	opt stack 0
   458  000003                     ?_millis:
   459                           	opt stack 0
   460  000003                     ?___lldiv:
   461                           	opt stack 0
   462  000003                     ?___llmod:
   463                           	opt stack 0
   464  000003                     Serial_tx@val:
   465                           	opt stack 0
   466  000003                     pinMode@mode:
   467                           	opt stack 0
   468  000003                     digitalWrite@mode:
   469                           	opt stack 0
   470  000003                     SPI_transfer@data:
   471                           	opt stack 0
   472  000003                     RF24_init@_cspin:
   473                           	opt stack 0
   474  000003                     _RF24_isValid$2046:
   475                           	opt stack 0
   476  000003                     delay@val:
   477                           	opt stack 0
   478  000003                     RF24N_is_descendant@node:
   479                           	opt stack 0
   480  000003                     RF24N_direct_child_route_to@node:
   481                           	opt stack 0
   482  000003                     RF24N_is_valid_address@node:
   483                           	opt stack 0
   484  000003                     RF24N_pipe_address@node:
   485                           	opt stack 0
   486  000003                     ___wmul@multiplier:
   487                           	opt stack 0
   488  000003                     ___lwdiv@dividend:
   489                           	opt stack 0
   490  000003                     ___lwmod@dividend:
   491                           	opt stack 0
   492  000003                     memcpy@d1:
   493                           	opt stack 0
   494  000003                     memmove@d1:
   495                           	opt stack 0
   496  000003                     ___lldiv@dividend:
   497                           	opt stack 0
   498  000003                     ___llmod@dividend:
   499                           	opt stack 0
   500                           
   501                           ; 4 bytes @ 0x2
   502  000003                     	ds	1
   503  000004                     pinMode@pin:
   504                           	opt stack 0
   505  000004                     RF24_init@_cepin:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x3
   509  000004                     	ds	1
   510  000005                     ??_RF24N_levelToAddress:
   511  000005                     ??_RF24N_is_descendant:
   512  000005                     ??_RF24N_direct_child_route_to:
   513  000005                     digitalWrite@pin:
   514                           	opt stack 0
   515  000005                     RF24N_is_valid_address@digit:
   516                           	opt stack 0
   517  000005                     RF24N_pipe_address@pipe:
   518                           	opt stack 0
   519  000005                     delay@i:
   520                           	opt stack 0
   521  000005                     RF24N_setup_address@i:
   522                           	opt stack 0
   523  000005                     ___wmul@multiplicand:
   524                           	opt stack 0
   525  000005                     ___lwdiv@divisor:
   526                           	opt stack 0
   527  000005                     ___lwmod@divisor:
   528                           	opt stack 0
   529  000005                     memcpy@s1:
   530                           	opt stack 0
   531  000005                     memmove@s1:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x4
   535  000005                     	ds	1
   536  000006                     RF24_ce_d@level:
   537                           	opt stack 0
   538  000006                     RF24N_is_valid_address@result:
   539                           	opt stack 0
   540  000006                     RF24N_pipe_address@address:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x5
   544  000006                     	ds	1
   545  000007                     ___lwdiv@counter:
   546                           	opt stack 0
   547  000007                     ___lwmod@counter:
   548                           	opt stack 0
   549  000007                     delay@j:
   550                           	opt stack 0
   551  000007                     RF24N_setup_address@m:
   552                           	opt stack 0
   553  000007                     RF24N_direct_child_route_to@child_mask:
   554                           	opt stack 0
   555  000007                     ___wmul@product:
   556                           	opt stack 0
   557  000007                     memcpy@n:
   558                           	opt stack 0
   559  000007                     memmove@n:
   560                           	opt stack 0
   561  000007                     ___lldiv@divisor:
   562                           	opt stack 0
   563  000007                     ___llmod@divisor:
   564                           	opt stack 0
   565                           
   566                           ; 4 bytes @ 0x6
   567  000007                     	ds	1
   568  000008                     ??_RF24N_pipe_address:
   569  000008                     RF24N_levelToAddress@level:
   570                           	opt stack 0
   571  000008                     ___lwdiv@quotient:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x7
   575  000008                     	ds	1
   576  000009                     ??_memmove:
   577  000009                     RF24N_setup_address@count:
   578                           	opt stack 0
   579  000009                     RF24N_is_direct_child@node:
   580                           	opt stack 0
   581  000009                     RF24N_levelToAddress@levelAddr:
   582                           	opt stack 0
   583  000009                     memcpy@d:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x8
   587  000009                     	ds	1
   588  00000A                     delayMicroseconds@d:
   589                           	opt stack 0
   590  00000A                     RF24N_setup_address@parent_mask:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x9
   594  00000A                     	ds	1
   595  00000B                     ??_RF24N_is_direct_child:
   596  00000B                     ___llmod@counter:
   597                           	opt stack 0
   598  00000B                     delayMicroseconds@i:
   599                           	opt stack 0
   600  00000B                     memcpy@s:
   601                           	opt stack 0
   602  00000B                     memmove@d:
   603                           	opt stack 0
   604  00000B                     ___lldiv@quotient:
   605                           	opt stack 0
   606                           
   607                           ; 4 bytes @ 0xA
   608  00000B                     	ds	1
   609  00000C                     RF24N_setup_address@node_mask_check:
   610                           	opt stack 0
   611  00000C                     RF24N_pipe_address@result:
   612                           	opt stack 0
   613                           
   614                           ; 5 bytes @ 0xB
   615  00000C                     	ds	1
   616  00000D                     delayMicroseconds@j:
   617                           	opt stack 0
   618  00000D                     memmove@s:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0xC
   622  00000D                     	ds	2
   623  00000F                     RF24_csn_d@mode:
   624                           	opt stack 0
   625  00000F                     ___lldiv@counter:
   626                           	opt stack 0
   627  00000F                     RF24N_read@header:
   628                           	opt stack 0
   629  00000F                     RF24N_is_direct_child@child_node_mask:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0xE
   633  00000F                     	ds	1
   634  000010                     RF24_read_register_d@reg:
   635                           	opt stack 0
   636  000010                     RF24_write_register_c_d@buf:
   637                           	opt stack 0
   638  000010                     RF24_write_payload@buf:
   639                           	opt stack 0
   640  000010                     RF24_read_payload@buf:
   641                           	opt stack 0
   642  000010                     ultoa@buf:
   643                           	opt stack 0
   644  000010                     Serial_begin@baud:
   645                           	opt stack 0
   646                           
   647                           ; 4 bytes @ 0xF
   648  000010                     	ds	1
   649  000011                     RF24_read_register_d@result:
   650                           	opt stack 0
   651  000011                     RF24N_is_direct_child@result:
   652                           	opt stack 0
   653  000011                     RF24N_read@message:
   654                           	opt stack 0
   655  000011                     RF24N_pipe_address@dec:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x10
   659  000011                     	ds	1
   660  000012                     RF24_write_register_c_d@len:
   661                           	opt stack 0
   662  000012                     RF24_write_register_d@value:
   663                           	opt stack 0
   664  000012                     RF24_write_payload@data_len:
   665                           	opt stack 0
   666  000012                     RF24_read_payload@data_len:
   667                           	opt stack 0
   668  000012                     RF24_spiTrans@cmd:
   669                           	opt stack 0
   670  000012                     RF24N_logicalToPhysicalAddress@conversionInfo:
   671                           	opt stack 0
   672  000012                     ultoa@val:
   673                           	opt stack 0
   674                           
   675                           ; 4 bytes @ 0x11
   676  000012                     	ds	1
   677  000013                     ??_RF24_read_payload:
   678  000013                     RF24_write_register_c_d@status:
   679                           	opt stack 0
   680  000013                     RF24_write_register_d@reg:
   681                           	opt stack 0
   682  000013                     RF24_write_payload@writeType:
   683                           	opt stack 0
   684  000013                     RF24_spiTrans@status:
   685                           	opt stack 0
   686  000013                     RF24N_pipe_address@count:
   687                           	opt stack 0
   688  000013                     RF24N_read@maxlen:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x12
   692  000013                     	ds	1
   693  000014                     ??_Serial_begin:
   694  000014                     ??_RF24_write_payload:
   695  000014                     RF24_write_register_c_d@reg:
   696                           	opt stack 0
   697  000014                     RF24_write_register_d@status:
   698                           	opt stack 0
   699  000014                     RF24_available_p@pipe_num:
   700                           	opt stack 0
   701  000014                     RF24N_pipe_address@out:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x13
   705  000014                     	ds	1
   706  000015                     ??_RF24N_read:
   707  000015                     ??_RF24_closeReadingPipe:
   708  000015                     ??_RF24_stopListening:
   709  000015                     RF24_powerUp@cfg:
   710                           	opt stack 0
   711  000015                     RF24_getDynamicPayloadSize@result:
   712                           	opt stack 0
   713  000015                     RF24_setAutoAck_p@enable:
   714                           	opt stack 0
   715  000015                     RF24_setDataRate@result:
   716                           	opt stack 0
   717  000015                     RF24_setRetries@count:
   718                           	opt stack 0
   719  000015                     _RF24_setChannel$1915:
   720                           	opt stack 0
   721  000015                     RF24_openWritingPipe_d@value_:
   722                           	opt stack 0
   723  000015                     RF24_openReadingPipe_d@address_:
   724                           	opt stack 0
   725  000015                     RF24N_logicalToPhysicalAddress@multicast:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x14
   729  000015                     	ds	1
   730  000016                     ??_RF24_setRetries:
   731  000016                     ??_RF24_available_p:
   732  000016                     ??_RF24_setAutoAck_p:
   733  000016                     RF24_setDataRate@speed:
   734                           	opt stack 0
   735  000016                     RF24N_pipe_address@i:
   736                           	opt stack 0
   737  000016                     ultoa@base:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x15
   741  000016                     	ds	1
   742  000017                     ??_RF24_openWritingPipe_d:
   743  000017                     ??_RF24_openReadingPipe_d:
   744  000017                     RF24_setChannel@channel:
   745                           	opt stack 0
   746  000017                     RF24_setDataRate@setup:
   747                           	opt stack 0
   748  000017                     RF24N_enqueue@header:
   749                           	opt stack 0
   750  000017                     RF24N_logicalToPhysicalAddress@pre_conversion_send_node:
   751                           	opt stack 0
   752  000017                     RF24_txStandBy_t@timeout:
   753                           	opt stack 0
   754                           
   755                           ; 4 bytes @ 0x16
   756  000017                     	ds	1
   757  000018                     RF24_setChannel@max_channel:
   758                           	opt stack 0
   759  000018                     RF24_available_p@status:
   760                           	opt stack 0
   761  000018                     RF24_setAutoAck_p@en_aa:
   762                           	opt stack 0
   763  000018                     RF24_setRetries@delay:
   764                           	opt stack 0
   765  000018                     ultoa@v:
   766                           	opt stack 0
   767                           
   768                           ; 4 bytes @ 0x17
   769  000018                     	ds	1
   770  000019                     ??_RF24N_enqueue:
   771  000019                     _RF24_begin$1931:
   772                           	opt stack 0
   773  000019                     RF24_closeReadingPipe@pipe:
   774                           	opt stack 0
   775  000019                     RF24_setAutoAck_p@pipe:
   776                           	opt stack 0
   777  000019                     RF24N_logicalToPhysicalAddress@directTo:
   778                           	opt stack 0
   779  000019                     RF24_openReadingPipe_d@address:
   780                           	opt stack 0
   781                           
   782                           ; 5 bytes @ 0x18
   783  000019                     	ds	1
   784  00001A                     ??_RF24_startListening:
   785  00001A                     RF24_begin@setup:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0x19
   789  00001A                     	ds	1
   790  00001B                     RF24_read_payload@status:
   791                           	opt stack 0
   792  00001B                     RF24_txStandBy_t@startTx:
   793                           	opt stack 0
   794  00001B                     RF24N_read@padding:
   795                           	opt stack 0
   796  00001B                     RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe:
   797                           	opt stack 0
   798                           
   799                           ; 1 bytes @ 0x1A
   800  00001B                     	ds	1
   801  00001C                     ??_RF24_txStandBy_t:
   802  00001C                     RF24_read_payload@blank_len:
   803                           	opt stack 0
   804  00001C                     ultoa@c:
   805                           	opt stack 0
   806  00001C                     RF24N_read@bufsize:
   807                           	opt stack 0
   808  00001C                     RF24N_logicalToPhysicalAddress@to_node:
   809                           	opt stack 0
   810                           
   811                           ; 2 bytes @ 0x1B
   812  00001C                     	ds	1
   813  00001D                     ?_itoa_:
   814                           	opt stack 0
   815  00001D                     RF24_read_payload@current:
   816                           	opt stack 0
   817  00001D                     itoa_@val:
   818                           	opt stack 0
   819                           
   820                           ; 4 bytes @ 0x1C
   821  00001D                     	ds	1
   822  00001E                     RF24_write_payload@status:
   823                           	opt stack 0
   824  00001E                     RF24_openReadingPipe_d@i:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x1D
   828  00001E                     	ds	1
   829  00001F                     RF24_write_payload@blank_len:
   830                           	opt stack 0
   831  00001F                     RF24_openReadingPipe_d@child:
   832                           	opt stack 0
   833  00001F                     _RF24_read_payload$1900:
   834                           	opt stack 0
   835  00001F                     RF24_openWritingPipe_d@value:
   836                           	opt stack 0
   837                           
   838                           ; 5 bytes @ 0x1E
   839  00001F                     	ds	1
   840  000020                     RF24N_enqueue@isFragment:
   841                           	opt stack 0
   842  000020                     RF24_write_payload@current:
   843                           	opt stack 0
   844  000020                     RF24N_begin_d@_node_address:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0x1F
   848  000020                     	ds	1
   849  000021                     RF24N_enqueue@padding:
   850                           	opt stack 0
   851  000021                     Serial_print@val:
   852                           	opt stack 0
   853  000021                     RF24_read@buf:
   854                           	opt stack 0
   855                           
   856                           ; 2 bytes @ 0x20
   857  000021                     	ds	1
   858  000022                     RF24N_enqueue@padding_2288:
   859                           	opt stack 0
   860  000022                     _RF24_write_payload$1892:
   861                           	opt stack 0
   862  000022                     RF24N_begin_d@addr:
   863                           	opt stack 0
   864                           
   865                           ; 5 bytes @ 0x21
   866  000022                     	ds	1
   867  000023                     ??_Serial_print:
   868  000023                     RF24_read@len:
   869                           	opt stack 0
   870  000023                     _RF24N_enqueue$2286:
   871                           	opt stack 0
   872                           
   873                           ; 1 bytes @ 0x22
   874  000023                     	ds	1
   875  000024                     RF24_openWritingPipe_d@i:
   876                           	opt stack 0
   877  000024                     RF24N_enqueue@result:
   878                           	opt stack 0
   879  000024                     _RF24_write_payload$1893:
   880                           	opt stack 0
   881                           
   882                           ; 2 bytes @ 0x23
   883  000024                     	ds	1
   884  000025                     Serial_print@i:
   885                           	opt stack 0
   886  000025                     RF24N_enqueue@message_size:
   887                           	opt stack 0
   888                           
   889                           ; 2 bytes @ 0x24
   890  000025                     	ds	1
   891  000026                     RF24_startFastWrite@buf:
   892                           	opt stack 0
   893                           
   894                           ; 2 bytes @ 0x25
   895  000026                     	ds	1
   896  000027                     RF24N_begin_d@retryVar:
   897                           	opt stack 0
   898  000027                     Serial_println@val:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x26
   902  000027                     	ds	1
   903  000028                     RF24_startFastWrite@len:
   904                           	opt stack 0
   905  000028                     RF24N_begin_d@_channel:
   906                           	opt stack 0
   907  000028                     RF24_txStandBy_t@start:
   908                           	opt stack 0
   909                           
   910                           ; 4 bytes @ 0x27
   911  000028                     	ds	1
   912  000029                     RF24_startFastWrite@multicast:
   913                           	opt stack 0
   914  000029                     RF24N_begin_d@i:
   915                           	opt stack 0
   916  000029                     loop@header:
   917                           	opt stack 0
   918                           
   919                           ; 8 bytes @ 0x28
   920  000029                     	ds	1
   921  00002A                     RF24_startFastWrite@startTx:
   922                           	opt stack 0
   923                           
   924                           ; 1 bytes @ 0x29
   925  00002A                     	ds	1
   926  00002B                     
   927                           ; 1 bytes @ 0x2A
   928  00002B                     	ds	2
   929  00002D                     _RF24_startFastWrite$1970:
   930                           	opt stack 0
   931                           
   932                           ; 2 bytes @ 0x2C
   933  00002D                     	ds	2
   934  00002F                     RF24_writeFast_m@buf:
   935                           	opt stack 0
   936                           
   937                           ; 2 bytes @ 0x2E
   938  00002F                     	ds	2
   939  000031                     RF24_writeFast_m@len:
   940                           	opt stack 0
   941  000031                     loop@payload:
   942                           	opt stack 0
   943                           
   944                           ; 8 bytes @ 0x30
   945  000031                     	ds	1
   946  000032                     RF24_writeFast_m@multicast:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x31
   950  000032                     	ds	1
   951  000033                     ??_RF24_writeFast_m:
   952                           
   953                           ; 1 bytes @ 0x32
   954  000033                     	ds	1
   955  000034                     RF24N_write_to_pipe@node:
   956                           	opt stack 0
   957                           
   958                           ; 2 bytes @ 0x33
   959  000034                     	ds	2
   960  000036                     RF24N_write_to_pipe@pipe:
   961                           	opt stack 0
   962                           
   963                           ; 1 bytes @ 0x35
   964  000036                     	ds	1
   965  000037                     RF24N_write_to_pipe@multicast:
   966                           	opt stack 0
   967                           
   968                           ; 1 bytes @ 0x36
   969  000037                     	ds	1
   970  000038                     RF24N_write_to_pipe@out_pipe:
   971                           	opt stack 0
   972                           
   973                           ; 5 bytes @ 0x37
   974  000038                     	ds	1
   975  000039                     
   976                           ; 1 bytes @ 0x38
   977  000039                     	ds	4
   978  00003D                     RF24N_write_to_pipe@ok:
   979                           	opt stack 0
   980                           
   981                           ; 1 bytes @ 0x3C
   982  00003D                     	ds	1
   983                           tblptru	equ	0xFF8
   984                           tblptrh	equ	0xFF7
   985                           tblptrl	equ	0xFF6
   986                           tablat	equ	0xFF5
   987                           postinc0	equ	0xFEE
   988                           wreg	equ	0xFE8
   989                           postdec2	equ	0xFDD
   990                           fsr2h	equ	0xFDA
   991                           fsr2l	equ	0xFD9
   992                           
   993 ;;
   994 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   995 ;;
   996 ;; *************** function _main *****************
   997 ;; Defined at:
   998 ;;		line 26 in file "pic_main.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;Total ram usage:        0 bytes
  1017 ;; Hardware stack levels required when called:   12
  1018 ;; This function calls:
  1019 ;;		_loop
  1020 ;;		_setup
  1021 ;; This function is called by:
  1022 ;;		Startup code after reset
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text0
  1027  00362C                     __ptext0:
  1028                           	opt stack 0
  1029  00362C                     _main:
  1030                           	opt stack 19
  1031                           
  1032                           ;pic_main.c: 28: mtime=0;
  1033                           
  1034                           ;incstack = 0
  1035  00362C  0E00               	movlw	0
  1036  00362E  6E3E               	movwf	_mtime,c
  1037  003630  0E00               	movlw	0
  1038  003632  6E3F               	movwf	_mtime+1,c
  1039  003634  0E00               	movlw	0
  1040  003636  6E40               	movwf	_mtime+2,c
  1041  003638  0E00               	movlw	0
  1042  00363A  6E41               	movwf	_mtime+3,c
  1043                           
  1044                           ;pic_main.c: 30: T0CONbits.T08BIT=0;
  1045  00363C  9CD5               	bcf	4053,6,c	;volatile
  1046                           
  1047                           ;pic_main.c: 31: T0CONbits.T0CS=0;
  1048  00363E  9AD5               	bcf	4053,5,c	;volatile
  1049                           
  1050                           ;pic_main.c: 32: T0CONbits.PSA=1;
  1051  003640  86D5               	bsf	4053,3,c	;volatile
  1052                           
  1053                           ;pic_main.c: 36: TMR0H=(unsigned char)(65536l-(32000000/4000l)&0xFF00)>>8;
  1054  003642  0E00               	movlw	0
  1055  003644  6ED7               	movwf	4055,c	;volatile
  1056                           
  1057                           ;pic_main.c: 37: TMR0L=(unsigned char)(65536l-(32000000/4000l)&0x00FF);
  1058  003646  0EC0               	movlw	192
  1059  003648  6ED6               	movwf	4054,c	;volatile
  1060                           
  1061                           ;pic_main.c: 38: INTCONbits.TMR0IF=0;
  1062  00364A  94F2               	bcf	intcon,2,c	;volatile
  1063                           
  1064                           ;pic_main.c: 39: INTCONbits.GIE = 1;
  1065  00364C  8EF2               	bsf	intcon,7,c	;volatile
  1066                           
  1067                           ;pic_main.c: 40: INTCONbits.TMR0IE = 1;
  1068  00364E  8AF2               	bsf	intcon,5,c	;volatile
  1069                           
  1070                           ;pic_main.c: 41: T0CONbits.TMR0ON=1;
  1071  003650  8ED5               	bsf	4053,7,c	;volatile
  1072                           
  1073                           ;pic_main.c: 43: setup();
  1074  003652  EC3D  F019         	call	_setup	;wreg free
  1075  003656                     l6263:
  1076                           
  1077                           ;pic_main.c: 47: {
  1078                           ;pic_main.c: 48: loop();
  1079  003656  EC50  F016         	call	_loop	;wreg free
  1080  00365A  D7FD               	goto	l6263
  1081  00365C                     __end_of_main:
  1082                           	opt stack 0
  1083                           tblptru	equ	0xFF8
  1084                           tblptrh	equ	0xFF7
  1085                           tblptrl	equ	0xFF6
  1086                           tablat	equ	0xFF5
  1087                           intcon	equ	0xFF2
  1088                           postinc0	equ	0xFEE
  1089                           wreg	equ	0xFE8
  1090                           postdec2	equ	0xFDD
  1091                           fsr2h	equ	0xFDA
  1092                           fsr2l	equ	0xFD9
  1093                           
  1094 ;; *************** function _setup *****************
  1095 ;; Defined at:
  1096 ;;		line 37 in file "helloworld_rx.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;Total ram usage:        0 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:    8
  1117 ;; This function calls:
  1118 ;;		_RF24N_begin_d
  1119 ;;		_RF24N_init
  1120 ;;		_RF24_begin
  1121 ;;		_RF24_init
  1122 ;;		_Serial_begin
  1123 ;;		_Serial_println
  1124 ;; This function is called by:
  1125 ;;		_main
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text1
  1130  00327A                     __ptext1:
  1131                           	opt stack 0
  1132  00327A                     _setup:
  1133                           	opt stack 22
  1134                           
  1135                           ;helloworld_rx.c: 39: RF24_init(36,35);
  1136                           
  1137                           ;incstack = 0
  1138  00327A  0E23               	movlw	35
  1139  00327C  6E03               	movwf	RF24_init@_cspin,c
  1140  00327E  0E24               	movlw	36
  1141  003280  EC2E  F01B         	call	_RF24_init
  1142                           
  1143                           ;helloworld_rx.c: 40: RF24N_init();
  1144  003284  EC90  F018         	call	_RF24N_init	;wreg free
  1145                           
  1146                           ;helloworld_rx.c: 42: Serial_begin(57600);
  1147  003288  0E00               	movlw	0
  1148  00328A  6E10               	movwf	Serial_begin@baud,c
  1149  00328C  0EE1               	movlw	225
  1150  00328E  6E11               	movwf	Serial_begin@baud+1,c
  1151  003290  0E00               	movlw	0
  1152  003292  6E12               	movwf	Serial_begin@baud+2,c
  1153  003294  0E00               	movlw	0
  1154  003296  6E13               	movwf	Serial_begin@baud+3,c
  1155  003298  EC14  F017         	call	_Serial_begin	;wreg free
  1156                           
  1157                           ;helloworld_rx.c: 43: Serial_println("RF24Network/examples/helloworld_rx/");
  1158  00329C  0E17               	movlw	low STR_1
  1159  00329E  6E27               	movwf	Serial_println@val,c
  1160  0032A0  0E10               	movlw	high STR_1
  1161  0032A2  6E28               	movwf	Serial_println@val+1,c
  1162  0032A4  EC31  F01C         	call	_Serial_println	;wreg free
  1163                           
  1164                           ;helloworld_rx.c: 46: RF24_begin();
  1165  0032A8  ECAA  F014         	call	_RF24_begin	;wreg free
  1166                           
  1167                           ;helloworld_rx.c: 47: RF24N_begin_d( 90, this_node);
  1168  0032AC  0E15               	movlw	low _this_node
  1169  0032AE  6EF6               	movwf	tblptrl,c
  1170  0032B0                     	if	1	;There is more than 1 active tblptr byte
  1171  0032B0  0E10               	movlw	high _this_node
  1172  0032B2  6EF7               	movwf	tblptrh,c
  1173  0032B4                     	endif
  1174  0032B4                     	if	0	;There are less than 3 active tblptr bytes
  1175  0032B4                     	endif
  1176  0032B4  0009               	tblrd		*+
  1177  0032B6  CFF5 F020          	movff	tablat,RF24N_begin_d@_node_address
  1178  0032BA  000A               	tblrd		*-
  1179  0032BC  CFF5 F021          	movff	tablat,RF24N_begin_d@_node_address+1
  1180  0032C0  0E5A               	movlw	90
  1181  0032C2  EC3E  F014         	call	_RF24N_begin_d
  1182  0032C6  0012               	return		;funcret
  1183  0032C8                     __end_of_setup:
  1184                           	opt stack 0
  1185                           tblptru	equ	0xFF8
  1186                           tblptrh	equ	0xFF7
  1187                           tblptrl	equ	0xFF6
  1188                           tablat	equ	0xFF5
  1189                           intcon	equ	0xFF2
  1190                           postinc0	equ	0xFEE
  1191                           wreg	equ	0xFE8
  1192                           postdec2	equ	0xFDD
  1193                           fsr2h	equ	0xFDA
  1194                           fsr2l	equ	0xFD9
  1195                           
  1196 ;; *************** function _Serial_begin *****************
  1197 ;; Defined at:
  1198 ;;		line 29 in file "serial.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;  baud            4   15[COMRAM] unsigned long 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1216 ;;Total ram usage:        8 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    2
  1219 ;; This function calls:
  1220 ;;		___lldiv
  1221 ;; This function is called by:
  1222 ;;		_setup
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text2
  1227  002E28                     __ptext2:
  1228                           	opt stack 0
  1229  002E28                     _Serial_begin:
  1230                           	opt stack 27
  1231                           
  1232                           ;serial.c: 31: TRISCbits.TRISC6=1;
  1233                           
  1234                           ;incstack = 0
  1235  002E28  8C94               	bsf	3988,6,c	;volatile
  1236                           
  1237                           ;serial.c: 32: TRISCbits.TRISC7=1;
  1238  002E2A  8E94               	bsf	3988,7,c	;volatile
  1239                           
  1240                           ;serial.c: 34: baud=((32000000/(4*baud))-1);
  1241  002E2C  0E00               	movlw	0
  1242  002E2E  6E03               	movwf	___lldiv@dividend,c
  1243  002E30  0E48               	movlw	72
  1244  002E32  6E04               	movwf	___lldiv@dividend+1,c
  1245  002E34  0EE8               	movlw	232
  1246  002E36  6E05               	movwf	___lldiv@dividend+2,c
  1247  002E38  0E01               	movlw	1
  1248  002E3A  6E06               	movwf	___lldiv@dividend+3,c
  1249  002E3C  C010  F014         	movff	Serial_begin@baud,??_Serial_begin
  1250  002E40  C011  F015         	movff	Serial_begin@baud+1,??_Serial_begin+1
  1251  002E44  C012  F016         	movff	Serial_begin@baud+2,??_Serial_begin+2
  1252  002E48  C013  F017         	movff	Serial_begin@baud+3,??_Serial_begin+3
  1253  002E4C  0E02               	movlw	2
  1254  002E4E                     u5565:
  1255  002E4E  90D8               	bcf	status,0,c
  1256  002E50  3614               	rlcf	??_Serial_begin,f,c
  1257  002E52  3615               	rlcf	??_Serial_begin+1,f,c
  1258  002E54  3616               	rlcf	??_Serial_begin+2,f,c
  1259  002E56  3617               	rlcf	??_Serial_begin+3,f,c
  1260  002E58  2EE8               	decfsz	wreg,f,c
  1261  002E5A  D7F9               	goto	u5565
  1262  002E5C  C014  F007         	movff	??_Serial_begin,___lldiv@divisor
  1263  002E60  C015  F008         	movff	??_Serial_begin+1,___lldiv@divisor+1
  1264  002E64  C016  F009         	movff	??_Serial_begin+2,___lldiv@divisor+2
  1265  002E68  C017  F00A         	movff	??_Serial_begin+3,___lldiv@divisor+3
  1266  002E6C  EC93  F016         	call	___lldiv	;wreg free
  1267  002E70  0EFF               	movlw	255
  1268  002E72  2403               	addwf	?___lldiv,w,c
  1269  002E74  6E10               	movwf	Serial_begin@baud,c
  1270  002E76  0EFF               	movlw	255
  1271  002E78  2004               	addwfc	?___lldiv+1,w,c
  1272  002E7A  6E11               	movwf	Serial_begin@baud+1,c
  1273  002E7C  0EFF               	movlw	255
  1274  002E7E  2005               	addwfc	?___lldiv+2,w,c
  1275  002E80  6E12               	movwf	Serial_begin@baud+2,c
  1276  002E82  0EFF               	movlw	255
  1277  002E84  2006               	addwfc	?___lldiv+3,w,c
  1278  002E86  6E13               	movwf	Serial_begin@baud+3,c
  1279                           
  1280                           ;serial.c: 40: SPBRG= (0x00FF & baud);
  1281  002E88  C010  FFAF         	movff	Serial_begin@baud,4015	;volatile
  1282                           
  1283                           ;serial.c: 41: SPBRGH=(0xFF00 & baud)>>8;
  1284  002E8C  C011  FFB0         	movff	Serial_begin@baud+1,4016	;volatile
  1285                           
  1286                           ;serial.c: 44: TXSTAbits.TX9=0;
  1287  002E90  9CAC               	bcf	4012,6,c	;volatile
  1288                           
  1289                           ;serial.c: 45: TXSTAbits.SYNC=0;
  1290  002E92  98AC               	bcf	4012,4,c	;volatile
  1291                           
  1292                           ;serial.c: 46: TXSTAbits.BRGH=1;
  1293  002E94  84AC               	bsf	4012,2,c	;volatile
  1294                           
  1295                           ;serial.c: 47: BAUDCONbits.BRG16=1;
  1296  002E96  86B8               	bsf	4024,3,c	;volatile
  1297                           
  1298                           ;serial.c: 48: RCSTAbits.RX9=0;
  1299  002E98  9CAB               	bcf	4011,6,c	;volatile
  1300                           
  1301                           ;serial.c: 49: RCSTAbits.CREN=1;
  1302  002E9A  88AB               	bsf	4011,4,c	;volatile
  1303                           
  1304                           ;serial.c: 50: TXSTAbits.TXEN=1;
  1305  002E9C  8AAC               	bsf	4012,5,c	;volatile
  1306                           
  1307                           ;serial.c: 51: RCSTAbits.SPEN=1;
  1308  002E9E  8EAB               	bsf	4011,7,c	;volatile
  1309  002EA0  0012               	return		;funcret
  1310  002EA2                     __end_of_Serial_begin:
  1311                           	opt stack 0
  1312                           tblptru	equ	0xFF8
  1313                           tblptrh	equ	0xFF7
  1314                           tblptrl	equ	0xFF6
  1315                           tablat	equ	0xFF5
  1316                           intcon	equ	0xFF2
  1317                           postinc0	equ	0xFEE
  1318                           wreg	equ	0xFE8
  1319                           postdec2	equ	0xFDD
  1320                           fsr2h	equ	0xFDA
  1321                           fsr2l	equ	0xFD9
  1322                           status	equ	0xFD8
  1323                           
  1324 ;; *************** function _RF24_init *****************
  1325 ;; Defined at:
  1326 ;;		line 433 in file "../../../RF24_c/RF24_c.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  _cepin          1    wreg     unsigned char 
  1329 ;;  _cspin          1    2[COMRAM] unsigned char 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  _cepin          1    3[COMRAM] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1341 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;Total ram usage:        2 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    1
  1348 ;; This function calls:
  1349 ;;		Nothing
  1350 ;; This function is called by:
  1351 ;;		_setup
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text3
  1356  00365C                     __ptext3:
  1357                           	opt stack 0
  1358  00365C                     _RF24_init:
  1359                           	opt stack 28
  1360                           
  1361                           ;incstack = 0
  1362                           ;RF24_init@_cepin stored from wreg
  1363  00365C  6E04               	movwf	RF24_init@_cepin,c
  1364                           
  1365                           ;RF24_c.c: 435: rf.ce_pin=_cepin;
  1366  00365E  C004  F042         	movff	RF24_init@_cepin,_rf
  1367                           
  1368                           ;RF24_c.c: 436: rf.csn_pin=_cspin;
  1369  003662  C003  F043         	movff	RF24_init@_cspin,_rf+1
  1370                           
  1371                           ;RF24_c.c: 437: rf.p_variant=0;
  1372  003666  0E00               	movlw	0
  1373  003668  6E46               	movwf	_rf+4,c
  1374                           
  1375                           ;RF24_c.c: 438: rf.payload_size=32;
  1376  00366A  0E20               	movlw	32
  1377  00366C  6E47               	movwf	_rf+5,c
  1378                           
  1379                           ;RF24_c.c: 439: rf.dynamic_payloads_enabled=0;
  1380  00366E  0E00               	movlw	0
  1381  003670  6E48               	movwf	_rf+6,c
  1382                           
  1383                           ;RF24_c.c: 440: rf.addr_width=5;
  1384  003672  0E05               	movlw	5
  1385  003674  6E4E               	movwf	_rf+12,c
  1386                           
  1387                           ;RF24_c.c: 441: rf.csDelay=5;
  1388  003676  0E05               	movlw	5
  1389  003678  6E53               	movwf	_rf+17,c
  1390  00367A  0E00               	movlw	0
  1391  00367C  6E54               	movwf	_rf+18,c
  1392  00367E  0E00               	movlw	0
  1393  003680  6E55               	movwf	_rf+19,c
  1394  003682  0E00               	movlw	0
  1395  003684  6E56               	movwf	_rf+20,c
  1396                           
  1397                           ;RF24_c.c: 442: rf.pipe0_reading_address[0]=0;
  1398  003686  0E00               	movlw	0
  1399  003688  6E49               	movwf	_rf+7,c
  1400  00368A  0012               	return		;funcret
  1401  00368C                     __end_of_RF24_init:
  1402                           	opt stack 0
  1403                           tblptru	equ	0xFF8
  1404                           tblptrh	equ	0xFF7
  1405                           tblptrl	equ	0xFF6
  1406                           tablat	equ	0xFF5
  1407                           intcon	equ	0xFF2
  1408                           postinc0	equ	0xFEE
  1409                           wreg	equ	0xFE8
  1410                           postdec2	equ	0xFDD
  1411                           fsr2h	equ	0xFDA
  1412                           fsr2l	equ	0xFD9
  1413                           status	equ	0xFD8
  1414                           
  1415 ;; *************** function _RF24_begin *****************
  1416 ;; Defined at:
  1417 ;;		line 598 in file "../../../RF24_c/RF24_c.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  setup           1   25[COMRAM] unsigned char 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      unsigned char 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;Total ram usage:        2 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    6
  1438 ;; This function calls:
  1439 ;;		_RF24_ce_d
  1440 ;;		_RF24_csn_d
  1441 ;;		_RF24_flush_rx
  1442 ;;		_RF24_flush_tx
  1443 ;;		_RF24_powerUp
  1444 ;;		_RF24_read_register_d
  1445 ;;		_RF24_setChannel
  1446 ;;		_RF24_setDataRate
  1447 ;;		_RF24_setRetries
  1448 ;;		_RF24_toggle_features_d
  1449 ;;		_RF24_write_register_d
  1450 ;;		_SPI_begin
  1451 ;;		_delay
  1452 ;;		_pinMode
  1453 ;; This function is called by:
  1454 ;;		_setup
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text4
  1459  002954                     __ptext4:
  1460                           	opt stack 0
  1461  002954                     _RF24_begin:
  1462                           	opt stack 23
  1463                           
  1464                           ;RF24_c.c: 601: uint8_t setup=0;
  1465                           
  1466                           ;incstack = 0
  1467  002954  0E00               	movlw	0
  1468  002956  6E1A               	movwf	RF24_begin@setup,c
  1469                           
  1470                           ;RF24_c.c: 640: if (rf.ce_pin != rf.csn_pin) pinMode(rf.ce_pin,0);
  1471  002958  5042               	movf	_rf,w,c
  1472  00295A  1843               	xorwf	_rf+1,w,c
  1473  00295C  B4D8               	btfsc	status,2,c
  1474  00295E  D005               	goto	l6093
  1475  002960  0E00               	movlw	0
  1476  002962  6E03               	movwf	pinMode@mode,c
  1477  002964  5042               	movf	_rf,w,c
  1478  002966  EC88  F00D         	call	_pinMode
  1479  00296A                     l6093:
  1480                           
  1481                           ;RF24_c.c: 643: if (rf.ce_pin != rf.csn_pin)
  1482  00296A  5042               	movf	_rf,w,c
  1483  00296C  1843               	xorwf	_rf+1,w,c
  1484  00296E  B4D8               	btfsc	status,2,c
  1485  002970  D005               	goto	l6097
  1486                           
  1487                           ;RF24_c.c: 645: pinMode(rf.csn_pin,0);
  1488  002972  0E00               	movlw	0
  1489  002974  6E03               	movwf	pinMode@mode,c
  1490  002976  5043               	movf	_rf+1,w,c
  1491  002978  EC88  F00D         	call	_pinMode
  1492  00297C                     l6097:
  1493                           
  1494                           ;RF24_c.c: 647: SPI_begin();
  1495  00297C  EC24  F01C         	call	_SPI_begin	;wreg free
  1496                           
  1497                           ;RF24_c.c: 648: RF24_ce_d(0);
  1498  002980  0E00               	movlw	0
  1499  002982  EC60  F01C         	call	_RF24_ce_d
  1500                           
  1501                           ;RF24_c.c: 649: RF24_csn_d(1);
  1502  002986  0E01               	movlw	1
  1503  002988  EC6B  F01C         	call	_RF24_csn_d
  1504                           
  1505                           ;RF24_c.c: 661: delay( 5 ) ;
  1506  00298C  0E00               	movlw	0
  1507  00298E  6E04               	movwf	delay@val+1,c
  1508  002990  0E05               	movlw	5
  1509  002992  6E03               	movwf	delay@val,c
  1510  002994  ECAF  F019         	call	_delay	;wreg free
  1511                           
  1512                           ;RF24_c.c: 664: RF24_write_register_d( 0x00, 0b00001100 ) ;
  1513  002998  0E0C               	movlw	12
  1514  00299A  6E12               	movwf	RF24_write_register_d@value,c
  1515  00299C  0E00               	movlw	0
  1516  00299E  ECF7  F01B         	call	_RF24_write_register_d
  1517                           
  1518                           ;RF24_c.c: 669: RF24_setRetries(5,15);
  1519  0029A2  0E0F               	movlw	15
  1520  0029A4  6E15               	movwf	RF24_setRetries@count,c
  1521  0029A6  0E05               	movlw	5
  1522  0029A8  ECD5  F01B         	call	_RF24_setRetries
  1523                           
  1524                           ;RF24_c.c: 676: if( RF24_setDataRate( RF24_250KBPS ) )
  1525  0029AC  0E02               	movlw	2
  1526  0029AE  ECC7  F017         	call	_RF24_setDataRate
  1527  0029B2  0900               	iorlw	0
  1528  0029B4  B4D8               	btfsc	status,2,c
  1529  0029B6  D002               	goto	l6113
  1530                           
  1531                           ;RF24_c.c: 677: {
  1532                           ;RF24_c.c: 678: rf.p_variant = 1 ;
  1533  0029B8  0E01               	movlw	1
  1534  0029BA  6E46               	movwf	_rf+4,c
  1535  0029BC                     l6113:
  1536                           
  1537                           ;RF24_c.c: 679: }
  1538                           ;RF24_c.c: 680: setup = RF24_read_register_d(0x06);
  1539  0029BC  0E06               	movlw	6
  1540  0029BE  EC07  F01C         	call	_RF24_read_register_d
  1541  0029C2  6E1A               	movwf	RF24_begin@setup,c
  1542                           
  1543                           ;RF24_c.c: 688: RF24_setDataRate( RF24_1MBPS ) ;
  1544  0029C4  0E00               	movlw	0
  1545  0029C6  ECC7  F017         	call	_RF24_setDataRate
  1546                           
  1547                           ;RF24_c.c: 694: RF24_toggle_features_d();
  1548  0029CA  EC4A  F01C         	call	_RF24_toggle_features_d	;wreg free
  1549                           
  1550                           ;RF24_c.c: 695: RF24_write_register_d(0x1D,0 );
  1551  0029CE  0E00               	movlw	0
  1552  0029D0  6E12               	movwf	RF24_write_register_d@value,c
  1553  0029D2  0E1D               	movlw	29
  1554  0029D4  ECF7  F01B         	call	_RF24_write_register_d
  1555                           
  1556                           ;RF24_c.c: 696: RF24_write_register_d(0x1C,0);
  1557  0029D8  0E00               	movlw	0
  1558  0029DA  6E12               	movwf	RF24_write_register_d@value,c
  1559  0029DC  0E1C               	movlw	28
  1560  0029DE  ECF7  F01B         	call	_RF24_write_register_d
  1561                           
  1562                           ;RF24_c.c: 700: RF24_write_register_d(0x07,(1<<(6)) | (1<<(5)) | (1<<(4)) );
  1563  0029E2  0E70               	movlw	112
  1564  0029E4  6E12               	movwf	RF24_write_register_d@value,c
  1565  0029E6  0E07               	movlw	7
  1566  0029E8  ECF7  F01B         	call	_RF24_write_register_d
  1567                           
  1568                           ;RF24_c.c: 705: RF24_setChannel(76);
  1569  0029EC  0E4C               	movlw	76
  1570  0029EE  EC9C  F01B         	call	_RF24_setChannel
  1571                           
  1572                           ;RF24_c.c: 708: RF24_flush_rx();
  1573  0029F2  EC97  F01C         	call	_RF24_flush_rx	;wreg free
  1574                           
  1575                           ;RF24_c.c: 709: RF24_flush_tx();
  1576  0029F6  ECA3  F01C         	call	_RF24_flush_tx	;wreg free
  1577                           
  1578                           ;RF24_c.c: 711: RF24_powerUp();
  1579  0029FA  ECC2  F01B         	call	_RF24_powerUp	;wreg free
  1580                           
  1581                           ;RF24_c.c: 715: RF24_write_register_d(0x00, ( RF24_read_register_d(0x00) ) & ~(1<<(0)) )
      +                          ;
  1582  0029FE  0E00               	movlw	0
  1583  002A00  EC07  F01C         	call	_RF24_read_register_d
  1584  002A04  0BFE               	andlw	254
  1585  002A06  6E12               	movwf	RF24_write_register_d@value,c
  1586  002A08  0E00               	movlw	0
  1587  002A0A  ECF7  F01B         	call	_RF24_write_register_d
  1588                           
  1589                           ;RF24_c.c: 718: return ( setup != 0 && setup != 0xff );
  1590  002A0E  0E00               	movlw	0
  1591  002A10  6E19               	movwf	_RF24_begin$1931,c
  1592  002A12  501A               	movf	RF24_begin@setup,w,c
  1593  002A14  B4D8               	btfsc	status,2,c
  1594  002A16  0012               	return	
  1595  002A18  281A               	incf	RF24_begin@setup,w,c
  1596  002A1A  B4D8               	btfsc	status,2,c
  1597  002A1C  0012               	return	
  1598  002A1E  0E01               	movlw	1
  1599  002A20  6E19               	movwf	_RF24_begin$1931,c
  1600  002A22  0012               	return	
  1601  002A24                     __end_of_RF24_begin:
  1602                           	opt stack 0
  1603                           tblptru	equ	0xFF8
  1604                           tblptrh	equ	0xFF7
  1605                           tblptrl	equ	0xFF6
  1606                           tablat	equ	0xFF5
  1607                           intcon	equ	0xFF2
  1608                           postinc0	equ	0xFEE
  1609                           wreg	equ	0xFE8
  1610                           postdec2	equ	0xFDD
  1611                           fsr2h	equ	0xFDA
  1612                           fsr2l	equ	0xFD9
  1613                           status	equ	0xFD8
  1614                           
  1615 ;; *************** function _pinMode *****************
  1616 ;; Defined at:
  1617 ;;		line 8 in file "../../../RF24_c/utility/XC8/spi.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  pin             1    wreg     unsigned char 
  1620 ;;  mode            1    2[COMRAM] unsigned char 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  pin             1    3[COMRAM] unsigned char 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2, status,0
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1632 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;Total ram usage:        2 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_RF24_begin
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text5
  1647  001B10                     __ptext5:
  1648                           	opt stack 0
  1649  001B10                     _pinMode:
  1650                           	opt stack 27
  1651                           
  1652                           ;incstack = 0
  1653                           ;pinMode@pin stored from wreg
  1654  001B10  6E04               	movwf	pinMode@pin,c
  1655                           
  1656                           ;spi.c: 10: switch(pin)
  1657  001B12  D0D2               	goto	l4153
  1658  001B14                     l161:
  1659  001B14  B003               	btfsc	pinMode@mode,0,c
  1660  001B16  D002               	bra	u4605
  1661  001B18  9092               	bcf	3986,0,c	;volatile
  1662  001B1A  D001               	bra	u4606
  1663  001B1C                     u4605:
  1664  001B1C  8092               	bsf	3986,0,c	;volatile
  1665  001B1E                     u4606:
  1666  001B1E  0012               	return	
  1667  001B20                     l163:
  1668  001B20  B003               	btfsc	pinMode@mode,0,c
  1669  001B22  D002               	bra	u4615
  1670  001B24  9292               	bcf	3986,1,c	;volatile
  1671  001B26  D001               	bra	u4616
  1672  001B28                     u4615:
  1673  001B28  8292               	bsf	3986,1,c	;volatile
  1674  001B2A                     u4616:
  1675  001B2A  0012               	return	
  1676  001B2C                     l164:
  1677  001B2C  B003               	btfsc	pinMode@mode,0,c
  1678  001B2E  D002               	bra	u4625
  1679  001B30  9492               	bcf	3986,2,c	;volatile
  1680  001B32  D001               	bra	u4626
  1681  001B34                     u4625:
  1682  001B34  8492               	bsf	3986,2,c	;volatile
  1683  001B36                     u4626:
  1684  001B36  0012               	return	
  1685  001B38                     l165:
  1686  001B38  B003               	btfsc	pinMode@mode,0,c
  1687  001B3A  D002               	bra	u4635
  1688  001B3C  9692               	bcf	3986,3,c	;volatile
  1689  001B3E  D001               	bra	u4636
  1690  001B40                     u4635:
  1691  001B40  8692               	bsf	3986,3,c	;volatile
  1692  001B42                     u4636:
  1693  001B42  0012               	return	
  1694  001B44                     l166:
  1695  001B44  B003               	btfsc	pinMode@mode,0,c
  1696  001B46  D002               	bra	u4645
  1697  001B48  9892               	bcf	3986,4,c	;volatile
  1698  001B4A  D001               	bra	u4646
  1699  001B4C                     u4645:
  1700  001B4C  8892               	bsf	3986,4,c	;volatile
  1701  001B4E                     u4646:
  1702  001B4E  0012               	return	
  1703  001B50                     l167:
  1704  001B50  B003               	btfsc	pinMode@mode,0,c
  1705  001B52  D002               	bra	u4655
  1706  001B54  9A92               	bcf	3986,5,c	;volatile
  1707  001B56  D001               	bra	u4656
  1708  001B58                     u4655:
  1709  001B58  8A92               	bsf	3986,5,c	;volatile
  1710  001B5A                     u4656:
  1711  001B5A  0012               	return	
  1712  001B5C                     l168:
  1713  001B5C  B003               	btfsc	pinMode@mode,0,c
  1714  001B5E  D002               	bra	u4665
  1715  001B60  9096               	bcf	3990,0,c	;volatile
  1716  001B62  D001               	bra	u4666
  1717  001B64                     u4665:
  1718  001B64  8096               	bsf	3990,0,c	;volatile
  1719  001B66                     u4666:
  1720  001B66  0012               	return	
  1721  001B68                     l169:
  1722  001B68  B003               	btfsc	pinMode@mode,0,c
  1723  001B6A  D002               	bra	u4675
  1724  001B6C  9296               	bcf	3990,1,c	;volatile
  1725  001B6E  D001               	bra	u4676
  1726  001B70                     u4675:
  1727  001B70  8296               	bsf	3990,1,c	;volatile
  1728  001B72                     u4676:
  1729  001B72  0012               	return	
  1730  001B74                     l170:
  1731  001B74  B003               	btfsc	pinMode@mode,0,c
  1732  001B76  D002               	bra	u4685
  1733  001B78  9496               	bcf	3990,2,c	;volatile
  1734  001B7A  D001               	bra	u4686
  1735  001B7C                     u4685:
  1736  001B7C  8496               	bsf	3990,2,c	;volatile
  1737  001B7E                     u4686:
  1738  001B7E  0012               	return	
  1739  001B80                     l171:
  1740  001B80  B003               	btfsc	pinMode@mode,0,c
  1741  001B82  D002               	bra	u4695
  1742  001B84  9E92               	bcf	3986,7,c	;volatile
  1743  001B86  D001               	bra	u4696
  1744  001B88                     u4695:
  1745  001B88  8E92               	bsf	3986,7,c	;volatile
  1746  001B8A                     u4696:
  1747  001B8A  0012               	return	
  1748  001B8C                     l172:
  1749  001B8C  B003               	btfsc	pinMode@mode,0,c
  1750  001B8E  D002               	bra	u4705
  1751  001B90  9C92               	bcf	3986,6,c	;volatile
  1752  001B92  D001               	bra	u4706
  1753  001B94                     u4705:
  1754  001B94  8C92               	bsf	3986,6,c	;volatile
  1755  001B96                     u4706:
  1756  001B96  0012               	return	
  1757  001B98                     l173:
  1758  001B98  B003               	btfsc	pinMode@mode,0,c
  1759  001B9A  D002               	bra	u4715
  1760  001B9C  9094               	bcf	3988,0,c	;volatile
  1761  001B9E  D001               	bra	u4716
  1762  001BA0                     u4715:
  1763  001BA0  8094               	bsf	3988,0,c	;volatile
  1764  001BA2                     u4716:
  1765  001BA2  0012               	return	
  1766  001BA4                     l174:
  1767  001BA4  B003               	btfsc	pinMode@mode,0,c
  1768  001BA6  D002               	bra	u4725
  1769  001BA8  9294               	bcf	3988,1,c	;volatile
  1770  001BAA  D001               	bra	u4726
  1771  001BAC                     u4725:
  1772  001BAC  8294               	bsf	3988,1,c	;volatile
  1773  001BAE                     u4726:
  1774  001BAE  0012               	return	
  1775  001BB0                     l175:
  1776  001BB0  B003               	btfsc	pinMode@mode,0,c
  1777  001BB2  D002               	bra	u4735
  1778  001BB4  9494               	bcf	3988,2,c	;volatile
  1779  001BB6  D001               	bra	u4736
  1780  001BB8                     u4735:
  1781  001BB8  8494               	bsf	3988,2,c	;volatile
  1782  001BBA                     u4736:
  1783  001BBA  0012               	return	
  1784  001BBC                     l176:
  1785  001BBC  B003               	btfsc	pinMode@mode,0,c
  1786  001BBE  D002               	bra	u4745
  1787  001BC0  9694               	bcf	3988,3,c	;volatile
  1788  001BC2  D001               	bra	u4746
  1789  001BC4                     u4745:
  1790  001BC4  8694               	bsf	3988,3,c	;volatile
  1791  001BC6                     u4746:
  1792  001BC6  0012               	return	
  1793  001BC8                     l177:
  1794  001BC8  B003               	btfsc	pinMode@mode,0,c
  1795  001BCA  D002               	bra	u4755
  1796  001BCC  9095               	bcf	3989,0,c	;volatile
  1797  001BCE  D001               	bra	u4756
  1798  001BD0                     u4755:
  1799  001BD0  8095               	bsf	3989,0,c	;volatile
  1800  001BD2                     u4756:
  1801  001BD2  0012               	return	
  1802  001BD4                     l178:
  1803  001BD4  B003               	btfsc	pinMode@mode,0,c
  1804  001BD6  D002               	bra	u4765
  1805  001BD8  9295               	bcf	3989,1,c	;volatile
  1806  001BDA  D001               	bra	u4766
  1807  001BDC                     u4765:
  1808  001BDC  8295               	bsf	3989,1,c	;volatile
  1809  001BDE                     u4766:
  1810  001BDE  0012               	return	
  1811  001BE0                     l179:
  1812  001BE0  B003               	btfsc	pinMode@mode,0,c
  1813  001BE2  D002               	bra	u4775
  1814  001BE4  9495               	bcf	3989,2,c	;volatile
  1815  001BE6  D001               	bra	u4776
  1816  001BE8                     u4775:
  1817  001BE8  8495               	bsf	3989,2,c	;volatile
  1818  001BEA                     u4776:
  1819  001BEA  0012               	return	
  1820  001BEC                     l180:
  1821  001BEC  B003               	btfsc	pinMode@mode,0,c
  1822  001BEE  D002               	bra	u4785
  1823  001BF0  9695               	bcf	3989,3,c	;volatile
  1824  001BF2  D001               	bra	u4786
  1825  001BF4                     u4785:
  1826  001BF4  8695               	bsf	3989,3,c	;volatile
  1827  001BF6                     u4786:
  1828  001BF6  0012               	return	
  1829  001BF8                     l181:
  1830  001BF8  B003               	btfsc	pinMode@mode,0,c
  1831  001BFA  D002               	bra	u4795
  1832  001BFC  9894               	bcf	3988,4,c	;volatile
  1833  001BFE  D001               	bra	u4796
  1834  001C00                     u4795:
  1835  001C00  8894               	bsf	3988,4,c	;volatile
  1836  001C02                     u4796:
  1837  001C02  0012               	return	
  1838  001C04                     l182:
  1839  001C04  B003               	btfsc	pinMode@mode,0,c
  1840  001C06  D002               	bra	u4805
  1841  001C08  9A94               	bcf	3988,5,c	;volatile
  1842  001C0A  D001               	bra	u4806
  1843  001C0C                     u4805:
  1844  001C0C  8A94               	bsf	3988,5,c	;volatile
  1845  001C0E                     u4806:
  1846  001C0E  0012               	return	
  1847  001C10                     l183:
  1848  001C10  B003               	btfsc	pinMode@mode,0,c
  1849  001C12  D002               	bra	u4815
  1850  001C14  9C94               	bcf	3988,6,c	;volatile
  1851  001C16  D001               	bra	u4816
  1852  001C18                     u4815:
  1853  001C18  8C94               	bsf	3988,6,c	;volatile
  1854  001C1A                     u4816:
  1855  001C1A  0012               	return	
  1856  001C1C                     l184:
  1857  001C1C  B003               	btfsc	pinMode@mode,0,c
  1858  001C1E  D002               	bra	u4825
  1859  001C20  9E94               	bcf	3988,7,c	;volatile
  1860  001C22  D001               	bra	u4826
  1861  001C24                     u4825:
  1862  001C24  8E94               	bsf	3988,7,c	;volatile
  1863  001C26                     u4826:
  1864  001C26  0012               	return	
  1865  001C28                     l185:
  1866  001C28  B003               	btfsc	pinMode@mode,0,c
  1867  001C2A  D002               	bra	u4835
  1868  001C2C  9895               	bcf	3989,4,c	;volatile
  1869  001C2E  D001               	bra	u4836
  1870  001C30                     u4835:
  1871  001C30  8895               	bsf	3989,4,c	;volatile
  1872  001C32                     u4836:
  1873  001C32  0012               	return	
  1874  001C34                     l186:
  1875  001C34  B003               	btfsc	pinMode@mode,0,c
  1876  001C36  D002               	bra	u4845
  1877  001C38  9A95               	bcf	3989,5,c	;volatile
  1878  001C3A  D001               	bra	u4846
  1879  001C3C                     u4845:
  1880  001C3C  8A95               	bsf	3989,5,c	;volatile
  1881  001C3E                     u4846:
  1882  001C3E  0012               	return	
  1883  001C40                     l187:
  1884  001C40  B003               	btfsc	pinMode@mode,0,c
  1885  001C42  D002               	bra	u4855
  1886  001C44  9C95               	bcf	3989,6,c	;volatile
  1887  001C46  D001               	bra	u4856
  1888  001C48                     u4855:
  1889  001C48  8C95               	bsf	3989,6,c	;volatile
  1890  001C4A                     u4856:
  1891  001C4A  0012               	return	
  1892  001C4C                     l188:
  1893  001C4C  B003               	btfsc	pinMode@mode,0,c
  1894  001C4E  D002               	bra	u4865
  1895  001C50  9E95               	bcf	3989,7,c	;volatile
  1896  001C52  D001               	bra	u4866
  1897  001C54                     u4865:
  1898  001C54  8E95               	bsf	3989,7,c	;volatile
  1899  001C56                     u4866:
  1900  001C56  0012               	return	
  1901  001C58                     l189:
  1902  001C58  B003               	btfsc	pinMode@mode,0,c
  1903  001C5A  D002               	bra	u4875
  1904  001C5C  9093               	bcf	3987,0,c	;volatile
  1905  001C5E  D001               	bra	u4876
  1906  001C60                     u4875:
  1907  001C60  8093               	bsf	3987,0,c	;volatile
  1908  001C62                     u4876:
  1909  001C62  0012               	return	
  1910  001C64                     l190:
  1911  001C64  B003               	btfsc	pinMode@mode,0,c
  1912  001C66  D002               	bra	u4885
  1913  001C68  9293               	bcf	3987,1,c	;volatile
  1914  001C6A  D001               	bra	u4886
  1915  001C6C                     u4885:
  1916  001C6C  8293               	bsf	3987,1,c	;volatile
  1917  001C6E                     u4886:
  1918  001C6E  0012               	return	
  1919  001C70                     l191:
  1920  001C70  B003               	btfsc	pinMode@mode,0,c
  1921  001C72  D002               	bra	u4895
  1922  001C74  9493               	bcf	3987,2,c	;volatile
  1923  001C76  D001               	bra	u4896
  1924  001C78                     u4895:
  1925  001C78  8493               	bsf	3987,2,c	;volatile
  1926  001C7A                     u4896:
  1927  001C7A  0012               	return	
  1928  001C7C                     l192:
  1929  001C7C  B003               	btfsc	pinMode@mode,0,c
  1930  001C7E  D002               	bra	u4905
  1931  001C80  9693               	bcf	3987,3,c	;volatile
  1932  001C82  D001               	bra	u4906
  1933  001C84                     u4905:
  1934  001C84  8693               	bsf	3987,3,c	;volatile
  1935  001C86                     u4906:
  1936  001C86  0012               	return	
  1937  001C88                     l193:
  1938  001C88  B003               	btfsc	pinMode@mode,0,c
  1939  001C8A  D002               	bra	u4915
  1940  001C8C  9893               	bcf	3987,4,c	;volatile
  1941  001C8E  D001               	bra	u4916
  1942  001C90                     u4915:
  1943  001C90  8893               	bsf	3987,4,c	;volatile
  1944  001C92                     u4916:
  1945  001C92  0012               	return	
  1946  001C94                     l194:
  1947  001C94  B003               	btfsc	pinMode@mode,0,c
  1948  001C96  D002               	bra	u4925
  1949  001C98  9A93               	bcf	3987,5,c	;volatile
  1950  001C9A  D001               	bra	u4926
  1951  001C9C                     u4925:
  1952  001C9C  8A93               	bsf	3987,5,c	;volatile
  1953  001C9E                     u4926:
  1954  001C9E  0012               	return	
  1955  001CA0                     l195:
  1956  001CA0  B003               	btfsc	pinMode@mode,0,c
  1957  001CA2  D002               	bra	u4935
  1958  001CA4  9C93               	bcf	3987,6,c	;volatile
  1959  001CA6  D001               	bra	u4936
  1960  001CA8                     u4935:
  1961  001CA8  8C93               	bsf	3987,6,c	;volatile
  1962  001CAA                     u4936:
  1963  001CAA  0012               	return	
  1964  001CAC                     l196:
  1965  001CAC  B003               	btfsc	pinMode@mode,0,c
  1966  001CAE  D002               	bra	u4945
  1967  001CB0  9E93               	bcf	3987,7,c	;volatile
  1968  001CB2  D001               	bra	u4946
  1969  001CB4                     u4945:
  1970  001CB4  8E93               	bsf	3987,7,c	;volatile
  1971  001CB6                     u4946:
  1972                           
  1973                           ;spi.c: 59: }
  1974                           
  1975                           ;spi.c: 58: default: break;
  1976  001CB6  0012               	return	
  1977  001CB8                     l4153:
  1978  001CB8  5004               	movf	pinMode@pin,w,c
  1979                           
  1980                           ; Switch size 1, requested type "space"
  1981                           ; Number of cases is 35, Range of values is 2 to 40
  1982                           ; switch strategies available:
  1983                           ; Name         Instructions Cycles
  1984                           ; simple_byte          106    54 (average)
  1985                           ;	Chosen strategy is simple_byte
  1986  001CBA  0A02               	xorlw	2	; case 2
  1987  001CBC  B4D8               	btfsc	status,2,c
  1988  001CBE  D72A               	goto	l161
  1989  001CC0  0A01               	xorlw	1	; case 3
  1990  001CC2  B4D8               	btfsc	status,2,c
  1991  001CC4  D72D               	goto	l163
  1992  001CC6  0A07               	xorlw	7	; case 4
  1993  001CC8  B4D8               	btfsc	status,2,c
  1994  001CCA  D730               	goto	l164
  1995  001CCC  0A01               	xorlw	1	; case 5
  1996  001CCE  B4D8               	btfsc	status,2,c
  1997  001CD0  D733               	goto	l165
  1998  001CD2  0A03               	xorlw	3	; case 6
  1999  001CD4  B4D8               	btfsc	status,2,c
  2000  001CD6  D736               	goto	l166
  2001  001CD8  0A01               	xorlw	1	; case 7
  2002  001CDA  B4D8               	btfsc	status,2,c
  2003  001CDC  D739               	goto	l167
  2004  001CDE  0A0F               	xorlw	15	; case 8
  2005  001CE0  B4D8               	btfsc	status,2,c
  2006  001CE2  D73C               	goto	l168
  2007  001CE4  0A01               	xorlw	1	; case 9
  2008  001CE6  B4D8               	btfsc	status,2,c
  2009  001CE8  D73F               	goto	l169
  2010  001CEA  0A03               	xorlw	3	; case 10
  2011  001CEC  B4D8               	btfsc	status,2,c
  2012  001CEE  D742               	goto	l170
  2013  001CF0  0A07               	xorlw	7	; case 13
  2014  001CF2  B4D8               	btfsc	status,2,c
  2015  001CF4  D745               	goto	l171
  2016  001CF6  0A03               	xorlw	3	; case 14
  2017  001CF8  B4D8               	btfsc	status,2,c
  2018  001CFA  D748               	goto	l172
  2019  001CFC  0A01               	xorlw	1	; case 15
  2020  001CFE  B4D8               	btfsc	status,2,c
  2021  001D00  D74B               	goto	l173
  2022  001D02  0A1F               	xorlw	31	; case 16
  2023  001D04  B4D8               	btfsc	status,2,c
  2024  001D06  D74E               	goto	l174
  2025  001D08  0A01               	xorlw	1	; case 17
  2026  001D0A  B4D8               	btfsc	status,2,c
  2027  001D0C  D751               	goto	l175
  2028  001D0E  0A03               	xorlw	3	; case 18
  2029  001D10  B4D8               	btfsc	status,2,c
  2030  001D12  D754               	goto	l176
  2031  001D14  0A01               	xorlw	1	; case 19
  2032  001D16  B4D8               	btfsc	status,2,c
  2033  001D18  D757               	goto	l177
  2034  001D1A  0A07               	xorlw	7	; case 20
  2035  001D1C  B4D8               	btfsc	status,2,c
  2036  001D1E  D75A               	goto	l178
  2037  001D20  0A01               	xorlw	1	; case 21
  2038  001D22  B4D8               	btfsc	status,2,c
  2039  001D24  D75D               	goto	l179
  2040  001D26  0A03               	xorlw	3	; case 22
  2041  001D28  B4D8               	btfsc	status,2,c
  2042  001D2A  D760               	goto	l180
  2043  001D2C  0A01               	xorlw	1	; case 23
  2044  001D2E  B4D8               	btfsc	status,2,c
  2045  001D30  D763               	goto	l181
  2046  001D32  0A0F               	xorlw	15	; case 24
  2047  001D34  B4D8               	btfsc	status,2,c
  2048  001D36  D766               	goto	l182
  2049  001D38  0A01               	xorlw	1	; case 25
  2050  001D3A  B4D8               	btfsc	status,2,c
  2051  001D3C  D769               	goto	l183
  2052  001D3E  0A03               	xorlw	3	; case 26
  2053  001D40  B4D8               	btfsc	status,2,c
  2054  001D42  D76C               	goto	l184
  2055  001D44  0A01               	xorlw	1	; case 27
  2056  001D46  B4D8               	btfsc	status,2,c
  2057  001D48  D76F               	goto	l185
  2058  001D4A  0A07               	xorlw	7	; case 28
  2059  001D4C  B4D8               	btfsc	status,2,c
  2060  001D4E  D772               	goto	l186
  2061  001D50  0A01               	xorlw	1	; case 29
  2062  001D52  B4D8               	btfsc	status,2,c
  2063  001D54  D775               	goto	l187
  2064  001D56  0A03               	xorlw	3	; case 30
  2065  001D58  B4D8               	btfsc	status,2,c
  2066  001D5A  D778               	goto	l188
  2067  001D5C  0A3F               	xorlw	63	; case 33
  2068  001D5E  B4D8               	btfsc	status,2,c
  2069  001D60  D77B               	goto	l189
  2070  001D62  0A03               	xorlw	3	; case 34
  2071  001D64  B4D8               	btfsc	status,2,c
  2072  001D66  D77E               	goto	l190
  2073  001D68  0A01               	xorlw	1	; case 35
  2074  001D6A  B4D8               	btfsc	status,2,c
  2075  001D6C  D781               	goto	l191
  2076  001D6E  0A07               	xorlw	7	; case 36
  2077  001D70  B4D8               	btfsc	status,2,c
  2078  001D72  D784               	goto	l192
  2079  001D74  0A01               	xorlw	1	; case 37
  2080  001D76  B4D8               	btfsc	status,2,c
  2081  001D78  D787               	goto	l193
  2082  001D7A  0A03               	xorlw	3	; case 38
  2083  001D7C  B4D8               	btfsc	status,2,c
  2084  001D7E  D78A               	goto	l194
  2085  001D80  0A01               	xorlw	1	; case 39
  2086  001D82  B4D8               	btfsc	status,2,c
  2087  001D84  D78D               	goto	l195
  2088  001D86  0A0F               	xorlw	15	; case 40
  2089  001D88  A4D8               	btfss	status,2,c
  2090  001D8A  0012               	return	
  2091  001D8C  D78F               	goto	l196
  2092  001D8E                     __end_of_pinMode:
  2093                           	opt stack 0
  2094                           tblptru	equ	0xFF8
  2095                           tblptrh	equ	0xFF7
  2096                           tblptrl	equ	0xFF6
  2097                           tablat	equ	0xFF5
  2098                           intcon	equ	0xFF2
  2099                           postinc0	equ	0xFEE
  2100                           wreg	equ	0xFE8
  2101                           postdec2	equ	0xFDD
  2102                           fsr2h	equ	0xFDA
  2103                           fsr2l	equ	0xFD9
  2104                           status	equ	0xFD8
  2105                           
  2106 ;; *************** function _SPI_begin *****************
  2107 ;; Defined at:
  2108 ;;		line 224 in file "../../../RF24_c/utility/XC8/spi.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;		None
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;		None
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      void 
  2115 ;; Registers used:
  2116 ;;		wreg, status,2
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;Total ram usage:        0 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    1
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_RF24_begin
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text6
  2137  003848                     __ptext6:
  2138                           	opt stack 0
  2139  003848                     _SPI_begin:
  2140                           	opt stack 27
  2141                           
  2142                           ;spi.c: 235: TRISCbits.TRISC4=1;
  2143                           
  2144                           ;incstack = 0
  2145  003848  8894               	bsf	3988,4,c	;volatile
  2146                           
  2147                           ;spi.c: 237: TRISCbits.TRISC3=0;
  2148  00384A  9694               	bcf	3988,3,c	;volatile
  2149                           
  2150                           ;spi.c: 239: TRISCbits.TRISC5=0;
  2151  00384C  9A94               	bcf	3988,5,c	;volatile
  2152                           
  2153                           ;spi.c: 242: SSPCON1bits.SSPEN=0;
  2154  00384E  9AC6               	bcf	4038,5,c	;volatile
  2155                           
  2156                           ;spi.c: 243: SSPSTATbits.CKE=1;
  2157  003850  8CC7               	bsf	4039,6,c	;volatile
  2158                           
  2159                           ;spi.c: 244: SSPCON1bits.CKP=0;
  2160  003852  98C6               	bcf	4038,4,c	;volatile
  2161                           
  2162                           ;spi.c: 245: SSPSTATbits.SMP=0;
  2163  003854  9EC7               	bcf	4039,7,c	;volatile
  2164                           
  2165                           ;spi.c: 246: SSPCON1bits.SSPM=1;
  2166  003856  50C6               	movf	4038,w,c	;volatile
  2167  003858  0BF0               	andlw	-16
  2168  00385A  0901               	iorlw	1
  2169  00385C  6EC6               	movwf	4038,c	;volatile
  2170                           
  2171                           ;spi.c: 247: SSPCON1bits.SSPEN=1;
  2172  00385E  8AC6               	bsf	4038,5,c	;volatile
  2173  003860  0012               	return		;funcret
  2174  003862                     __end_of_SPI_begin:
  2175                           	opt stack 0
  2176                           tblptru	equ	0xFF8
  2177                           tblptrh	equ	0xFF7
  2178                           tblptrl	equ	0xFF6
  2179                           tablat	equ	0xFF5
  2180                           intcon	equ	0xFF2
  2181                           postinc0	equ	0xFEE
  2182                           wreg	equ	0xFE8
  2183                           postdec2	equ	0xFDD
  2184                           fsr2h	equ	0xFDA
  2185                           fsr2l	equ	0xFD9
  2186                           status	equ	0xFD8
  2187                           
  2188 ;; *************** function _RF24_toggle_features_d *****************
  2189 ;; Defined at:
  2190 ;;		line 1266 in file "../../../RF24_c/RF24_c.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;		None
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      void 
  2197 ;; Registers used:
  2198 ;;		wreg, status,2, status,0, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;Total ram usage:        0 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    4
  2211 ;; This function calls:
  2212 ;;		_RF24_beginTransaction
  2213 ;;		_RF24_endTransaction
  2214 ;;		_SPI_transfer
  2215 ;; This function is called by:
  2216 ;;		_RF24_begin
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text7
  2221  003894                     __ptext7:
  2222                           	opt stack 0
  2223  003894                     _RF24_toggle_features_d:
  2224                           	opt stack 24
  2225                           
  2226                           ;RF24_c.c: 1268: RF24_beginTransaction();
  2227                           
  2228                           ;incstack = 0
  2229  003894  EC9F  F01C         	call	_RF24_beginTransaction	;wreg free
  2230                           
  2231                           ;RF24_c.c: 1269: SPI_transfer( 0x50 );
  2232  003898  0E50               	movlw	80
  2233  00389A  EC7E  F01C         	call	_SPI_transfer
  2234                           
  2235                           ;RF24_c.c: 1270: SPI_transfer( 0x73 );
  2236  00389E  0E73               	movlw	115
  2237  0038A0  EC7E  F01C         	call	_SPI_transfer
  2238                           
  2239                           ;RF24_c.c: 1271: RF24_endTransaction();
  2240  0038A4  EC9B  F01C         	call	_RF24_endTransaction	;wreg free
  2241  0038A8  0012               	return		;funcret
  2242  0038AA                     __end_of_RF24_toggle_features_d:
  2243                           	opt stack 0
  2244                           tblptru	equ	0xFF8
  2245                           tblptrh	equ	0xFF7
  2246                           tblptrl	equ	0xFF6
  2247                           tablat	equ	0xFF5
  2248                           intcon	equ	0xFF2
  2249                           postinc0	equ	0xFEE
  2250                           wreg	equ	0xFE8
  2251                           postdec2	equ	0xFDD
  2252                           fsr2h	equ	0xFDA
  2253                           fsr2l	equ	0xFD9
  2254                           status	equ	0xFD8
  2255                           
  2256 ;; *************** function _RF24_setDataRate *****************
  2257 ;; Defined at:
  2258 ;;		line 1453 in file "../../../RF24_c/RF24_c.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  speed           1    wreg     enum E3388
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  speed           1   21[COMRAM] enum E3388
  2263 ;;  setup           1   22[COMRAM] unsigned char 
  2264 ;;  result          1   20[COMRAM] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      unsigned char 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;Total ram usage:        3 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    5
  2281 ;; This function calls:
  2282 ;;		_RF24_read_register_d
  2283 ;;		_RF24_write_register_d
  2284 ;; This function is called by:
  2285 ;;		_RF24_begin
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text8
  2290  002F8E                     __ptext8:
  2291                           	opt stack 0
  2292  002F8E                     _RF24_setDataRate:
  2293                           	opt stack 23
  2294                           
  2295                           ;incstack = 0
  2296                           ;RF24_setDataRate@speed stored from wreg
  2297  002F8E  6E16               	movwf	RF24_setDataRate@speed,c
  2298                           
  2299                           ;RF24_c.c: 1455: uint8_t result = 0;
  2300  002F90  0E00               	movlw	0
  2301  002F92  6E15               	movwf	RF24_setDataRate@result,c
  2302                           
  2303                           ;RF24_c.c: 1456: uint8_t setup = RF24_read_register_d(0x06) ;
  2304  002F94  0E06               	movlw	6
  2305  002F96  EC07  F01C         	call	_RF24_read_register_d
  2306  002F9A  6E17               	movwf	RF24_setDataRate@setup,c
  2307                           
  2308                           ;RF24_c.c: 1459: setup &= ~((1<<(5)) | (1<<(3))) ;
  2309  002F9C  0ED7               	movlw	215
  2310  002F9E  1617               	andwf	RF24_setDataRate@setup,f,c
  2311                           
  2312                           ;RF24_c.c: 1464: rf.txDelay=85;
  2313  002FA0  0E55               	movlw	85
  2314  002FA2  6E4F               	movwf	_rf+13,c
  2315  002FA4  0E00               	movlw	0
  2316  002FA6  6E50               	movwf	_rf+14,c
  2317  002FA8  0E00               	movlw	0
  2318  002FAA  6E51               	movwf	_rf+15,c
  2319  002FAC  0E00               	movlw	0
  2320  002FAE  6E52               	movwf	_rf+16,c
  2321                           
  2322                           ;RF24_c.c: 1466: if( speed == RF24_250KBPS )
  2323  002FB0  0E02               	movlw	2
  2324  002FB2  1816               	xorwf	RF24_setDataRate@speed,w,c
  2325  002FB4  A4D8               	btfss	status,2,c
  2326  002FB6  D003               	goto	l5787
  2327                           
  2328                           ;RF24_c.c: 1467: {
  2329                           ;RF24_c.c: 1470: setup |= (1<<(5)) ;
  2330  002FB8  8A17               	bsf	RF24_setDataRate@setup,5,c
  2331                           
  2332                           ;RF24_c.c: 1474: rf.txDelay=155;
  2333  002FBA  0E9B               	movlw	155
  2334  002FBC  D005               	goto	L1
  2335  002FBE                     l5787:
  2336                           
  2337                           ;RF24_c.c: 1477: else
  2338                           ;RF24_c.c: 1478: {
  2339                           ;RF24_c.c: 1481: if ( speed == RF24_2MBPS )
  2340  002FBE  0416               	decf	RF24_setDataRate@speed,w,c
  2341  002FC0  A4D8               	btfss	status,2,c
  2342  002FC2  D009               	goto	l5793
  2343                           
  2344                           ;RF24_c.c: 1482: {
  2345                           ;RF24_c.c: 1483: setup |= (1<<(3));
  2346  002FC4  8617               	bsf	RF24_setDataRate@setup,3,c
  2347                           
  2348                           ;RF24_c.c: 1487: rf.txDelay=65;
  2349  002FC6  0E41               	movlw	65
  2350  002FC8                     L1:
  2351  002FC8  6E4F               	movwf	_rf+13,c
  2352  002FCA  0E00               	movlw	0
  2353  002FCC  6E50               	movwf	_rf+14,c
  2354  002FCE  0E00               	movlw	0
  2355  002FD0  6E51               	movwf	_rf+15,c
  2356  002FD2  0E00               	movlw	0
  2357  002FD4  6E52               	movwf	_rf+16,c
  2358  002FD6                     l5793:
  2359                           
  2360                           ;RF24_c.c: 1489: }
  2361                           ;RF24_c.c: 1490: }
  2362                           ;RF24_c.c: 1491: RF24_write_register_d(0x06,setup);
  2363  002FD6  C017  F012         	movff	RF24_setDataRate@setup,RF24_write_register_d@value
  2364  002FDA  0E06               	movlw	6
  2365  002FDC  ECF7  F01B         	call	_RF24_write_register_d
  2366                           
  2367                           ;RF24_c.c: 1494: if ( RF24_read_register_d(0x06) == setup )
  2368  002FE0  0E06               	movlw	6
  2369  002FE2  EC07  F01C         	call	_RF24_read_register_d
  2370  002FE6  1817               	xorwf	RF24_setDataRate@setup,w,c
  2371  002FE8  A4D8               	btfss	status,2,c
  2372  002FEA  D002               	goto	l652
  2373                           
  2374                           ;RF24_c.c: 1495: {
  2375                           ;RF24_c.c: 1496: result = 1;
  2376  002FEC  0E01               	movlw	1
  2377  002FEE  6E15               	movwf	RF24_setDataRate@result,c
  2378  002FF0                     l652:
  2379                           
  2380                           ;RF24_c.c: 1497: }
  2381                           ;RF24_c.c: 1498: return result;
  2382  002FF0  5015               	movf	RF24_setDataRate@result,w,c
  2383  002FF2  0012               	return	
  2384  002FF4                     __end_of_RF24_setDataRate:
  2385                           	opt stack 0
  2386                           tblptru	equ	0xFF8
  2387                           tblptrh	equ	0xFF7
  2388                           tblptrl	equ	0xFF6
  2389                           tablat	equ	0xFF5
  2390                           intcon	equ	0xFF2
  2391                           postinc0	equ	0xFEE
  2392                           wreg	equ	0xFE8
  2393                           postdec2	equ	0xFDD
  2394                           fsr2h	equ	0xFDA
  2395                           fsr2l	equ	0xFD9
  2396                           status	equ	0xFD8
  2397                           
  2398 ;; *************** function _RF24N_init *****************
  2399 ;; Defined at:
  2400 ;;		line 84 in file "../../RF24Network_c.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      void 
  2407 ;; Registers used:
  2408 ;;		None
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2418 ;;Total ram usage:        0 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    1
  2421 ;; This function calls:
  2422 ;;		Nothing
  2423 ;; This function is called by:
  2424 ;;		_setup
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text9
  2429  003120                     __ptext9:
  2430                           	opt stack 0
  2431  003120                     _RF24N_init:
  2432                           	opt stack 28
  2433                           
  2434                           ;RF24Network_c.c: 86: rn.next_frame= rn.frame_queue;
  2435                           
  2436                           ;incstack = 0
  2437  003120  0EE3               	movlw	low (_rn+58)
  2438  003122  CFE8 F17D          	movff	wreg,_rn+212
  2439  003126  0E00               	movlw	high (_rn+58)
  2440  003128  CFE8 F17E          	movff	wreg,_rn+213
  2441                           
  2442                           ;RF24Network_c.c: 88: rn.frag_queue.message_buffer=&rn.frag_queue_message_buffer[0];
  2443  00312C  0E8B               	movlw	low (_rn+226)
  2444  00312E  CFE8 F189          	movff	wreg,_rn+224
  2445  003132  0E01               	movlw	high (_rn+226)
  2446  003134  CFE8 F18A          	movff	wreg,_rn+225
  2447                           
  2448                           ;RF24Network_c.c: 89: rn.frag_ptr = &rn.frag_queue;
  2449  003138  0E7F               	movlw	low (_rn+214)
  2450  00313A  CFE8 F0D0          	movff	wreg,_rn+39
  2451  00313E  0E01               	movlw	high (_rn+214)
  2452  003140  CFE8 F0D1          	movff	wreg,_rn+40
  2453                           
  2454                           ;RF24Network_c.c: 91: rn.txTime=0;
  2455  003144  0E00               	movlw	0
  2456  003146  CFE8 F0D4          	movff	wreg,_rn+43
  2457  00314A  0E00               	movlw	0
  2458  00314C  CFE8 F0D5          	movff	wreg,_rn+44
  2459  003150  0E00               	movlw	0
  2460  003152  CFE8 F0D6          	movff	wreg,_rn+45
  2461  003156  0E00               	movlw	0
  2462  003158  CFE8 F0D7          	movff	wreg,_rn+46
  2463                           
  2464                           ;RF24Network_c.c: 92: rn.networkFlags=0;
  2465  00315C  0E00               	movlw	0
  2466  00315E  CFE8 F0D3          	movff	wreg,_rn+42
  2467                           
  2468                           ;RF24Network_c.c: 93: rn.returnSysMsgs=0;
  2469  003162  0E00               	movlw	0
  2470  003164  CFE8 F0D2          	movff	wreg,_rn+41
  2471                           
  2472                           ;RF24Network_c.c: 94: rn.multicastRelay=0;
  2473  003168  0E00               	movlw	0
  2474  00316A  CFE8 F0A9          	movff	wreg,_rn
  2475                           
  2476                           ;RF24Network_c.c: 99: rn.max_frame_payload_size = 32-sizeof(RF24NetworkHeader);
  2477  00316E  0E18               	movlw	24
  2478  003170  CFE8 F0DC          	movff	wreg,_rn+51
  2479  003174  0E00               	movlw	0
  2480  003176  CFE8 F0DD          	movff	wreg,_rn+52
  2481  00317A  0012               	return		;funcret
  2482  00317C                     __end_of_RF24N_init:
  2483                           	opt stack 0
  2484                           tblptru	equ	0xFF8
  2485                           tblptrh	equ	0xFF7
  2486                           tblptrl	equ	0xFF6
  2487                           tablat	equ	0xFF5
  2488                           intcon	equ	0xFF2
  2489                           postinc0	equ	0xFEE
  2490                           wreg	equ	0xFE8
  2491                           postdec2	equ	0xFDD
  2492                           fsr2h	equ	0xFDA
  2493                           fsr2l	equ	0xFD9
  2494                           status	equ	0xFD8
  2495                           
  2496 ;; *************** function _RF24N_begin_d *****************
  2497 ;; Defined at:
  2498 ;;		line 163 in file "../../RF24Network_c.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  _channel        1    wreg     unsigned char 
  2501 ;;  _node_addres    2   31[COMRAM] unsigned int 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  _channel        1   39[COMRAM] unsigned char 
  2504 ;;  addr            5   33[COMRAM] unsigned char [5]
  2505 ;;  i               1   40[COMRAM] unsigned char 
  2506 ;;  retryVar        1   38[COMRAM] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;Total ram usage:       10 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    7
  2523 ;; This function calls:
  2524 ;;		_RF24N_is_valid_address
  2525 ;;		_RF24N_pipe_address
  2526 ;;		_RF24N_setup_address
  2527 ;;		_RF24_enableDynamicPayloads
  2528 ;;		_RF24_isValid
  2529 ;;		_RF24_openReadingPipe_d
  2530 ;;		_RF24_setAutoAck_p
  2531 ;;		_RF24_setChannel
  2532 ;;		_RF24_setRetries
  2533 ;;		_RF24_startListening
  2534 ;;		___lwmod
  2535 ;;		___wmul
  2536 ;; This function is called by:
  2537 ;;		_setup
  2538 ;;		_RF24N_begin
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text10
  2543  00287C                     __ptext10:
  2544                           	opt stack 0
  2545  00287C                     _RF24N_begin_d:
  2546                           	opt stack 22
  2547                           
  2548                           ;incstack = 0
  2549                           ;RF24N_begin_d@_channel stored from wreg
  2550  00287C  6E28               	movwf	RF24N_begin_d@_channel,c
  2551                           
  2552                           ;RF24Network_c.c: 165: uint8_t i;
  2553                           ;RF24Network_c.c: 166: uint8_t retryVar;
  2554                           ;RF24Network_c.c: 168: if (! RF24N_is_valid_address(_node_address) )
  2555  00287E  C020  F003         	movff	RF24N_begin_d@_node_address,RF24N_is_valid_address@node
  2556  002882  C021  F004         	movff	RF24N_begin_d@_node_address+1,RF24N_is_valid_address@node+1
  2557  002886  ECAD  F01A         	call	_RF24N_is_valid_address	;wreg free
  2558  00288A  0900               	iorlw	0
  2559  00288C  B4D8               	btfsc	status,2,c
  2560  00288E  0012               	return	
  2561                           
  2562                           ;RF24Network_c.c: 171: rn.node_address = _node_address;
  2563                           
  2564                           ;RF24Network_c.c: 169: return;
  2565  002890  C020  F0D9         	movff	RF24N_begin_d@_node_address,_rn+48
  2566  002894  C021  F0DA         	movff	RF24N_begin_d@_node_address+1,_rn+49
  2567                           
  2568                           ;RF24Network_c.c: 173: if ( ! RF24_isValid() ){
  2569  002898  EC3E  F01C         	call	_RF24_isValid	;wreg free
  2570  00289C  0900               	iorlw	0
  2571  00289E  B4D8               	btfsc	status,2,c
  2572  0028A0  0012               	return	
  2573                           
  2574                           ;RF24Network_c.c: 175: }
  2575                           ;RF24Network_c.c: 178: if(_channel != 255){
  2576                           
  2577                           ;RF24Network_c.c: 174: return;
  2578  0028A2  2828               	incf	RF24N_begin_d@_channel,w,c
  2579  0028A4  B4D8               	btfsc	status,2,c
  2580  0028A6  D003               	goto	l763
  2581                           
  2582                           ;RF24Network_c.c: 179: RF24_setChannel(_channel);
  2583  0028A8  5028               	movf	RF24N_begin_d@_channel,w,c
  2584  0028AA  EC9C  F01B         	call	_RF24_setChannel
  2585  0028AE                     l763:
  2586                           
  2587                           ;RF24Network_c.c: 180: }
  2588                           ;RF24Network_c.c: 182: RF24_setAutoAck_p(0,0);
  2589  0028AE  0E00               	movlw	0
  2590  0028B0  6E15               	movwf	RF24_setAutoAck_p@enable,c
  2591  0028B2  0E00               	movlw	0
  2592  0028B4  ECE9  F018         	call	_RF24_setAutoAck_p
  2593                           
  2594                           ;RF24Network_c.c: 185: RF24_enableDynamicPayloads();
  2595  0028B8  ECAF  F01B         	call	_RF24_enableDynamicPayloads	;wreg free
  2596                           
  2597                           ;RF24Network_c.c: 189: retryVar = (((rn.node_address % 6)+1) *2) + 3;
  2598  0028BC  C0D9  F003         	movff	_rn+48,___lwmod@dividend
  2599  0028C0  C0DA  F004         	movff	_rn+49,___lwmod@dividend+1
  2600  0028C4  0E00               	movlw	0
  2601  0028C6  6E06               	movwf	___lwmod@divisor+1,c
  2602  0028C8  0E06               	movlw	6
  2603  0028CA  6E05               	movwf	___lwmod@divisor,c
  2604  0028CC  ECD4  F019         	call	___lwmod	;wreg free
  2605  0028D0  90D8               	bcf	status,0,c
  2606  0028D2  3403               	rlcf	?___lwmod,w,c
  2607  0028D4  0F05               	addlw	5
  2608  0028D6  6E27               	movwf	RF24N_begin_d@retryVar,c
  2609                           
  2610                           ;RF24Network_c.c: 190: RF24_setRetries(retryVar, 5);
  2611  0028D8  0E05               	movlw	5
  2612  0028DA  6E15               	movwf	RF24_setRetries@count,c
  2613  0028DC  5027               	movf	RF24N_begin_d@retryVar,w,c
  2614  0028DE  ECD5  F01B         	call	_RF24_setRetries
  2615                           
  2616                           ;RF24Network_c.c: 191: rn.txTimeout = 25;
  2617  0028E2  0E19               	movlw	25
  2618  0028E4  CFE8 F0AA          	movff	wreg,_rn+1
  2619  0028E8  0E00               	movlw	0
  2620  0028EA  CFE8 F0AB          	movff	wreg,_rn+2
  2621  0028EE  0E00               	movlw	0
  2622  0028F0  CFE8 F0AC          	movff	wreg,_rn+3
  2623  0028F4  0E00               	movlw	0
  2624  0028F6  CFE8 F0AD          	movff	wreg,_rn+4
  2625                           
  2626                           ;RF24Network_c.c: 192: rn.routeTimeout = rn.txTimeout*3;
  2627  0028FA  C0AA  F003         	movff	_rn+1,___wmul@multiplier
  2628  0028FE  C0AB  F004         	movff	_rn+2,___wmul@multiplier+1
  2629  002902  0E00               	movlw	0
  2630  002904  6E06               	movwf	___wmul@multiplicand+1,c
  2631  002906  0E03               	movlw	3
  2632  002908  6E05               	movwf	___wmul@multiplicand,c
  2633  00290A  EC89  F01B         	call	___wmul	;wreg free
  2634  00290E  C003  F0AE         	movff	?___wmul,_rn+5
  2635  002912  C004  F0AF         	movff	?___wmul+1,_rn+6
  2636                           
  2637                           ;RF24Network_c.c: 202: RF24N_setup_address();
  2638  002916  ECD0  F013         	call	_RF24N_setup_address	;wreg free
  2639                           
  2640                           ;RF24Network_c.c: 205: i = 6;
  2641  00291A  0E06               	movlw	6
  2642  00291C  6E29               	movwf	RF24N_begin_d@i,c
  2643                           
  2644                           ;RF24Network_c.c: 206: while (i--){
  2645  00291E  D013               	goto	l6169
  2646  002920                     l6165:
  2647                           
  2648                           ;RF24Network_c.c: 207: raddr_t addr[5];
  2649                           ;RF24Network_c.c: 208: RF24N_pipe_address(_node_address,i,addr);
  2650  002920  C020  F003         	movff	RF24N_begin_d@_node_address,RF24N_pipe_address@node
  2651  002924  C021  F004         	movff	RF24N_begin_d@_node_address+1,RF24N_pipe_address@node+1
  2652  002928  C029  F005         	movff	RF24N_begin_d@i,RF24N_pipe_address@pipe
  2653  00292C  0E22               	movlw	low RF24N_begin_d@addr
  2654  00292E  6E06               	movwf	RF24N_pipe_address@address,c
  2655  002930  0E00               	movlw	high RF24N_begin_d@addr
  2656  002932  6E07               	movwf	RF24N_pipe_address@address+1,c
  2657  002934  ECCC  F011         	call	_RF24N_pipe_address	;wreg free
  2658                           
  2659                           ;RF24Network_c.c: 209: RF24_openReadingPipe_d(i,addr);
  2660  002938  0E22               	movlw	low RF24N_begin_d@addr
  2661  00293A  6E15               	movwf	RF24_openReadingPipe_d@address_,c
  2662  00293C  0E00               	movlw	high RF24N_begin_d@addr
  2663  00293E  6E16               	movwf	RF24_openReadingPipe_d@address_+1,c
  2664  002940  5029               	movf	RF24N_begin_d@i,w,c
  2665  002942  EC5B  F012         	call	_RF24_openReadingPipe_d
  2666  002946                     l6169:
  2667  002946  0629               	decf	RF24N_begin_d@i,f,c
  2668  002948  2829               	incf	RF24N_begin_d@i,w,c
  2669  00294A  A4D8               	btfss	status,2,c
  2670  00294C  D7E9               	goto	l6165
  2671                           
  2672                           ;RF24Network_c.c: 210: }
  2673                           ;RF24Network_c.c: 211: RF24_startListening();
  2674  00294E  ECBE  F018         	call	_RF24_startListening	;wreg free
  2675  002952  0012               	return		;funcret
  2676  002954                     __end_of_RF24N_begin_d:
  2677                           	opt stack 0
  2678                           tblptru	equ	0xFF8
  2679                           tblptrh	equ	0xFF7
  2680                           tblptrl	equ	0xFF6
  2681                           tablat	equ	0xFF5
  2682                           intcon	equ	0xFF2
  2683                           postinc0	equ	0xFEE
  2684                           wreg	equ	0xFE8
  2685                           postdec2	equ	0xFDD
  2686                           fsr2h	equ	0xFDA
  2687                           fsr2l	equ	0xFD9
  2688                           status	equ	0xFD8
  2689                           
  2690 ;; *************** function ___wmul *****************
  2691 ;; Defined at:
  2692 ;;		line 15 in file "/opt/microchip/xc8/v1.36/sources/common/Umul16.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  multiplier      2    2[COMRAM] unsigned int 
  2695 ;;  multiplicand    2    4[COMRAM] unsigned int 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  product         2    6[COMRAM] unsigned int 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  2    2[COMRAM] unsigned int 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0, prodl, prodh
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2707 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;Total ram usage:        6 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:    1
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_RF24N_begin_d
  2718 ;;		_RF24N_write_
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text11
  2723  003712                     __ptext11:
  2724                           	opt stack 0
  2725  003712                     ___wmul:
  2726                           	opt stack 27
  2727                           
  2728                           ;incstack = 0
  2729  003712  5003               	movf	___wmul@multiplier,w,c
  2730  003714  0205               	mulwf	___wmul@multiplicand,c
  2731  003716  CFF3 F007          	movff	prodl,___wmul@product
  2732  00371A  CFF4 F008          	movff	prodh,___wmul@product+1
  2733  00371E  5003               	movf	___wmul@multiplier,w,c
  2734  003720  0206               	mulwf	___wmul@multiplicand+1,c
  2735  003722  50F3               	movf	prodl,w,c
  2736  003724  2608               	addwf	___wmul@product+1,f,c
  2737  003726  5004               	movf	___wmul@multiplier+1,w,c
  2738  003728  0205               	mulwf	___wmul@multiplicand,c
  2739  00372A  50F3               	movf	prodl,w,c
  2740  00372C  2608               	addwf	___wmul@product+1,f,c
  2741  00372E  C007  F003         	movff	___wmul@product,?___wmul
  2742  003732  C008  F004         	movff	___wmul@product+1,?___wmul+1
  2743  003736  0012               	return	
  2744  003738                     __end_of___wmul:
  2745                           	opt stack 0
  2746                           tblptru	equ	0xFF8
  2747                           tblptrh	equ	0xFF7
  2748                           tblptrl	equ	0xFF6
  2749                           tablat	equ	0xFF5
  2750                           prodh	equ	0xFF4
  2751                           prodl	equ	0xFF3
  2752                           intcon	equ	0xFF2
  2753                           postinc0	equ	0xFEE
  2754                           wreg	equ	0xFE8
  2755                           postdec2	equ	0xFDD
  2756                           fsr2h	equ	0xFDA
  2757                           fsr2l	equ	0xFD9
  2758                           status	equ	0xFD8
  2759                           
  2760 ;; *************** function ___lwmod *****************
  2761 ;; Defined at:
  2762 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwmod.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  dividend        2    2[COMRAM] unsigned int 
  2765 ;;  divisor         2    4[COMRAM] unsigned int 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  counter         1    6[COMRAM] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  2    2[COMRAM] unsigned int 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2777 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;Total ram usage:        5 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    1
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_RF24N_begin_d
  2788 ;;		_RF24N_write_
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text12
  2793  0033A8                     __ptext12:
  2794                           	opt stack 0
  2795  0033A8                     ___lwmod:
  2796                           	opt stack 27
  2797                           
  2798                           ;incstack = 0
  2799  0033A8  5005               	movf	___lwmod@divisor,w,c
  2800  0033AA  1006               	iorwf	___lwmod@divisor+1,w,c
  2801  0033AC  B4D8               	btfsc	status,2,c
  2802  0033AE  D018               	goto	l1436
  2803  0033B0  0E01               	movlw	1
  2804  0033B2  6E07               	movwf	___lwmod@counter,c
  2805  0033B4  D004               	goto	l4517
  2806  0033B6                     l4515:
  2807  0033B6  90D8               	bcf	status,0,c
  2808  0033B8  3605               	rlcf	___lwmod@divisor,f,c
  2809  0033BA  3606               	rlcf	___lwmod@divisor+1,f,c
  2810  0033BC  2A07               	incf	___lwmod@counter,f,c
  2811  0033BE                     l4517:
  2812  0033BE  AE06               	btfss	___lwmod@divisor+1,7,c
  2813  0033C0  D7FA               	goto	l4515
  2814  0033C2                     l4519:
  2815  0033C2  5005               	movf	___lwmod@divisor,w,c
  2816  0033C4  5C03               	subwf	___lwmod@dividend,w,c
  2817  0033C6  5006               	movf	___lwmod@divisor+1,w,c
  2818  0033C8  5804               	subwfb	___lwmod@dividend+1,w,c
  2819  0033CA  A0D8               	btfss	status,0,c
  2820  0033CC  D004               	goto	l4523
  2821  0033CE  5005               	movf	___lwmod@divisor,w,c
  2822  0033D0  5E03               	subwf	___lwmod@dividend,f,c
  2823  0033D2  5006               	movf	___lwmod@divisor+1,w,c
  2824  0033D4  5A04               	subwfb	___lwmod@dividend+1,f,c
  2825  0033D6                     l4523:
  2826  0033D6  90D8               	bcf	status,0,c
  2827  0033D8  3206               	rrcf	___lwmod@divisor+1,f,c
  2828  0033DA  3205               	rrcf	___lwmod@divisor,f,c
  2829  0033DC  2E07               	decfsz	___lwmod@counter,f,c
  2830  0033DE  D7F1               	goto	l4519
  2831  0033E0                     l1436:
  2832  0033E0  C003  F003         	movff	___lwmod@dividend,?___lwmod
  2833  0033E4  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  2834  0033E8  0012               	return		;funcret
  2835  0033EA                     __end_of___lwmod:
  2836                           	opt stack 0
  2837                           tblptru	equ	0xFF8
  2838                           tblptrh	equ	0xFF7
  2839                           tblptrl	equ	0xFF6
  2840                           tablat	equ	0xFF5
  2841                           prodh	equ	0xFF4
  2842                           prodl	equ	0xFF3
  2843                           intcon	equ	0xFF2
  2844                           postinc0	equ	0xFEE
  2845                           wreg	equ	0xFE8
  2846                           postdec2	equ	0xFDD
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _RF24_setRetries *****************
  2852 ;; Defined at:
  2853 ;;		line 1580 in file "../../../RF24_c/RF24_c.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  delay           1    wreg     unsigned char 
  2856 ;;  count           1   20[COMRAM] unsigned char 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  delay           1   23[COMRAM] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2868 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;Total ram usage:        4 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    5
  2875 ;; This function calls:
  2876 ;;		_RF24_write_register_d
  2877 ;; This function is called by:
  2878 ;;		_RF24_begin
  2879 ;;		_RF24N_begin_d
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text13
  2884  0037AA                     __ptext13:
  2885                           	opt stack 0
  2886  0037AA                     _RF24_setRetries:
  2887                           	opt stack 23
  2888                           
  2889                           ;incstack = 0
  2890                           ;RF24_setRetries@delay stored from wreg
  2891  0037AA  6E18               	movwf	RF24_setRetries@delay,c
  2892                           
  2893                           ;RF24_c.c: 1582: RF24_write_register_d(0x04,(delay&0xf)<<4 | (count&0xf)<<0);
  2894  0037AC  C015  F016         	movff	RF24_setRetries@count,??_RF24_setRetries
  2895  0037B0  0E0F               	movlw	15
  2896  0037B2  1616               	andwf	??_RF24_setRetries,f,c
  2897  0037B4  C018  F017         	movff	RF24_setRetries@delay,??_RF24_setRetries+1
  2898  0037B8  0E0F               	movlw	15
  2899  0037BA  1617               	andwf	??_RF24_setRetries+1,f,c
  2900  0037BC  3817               	swapf	??_RF24_setRetries+1,w,c
  2901  0037BE  0BF0               	andlw	240
  2902  0037C0  1016               	iorwf	??_RF24_setRetries,w,c
  2903  0037C2  6E12               	movwf	RF24_write_register_d@value,c
  2904  0037C4  0E04               	movlw	4
  2905  0037C6  ECF7  F01B         	call	_RF24_write_register_d
  2906  0037CA  0012               	return		;funcret
  2907  0037CC                     __end_of_RF24_setRetries:
  2908                           	opt stack 0
  2909                           tblptru	equ	0xFF8
  2910                           tblptrh	equ	0xFF7
  2911                           tblptrl	equ	0xFF6
  2912                           tablat	equ	0xFF5
  2913                           prodh	equ	0xFF4
  2914                           prodl	equ	0xFF3
  2915                           intcon	equ	0xFF2
  2916                           postinc0	equ	0xFEE
  2917                           wreg	equ	0xFE8
  2918                           postdec2	equ	0xFDD
  2919                           fsr2h	equ	0xFDA
  2920                           fsr2l	equ	0xFD9
  2921                           status	equ	0xFD8
  2922                           
  2923 ;; *************** function _RF24_setChannel *****************
  2924 ;; Defined at:
  2925 ;;		line 464 in file "../../../RF24_c/RF24_c.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  channel         1    wreg     unsigned char 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  channel         1   22[COMRAM] unsigned char 
  2930 ;;  max_channel     1   23[COMRAM] const unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;Total ram usage:        4 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    5
  2947 ;; This function calls:
  2948 ;;		_RF24_write_register_d
  2949 ;; This function is called by:
  2950 ;;		_RF24_begin
  2951 ;;		_RF24N_begin_d
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text14
  2956  003738                     __ptext14:
  2957                           	opt stack 0
  2958  003738                     _RF24_setChannel:
  2959                           	opt stack 23
  2960                           
  2961                           ;incstack = 0
  2962                           ;RF24_setChannel@channel stored from wreg
  2963  003738  6E17               	movwf	RF24_setChannel@channel,c
  2964                           
  2965                           ;RF24_c.c: 466: const uint8_t max_channel = 125;
  2966  00373A  0E7D               	movlw	125
  2967  00373C  6E18               	movwf	RF24_setChannel@max_channel,c
  2968                           
  2969                           ;RF24_c.c: 467: RF24_write_register_d(0x05,(channel<max_channel?channel:max_channel));
  2970  00373E  5018               	movf	RF24_setChannel@max_channel,w,c
  2971  003740  5C17               	subwf	RF24_setChannel@channel,w,c
  2972  003742  A0D8               	btfss	status,0,c
  2973  003744  D003               	goto	l424
  2974  003746  C018  F015         	movff	RF24_setChannel@max_channel,_RF24_setChannel$1915
  2975  00374A  D002               	goto	L2
  2976  00374C                     l424:
  2977  00374C  C017  F015         	movff	RF24_setChannel@channel,_RF24_setChannel$1915
  2978  003750                     L2:
  2979  003750  6A16               	clrf	_RF24_setChannel$1915+1,c
  2980  003752  C015  F012         	movff	_RF24_setChannel$1915,RF24_write_register_d@value
  2981  003756  0E05               	movlw	5
  2982  003758  ECF7  F01B         	call	_RF24_write_register_d
  2983  00375C  0012               	return		;funcret
  2984  00375E                     __end_of_RF24_setChannel:
  2985                           	opt stack 0
  2986                           tblptru	equ	0xFF8
  2987                           tblptrh	equ	0xFF7
  2988                           tblptrl	equ	0xFF6
  2989                           tablat	equ	0xFF5
  2990                           prodh	equ	0xFF4
  2991                           prodl	equ	0xFF3
  2992                           intcon	equ	0xFF2
  2993                           postinc0	equ	0xFEE
  2994                           wreg	equ	0xFE8
  2995                           postdec2	equ	0xFDD
  2996                           fsr2h	equ	0xFDA
  2997                           fsr2l	equ	0xFD9
  2998                           status	equ	0xFD8
  2999                           
  3000 ;; *************** function _RF24_openReadingPipe_d *****************
  3001 ;; Defined at:
  3002 ;;		line 1187 in file "../../../RF24_c/RF24_c.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  child           1    wreg     unsigned char 
  3005 ;;  address_        2   20[COMRAM] PTR const unsigned char 
  3006 ;;		 -> RF24N_multicastLevel@addr(5), RF24N_begin_d@addr(5), 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  child           1   30[COMRAM] unsigned char 
  3009 ;;  address         5   24[COMRAM] unsigned char [5]
  3010 ;;  i               1   29[COMRAM] unsigned char 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;Total ram usage:       11 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    5
  3027 ;; This function calls:
  3028 ;;		_RF24_read_register_d
  3029 ;;		_RF24_write_register_c_d
  3030 ;;		_RF24_write_register_d
  3031 ;;		_memcpy
  3032 ;; This function is called by:
  3033 ;;		_RF24N_begin_d
  3034 ;;		_RF24N_multicastLevel
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text15
  3039  0024B6                     __ptext15:
  3040                           	opt stack 0
  3041  0024B6                     _RF24_openReadingPipe_d:
  3042                           	opt stack 23
  3043                           
  3044                           ;incstack = 0
  3045                           ;RF24_openReadingPipe_d@child stored from wreg
  3046  0024B6  6E1F               	movwf	RF24_openReadingPipe_d@child,c
  3047                           
  3048                           ;RF24_c.c: 1189: uint8_t i;
  3049                           ;RF24_c.c: 1190: raddr_t address[5];
  3050                           ;RF24_c.c: 1191: for(i=0;i<5;i++)
  3051  0024B8  0E00               	movlw	0
  3052  0024BA  6E1E               	movwf	RF24_openReadingPipe_d@i,c
  3053  0024BC                     l5809:
  3054  0024BC  0E04               	movlw	4
  3055  0024BE  641E               	cpfsgt	RF24_openReadingPipe_d@i,c
  3056  0024C0  D001               	goto	l5813
  3057  0024C2  D01D               	goto	l5819
  3058  0024C4                     l5813:
  3059                           
  3060                           ;RF24_c.c: 1192: {
  3061                           ;RF24_c.c: 1193: address[i]=address_[4-i];
  3062  0024C4  501E               	movf	RF24_openReadingPipe_d@i,w,c
  3063  0024C6  6E17               	movwf	??_RF24_openReadingPipe_d& (0+255),c
  3064  0024C8  6A18               	clrf	(??_RF24_openReadingPipe_d+1)& (0+255),c
  3065  0024CA  1E17               	comf	??_RF24_openReadingPipe_d,f,c
  3066  0024CC  1E18               	comf	??_RF24_openReadingPipe_d+1,f,c
  3067  0024CE  4A17               	infsnz	??_RF24_openReadingPipe_d,f,c
  3068  0024D0  2A18               	incf	??_RF24_openReadingPipe_d+1,f,c
  3069  0024D2  0E04               	movlw	4
  3070  0024D4  2617               	addwf	??_RF24_openReadingPipe_d,f,c
  3071  0024D6  0E00               	movlw	0
  3072  0024D8  2218               	addwfc	??_RF24_openReadingPipe_d+1,f,c
  3073  0024DA  5017               	movf	??_RF24_openReadingPipe_d,w,c
  3074  0024DC  2415               	addwf	RF24_openReadingPipe_d@address_,w,c
  3075  0024DE  6ED9               	movwf	fsr2l,c
  3076  0024E0  5018               	movf	??_RF24_openReadingPipe_d+1,w,c
  3077  0024E2  2016               	addwfc	RF24_openReadingPipe_d@address_+1,w,c
  3078  0024E4  6EDA               	movwf	fsr2h,c
  3079  0024E6  501E               	movf	RF24_openReadingPipe_d@i,w,c
  3080  0024E8  0D01               	mullw	1
  3081  0024EA  0E19               	movlw	low RF24_openReadingPipe_d@address
  3082  0024EC  24F3               	addwf	prodl,w,c
  3083  0024EE  6EE9               	movwf	fsr0l,c
  3084  0024F0  0E00               	movlw	high RF24_openReadingPipe_d@address
  3085  0024F2  20F4               	addwfc	prodh,w,c
  3086  0024F4  6EEA               	movwf	fsr0h,c
  3087  0024F6  CFDF FFEF          	movff	indf2,indf0
  3088  0024FA  2A1E               	incf	RF24_openReadingPipe_d@i,f,c
  3089  0024FC  D7DF               	goto	l5809
  3090  0024FE                     l5819:
  3091                           
  3092                           ;RF24_c.c: 1194: }
  3093                           ;RF24_c.c: 1198: if (child == 0){
  3094  0024FE  501F               	movf	RF24_openReadingPipe_d@child,w,c
  3095  002500  A4D8               	btfss	status,2,c
  3096  002502  D00D               	goto	l5823
  3097                           
  3098                           ;RF24_c.c: 1199: memcpy(rf.pipe0_reading_address,address,rf.addr_width);
  3099  002504  0E49               	movlw	low (_rf+7)
  3100  002506  6E03               	movwf	memcpy@d1,c
  3101  002508  0E00               	movlw	high (_rf+7)
  3102  00250A  6E04               	movwf	memcpy@d1+1,c
  3103  00250C  0E19               	movlw	low RF24_openReadingPipe_d@address
  3104  00250E  6E05               	movwf	memcpy@s1,c
  3105  002510  0E00               	movlw	high RF24_openReadingPipe_d@address
  3106  002512  6E06               	movwf	memcpy@s1+1,c
  3107  002514  C04E  F007         	movff	_rf+12,memcpy@n
  3108  002518  6A08               	clrf	memcpy@n+1,c
  3109  00251A  EC55  F01A         	call	_memcpy	;wreg free
  3110  00251E                     l5823:
  3111                           
  3112                           ;RF24_c.c: 1200: }
  3113                           ;RF24_c.c: 1202: if (child <= 6)
  3114  00251E  0E07               	movlw	7
  3115  002520  601F               	cpfslt	RF24_openReadingPipe_d@child,c
  3116  002522  0012               	return	
  3117                           
  3118                           ;RF24_c.c: 1203: {
  3119                           ;RF24_c.c: 1205: if ( child < 2 )
  3120  002524  0E02               	movlw	2
  3121  002526  601F               	cpfslt	RF24_openReadingPipe_d@child,c
  3122  002528  D013               	goto	l5829
  3123                           
  3124                           ;RF24_c.c: 1206: RF24_write_register_c_d((*(&child_pipe[child])), (const uint8_t*)(addre
      +                          ss), rf.addr_width);
  3125  00252A  0E19               	movlw	low RF24_openReadingPipe_d@address
  3126  00252C  6E10               	movwf	RF24_write_register_c_d@buf,c
  3127  00252E  0E00               	movlw	high RF24_openReadingPipe_d@address
  3128  002530  6E11               	movwf	RF24_write_register_c_d@buf+1,c
  3129  002532  C04E  F012         	movff	_rf+12,RF24_write_register_c_d@len
  3130  002536  501F               	movf	RF24_openReadingPipe_d@child,w,c
  3131  002538  0D01               	mullw	1
  3132  00253A  0E07               	movlw	low _child_pipe
  3133  00253C  24F3               	addwf	prodl,w,c
  3134  00253E  6EF6               	movwf	tblptrl,c
  3135  002540  0E10               	movlw	high _child_pipe
  3136  002542  20F4               	addwfc	prodh,w,c
  3137  002544  6EF7               	movwf	tblptrh,c
  3138  002546                     	if	0	;There are less than 3 active tblptr bytes
  3139  002546                     	endif
  3140  002546  0008               	tblrd		*
  3141  002548  50F5               	movf	tablat,w,c
  3142  00254A  ECE3  F01A         	call	_RF24_write_register_c_d
  3143  00254E  D012               	goto	l5831
  3144  002550                     l5829:
  3145                           
  3146                           ;RF24_c.c: 1207: else
  3147                           ;RF24_c.c: 1208: RF24_write_register_c_d((*(&child_pipe[child])), (const uint8_t*)(addre
      +                          ss), 1);
  3148  002550  0E19               	movlw	low RF24_openReadingPipe_d@address
  3149  002552  6E10               	movwf	RF24_write_register_c_d@buf,c
  3150  002554  0E00               	movlw	high RF24_openReadingPipe_d@address
  3151  002556  6E11               	movwf	RF24_write_register_c_d@buf+1,c
  3152  002558  0E01               	movlw	1
  3153  00255A  6E12               	movwf	RF24_write_register_c_d@len,c
  3154  00255C  501F               	movf	RF24_openReadingPipe_d@child,w,c
  3155  00255E  0D01               	mullw	1
  3156  002560  0E07               	movlw	low _child_pipe
  3157  002562  24F3               	addwf	prodl,w,c
  3158  002564  6EF6               	movwf	tblptrl,c
  3159  002566  0E10               	movlw	high _child_pipe
  3160  002568  20F4               	addwfc	prodh,w,c
  3161  00256A  6EF7               	movwf	tblptrh,c
  3162  00256C                     	if	0	;There are less than 3 active tblptr bytes
  3163  00256C                     	endif
  3164  00256C  0008               	tblrd		*
  3165  00256E  50F5               	movf	tablat,w,c
  3166  002570  ECE3  F01A         	call	_RF24_write_register_c_d
  3167  002574                     l5831:
  3168                           
  3169                           ;RF24_c.c: 1210: RF24_write_register_d((*(&child_payload_size[child])),rf.payload_size);
  3170  002574  C047  F012         	movff	_rf+5,RF24_write_register_d@value
  3171  002578  501F               	movf	RF24_openReadingPipe_d@child,w,c
  3172  00257A  0D01               	mullw	1
  3173  00257C  0E01               	movlw	low _child_payload_size
  3174  00257E  24F3               	addwf	prodl,w,c
  3175  002580  6EF6               	movwf	tblptrl,c
  3176  002582  0E10               	movlw	high _child_payload_size
  3177  002584  20F4               	addwfc	prodh,w,c
  3178  002586  6EF7               	movwf	tblptrh,c
  3179  002588                     	if	0	;There are less than 3 active tblptr bytes
  3180  002588                     	endif
  3181  002588  0008               	tblrd		*
  3182  00258A  50F5               	movf	tablat,w,c
  3183  00258C  ECF7  F01B         	call	_RF24_write_register_d
  3184                           
  3185                           ;RF24_c.c: 1215: RF24_write_register_d(0x02,RF24_read_register_d(0x02) | (1<<((*(&child_
      +                          pipe_enable[child])))));
  3186  002590  501F               	movf	RF24_openReadingPipe_d@child,w,c
  3187  002592  0D01               	mullw	1
  3188  002594  0E0D               	movlw	low _child_pipe_enable
  3189  002596  24F3               	addwf	prodl,w,c
  3190  002598  6EF6               	movwf	tblptrl,c
  3191  00259A  0E10               	movlw	high _child_pipe_enable
  3192  00259C  20F4               	addwfc	prodh,w,c
  3193  00259E  6EF7               	movwf	tblptrh,c
  3194  0025A0                     	if	0	;There are less than 3 active tblptr bytes
  3195  0025A0                     	endif
  3196  0025A0  0008               	tblrd		*
  3197  0025A2  CFF5 F017          	movff	tablat,??_RF24_openReadingPipe_d
  3198  0025A6  0E01               	movlw	1
  3199  0025A8  6E18               	movwf	(??_RF24_openReadingPipe_d+1)& (0+255),c
  3200  0025AA  2A17               	incf	??_RF24_openReadingPipe_d,f,c
  3201  0025AC  D002               	goto	u7614
  3202  0025AE                     u7615:
  3203  0025AE  90D8               	bcf	status,0,c
  3204  0025B0  3618               	rlcf	??_RF24_openReadingPipe_d+1,f,c
  3205  0025B2                     u7614:
  3206  0025B2  2E17               	decfsz	??_RF24_openReadingPipe_d,f,c
  3207  0025B4  D7FC               	goto	u7615
  3208  0025B6  0E02               	movlw	2
  3209  0025B8  EC07  F01C         	call	_RF24_read_register_d
  3210  0025BC  1018               	iorwf	??_RF24_openReadingPipe_d+1,w,c
  3211  0025BE  6E12               	movwf	RF24_write_register_d@value,c
  3212  0025C0  0E02               	movlw	2
  3213  0025C2  ECF7  F01B         	call	_RF24_write_register_d
  3214  0025C6  0012               	return	
  3215  0025C8                     __end_of_RF24_openReadingPipe_d:
  3216                           	opt stack 0
  3217                           tblptru	equ	0xFF8
  3218                           tblptrh	equ	0xFF7
  3219                           tblptrl	equ	0xFF6
  3220                           tablat	equ	0xFF5
  3221                           prodh	equ	0xFF4
  3222                           prodl	equ	0xFF3
  3223                           intcon	equ	0xFF2
  3224                           indf0	equ	0xFEF
  3225                           postinc0	equ	0xFEE
  3226                           fsr0h	equ	0xFEA
  3227                           fsr0l	equ	0xFE9
  3228                           wreg	equ	0xFE8
  3229                           indf2	equ	0xFDF
  3230                           postdec2	equ	0xFDD
  3231                           fsr2h	equ	0xFDA
  3232                           fsr2l	equ	0xFD9
  3233                           status	equ	0xFD8
  3234                           
  3235 ;; *************** function _RF24_enableDynamicPayloads *****************
  3236 ;; Defined at:
  3237 ;;		line 1276 in file "../../../RF24_c/RF24_c.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;		None
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;		None
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;Total ram usage:        0 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    5
  3258 ;; This function calls:
  3259 ;;		_RF24_read_register_d
  3260 ;;		_RF24_write_register_d
  3261 ;; This function is called by:
  3262 ;;		_RF24N_begin_d
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text16
  3267  00375E                     __ptext16:
  3268                           	opt stack 0
  3269  00375E                     _RF24_enableDynamicPayloads:
  3270                           	opt stack 23
  3271                           
  3272                           ;RF24_c.c: 1281: RF24_write_register_d(0x1D,RF24_read_register_d(0x1D) | (1<<(2)) );
  3273                           
  3274                           ;incstack = 0
  3275  00375E  0E1D               	movlw	29
  3276  003760  EC07  F01C         	call	_RF24_read_register_d
  3277  003764  0904               	iorlw	4
  3278  003766  6E12               	movwf	RF24_write_register_d@value,c
  3279  003768  0E1D               	movlw	29
  3280  00376A  ECF7  F01B         	call	_RF24_write_register_d
  3281                           
  3282                           ;RF24_c.c: 1284: ;
  3283                           ;RF24_c.c: 1290: RF24_write_register_d(0x1C,RF24_read_register_d(0x1C) | (1<<(5)) | (1<<
      +                          (4)) | (1<<(3)) | (1<<(2)) | (1<<(1)) | (1<<(0)));
  3284  00376E  0E1C               	movlw	28
  3285  003770  EC07  F01C         	call	_RF24_read_register_d
  3286  003774  093F               	iorlw	63
  3287  003776  6E12               	movwf	RF24_write_register_d@value,c
  3288  003778  0E1C               	movlw	28
  3289  00377A  ECF7  F01B         	call	_RF24_write_register_d
  3290                           
  3291                           ;RF24_c.c: 1292: rf.dynamic_payloads_enabled = 1;
  3292  00377E  0E01               	movlw	1
  3293  003780  6E48               	movwf	_rf+6,c
  3294  003782  0012               	return		;funcret
  3295  003784                     __end_of_RF24_enableDynamicPayloads:
  3296                           	opt stack 0
  3297                           tblptru	equ	0xFF8
  3298                           tblptrh	equ	0xFF7
  3299                           tblptrl	equ	0xFF6
  3300                           tablat	equ	0xFF5
  3301                           prodh	equ	0xFF4
  3302                           prodl	equ	0xFF3
  3303                           intcon	equ	0xFF2
  3304                           indf0	equ	0xFEF
  3305                           postinc0	equ	0xFEE
  3306                           fsr0h	equ	0xFEA
  3307                           fsr0l	equ	0xFE9
  3308                           wreg	equ	0xFE8
  3309                           indf2	equ	0xFDF
  3310                           postdec2	equ	0xFDD
  3311                           fsr2h	equ	0xFDA
  3312                           fsr2l	equ	0xFD9
  3313                           status	equ	0xFD8
  3314                           
  3315 ;; *************** function _RF24N_setup_address *****************
  3316 ;; Defined at:
  3317 ;;		line 1225 in file "../../RF24Network_c.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;		None
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;  node_mask_ch    2   11[COMRAM] unsigned int 
  3322 ;;  parent_mask     2    9[COMRAM] unsigned int 
  3323 ;;  m               2    6[COMRAM] unsigned int 
  3324 ;;  i               2    4[COMRAM] unsigned int 
  3325 ;;  count           1    8[COMRAM] unsigned char 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;Total ram usage:       11 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    1
  3342 ;; This function calls:
  3343 ;;		Nothing
  3344 ;; This function is called by:
  3345 ;;		_RF24N_begin_d
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text17
  3350  0027A0                     __ptext17:
  3351                           	opt stack 0
  3352  0027A0                     _RF24N_setup_address:
  3353                           	opt stack 27
  3354                           
  3355                           ;RF24Network_c.c: 1228: uint16_t node_mask_check = 0xFFFF;
  3356                           
  3357                           ;incstack = 0
  3358  0027A0  680C               	setf	RF24N_setup_address@node_mask_check,c
  3359  0027A2  680D               	setf	RF24N_setup_address@node_mask_check+1,c
  3360                           
  3361                           ;RF24Network_c.c: 1230: uint8_t count = 0;
  3362  0027A4  0E00               	movlw	0
  3363  0027A6  6E09               	movwf	RF24N_setup_address@count,c
  3364                           
  3365                           ;RF24Network_c.c: 1232: uint16_t i;
  3366                           ;RF24Network_c.c: 1233: uint16_t m;
  3367                           ;RF24Network_c.c: 1234: uint16_t parent_mask;
  3368                           ;RF24Network_c.c: 1236: while ( rn.node_address & node_mask_check ){
  3369  0027A8  D00A               	goto	l2455
  3370  0027AA                     l2453:
  3371                           
  3372                           ;RF24Network_c.c: 1237: node_mask_check <<= 3;
  3373  0027AA  90D8               	bcf	status,0,c
  3374  0027AC  360C               	rlcf	RF24N_setup_address@node_mask_check,f,c
  3375  0027AE  360D               	rlcf	RF24N_setup_address@node_mask_check+1,f,c
  3376  0027B0  90D8               	bcf	status,0,c
  3377  0027B2  360C               	rlcf	RF24N_setup_address@node_mask_check,f,c
  3378  0027B4  360D               	rlcf	RF24N_setup_address@node_mask_check+1,f,c
  3379  0027B6  90D8               	bcf	status,0,c
  3380  0027B8  360C               	rlcf	RF24N_setup_address@node_mask_check,f,c
  3381  0027BA  360D               	rlcf	RF24N_setup_address@node_mask_check+1,f,c
  3382                           
  3383                           ;RF24Network_c.c: 1239: count++;
  3384  0027BC  2A09               	incf	RF24N_setup_address@count,f,c
  3385  0027BE                     l2455:
  3386  0027BE  EE20  F0D9         	lfsr	2,_rn+48
  3387  0027C2  CFDE F003          	movff	postinc2,??_RF24N_setup_address
  3388  0027C6  CFDD F004          	movff	postdec2,??_RF24N_setup_address+1
  3389  0027CA  500C               	movf	RF24N_setup_address@node_mask_check,w,c
  3390  0027CC  1603               	andwf	??_RF24N_setup_address,f,c
  3391  0027CE  500D               	movf	RF24N_setup_address@node_mask_check+1,w,c
  3392  0027D0  1604               	andwf	??_RF24N_setup_address+1,f,c
  3393  0027D2  5003               	movf	??_RF24N_setup_address,w,c
  3394  0027D4  1004               	iorwf	??_RF24N_setup_address+1,w,c
  3395  0027D6  A4D8               	btfss	status,2,c
  3396  0027D8  D7E8               	goto	l2453
  3397                           
  3398                           ;RF24Network_c.c: 1240: }
  3399                           ;RF24Network_c.c: 1241: rn.multicast_level = count;
  3400  0027DA  EE20  F0D8         	lfsr	2,_rn+47
  3401  0027DE  C009  FFDF         	movff	RF24N_setup_address@count,indf2
  3402                           
  3403                           ;RF24Network_c.c: 1246: rn.node_mask = ~ node_mask_check;
  3404  0027E2  1C0C               	comf	RF24N_setup_address@node_mask_check,w,c
  3405  0027E4  6E03               	movwf	??_RF24N_setup_address& (0+255),c
  3406  0027E6  1C0D               	comf	RF24N_setup_address@node_mask_check+1,w,c
  3407  0027E8  6E04               	movwf	(??_RF24N_setup_address+1)& (0+255),c
  3408  0027EA  C003  F0E1         	movff	??_RF24N_setup_address,_rn+56
  3409  0027EE  C004  F0E2         	movff	??_RF24N_setup_address+1,_rn+57
  3410                           
  3411                           ;RF24Network_c.c: 1249: parent_mask = rn.node_mask >> 3;
  3412  0027F2  EE20  F0E1         	lfsr	2,_rn+56
  3413  0027F6  CFDE F003          	movff	postinc2,??_RF24N_setup_address
  3414  0027FA  CFDD F004          	movff	postdec2,??_RF24N_setup_address+1
  3415  0027FE  90D8               	bcf	status,0,c
  3416  002800  3204               	rrcf	??_RF24N_setup_address+1,f,c
  3417  002802  3203               	rrcf	??_RF24N_setup_address,f,c
  3418  002804  90D8               	bcf	status,0,c
  3419  002806  3204               	rrcf	??_RF24N_setup_address+1,f,c
  3420  002808  3203               	rrcf	??_RF24N_setup_address,f,c
  3421  00280A  90D8               	bcf	status,0,c
  3422  00280C  3204               	rrcf	??_RF24N_setup_address+1,f,c
  3423  00280E  3203               	rrcf	??_RF24N_setup_address,f,c
  3424  002810  C003  F00A         	movff	??_RF24N_setup_address,RF24N_setup_address@parent_mask
  3425  002814  C004  F00B         	movff	??_RF24N_setup_address+1,RF24N_setup_address@parent_mask+1
  3426                           
  3427                           ;RF24Network_c.c: 1252: rn.parent_node = rn.node_address & parent_mask;
  3428  002818  EE20  F0D9         	lfsr	2,_rn+48
  3429  00281C  CFDE F003          	movff	postinc2,??_RF24N_setup_address
  3430  002820  CFDD F004          	movff	postdec2,??_RF24N_setup_address+1
  3431  002824  500A               	movf	RF24N_setup_address@parent_mask,w,c
  3432  002826  1603               	andwf	??_RF24N_setup_address,f,c
  3433  002828  500B               	movf	RF24N_setup_address@parent_mask+1,w,c
  3434  00282A  1604               	andwf	??_RF24N_setup_address+1,f,c
  3435  00282C  C003  F0DE         	movff	??_RF24N_setup_address,_rn+53
  3436  002830  C004  F0DF         	movff	??_RF24N_setup_address+1,_rn+54
  3437                           
  3438                           ;RF24Network_c.c: 1255: i = rn.node_address;
  3439  002834  C0D9  F005         	movff	_rn+48,RF24N_setup_address@i
  3440  002838  C0DA  F006         	movff	_rn+49,RF24N_setup_address@i+1
  3441                           
  3442                           ;RF24Network_c.c: 1256: m = parent_mask;
  3443  00283C  C00A  F007         	movff	RF24N_setup_address@parent_mask,RF24N_setup_address@m
  3444  002840  C00B  F008         	movff	RF24N_setup_address@parent_mask+1,RF24N_setup_address@m+1
  3445                           
  3446                           ;RF24Network_c.c: 1257: while (m)
  3447  002844  D012               	goto	l2471
  3448  002846                     l2469:
  3449                           
  3450                           ;RF24Network_c.c: 1258: {
  3451                           ;RF24Network_c.c: 1259: i >>= 3;
  3452  002846  90D8               	bcf	status,0,c
  3453  002848  3206               	rrcf	RF24N_setup_address@i+1,f,c
  3454  00284A  3205               	rrcf	RF24N_setup_address@i,f,c
  3455  00284C  90D8               	bcf	status,0,c
  3456  00284E  3206               	rrcf	RF24N_setup_address@i+1,f,c
  3457  002850  3205               	rrcf	RF24N_setup_address@i,f,c
  3458  002852  90D8               	bcf	status,0,c
  3459  002854  3206               	rrcf	RF24N_setup_address@i+1,f,c
  3460  002856  3205               	rrcf	RF24N_setup_address@i,f,c
  3461                           
  3462                           ;RF24Network_c.c: 1260: m >>= 3;
  3463  002858  90D8               	bcf	status,0,c
  3464  00285A  3208               	rrcf	RF24N_setup_address@m+1,f,c
  3465  00285C  3207               	rrcf	RF24N_setup_address@m,f,c
  3466  00285E  90D8               	bcf	status,0,c
  3467  002860  3208               	rrcf	RF24N_setup_address@m+1,f,c
  3468  002862  3207               	rrcf	RF24N_setup_address@m,f,c
  3469  002864  90D8               	bcf	status,0,c
  3470  002866  3208               	rrcf	RF24N_setup_address@m+1,f,c
  3471  002868  3207               	rrcf	RF24N_setup_address@m,f,c
  3472  00286A                     l2471:
  3473  00286A  5007               	movf	RF24N_setup_address@m,w,c
  3474  00286C  1008               	iorwf	RF24N_setup_address@m+1,w,c
  3475  00286E  A4D8               	btfss	status,2,c
  3476  002870  D7EA               	goto	l2469
  3477                           
  3478                           ;RF24Network_c.c: 1261: }
  3479                           ;RF24Network_c.c: 1262: rn.parent_pipe = i;
  3480  002872  EE20  F0E0         	lfsr	2,_rn+55
  3481  002876  C005  FFDF         	movff	RF24N_setup_address@i,indf2
  3482  00287A  0012               	return		;funcret
  3483  00287C                     __end_of_RF24N_setup_address:
  3484                           	opt stack 0
  3485                           tblptru	equ	0xFF8
  3486                           tblptrh	equ	0xFF7
  3487                           tblptrl	equ	0xFF6
  3488                           tablat	equ	0xFF5
  3489                           prodh	equ	0xFF4
  3490                           prodl	equ	0xFF3
  3491                           intcon	equ	0xFF2
  3492                           indf0	equ	0xFEF
  3493                           postinc0	equ	0xFEE
  3494                           fsr0h	equ	0xFEA
  3495                           fsr0l	equ	0xFE9
  3496                           wreg	equ	0xFE8
  3497                           indf2	equ	0xFDF
  3498                           postinc2	equ	0xFDE
  3499                           postdec2	equ	0xFDD
  3500                           fsr2h	equ	0xFDA
  3501                           fsr2l	equ	0xFD9
  3502                           status	equ	0xFD8
  3503                           
  3504 ;; *************** function _loop *****************
  3505 ;; Defined at:
  3506 ;;		line 50 in file "helloworld_rx.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;		None
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  payload         8   48[COMRAM] struct .
  3511 ;;  header          8   40[COMRAM] struct .
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;Total ram usage:       16 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:   11
  3528 ;; This function calls:
  3529 ;;		_RF24N_available
  3530 ;;		_RF24N_read
  3531 ;;		_RF24N_update
  3532 ;;		_Serial_print
  3533 ;;		_Serial_println
  3534 ;;		_itoa_
  3535 ;; This function is called by:
  3536 ;;		_main
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text18
  3541  002CA0                     __ptext18:
  3542                           	opt stack 0
  3543  002CA0                     _loop:
  3544                           	opt stack 19
  3545                           
  3546                           ;helloworld_rx.c: 52: RF24N_update();
  3547                           
  3548                           ;incstack = 0
  3549  002CA0  ECE5  F00A         	call	_RF24N_update	;wreg free
  3550                           
  3551                           ;helloworld_rx.c: 55: while ( RF24N_available() ) {
  3552  002CA4  D03A               	goto	l6225
  3553  002CA6                     l6215:
  3554                           
  3555                           ;helloworld_rx.c: 57: RF24NetworkHeader header;
  3556                           ;helloworld_rx.c: 58: payload_t payload;
  3557                           ;helloworld_rx.c: 59: RF24N_read( &header,&payload,sizeof(payload));
  3558  002CA6  0E29               	movlw	low loop@header
  3559  002CA8  6E0F               	movwf	RF24N_read@header,c
  3560  002CAA  0E00               	movlw	high loop@header
  3561  002CAC  6E10               	movwf	RF24N_read@header+1,c
  3562  002CAE  0E31               	movlw	low loop@payload
  3563  002CB0  6E11               	movwf	RF24N_read@message,c
  3564  002CB2  0E00               	movlw	high loop@payload
  3565  002CB4  6E12               	movwf	RF24N_read@message+1,c
  3566  002CB6  0E00               	movlw	0
  3567  002CB8  6E14               	movwf	RF24N_read@maxlen+1,c
  3568  002CBA  0E08               	movlw	8
  3569  002CBC  6E13               	movwf	RF24N_read@maxlen,c
  3570  002CBE  EC3B  F011         	call	_RF24N_read	;wreg free
  3571                           
  3572                           ;helloworld_rx.c: 60: Serial_print("Received packet #");
  3573  002CC2  0E3B               	movlw	low STR_2
  3574  002CC4  6E21               	movwf	Serial_print@val,c
  3575  002CC6  0E10               	movlw	high STR_2
  3576  002CC8  6E22               	movwf	Serial_print@val+1,c
  3577  002CCA  EC51  F017         	call	_Serial_print	;wreg free
  3578                           
  3579                           ;helloworld_rx.c: 61: Serial_print(itoa_(payload.counter));
  3580  002CCE  C035  F01D         	movff	loop@payload+4,itoa_@val
  3581  002CD2  C036  F01E         	movff	loop@payload+5,itoa_@val+1
  3582  002CD6  C037  F01F         	movff	loop@payload+6,itoa_@val+2
  3583  002CDA  C038  F020         	movff	loop@payload+7,itoa_@val+3
  3584  002CDE  EC46  F01B         	call	_itoa_	;wreg free
  3585  002CE2  C01D  F021         	movff	?_itoa_,Serial_print@val
  3586  002CE6  C01E  F022         	movff	?_itoa_+1,Serial_print@val+1
  3587  002CEA  EC51  F017         	call	_Serial_print	;wreg free
  3588                           
  3589                           ;helloworld_rx.c: 62: Serial_print(" at ");
  3590  002CEE  0E4D               	movlw	low STR_3
  3591  002CF0  6E21               	movwf	Serial_print@val,c
  3592  002CF2  0E10               	movlw	high STR_3
  3593  002CF4  6E22               	movwf	Serial_print@val+1,c
  3594  002CF6  EC51  F017         	call	_Serial_print	;wreg free
  3595                           
  3596                           ;helloworld_rx.c: 63: Serial_println(itoa_(payload.ms));
  3597  002CFA  C031  F01D         	movff	loop@payload,itoa_@val
  3598  002CFE  C032  F01E         	movff	loop@payload+1,itoa_@val+1
  3599  002D02  C033  F01F         	movff	loop@payload+2,itoa_@val+2
  3600  002D06  C034  F020         	movff	loop@payload+3,itoa_@val+3
  3601  002D0A  EC46  F01B         	call	_itoa_	;wreg free
  3602  002D0E  C01D  F027         	movff	?_itoa_,Serial_println@val
  3603  002D12  C01E  F028         	movff	?_itoa_+1,Serial_println@val+1
  3604  002D16  EC31  F01C         	call	_Serial_println	;wreg free
  3605  002D1A                     l6225:
  3606  002D1A  ECE6  F01B         	call	_RF24N_available	;wreg free
  3607  002D1E  0900               	iorlw	0
  3608  002D20  B4D8               	btfsc	status,2,c
  3609  002D22  0012               	return	
  3610  002D24  D7C0               	goto	l6215
  3611  002D26                     __end_of_loop:
  3612                           	opt stack 0
  3613                           tblptru	equ	0xFF8
  3614                           tblptrh	equ	0xFF7
  3615                           tblptrl	equ	0xFF6
  3616                           tablat	equ	0xFF5
  3617                           prodh	equ	0xFF4
  3618                           prodl	equ	0xFF3
  3619                           intcon	equ	0xFF2
  3620                           indf0	equ	0xFEF
  3621                           postinc0	equ	0xFEE
  3622                           fsr0h	equ	0xFEA
  3623                           fsr0l	equ	0xFE9
  3624                           wreg	equ	0xFE8
  3625                           indf2	equ	0xFDF
  3626                           postinc2	equ	0xFDE
  3627                           postdec2	equ	0xFDD
  3628                           fsr2h	equ	0xFDA
  3629                           fsr2l	equ	0xFD9
  3630                           status	equ	0xFD8
  3631                           
  3632 ;; *************** function _itoa_ *****************
  3633 ;; Defined at:
  3634 ;;		line 104 in file "serial.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  val             4   28[COMRAM] unsigned long 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;		None
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  2   28[COMRAM] PTR const unsigned char 
  3641 ;; Registers used:
  3642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;Total ram usage:        4 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    3
  3655 ;; This function calls:
  3656 ;;		_ultoa
  3657 ;; This function is called by:
  3658 ;;		_loop
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text19
  3663  00368C                     __ptext19:
  3664                           	opt stack 0
  3665  00368C                     _itoa_:
  3666                           	opt stack 26
  3667                           
  3668                           ;serial.c: 107: ultoa(buff,val,10);
  3669                           
  3670                           ;incstack = 0
  3671  00368C  0E58               	movlw	low _buff
  3672  00368E  6E10               	movwf	ultoa@buf,c
  3673  003690  0E00               	movlw	high _buff
  3674  003692  6E11               	movwf	ultoa@buf+1,c
  3675  003694  C01D  F012         	movff	itoa_@val,ultoa@val
  3676  003698  C01E  F013         	movff	itoa_@val+1,ultoa@val+1
  3677  00369C  C01F  F014         	movff	itoa_@val+2,ultoa@val+2
  3678  0036A0  C020  F015         	movff	itoa_@val+3,ultoa@val+3
  3679  0036A4  0E00               	movlw	0
  3680  0036A6  6E17               	movwf	ultoa@base+1,c
  3681  0036A8  0E0A               	movlw	10
  3682  0036AA  6E16               	movwf	ultoa@base,c
  3683  0036AC  ECE4  F012         	call	_ultoa	;wreg free
  3684                           
  3685                           ;serial.c: 111: return buff;
  3686  0036B0  0E58               	movlw	low _buff
  3687  0036B2  6E1D               	movwf	?_itoa_,c
  3688  0036B4  0E00               	movlw	high _buff
  3689  0036B6  6E1E               	movwf	?_itoa_+1,c
  3690  0036B8  0012               	return	
  3691  0036BA                     __end_of_itoa_:
  3692                           	opt stack 0
  3693                           tblptru	equ	0xFF8
  3694                           tblptrh	equ	0xFF7
  3695                           tblptrl	equ	0xFF6
  3696                           tablat	equ	0xFF5
  3697                           prodh	equ	0xFF4
  3698                           prodl	equ	0xFF3
  3699                           intcon	equ	0xFF2
  3700                           indf0	equ	0xFEF
  3701                           postinc0	equ	0xFEE
  3702                           fsr0h	equ	0xFEA
  3703                           fsr0l	equ	0xFE9
  3704                           wreg	equ	0xFE8
  3705                           indf2	equ	0xFDF
  3706                           postinc2	equ	0xFDE
  3707                           postdec2	equ	0xFDD
  3708                           fsr2h	equ	0xFDA
  3709                           fsr2l	equ	0xFD9
  3710                           status	equ	0xFD8
  3711                           
  3712 ;; *************** function _ultoa *****************
  3713 ;; Defined at:
  3714 ;;		line 32 in file "/opt/microchip/xc8/v1.36/sources/common/ltoa.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  buf             2   15[COMRAM] PTR unsigned char 
  3717 ;;		 -> buff(10), 
  3718 ;;  val             4   17[COMRAM] unsigned long 
  3719 ;;  base            2   21[COMRAM] int 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  v               4   23[COMRAM] unsigned long 
  3722 ;;  c               1   27[COMRAM] unsigned char 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  2   15[COMRAM] PTR unsigned char 
  3725 ;; Registers used:
  3726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3732 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;Total ram usage:       13 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    2
  3739 ;; This function calls:
  3740 ;;		___lldiv
  3741 ;;		___llmod
  3742 ;; This function is called by:
  3743 ;;		_itoa_
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text20
  3748  0025C8                     __ptext20:
  3749                           	opt stack 0
  3750  0025C8                     _ultoa:
  3751                           	opt stack 26
  3752                           
  3753                           ;incstack = 0
  3754  0025C8  C012  F018         	movff	ultoa@val,ultoa@v
  3755  0025CC  C013  F019         	movff	ultoa@val+1,ultoa@v+1
  3756  0025D0  C014  F01A         	movff	ultoa@val+2,ultoa@v+2
  3757  0025D4  C015  F01B         	movff	ultoa@val+3,ultoa@v+3
  3758  0025D8                     l4125:
  3759  0025D8  C018  F003         	movff	ultoa@v,___lldiv@dividend
  3760  0025DC  C019  F004         	movff	ultoa@v+1,___lldiv@dividend+1
  3761  0025E0  C01A  F005         	movff	ultoa@v+2,___lldiv@dividend+2
  3762  0025E4  C01B  F006         	movff	ultoa@v+3,___lldiv@dividend+3
  3763  0025E8  C016  F007         	movff	ultoa@base,___lldiv@divisor
  3764  0025EC  C017  F008         	movff	ultoa@base+1,___lldiv@divisor+1
  3765  0025F0  0E00               	movlw	0
  3766  0025F2  BE08               	btfsc	___lldiv@divisor+1,7,c
  3767  0025F4  0EFF               	movlw	-1
  3768  0025F6  6E09               	movwf	___lldiv@divisor+2,c
  3769  0025F8  6E0A               	movwf	___lldiv@divisor+3,c
  3770  0025FA  EC93  F016         	call	___lldiv	;wreg free
  3771  0025FE  C003  F018         	movff	?___lldiv,ultoa@v
  3772  002602  C004  F019         	movff	?___lldiv+1,ultoa@v+1
  3773  002606  C005  F01A         	movff	?___lldiv+2,ultoa@v+2
  3774  00260A  C006  F01B         	movff	?___lldiv+3,ultoa@v+3
  3775  00260E  4A10               	infsnz	ultoa@buf,f,c
  3776  002610  2A11               	incf	ultoa@buf+1,f,c
  3777  002612  5018               	movf	ultoa@v,w,c
  3778  002614  1019               	iorwf	ultoa@v+1,w,c
  3779  002616  101A               	iorwf	ultoa@v+2,w,c
  3780  002618  101B               	iorwf	ultoa@v+3,w,c
  3781  00261A  A4D8               	btfss	status,2,c
  3782  00261C  D7DD               	goto	l4125
  3783  00261E  C010  FFD9         	movff	ultoa@buf,fsr2l
  3784  002622  C011  FFDA         	movff	ultoa@buf+1,fsr2h
  3785  002626  0E00               	movlw	0
  3786  002628  6EDF               	movwf	indf2,c
  3787  00262A  0610               	decf	ultoa@buf,f,c
  3788  00262C  A0D8               	btfss	status,0,c
  3789  00262E  0611               	decf	ultoa@buf+1,f,c
  3790  002630                     l4135:
  3791  002630  C012  F003         	movff	ultoa@val,___llmod@dividend
  3792  002634  C013  F004         	movff	ultoa@val+1,___llmod@dividend+1
  3793  002638  C014  F005         	movff	ultoa@val+2,___llmod@dividend+2
  3794  00263C  C015  F006         	movff	ultoa@val+3,___llmod@dividend+3
  3795  002640  C016  F007         	movff	ultoa@base,___llmod@divisor
  3796  002644  C017  F008         	movff	ultoa@base+1,___llmod@divisor+1
  3797  002648  0E00               	movlw	0
  3798  00264A  BE08               	btfsc	___llmod@divisor+1,7,c
  3799  00264C  0EFF               	movlw	-1
  3800  00264E  6E09               	movwf	___llmod@divisor+2,c
  3801  002650  6E0A               	movwf	___llmod@divisor+3,c
  3802  002652  ECFA  F017         	call	___llmod	;wreg free
  3803  002656  5003               	movf	?___llmod,w,c
  3804  002658  6E1C               	movwf	ultoa@c,c
  3805  00265A  C012  F003         	movff	ultoa@val,___lldiv@dividend
  3806  00265E  C013  F004         	movff	ultoa@val+1,___lldiv@dividend+1
  3807  002662  C014  F005         	movff	ultoa@val+2,___lldiv@dividend+2
  3808  002666  C015  F006         	movff	ultoa@val+3,___lldiv@dividend+3
  3809  00266A  C016  F007         	movff	ultoa@base,___lldiv@divisor
  3810  00266E  C017  F008         	movff	ultoa@base+1,___lldiv@divisor+1
  3811  002672  0E00               	movlw	0
  3812  002674  BE08               	btfsc	___lldiv@divisor+1,7,c
  3813  002676  0EFF               	movlw	-1
  3814  002678  6E09               	movwf	___lldiv@divisor+2,c
  3815  00267A  6E0A               	movwf	___lldiv@divisor+3,c
  3816  00267C  EC93  F016         	call	___lldiv	;wreg free
  3817  002680  C003  F012         	movff	?___lldiv,ultoa@val
  3818  002684  C004  F013         	movff	?___lldiv+1,ultoa@val+1
  3819  002688  C005  F014         	movff	?___lldiv+2,ultoa@val+2
  3820  00268C  C006  F015         	movff	?___lldiv+3,ultoa@val+3
  3821  002690  0E09               	movlw	9
  3822  002692  641C               	cpfsgt	ultoa@c,c
  3823  002694  D002               	goto	l1416
  3824  002696  0E07               	movlw	7
  3825  002698  261C               	addwf	ultoa@c,f,c
  3826  00269A                     l1416:
  3827  00269A  0E30               	movlw	48
  3828  00269C  261C               	addwf	ultoa@c,f,c
  3829  00269E  C010  FFD9         	movff	ultoa@buf,fsr2l
  3830  0026A2  C011  FFDA         	movff	ultoa@buf+1,fsr2h
  3831  0026A6  C01C  FFDF         	movff	ultoa@c,indf2
  3832  0026AA  0610               	decf	ultoa@buf,f,c
  3833  0026AC  A0D8               	btfss	status,0,c
  3834  0026AE  0611               	decf	ultoa@buf+1,f,c
  3835  0026B0  5012               	movf	ultoa@val,w,c
  3836  0026B2  1013               	iorwf	ultoa@val+1,w,c
  3837  0026B4  1014               	iorwf	ultoa@val+2,w,c
  3838  0026B6  1015               	iorwf	ultoa@val+3,w,c
  3839  0026B8  B4D8               	btfsc	status,2,c
  3840  0026BA  0012               	return	
  3841  0026BC  D7B9               	goto	l4135
  3842  0026BE                     __end_of_ultoa:
  3843                           	opt stack 0
  3844                           tblptru	equ	0xFF8
  3845                           tblptrh	equ	0xFF7
  3846                           tblptrl	equ	0xFF6
  3847                           tablat	equ	0xFF5
  3848                           prodh	equ	0xFF4
  3849                           prodl	equ	0xFF3
  3850                           intcon	equ	0xFF2
  3851                           indf0	equ	0xFEF
  3852                           postinc0	equ	0xFEE
  3853                           fsr0h	equ	0xFEA
  3854                           fsr0l	equ	0xFE9
  3855                           wreg	equ	0xFE8
  3856                           indf2	equ	0xFDF
  3857                           postinc2	equ	0xFDE
  3858                           postdec2	equ	0xFDD
  3859                           fsr2h	equ	0xFDA
  3860                           fsr2l	equ	0xFD9
  3861                           status	equ	0xFD8
  3862                           
  3863 ;; *************** function ___llmod *****************
  3864 ;; Defined at:
  3865 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/llmod.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  dividend        4    2[COMRAM] unsigned long 
  3868 ;;  divisor         4    6[COMRAM] unsigned long 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  counter         1   10[COMRAM] unsigned char 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  4    2[COMRAM] unsigned long 
  3873 ;; Registers used:
  3874 ;;		wreg, status,2, status,0
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3880 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3883 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;Total ram usage:        9 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; Hardware stack levels required when called:    1
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_ultoa
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           	psect	text21
  3895  002FF4                     __ptext21:
  3896                           	opt stack 0
  3897  002FF4                     ___llmod:
  3898                           	opt stack 26
  3899                           
  3900                           ;incstack = 0
  3901  002FF4  5007               	movf	___llmod@divisor,w,c
  3902  002FF6  1008               	iorwf	___llmod@divisor+1,w,c
  3903  002FF8  1009               	iorwf	___llmod@divisor+2,w,c
  3904  002FFA  100A               	iorwf	___llmod@divisor+3,w,c
  3905  002FFC  B4D8               	btfsc	status,2,c
  3906  002FFE  D024               	goto	l1369
  3907  003000  0E01               	movlw	1
  3908  003002  6E0B               	movwf	___llmod@counter,c
  3909  003004  D006               	goto	l4083
  3910  003006                     l4081:
  3911  003006  90D8               	bcf	status,0,c
  3912  003008  3607               	rlcf	___llmod@divisor,f,c
  3913  00300A  3608               	rlcf	___llmod@divisor+1,f,c
  3914  00300C  3609               	rlcf	___llmod@divisor+2,f,c
  3915  00300E  360A               	rlcf	___llmod@divisor+3,f,c
  3916  003010  2A0B               	incf	___llmod@counter,f,c
  3917  003012                     l4083:
  3918  003012  AE0A               	btfss	___llmod@divisor+3,7,c
  3919  003014  D7F8               	goto	l4081
  3920  003016                     l4085:
  3921  003016  5007               	movf	___llmod@divisor,w,c
  3922  003018  5C03               	subwf	___llmod@dividend,w,c
  3923  00301A  5008               	movf	___llmod@divisor+1,w,c
  3924  00301C  5804               	subwfb	___llmod@dividend+1,w,c
  3925  00301E  5009               	movf	___llmod@divisor+2,w,c
  3926  003020  5805               	subwfb	___llmod@dividend+2,w,c
  3927  003022  500A               	movf	___llmod@divisor+3,w,c
  3928  003024  5806               	subwfb	___llmod@dividend+3,w,c
  3929  003026  A0D8               	btfss	status,0,c
  3930  003028  D008               	goto	l4089
  3931  00302A  5007               	movf	___llmod@divisor,w,c
  3932  00302C  5E03               	subwf	___llmod@dividend,f,c
  3933  00302E  5008               	movf	___llmod@divisor+1,w,c
  3934  003030  5A04               	subwfb	___llmod@dividend+1,f,c
  3935  003032  5009               	movf	___llmod@divisor+2,w,c
  3936  003034  5A05               	subwfb	___llmod@dividend+2,f,c
  3937  003036  500A               	movf	___llmod@divisor+3,w,c
  3938  003038  5A06               	subwfb	___llmod@dividend+3,f,c
  3939  00303A                     l4089:
  3940  00303A  90D8               	bcf	status,0,c
  3941  00303C  320A               	rrcf	___llmod@divisor+3,f,c
  3942  00303E  3209               	rrcf	___llmod@divisor+2,f,c
  3943  003040  3208               	rrcf	___llmod@divisor+1,f,c
  3944  003042  3207               	rrcf	___llmod@divisor,f,c
  3945  003044  2E0B               	decfsz	___llmod@counter,f,c
  3946  003046  D7E7               	goto	l4085
  3947  003048                     l1369:
  3948  003048  C003  F003         	movff	___llmod@dividend,?___llmod
  3949  00304C  C004  F004         	movff	___llmod@dividend+1,?___llmod+1
  3950  003050  C005  F005         	movff	___llmod@dividend+2,?___llmod+2
  3951  003054  C006  F006         	movff	___llmod@dividend+3,?___llmod+3
  3952  003058  0012               	return		;funcret
  3953  00305A                     __end_of___llmod:
  3954                           	opt stack 0
  3955                           tblptru	equ	0xFF8
  3956                           tblptrh	equ	0xFF7
  3957                           tblptrl	equ	0xFF6
  3958                           tablat	equ	0xFF5
  3959                           prodh	equ	0xFF4
  3960                           prodl	equ	0xFF3
  3961                           intcon	equ	0xFF2
  3962                           indf0	equ	0xFEF
  3963                           postinc0	equ	0xFEE
  3964                           fsr0h	equ	0xFEA
  3965                           fsr0l	equ	0xFE9
  3966                           wreg	equ	0xFE8
  3967                           indf2	equ	0xFDF
  3968                           postinc2	equ	0xFDE
  3969                           postdec2	equ	0xFDD
  3970                           fsr2h	equ	0xFDA
  3971                           fsr2l	equ	0xFD9
  3972                           status	equ	0xFD8
  3973                           
  3974 ;; *************** function ___lldiv *****************
  3975 ;; Defined at:
  3976 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lldiv.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  dividend        4    2[COMRAM] unsigned long 
  3979 ;;  divisor         4    6[COMRAM] unsigned long 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  quotient        4   10[COMRAM] unsigned long 
  3982 ;;  counter         1   14[COMRAM] unsigned char 
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  4    2[COMRAM] unsigned long 
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3992 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;Total ram usage:       13 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    1
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		_Serial_begin
  4003 ;;		_ultoa
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text22
  4008  002D26                     __ptext22:
  4009                           	opt stack 0
  4010  002D26                     ___lldiv:
  4011                           	opt stack 27
  4012                           
  4013                           ;incstack = 0
  4014  002D26  0E00               	movlw	0
  4015  002D28  6E0B               	movwf	___lldiv@quotient,c
  4016  002D2A  0E00               	movlw	0
  4017  002D2C  6E0C               	movwf	___lldiv@quotient+1,c
  4018  002D2E  0E00               	movlw	0
  4019  002D30  6E0D               	movwf	___lldiv@quotient+2,c
  4020  002D32  0E00               	movlw	0
  4021  002D34  6E0E               	movwf	___lldiv@quotient+3,c
  4022  002D36  5007               	movf	___lldiv@divisor,w,c
  4023  002D38  1008               	iorwf	___lldiv@divisor+1,w,c
  4024  002D3A  1009               	iorwf	___lldiv@divisor+2,w,c
  4025  002D3C  100A               	iorwf	___lldiv@divisor+3,w,c
  4026  002D3E  B4D8               	btfsc	status,2,c
  4027  002D40  D02A               	goto	l1359
  4028  002D42  0E01               	movlw	1
  4029  002D44  6E0F               	movwf	___lldiv@counter,c
  4030  002D46  D006               	goto	l4063
  4031  002D48                     l4061:
  4032  002D48  90D8               	bcf	status,0,c
  4033  002D4A  3607               	rlcf	___lldiv@divisor,f,c
  4034  002D4C  3608               	rlcf	___lldiv@divisor+1,f,c
  4035  002D4E  3609               	rlcf	___lldiv@divisor+2,f,c
  4036  002D50  360A               	rlcf	___lldiv@divisor+3,f,c
  4037  002D52  2A0F               	incf	___lldiv@counter,f,c
  4038  002D54                     l4063:
  4039  002D54  AE0A               	btfss	___lldiv@divisor+3,7,c
  4040  002D56  D7F8               	goto	l4061
  4041  002D58                     l4065:
  4042  002D58  90D8               	bcf	status,0,c
  4043  002D5A  360B               	rlcf	___lldiv@quotient,f,c
  4044  002D5C  360C               	rlcf	___lldiv@quotient+1,f,c
  4045  002D5E  360D               	rlcf	___lldiv@quotient+2,f,c
  4046  002D60  360E               	rlcf	___lldiv@quotient+3,f,c
  4047  002D62  5007               	movf	___lldiv@divisor,w,c
  4048  002D64  5C03               	subwf	___lldiv@dividend,w,c
  4049  002D66  5008               	movf	___lldiv@divisor+1,w,c
  4050  002D68  5804               	subwfb	___lldiv@dividend+1,w,c
  4051  002D6A  5009               	movf	___lldiv@divisor+2,w,c
  4052  002D6C  5805               	subwfb	___lldiv@dividend+2,w,c
  4053  002D6E  500A               	movf	___lldiv@divisor+3,w,c
  4054  002D70  5806               	subwfb	___lldiv@dividend+3,w,c
  4055  002D72  A0D8               	btfss	status,0,c
  4056  002D74  D009               	goto	l4073
  4057  002D76  5007               	movf	___lldiv@divisor,w,c
  4058  002D78  5E03               	subwf	___lldiv@dividend,f,c
  4059  002D7A  5008               	movf	___lldiv@divisor+1,w,c
  4060  002D7C  5A04               	subwfb	___lldiv@dividend+1,f,c
  4061  002D7E  5009               	movf	___lldiv@divisor+2,w,c
  4062  002D80  5A05               	subwfb	___lldiv@dividend+2,f,c
  4063  002D82  500A               	movf	___lldiv@divisor+3,w,c
  4064  002D84  5A06               	subwfb	___lldiv@dividend+3,f,c
  4065  002D86  800B               	bsf	___lldiv@quotient,0,c
  4066  002D88                     l4073:
  4067  002D88  90D8               	bcf	status,0,c
  4068  002D8A  320A               	rrcf	___lldiv@divisor+3,f,c
  4069  002D8C  3209               	rrcf	___lldiv@divisor+2,f,c
  4070  002D8E  3208               	rrcf	___lldiv@divisor+1,f,c
  4071  002D90  3207               	rrcf	___lldiv@divisor,f,c
  4072  002D92  2E0F               	decfsz	___lldiv@counter,f,c
  4073  002D94  D7E1               	goto	l4065
  4074  002D96                     l1359:
  4075  002D96  C00B  F003         	movff	___lldiv@quotient,?___lldiv
  4076  002D9A  C00C  F004         	movff	___lldiv@quotient+1,?___lldiv+1
  4077  002D9E  C00D  F005         	movff	___lldiv@quotient+2,?___lldiv+2
  4078  002DA2  C00E  F006         	movff	___lldiv@quotient+3,?___lldiv+3
  4079  002DA6  0012               	return		;funcret
  4080  002DA8                     __end_of___lldiv:
  4081                           	opt stack 0
  4082                           tblptru	equ	0xFF8
  4083                           tblptrh	equ	0xFF7
  4084                           tblptrl	equ	0xFF6
  4085                           tablat	equ	0xFF5
  4086                           prodh	equ	0xFF4
  4087                           prodl	equ	0xFF3
  4088                           intcon	equ	0xFF2
  4089                           indf0	equ	0xFEF
  4090                           postinc0	equ	0xFEE
  4091                           fsr0h	equ	0xFEA
  4092                           fsr0l	equ	0xFE9
  4093                           wreg	equ	0xFE8
  4094                           indf2	equ	0xFDF
  4095                           postinc2	equ	0xFDE
  4096                           postdec2	equ	0xFDD
  4097                           fsr2h	equ	0xFDA
  4098                           fsr2l	equ	0xFD9
  4099                           status	equ	0xFD8
  4100                           
  4101 ;; *************** function _Serial_println *****************
  4102 ;; Defined at:
  4103 ;;		line 74 in file "serial.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  val             2   38[COMRAM] PTR const unsigned char 
  4106 ;;		 -> buff(10), STR_1(36), 
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;		None
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      void 
  4111 ;; Registers used:
  4112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;Total ram usage:        2 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:    3
  4125 ;; This function calls:
  4126 ;;		_Serial_print
  4127 ;; This function is called by:
  4128 ;;		_setup
  4129 ;;		_loop
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           	psect	text23
  4134  003862                     __ptext23:
  4135                           	opt stack 0
  4136  003862                     _Serial_println:
  4137                           	opt stack 26
  4138                           
  4139                           ;serial.c: 76: Serial_print(val);
  4140                           
  4141                           ;incstack = 0
  4142  003862  C027  F021         	movff	Serial_println@val,Serial_print@val
  4143  003866  C028  F022         	movff	Serial_println@val+1,Serial_print@val+1
  4144  00386A  EC51  F017         	call	_Serial_print	;wreg free
  4145                           
  4146                           ;serial.c: 77: Serial_print("\r\n");
  4147  00386E  0E52               	movlw	low STR_4
  4148  003870  6E21               	movwf	Serial_print@val,c
  4149  003872  0E10               	movlw	high STR_4
  4150  003874  6E22               	movwf	Serial_print@val+1,c
  4151  003876  EC51  F017         	call	_Serial_print	;wreg free
  4152  00387A  0012               	return		;funcret
  4153  00387C                     __end_of_Serial_println:
  4154                           	opt stack 0
  4155                           tblptru	equ	0xFF8
  4156                           tblptrh	equ	0xFF7
  4157                           tblptrl	equ	0xFF6
  4158                           tablat	equ	0xFF5
  4159                           prodh	equ	0xFF4
  4160                           prodl	equ	0xFF3
  4161                           intcon	equ	0xFF2
  4162                           indf0	equ	0xFEF
  4163                           postinc0	equ	0xFEE
  4164                           fsr0h	equ	0xFEA
  4165                           fsr0l	equ	0xFE9
  4166                           wreg	equ	0xFE8
  4167                           indf2	equ	0xFDF
  4168                           postinc2	equ	0xFDE
  4169                           postdec2	equ	0xFDD
  4170                           fsr2h	equ	0xFDA
  4171                           fsr2l	equ	0xFD9
  4172                           status	equ	0xFD8
  4173                           
  4174 ;; *************** function _Serial_print *****************
  4175 ;; Defined at:
  4176 ;;		line 63 in file "serial.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  val             2   32[COMRAM] PTR const unsigned char 
  4179 ;;		 -> buff(10), STR_4(3), STR_3(5), STR_2(18), 
  4180 ;;		 -> STR_1(36), 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  i               2   36[COMRAM] unsigned int 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4196 ;;Total ram usage:        6 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:    2
  4199 ;; This function calls:
  4200 ;;		_Serial_tx
  4201 ;; This function is called by:
  4202 ;;		_loop
  4203 ;;		_Serial_println
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text24
  4208  002EA2                     __ptext24:
  4209                           	opt stack 0
  4210  002EA2                     _Serial_print:
  4211                           	opt stack 26
  4212                           
  4213                           ;serial.c: 65: unsigned int i=0;
  4214                           
  4215                           ;incstack = 0
  4216  002EA2  0E00               	movlw	0
  4217  002EA4  6E26               	movwf	Serial_print@i+1,c
  4218  002EA6  0E00               	movlw	0
  4219  002EA8  6E25               	movwf	Serial_print@i,c
  4220                           
  4221                           ;serial.c: 67: while(val[i])
  4222  002EAA  D01B               	goto	l4121
  4223  002EAC                     l4117:
  4224                           
  4225                           ;serial.c: 68: {
  4226                           ;serial.c: 69: Serial_tx(val[i]);
  4227  002EAC  5025               	movf	Serial_print@i,w,c
  4228  002EAE  2421               	addwf	Serial_print@val,w,c
  4229  002EB0  6E23               	movwf	??_Serial_print& (0+255),c
  4230  002EB2  5026               	movf	Serial_print@i+1,w,c
  4231  002EB4  2022               	addwfc	Serial_print@val+1,w,c
  4232  002EB6  6E24               	movwf	(??_Serial_print+1)& (0+255),c
  4233  002EB8  C023  FFF6         	movff	??_Serial_print,tblptrl
  4234  002EBC  C024  FFF7         	movff	??_Serial_print+1,tblptrh
  4235  002EC0  0E00               	movlw	low (__smallconst shr (0+16))
  4236  002EC2  6EF8               	movwf	tblptru,c
  4237  002EC4  0E0F               	movlw	(high __ramtop+-1)
  4238  002EC6  64F7               	cpfsgt	tblptrh,c
  4239  002EC8  D003               	bra	u4547
  4240  002ECA  0008               	tblrd		*
  4241  002ECC  50F5               	movf	tablat,w,c
  4242  002ECE  D005               	bra	u4540
  4243  002ED0                     u4547:
  4244  002ED0  CFF6 FFE9          	movff	tblptrl,fsr0l
  4245  002ED4  CFF7 FFEA          	movff	tblptrh,fsr0h
  4246  002ED8  50EF               	movf	indf0,w,c
  4247  002EDA                     u4540:
  4248  002EDA  EC8D  F01C         	call	_Serial_tx
  4249                           
  4250                           ;serial.c: 70: i++;
  4251  002EDE  4A25               	infsnz	Serial_print@i,f,c
  4252  002EE0  2A26               	incf	Serial_print@i+1,f,c
  4253  002EE2                     l4121:
  4254  002EE2  5025               	movf	Serial_print@i,w,c
  4255  002EE4  2421               	addwf	Serial_print@val,w,c
  4256  002EE6  6E23               	movwf	??_Serial_print& (0+255),c
  4257  002EE8  5026               	movf	Serial_print@i+1,w,c
  4258  002EEA  2022               	addwfc	Serial_print@val+1,w,c
  4259  002EEC  6E24               	movwf	(??_Serial_print+1)& (0+255),c
  4260  002EEE  C023  FFF6         	movff	??_Serial_print,tblptrl
  4261  002EF2  C024  FFF7         	movff	??_Serial_print+1,tblptrh
  4262  002EF6  0E00               	movlw	low (__smallconst shr (0+16))
  4263  002EF8  6EF8               	movwf	tblptru,c
  4264  002EFA  0E0F               	movlw	(high __ramtop+-1)
  4265  002EFC  64F7               	cpfsgt	tblptrh,c
  4266  002EFE  D003               	bra	u4557
  4267  002F00  0008               	tblrd		*
  4268  002F02  50F5               	movf	tablat,w,c
  4269  002F04  D005               	bra	u4550
  4270  002F06                     u4557:
  4271  002F06  CFF6 FFE9          	movff	tblptrl,fsr0l
  4272  002F0A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4273  002F0E  50EF               	movf	indf0,w,c
  4274  002F10                     u4550:
  4275  002F10  0900               	iorlw	0
  4276  002F12  B4D8               	btfsc	status,2,c
  4277  002F14  0012               	return	
  4278  002F16  D7CA               	goto	l4117
  4279  002F18                     __end_of_Serial_print:
  4280                           	opt stack 0
  4281                           tblptru	equ	0xFF8
  4282                           tblptrh	equ	0xFF7
  4283                           tblptrl	equ	0xFF6
  4284                           tablat	equ	0xFF5
  4285                           prodh	equ	0xFF4
  4286                           prodl	equ	0xFF3
  4287                           intcon	equ	0xFF2
  4288                           indf0	equ	0xFEF
  4289                           postinc0	equ	0xFEE
  4290                           fsr0h	equ	0xFEA
  4291                           fsr0l	equ	0xFE9
  4292                           wreg	equ	0xFE8
  4293                           indf2	equ	0xFDF
  4294                           postinc2	equ	0xFDE
  4295                           postdec2	equ	0xFDD
  4296                           fsr2h	equ	0xFDA
  4297                           fsr2l	equ	0xFD9
  4298                           status	equ	0xFD8
  4299                           
  4300 ;; *************** function _Serial_tx *****************
  4301 ;; Defined at:
  4302 ;;		line 57 in file "serial.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  val             1    wreg     const unsigned char 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  val             1    2[COMRAM] const unsigned char 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;Total ram usage:        1 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    1
  4323 ;; This function calls:
  4324 ;;		Nothing
  4325 ;; This function is called by:
  4326 ;;		_Serial_print
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           	psect	text25
  4331  00391A                     __ptext25:
  4332                           	opt stack 0
  4333  00391A                     _Serial_tx:
  4334                           	opt stack 26
  4335                           
  4336                           ;incstack = 0
  4337                           ;Serial_tx@val stored from wreg
  4338  00391A  6E03               	movwf	Serial_tx@val,c
  4339                           
  4340                           ;serial.c: 59: TXREG=val;
  4341  00391C  C003  FFAD         	movff	Serial_tx@val,4013	;volatile
  4342  003920                     l87:
  4343  003920  B2AC               	btfsc	4012,1,c	;volatile
  4344  003922  0012               	return	
  4345  003924  D7FD               	goto	l87
  4346  003926                     __end_of_Serial_tx:
  4347                           	opt stack 0
  4348                           tblptru	equ	0xFF8
  4349                           tblptrh	equ	0xFF7
  4350                           tblptrl	equ	0xFF6
  4351                           tablat	equ	0xFF5
  4352                           prodh	equ	0xFF4
  4353                           prodl	equ	0xFF3
  4354                           intcon	equ	0xFF2
  4355                           indf0	equ	0xFEF
  4356                           postinc0	equ	0xFEE
  4357                           fsr0h	equ	0xFEA
  4358                           fsr0l	equ	0xFE9
  4359                           wreg	equ	0xFE8
  4360                           indf2	equ	0xFDF
  4361                           postinc2	equ	0xFDE
  4362                           postdec2	equ	0xFDD
  4363                           fsr2h	equ	0xFDA
  4364                           fsr2l	equ	0xFD9
  4365                           status	equ	0xFD8
  4366                           
  4367 ;; *************** function _RF24N_read *****************
  4368 ;; Defined at:
  4369 ;;		line 726 in file "../../RF24Network_c.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;  header          2   14[COMRAM] PTR struct .
  4372 ;;		 -> loop@header(8), 
  4373 ;;  message         2   16[COMRAM] PTR void 
  4374 ;;		 -> loop@payload(8), 
  4375 ;;  maxlen          2   18[COMRAM] unsigned int 
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;  padding         1   26[COMRAM] unsigned char 
  4378 ;;  bufsize         2   27[COMRAM] unsigned int 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  2   14[COMRAM] unsigned int 
  4381 ;; Registers used:
  4382 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4388 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4392 ;;Total ram usage:       15 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    2
  4395 ;; This function calls:
  4396 ;;		_RF24N_available
  4397 ;;		_memcpy
  4398 ;;		_memmove
  4399 ;; This function is called by:
  4400 ;;		_loop
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           	psect	text26
  4405  002276                     __ptext26:
  4406                           	opt stack 0
  4407  002276                     _RF24N_read:
  4408                           	opt stack 27
  4409                           
  4410                           ;RF24Network_c.c: 728: uint16_t bufsize = 0;
  4411                           
  4412                           ;incstack = 0
  4413  002276  0E00               	movlw	0
  4414  002278  6E1D               	movwf	RF24N_read@bufsize+1,c
  4415  00227A  0E00               	movlw	0
  4416  00227C  6E1C               	movwf	RF24N_read@bufsize,c
  4417                           
  4418                           ;RF24Network_c.c: 747: if ( RF24N_available() )
  4419  00227E  ECE6  F01B         	call	_RF24N_available	;wreg free
  4420  002282  0900               	iorlw	0
  4421  002284  B4D8               	btfsc	status,2,c
  4422  002286  0012               	return	
  4423                           
  4424                           ;RF24Network_c.c: 748: {
  4425                           ;RF24Network_c.c: 749: uint8_t padding;
  4426                           ;RF24Network_c.c: 751: memcpy(header,rn.frame_queue,8);
  4427  002288  C00F  F003         	movff	RF24N_read@header,memcpy@d1
  4428  00228C  C010  F004         	movff	RF24N_read@header+1,memcpy@d1+1
  4429  002290  0EE3               	movlw	low (_rn+58)
  4430  002292  6E05               	movwf	memcpy@s1,c
  4431  002294  0E00               	movlw	high (_rn+58)
  4432  002296  6E06               	movwf	memcpy@s1+1,c
  4433  002298  0E00               	movlw	0
  4434  00229A  6E08               	movwf	memcpy@n+1,c
  4435  00229C  0E08               	movlw	8
  4436  00229E  6E07               	movwf	memcpy@n,c
  4437  0022A0  EC55  F01A         	call	_memcpy	;wreg free
  4438                           
  4439                           ;RF24Network_c.c: 752: memcpy(&bufsize,rn.frame_queue+8,2);
  4440  0022A4  0E1C               	movlw	low RF24N_read@bufsize
  4441  0022A6  6E03               	movwf	memcpy@d1,c
  4442  0022A8  0E00               	movlw	high RF24N_read@bufsize
  4443  0022AA  6E04               	movwf	memcpy@d1+1,c
  4444  0022AC  0EEB               	movlw	low (_rn+66)
  4445  0022AE  6E05               	movwf	memcpy@s1,c
  4446  0022B0  0E00               	movlw	high (_rn+66)
  4447  0022B2  6E06               	movwf	memcpy@s1+1,c
  4448  0022B4  0E00               	movlw	0
  4449  0022B6  6E08               	movwf	memcpy@n+1,c
  4450  0022B8  0E02               	movlw	2
  4451  0022BA  6E07               	movwf	memcpy@n,c
  4452  0022BC  EC55  F01A         	call	_memcpy	;wreg free
  4453                           
  4454                           ;RF24Network_c.c: 754: if (maxlen > 0)
  4455  0022C0  5013               	movf	RF24N_read@maxlen,w,c
  4456  0022C2  1014               	iorwf	RF24N_read@maxlen+1,w,c
  4457  0022C4  B4D8               	btfsc	status,2,c
  4458  0022C6  D018               	goto	l6187
  4459                           
  4460                           ;RF24Network_c.c: 755: {
  4461                           ;RF24Network_c.c: 756: maxlen = (maxlen<bufsize?maxlen:bufsize);
  4462  0022C8  501C               	movf	RF24N_read@bufsize,w,c
  4463  0022CA  5C13               	subwf	RF24N_read@maxlen,w,c
  4464  0022CC  501D               	movf	RF24N_read@bufsize+1,w,c
  4465  0022CE  5814               	subwfb	RF24N_read@maxlen+1,w,c
  4466  0022D0  A0D8               	btfss	status,0,c
  4467  0022D2  D004               	goto	l6185
  4468  0022D4  C01C  F013         	movff	RF24N_read@bufsize,RF24N_read@maxlen
  4469  0022D8  C01D  F014         	movff	RF24N_read@bufsize+1,RF24N_read@maxlen+1
  4470  0022DC                     l6185:
  4471                           
  4472                           ;RF24Network_c.c: 757: memcpy(message,rn.frame_queue+10,maxlen);
  4473  0022DC  C011  F003         	movff	RF24N_read@message,memcpy@d1
  4474  0022E0  C012  F004         	movff	RF24N_read@message+1,memcpy@d1+1
  4475  0022E4  0EED               	movlw	low (_rn+68)
  4476  0022E6  6E05               	movwf	memcpy@s1,c
  4477  0022E8  0E00               	movlw	high (_rn+68)
  4478  0022EA  6E06               	movwf	memcpy@s1+1,c
  4479  0022EC  C013  F007         	movff	RF24N_read@maxlen,memcpy@n
  4480  0022F0  C014  F008         	movff	RF24N_read@maxlen+1,memcpy@n+1
  4481  0022F4  EC55  F01A         	call	_memcpy	;wreg free
  4482  0022F8                     l6187:
  4483                           
  4484                           ;RF24Network_c.c: 763: }
  4485                           ;RF24Network_c.c: 764: rn.next_frame-=bufsize+10;
  4486  0022F8  0E0A               	movlw	10
  4487  0022FA  241C               	addwf	RF24N_read@bufsize,w,c
  4488  0022FC  6E15               	movwf	??_RF24N_read& (0+255),c
  4489  0022FE  0E00               	movlw	0
  4490  002300  201D               	addwfc	RF24N_read@bufsize+1,w,c
  4491  002302  6E16               	movwf	(??_RF24N_read+1)& (0+255),c
  4492  002304  EE21  F07D         	lfsr	2,_rn+212
  4493  002308  5015               	movf	??_RF24N_read,w,c
  4494  00230A  5EDE               	subwf	postinc2,f,c
  4495  00230C  5016               	movf	??_RF24N_read+1,w,c
  4496  00230E  5ADD               	subwfb	postdec2,f,c
  4497                           
  4498                           ;RF24Network_c.c: 765: padding = 0;
  4499  002310  0E00               	movlw	0
  4500  002312  6E1B               	movwf	RF24N_read@padding,c
  4501                           
  4502                           ;RF24Network_c.c: 767: if( (padding = (bufsize+10)%4) ){
  4503  002314  501C               	movf	RF24N_read@bufsize,w,c
  4504  002316  0F0A               	addlw	10
  4505  002318  0B03               	andlw	3
  4506  00231A  6E1B               	movwf	RF24N_read@padding,c
  4507  00231C  501B               	movf	RF24N_read@padding,w,c
  4508  00231E  B4D8               	btfsc	status,2,c
  4509  002320  D00C               	goto	l6197
  4510                           
  4511                           ;RF24Network_c.c: 768: padding = 4-padding;
  4512  002322  501B               	movf	RF24N_read@padding,w,c
  4513  002324  0800               	sublw	0
  4514  002326  0F04               	addlw	4
  4515  002328  6E1B               	movwf	RF24N_read@padding,c
  4516                           
  4517                           ;RF24Network_c.c: 769: rn.next_frame -= padding;
  4518  00232A  501B               	movf	RF24N_read@padding,w,c
  4519  00232C  0D01               	mullw	1
  4520  00232E  EE21  F07D         	lfsr	2,_rn+212
  4521  002332  50F3               	movf	prodl,w,c
  4522  002334  5EDE               	subwf	postinc2,f,c
  4523  002336  50F4               	movf	prodh,w,c
  4524  002338  5ADD               	subwfb	postdec2,f,c
  4525  00233A                     l6197:
  4526                           
  4527                           ;RF24Network_c.c: 770: }
  4528                           ;RF24Network_c.c: 772: memmove(rn.frame_queue,rn.frame_queue+bufsize+10+padding,sizeof(r
      +                          n.frame_queue)- bufsize);
  4529  00233A  0EE3               	movlw	low (_rn+58)
  4530  00233C  6E03               	movwf	memmove@d1,c
  4531  00233E  0E00               	movlw	high (_rn+58)
  4532  002340  6E04               	movwf	memmove@d1+1,c
  4533  002342  501B               	movf	RF24N_read@padding,w,c
  4534  002344  0D01               	mullw	1
  4535  002346  0E0A               	movlw	10
  4536  002348  241C               	addwf	RF24N_read@bufsize,w,c
  4537  00234A  6E15               	movwf	??_RF24N_read& (0+255),c
  4538  00234C  0E00               	movlw	0
  4539  00234E  201D               	addwfc	RF24N_read@bufsize+1,w,c
  4540  002350  6E16               	movwf	(??_RF24N_read+1)& (0+255),c
  4541  002352  0EA9               	movlw	low _rn
  4542  002354  6E17               	movwf	(??_RF24N_read+2)& (0+255),c
  4543  002356  0E00               	movlw	high _rn
  4544  002358  6E18               	movwf	(??_RF24N_read+3)& (0+255),c
  4545  00235A  0E3A               	movlw	58
  4546  00235C  2617               	addwf	??_RF24N_read+2,f,c
  4547  00235E  0E00               	movlw	0
  4548  002360  2218               	addwfc	??_RF24N_read+3,f,c
  4549  002362  5015               	movf	??_RF24N_read,w,c
  4550  002364  2617               	addwf	??_RF24N_read+2,f,c
  4551  002366  5016               	movf	??_RF24N_read+1,w,c
  4552  002368  2218               	addwfc	??_RF24N_read+3,f,c
  4553  00236A  50F3               	movf	prodl,w,c
  4554  00236C  2417               	addwf	??_RF24N_read+2,w,c
  4555  00236E  6E05               	movwf	memmove@s1,c
  4556  002370  50F4               	movf	prodh,w,c
  4557  002372  2018               	addwfc	??_RF24N_read+3,w,c
  4558  002374  6E06               	movwf	memmove@s1+1,c
  4559  002376  C01C  F019         	movff	RF24N_read@bufsize,??_RF24N_read+4
  4560  00237A  C01D  F01A         	movff	RF24N_read@bufsize+1,??_RF24N_read+5
  4561  00237E  1E19               	comf	??_RF24N_read+4,f,c
  4562  002380  1E1A               	comf	??_RF24N_read+5,f,c
  4563  002382  4A19               	infsnz	??_RF24N_read+4,f,c
  4564  002384  2A1A               	incf	??_RF24N_read+5,f,c
  4565  002386  0E9A               	movlw	154
  4566  002388  2419               	addwf	??_RF24N_read+4,w,c
  4567  00238A  6E07               	movwf	memmove@n,c
  4568  00238C  0E00               	movlw	0
  4569  00238E  201A               	addwfc	??_RF24N_read+5,w,c
  4570  002390  6E08               	movwf	memmove@n+1,c
  4571  002392  EC70  F015         	call	_memmove	;wreg free
  4572  002396  0012               	return	
  4573  002398                     __end_of_RF24N_read:
  4574                           	opt stack 0
  4575                           tblptru	equ	0xFF8
  4576                           tblptrh	equ	0xFF7
  4577                           tblptrl	equ	0xFF6
  4578                           tablat	equ	0xFF5
  4579                           prodh	equ	0xFF4
  4580                           prodl	equ	0xFF3
  4581                           intcon	equ	0xFF2
  4582                           indf0	equ	0xFEF
  4583                           postinc0	equ	0xFEE
  4584                           fsr0h	equ	0xFEA
  4585                           fsr0l	equ	0xFE9
  4586                           wreg	equ	0xFE8
  4587                           indf2	equ	0xFDF
  4588                           postinc2	equ	0xFDE
  4589                           postdec2	equ	0xFDD
  4590                           fsr2h	equ	0xFDA
  4591                           fsr2l	equ	0xFD9
  4592                           status	equ	0xFD8
  4593                           
  4594 ;; *************** function _memmove *****************
  4595 ;; Defined at:
  4596 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memmove.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  d1              2    2[COMRAM] PTR void 
  4599 ;;		 -> rn(370), 
  4600 ;;  s1              2    4[COMRAM] PTR const void 
  4601 ;;		 -> rn.frame_queue(154), rn(370), 
  4602 ;;  n               2    6[COMRAM] unsigned int 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  s               2   12[COMRAM] PTR const unsigned char 
  4605 ;;		 -> rn.frame_queue(154), rn(370), 
  4606 ;;  d               2   10[COMRAM] PTR unsigned char 
  4607 ;;		 -> rn(370), 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  2    2[COMRAM] PTR void 
  4610 ;; Registers used:
  4611 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4617 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4620 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4621 ;;Total ram usage:       12 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; Hardware stack levels required when called:    1
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_RF24N_read
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           	psect	text27
  4632  002AE0                     __ptext27:
  4633                           	opt stack 0
  4634  002AE0                     _memmove:
  4635                           	opt stack 27
  4636                           
  4637                           ;incstack = 0
  4638  002AE0  C005  F00D         	movff	memmove@s1,memmove@s
  4639  002AE4  C006  F00E         	movff	memmove@s1+1,memmove@s+1
  4640  002AE8  C003  F00B         	movff	memmove@d1,memmove@d
  4641  002AEC  C004  F00C         	movff	memmove@d1+1,memmove@d+1
  4642  002AF0  500B               	movf	memmove@d,w,c
  4643  002AF2  5C0D               	subwf	memmove@s,w,c
  4644  002AF4  500C               	movf	memmove@d+1,w,c
  4645  002AF6  580E               	subwfb	memmove@s+1,w,c
  4646  002AF8  B0D8               	btfsc	status,0,c
  4647  002AFA  D02C               	goto	l4495
  4648  002AFC  5007               	movf	memmove@n,w,c
  4649  002AFE  240D               	addwf	memmove@s,w,c
  4650  002B00  6E09               	movwf	??_memmove& (0+255),c
  4651  002B02  5008               	movf	memmove@n+1,w,c
  4652  002B04  200E               	addwfc	memmove@s+1,w,c
  4653  002B06  6E0A               	movwf	(??_memmove+1)& (0+255),c
  4654  002B08  5009               	movf	??_memmove,w,c
  4655  002B0A  5C0B               	subwf	memmove@d,w,c
  4656  002B0C  500A               	movf	??_memmove+1,w,c
  4657  002B0E  580C               	subwfb	memmove@d+1,w,c
  4658  002B10  B0D8               	btfsc	status,0,c
  4659  002B12  D020               	goto	l4495
  4660  002B14  5007               	movf	memmove@n,w,c
  4661  002B16  260D               	addwf	memmove@s,f,c
  4662  002B18  5008               	movf	memmove@n+1,w,c
  4663  002B1A  220E               	addwfc	memmove@s+1,f,c
  4664  002B1C  5007               	movf	memmove@n,w,c
  4665  002B1E  260B               	addwf	memmove@d,f,c
  4666  002B20  5008               	movf	memmove@n+1,w,c
  4667  002B22  220C               	addwfc	memmove@d+1,f,c
  4668  002B24                     l4491:
  4669  002B24  060D               	decf	memmove@s,f,c
  4670  002B26  A0D8               	btfss	status,0,c
  4671  002B28  060E               	decf	memmove@s+1,f,c
  4672  002B2A  C00D  FFD9         	movff	memmove@s,fsr2l
  4673  002B2E  C00E  FFDA         	movff	memmove@s+1,fsr2h
  4674  002B32  060B               	decf	memmove@d,f,c
  4675  002B34  A0D8               	btfss	status,0,c
  4676  002B36  060C               	decf	memmove@d+1,f,c
  4677  002B38  C00B  FFE9         	movff	memmove@d,fsr0l
  4678  002B3C  C00C  FFEA         	movff	memmove@d+1,fsr0h
  4679  002B40  CFDF FFEF          	movff	indf2,indf0
  4680  002B44  0607               	decf	memmove@n,f,c
  4681  002B46  A0D8               	btfss	status,0,c
  4682  002B48  0608               	decf	memmove@n+1,f,c
  4683  002B4A  5007               	movf	memmove@n,w,c
  4684  002B4C  1008               	iorwf	memmove@n+1,w,c
  4685  002B4E  B4D8               	btfsc	status,2,c
  4686  002B50  0012               	return	
  4687  002B52  D7E8               	goto	l4491
  4688  002B54                     l4495:
  4689  002B54  5007               	movf	memmove@n,w,c
  4690  002B56  1008               	iorwf	memmove@n+1,w,c
  4691  002B58  B4D8               	btfsc	status,2,c
  4692  002B5A  0012               	return	
  4693  002B5C  C00D  FFD9         	movff	memmove@s,fsr2l
  4694  002B60  C00E  FFDA         	movff	memmove@s+1,fsr2h
  4695  002B64  C00B  FFE9         	movff	memmove@d,fsr0l
  4696  002B68  C00C  FFEA         	movff	memmove@d+1,fsr0h
  4697  002B6C  CFDF FFEF          	movff	indf2,indf0
  4698  002B70  4A0D               	infsnz	memmove@s,f,c
  4699  002B72  2A0E               	incf	memmove@s+1,f,c
  4700  002B74  4A0B               	infsnz	memmove@d,f,c
  4701  002B76  2A0C               	incf	memmove@d+1,f,c
  4702  002B78  0607               	decf	memmove@n,f,c
  4703  002B7A  A0D8               	btfss	status,0,c
  4704  002B7C  0608               	decf	memmove@n+1,f,c
  4705  002B7E  D7EA               	goto	l4495
  4706  002B80                     __end_of_memmove:
  4707                           	opt stack 0
  4708                           tblptru	equ	0xFF8
  4709                           tblptrh	equ	0xFF7
  4710                           tblptrl	equ	0xFF6
  4711                           tablat	equ	0xFF5
  4712                           prodh	equ	0xFF4
  4713                           prodl	equ	0xFF3
  4714                           intcon	equ	0xFF2
  4715                           indf0	equ	0xFEF
  4716                           postinc0	equ	0xFEE
  4717                           fsr0h	equ	0xFEA
  4718                           fsr0l	equ	0xFE9
  4719                           wreg	equ	0xFE8
  4720                           indf2	equ	0xFDF
  4721                           postinc2	equ	0xFDE
  4722                           postdec2	equ	0xFDD
  4723                           fsr2h	equ	0xFDA
  4724                           fsr2l	equ	0xFD9
  4725                           status	equ	0xFD8
  4726                           
  4727 ;; *************** function _digitalWrite *****************
  4728 ;; Defined at:
  4729 ;;		line 62 in file "../../../RF24_c/utility/XC8/spi.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;  pin             1    wreg     unsigned char 
  4732 ;;  mode            1    2[COMRAM] unsigned char 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  pin             1    4[COMRAM] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  1    wreg      void 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4744 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;Total ram usage:        3 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    1
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_RF24_csn_d
  4755 ;;		_RF24_ce_d
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           	psect	text28
  4760  001D8E                     __ptext28:
  4761                           	opt stack 0
  4762  001D8E                     _digitalWrite:
  4763                           	opt stack 24
  4764                           
  4765                           ;incstack = 0
  4766                           ;digitalWrite@pin stored from wreg
  4767  001D8E  6E05               	movwf	digitalWrite@pin,c
  4768                           
  4769                           ;spi.c: 64: switch(pin)
  4770  001D90  D0D2               	goto	l5139
  4771  001D92                     l202:
  4772  001D92  B003               	btfsc	digitalWrite@mode,0,c
  4773  001D94  D002               	bra	u6195
  4774  001D96  9089               	bcf	3977,0,c	;volatile
  4775  001D98  D001               	bra	u6196
  4776  001D9A                     u6195:
  4777  001D9A  8089               	bsf	3977,0,c	;volatile
  4778  001D9C                     u6196:
  4779  001D9C  0012               	return	
  4780  001D9E                     l204:
  4781  001D9E  B003               	btfsc	digitalWrite@mode,0,c
  4782  001DA0  D002               	bra	u6205
  4783  001DA2  9289               	bcf	3977,1,c	;volatile
  4784  001DA4  D001               	bra	u6206
  4785  001DA6                     u6205:
  4786  001DA6  8289               	bsf	3977,1,c	;volatile
  4787  001DA8                     u6206:
  4788  001DA8  0012               	return	
  4789  001DAA                     l205:
  4790  001DAA  B003               	btfsc	digitalWrite@mode,0,c
  4791  001DAC  D002               	bra	u6215
  4792  001DAE  9489               	bcf	3977,2,c	;volatile
  4793  001DB0  D001               	bra	u6216
  4794  001DB2                     u6215:
  4795  001DB2  8489               	bsf	3977,2,c	;volatile
  4796  001DB4                     u6216:
  4797  001DB4  0012               	return	
  4798  001DB6                     l206:
  4799  001DB6  B003               	btfsc	digitalWrite@mode,0,c
  4800  001DB8  D002               	bra	u6225
  4801  001DBA  9689               	bcf	3977,3,c	;volatile
  4802  001DBC  D001               	bra	u6226
  4803  001DBE                     u6225:
  4804  001DBE  8689               	bsf	3977,3,c	;volatile
  4805  001DC0                     u6226:
  4806  001DC0  0012               	return	
  4807  001DC2                     l207:
  4808  001DC2  B003               	btfsc	digitalWrite@mode,0,c
  4809  001DC4  D002               	bra	u6235
  4810  001DC6  9889               	bcf	3977,4,c	;volatile
  4811  001DC8  D001               	bra	u6236
  4812  001DCA                     u6235:
  4813  001DCA  8889               	bsf	3977,4,c	;volatile
  4814  001DCC                     u6236:
  4815  001DCC  0012               	return	
  4816  001DCE                     l208:
  4817  001DCE  B003               	btfsc	digitalWrite@mode,0,c
  4818  001DD0  D002               	bra	u6245
  4819  001DD2  9A89               	bcf	3977,5,c	;volatile
  4820  001DD4  D001               	bra	u6246
  4821  001DD6                     u6245:
  4822  001DD6  8A89               	bsf	3977,5,c	;volatile
  4823  001DD8                     u6246:
  4824  001DD8  0012               	return	
  4825  001DDA                     l209:
  4826  001DDA  B003               	btfsc	digitalWrite@mode,0,c
  4827  001DDC  D002               	bra	u6255
  4828  001DDE  908D               	bcf	3981,0,c	;volatile
  4829  001DE0  D001               	bra	u6256
  4830  001DE2                     u6255:
  4831  001DE2  808D               	bsf	3981,0,c	;volatile
  4832  001DE4                     u6256:
  4833  001DE4  0012               	return	
  4834  001DE6                     l210:
  4835  001DE6  B003               	btfsc	digitalWrite@mode,0,c
  4836  001DE8  D002               	bra	u6265
  4837  001DEA  928D               	bcf	3981,1,c	;volatile
  4838  001DEC  D001               	bra	u6266
  4839  001DEE                     u6265:
  4840  001DEE  828D               	bsf	3981,1,c	;volatile
  4841  001DF0                     u6266:
  4842  001DF0  0012               	return	
  4843  001DF2                     l211:
  4844  001DF2  B003               	btfsc	digitalWrite@mode,0,c
  4845  001DF4  D002               	bra	u6275
  4846  001DF6  948D               	bcf	3981,2,c	;volatile
  4847  001DF8  D001               	bra	u6276
  4848  001DFA                     u6275:
  4849  001DFA  848D               	bsf	3981,2,c	;volatile
  4850  001DFC                     u6276:
  4851  001DFC  0012               	return	
  4852  001DFE                     l212:
  4853  001DFE  B003               	btfsc	digitalWrite@mode,0,c
  4854  001E00  D002               	bra	u6285
  4855  001E02  9E89               	bcf	3977,7,c	;volatile
  4856  001E04  D001               	bra	u6286
  4857  001E06                     u6285:
  4858  001E06  8E89               	bsf	3977,7,c	;volatile
  4859  001E08                     u6286:
  4860  001E08  0012               	return	
  4861  001E0A                     l213:
  4862  001E0A  B003               	btfsc	digitalWrite@mode,0,c
  4863  001E0C  D002               	bra	u6295
  4864  001E0E  9C89               	bcf	3977,6,c	;volatile
  4865  001E10  D001               	bra	u6296
  4866  001E12                     u6295:
  4867  001E12  8C89               	bsf	3977,6,c	;volatile
  4868  001E14                     u6296:
  4869  001E14  0012               	return	
  4870  001E16                     l214:
  4871  001E16  B003               	btfsc	digitalWrite@mode,0,c
  4872  001E18  D002               	bra	u6305
  4873  001E1A  908B               	bcf	3979,0,c	;volatile
  4874  001E1C  D001               	bra	u6306
  4875  001E1E                     u6305:
  4876  001E1E  808B               	bsf	3979,0,c	;volatile
  4877  001E20                     u6306:
  4878  001E20  0012               	return	
  4879  001E22                     l215:
  4880  001E22  B003               	btfsc	digitalWrite@mode,0,c
  4881  001E24  D002               	bra	u6315
  4882  001E26  928B               	bcf	3979,1,c	;volatile
  4883  001E28  D001               	bra	u6316
  4884  001E2A                     u6315:
  4885  001E2A  828B               	bsf	3979,1,c	;volatile
  4886  001E2C                     u6316:
  4887  001E2C  0012               	return	
  4888  001E2E                     l216:
  4889  001E2E  B003               	btfsc	digitalWrite@mode,0,c
  4890  001E30  D002               	bra	u6325
  4891  001E32  948B               	bcf	3979,2,c	;volatile
  4892  001E34  D001               	bra	u6326
  4893  001E36                     u6325:
  4894  001E36  848B               	bsf	3979,2,c	;volatile
  4895  001E38                     u6326:
  4896  001E38  0012               	return	
  4897  001E3A                     l217:
  4898  001E3A  B003               	btfsc	digitalWrite@mode,0,c
  4899  001E3C  D002               	bra	u6335
  4900  001E3E  968B               	bcf	3979,3,c	;volatile
  4901  001E40  D001               	bra	u6336
  4902  001E42                     u6335:
  4903  001E42  868B               	bsf	3979,3,c	;volatile
  4904  001E44                     u6336:
  4905  001E44  0012               	return	
  4906  001E46                     l218:
  4907  001E46  B003               	btfsc	digitalWrite@mode,0,c
  4908  001E48  D002               	bra	u6345
  4909  001E4A  908C               	bcf	3980,0,c	;volatile
  4910  001E4C  D001               	bra	u6346
  4911  001E4E                     u6345:
  4912  001E4E  808C               	bsf	3980,0,c	;volatile
  4913  001E50                     u6346:
  4914  001E50  0012               	return	
  4915  001E52                     l219:
  4916  001E52  B003               	btfsc	digitalWrite@mode,0,c
  4917  001E54  D002               	bra	u6355
  4918  001E56  928C               	bcf	3980,1,c	;volatile
  4919  001E58  D001               	bra	u6356
  4920  001E5A                     u6355:
  4921  001E5A  828C               	bsf	3980,1,c	;volatile
  4922  001E5C                     u6356:
  4923  001E5C  0012               	return	
  4924  001E5E                     l220:
  4925  001E5E  B003               	btfsc	digitalWrite@mode,0,c
  4926  001E60  D002               	bra	u6365
  4927  001E62  948C               	bcf	3980,2,c	;volatile
  4928  001E64  D001               	bra	u6366
  4929  001E66                     u6365:
  4930  001E66  848C               	bsf	3980,2,c	;volatile
  4931  001E68                     u6366:
  4932  001E68  0012               	return	
  4933  001E6A                     l221:
  4934  001E6A  B003               	btfsc	digitalWrite@mode,0,c
  4935  001E6C  D002               	bra	u6375
  4936  001E6E  968C               	bcf	3980,3,c	;volatile
  4937  001E70  D001               	bra	u6376
  4938  001E72                     u6375:
  4939  001E72  868C               	bsf	3980,3,c	;volatile
  4940  001E74                     u6376:
  4941  001E74  0012               	return	
  4942  001E76                     l222:
  4943  001E76  B003               	btfsc	digitalWrite@mode,0,c
  4944  001E78  D002               	bra	u6385
  4945  001E7A  988B               	bcf	3979,4,c	;volatile
  4946  001E7C  D001               	bra	u6386
  4947  001E7E                     u6385:
  4948  001E7E  888B               	bsf	3979,4,c	;volatile
  4949  001E80                     u6386:
  4950  001E80  0012               	return	
  4951  001E82                     l223:
  4952  001E82  B003               	btfsc	digitalWrite@mode,0,c
  4953  001E84  D002               	bra	u6395
  4954  001E86  9A8B               	bcf	3979,5,c	;volatile
  4955  001E88  D001               	bra	u6396
  4956  001E8A                     u6395:
  4957  001E8A  8A8B               	bsf	3979,5,c	;volatile
  4958  001E8C                     u6396:
  4959  001E8C  0012               	return	
  4960  001E8E                     l224:
  4961  001E8E  B003               	btfsc	digitalWrite@mode,0,c
  4962  001E90  D002               	bra	u6405
  4963  001E92  9C8B               	bcf	3979,6,c	;volatile
  4964  001E94  D001               	bra	u6406
  4965  001E96                     u6405:
  4966  001E96  8C8B               	bsf	3979,6,c	;volatile
  4967  001E98                     u6406:
  4968  001E98  0012               	return	
  4969  001E9A                     l225:
  4970  001E9A  B003               	btfsc	digitalWrite@mode,0,c
  4971  001E9C  D002               	bra	u6415
  4972  001E9E  9E8B               	bcf	3979,7,c	;volatile
  4973  001EA0  D001               	bra	u6416
  4974  001EA2                     u6415:
  4975  001EA2  8E8B               	bsf	3979,7,c	;volatile
  4976  001EA4                     u6416:
  4977  001EA4  0012               	return	
  4978  001EA6                     l226:
  4979  001EA6  B003               	btfsc	digitalWrite@mode,0,c
  4980  001EA8  D002               	bra	u6425
  4981  001EAA  988C               	bcf	3980,4,c	;volatile
  4982  001EAC  D001               	bra	u6426
  4983  001EAE                     u6425:
  4984  001EAE  888C               	bsf	3980,4,c	;volatile
  4985  001EB0                     u6426:
  4986  001EB0  0012               	return	
  4987  001EB2                     l227:
  4988  001EB2  B003               	btfsc	digitalWrite@mode,0,c
  4989  001EB4  D002               	bra	u6435
  4990  001EB6  9A8C               	bcf	3980,5,c	;volatile
  4991  001EB8  D001               	bra	u6436
  4992  001EBA                     u6435:
  4993  001EBA  8A8C               	bsf	3980,5,c	;volatile
  4994  001EBC                     u6436:
  4995  001EBC  0012               	return	
  4996  001EBE                     l228:
  4997  001EBE  B003               	btfsc	digitalWrite@mode,0,c
  4998  001EC0  D002               	bra	u6445
  4999  001EC2  9C8C               	bcf	3980,6,c	;volatile
  5000  001EC4  D001               	bra	u6446
  5001  001EC6                     u6445:
  5002  001EC6  8C8C               	bsf	3980,6,c	;volatile
  5003  001EC8                     u6446:
  5004  001EC8  0012               	return	
  5005  001ECA                     l229:
  5006  001ECA  B003               	btfsc	digitalWrite@mode,0,c
  5007  001ECC  D002               	bra	u6455
  5008  001ECE  9E8C               	bcf	3980,7,c	;volatile
  5009  001ED0  D001               	bra	u6456
  5010  001ED2                     u6455:
  5011  001ED2  8E8C               	bsf	3980,7,c	;volatile
  5012  001ED4                     u6456:
  5013  001ED4  0012               	return	
  5014  001ED6                     l230:
  5015  001ED6  B003               	btfsc	digitalWrite@mode,0,c
  5016  001ED8  D002               	bra	u6465
  5017  001EDA  908A               	bcf	3978,0,c	;volatile
  5018  001EDC  D001               	bra	u6466
  5019  001EDE                     u6465:
  5020  001EDE  808A               	bsf	3978,0,c	;volatile
  5021  001EE0                     u6466:
  5022  001EE0  0012               	return	
  5023  001EE2                     l231:
  5024  001EE2  B003               	btfsc	digitalWrite@mode,0,c
  5025  001EE4  D002               	bra	u6475
  5026  001EE6  928A               	bcf	3978,1,c	;volatile
  5027  001EE8  D001               	bra	u6476
  5028  001EEA                     u6475:
  5029  001EEA  828A               	bsf	3978,1,c	;volatile
  5030  001EEC                     u6476:
  5031  001EEC  0012               	return	
  5032  001EEE                     l232:
  5033  001EEE  B003               	btfsc	digitalWrite@mode,0,c
  5034  001EF0  D002               	bra	u6485
  5035  001EF2  948A               	bcf	3978,2,c	;volatile
  5036  001EF4  D001               	bra	u6486
  5037  001EF6                     u6485:
  5038  001EF6  848A               	bsf	3978,2,c	;volatile
  5039  001EF8                     u6486:
  5040  001EF8  0012               	return	
  5041  001EFA                     l233:
  5042  001EFA  B003               	btfsc	digitalWrite@mode,0,c
  5043  001EFC  D002               	bra	u6495
  5044  001EFE  968A               	bcf	3978,3,c	;volatile
  5045  001F00  D001               	bra	u6496
  5046  001F02                     u6495:
  5047  001F02  868A               	bsf	3978,3,c	;volatile
  5048  001F04                     u6496:
  5049  001F04  0012               	return	
  5050  001F06                     l234:
  5051  001F06  B003               	btfsc	digitalWrite@mode,0,c
  5052  001F08  D002               	bra	u6505
  5053  001F0A  988A               	bcf	3978,4,c	;volatile
  5054  001F0C  D001               	bra	u6506
  5055  001F0E                     u6505:
  5056  001F0E  888A               	bsf	3978,4,c	;volatile
  5057  001F10                     u6506:
  5058  001F10  0012               	return	
  5059  001F12                     l235:
  5060  001F12  B003               	btfsc	digitalWrite@mode,0,c
  5061  001F14  D002               	bra	u6515
  5062  001F16  9A8A               	bcf	3978,5,c	;volatile
  5063  001F18  D001               	bra	u6516
  5064  001F1A                     u6515:
  5065  001F1A  8A8A               	bsf	3978,5,c	;volatile
  5066  001F1C                     u6516:
  5067  001F1C  0012               	return	
  5068  001F1E                     l236:
  5069  001F1E  B003               	btfsc	digitalWrite@mode,0,c
  5070  001F20  D002               	bra	u6525
  5071  001F22  9C8A               	bcf	3978,6,c	;volatile
  5072  001F24  D001               	bra	u6526
  5073  001F26                     u6525:
  5074  001F26  8C8A               	bsf	3978,6,c	;volatile
  5075  001F28                     u6526:
  5076  001F28  0012               	return	
  5077  001F2A                     l237:
  5078  001F2A  B003               	btfsc	digitalWrite@mode,0,c
  5079  001F2C  D002               	bra	u6535
  5080  001F2E  9E8A               	bcf	3978,7,c	;volatile
  5081  001F30  D001               	bra	u6536
  5082  001F32                     u6535:
  5083  001F32  8E8A               	bsf	3978,7,c	;volatile
  5084  001F34                     u6536:
  5085                           
  5086                           ;spi.c: 113: }
  5087                           
  5088                           ;spi.c: 112: default: break;
  5089  001F34  0012               	return	
  5090  001F36                     l5139:
  5091  001F36  5005               	movf	digitalWrite@pin,w,c
  5092                           
  5093                           ; Switch size 1, requested type "space"
  5094                           ; Number of cases is 35, Range of values is 2 to 40
  5095                           ; switch strategies available:
  5096                           ; Name         Instructions Cycles
  5097                           ; simple_byte          106    54 (average)
  5098                           ;	Chosen strategy is simple_byte
  5099  001F38  0A02               	xorlw	2	; case 2
  5100  001F3A  B4D8               	btfsc	status,2,c
  5101  001F3C  D72A               	goto	l202
  5102  001F3E  0A01               	xorlw	1	; case 3
  5103  001F40  B4D8               	btfsc	status,2,c
  5104  001F42  D72D               	goto	l204
  5105  001F44  0A07               	xorlw	7	; case 4
  5106  001F46  B4D8               	btfsc	status,2,c
  5107  001F48  D730               	goto	l205
  5108  001F4A  0A01               	xorlw	1	; case 5
  5109  001F4C  B4D8               	btfsc	status,2,c
  5110  001F4E  D733               	goto	l206
  5111  001F50  0A03               	xorlw	3	; case 6
  5112  001F52  B4D8               	btfsc	status,2,c
  5113  001F54  D736               	goto	l207
  5114  001F56  0A01               	xorlw	1	; case 7
  5115  001F58  B4D8               	btfsc	status,2,c
  5116  001F5A  D739               	goto	l208
  5117  001F5C  0A0F               	xorlw	15	; case 8
  5118  001F5E  B4D8               	btfsc	status,2,c
  5119  001F60  D73C               	goto	l209
  5120  001F62  0A01               	xorlw	1	; case 9
  5121  001F64  B4D8               	btfsc	status,2,c
  5122  001F66  D73F               	goto	l210
  5123  001F68  0A03               	xorlw	3	; case 10
  5124  001F6A  B4D8               	btfsc	status,2,c
  5125  001F6C  D742               	goto	l211
  5126  001F6E  0A07               	xorlw	7	; case 13
  5127  001F70  B4D8               	btfsc	status,2,c
  5128  001F72  D745               	goto	l212
  5129  001F74  0A03               	xorlw	3	; case 14
  5130  001F76  B4D8               	btfsc	status,2,c
  5131  001F78  D748               	goto	l213
  5132  001F7A  0A01               	xorlw	1	; case 15
  5133  001F7C  B4D8               	btfsc	status,2,c
  5134  001F7E  D74B               	goto	l214
  5135  001F80  0A1F               	xorlw	31	; case 16
  5136  001F82  B4D8               	btfsc	status,2,c
  5137  001F84  D74E               	goto	l215
  5138  001F86  0A01               	xorlw	1	; case 17
  5139  001F88  B4D8               	btfsc	status,2,c
  5140  001F8A  D751               	goto	l216
  5141  001F8C  0A03               	xorlw	3	; case 18
  5142  001F8E  B4D8               	btfsc	status,2,c
  5143  001F90  D754               	goto	l217
  5144  001F92  0A01               	xorlw	1	; case 19
  5145  001F94  B4D8               	btfsc	status,2,c
  5146  001F96  D757               	goto	l218
  5147  001F98  0A07               	xorlw	7	; case 20
  5148  001F9A  B4D8               	btfsc	status,2,c
  5149  001F9C  D75A               	goto	l219
  5150  001F9E  0A01               	xorlw	1	; case 21
  5151  001FA0  B4D8               	btfsc	status,2,c
  5152  001FA2  D75D               	goto	l220
  5153  001FA4  0A03               	xorlw	3	; case 22
  5154  001FA6  B4D8               	btfsc	status,2,c
  5155  001FA8  D760               	goto	l221
  5156  001FAA  0A01               	xorlw	1	; case 23
  5157  001FAC  B4D8               	btfsc	status,2,c
  5158  001FAE  D763               	goto	l222
  5159  001FB0  0A0F               	xorlw	15	; case 24
  5160  001FB2  B4D8               	btfsc	status,2,c
  5161  001FB4  D766               	goto	l223
  5162  001FB6  0A01               	xorlw	1	; case 25
  5163  001FB8  B4D8               	btfsc	status,2,c
  5164  001FBA  D769               	goto	l224
  5165  001FBC  0A03               	xorlw	3	; case 26
  5166  001FBE  B4D8               	btfsc	status,2,c
  5167  001FC0  D76C               	goto	l225
  5168  001FC2  0A01               	xorlw	1	; case 27
  5169  001FC4  B4D8               	btfsc	status,2,c
  5170  001FC6  D76F               	goto	l226
  5171  001FC8  0A07               	xorlw	7	; case 28
  5172  001FCA  B4D8               	btfsc	status,2,c
  5173  001FCC  D772               	goto	l227
  5174  001FCE  0A01               	xorlw	1	; case 29
  5175  001FD0  B4D8               	btfsc	status,2,c
  5176  001FD2  D775               	goto	l228
  5177  001FD4  0A03               	xorlw	3	; case 30
  5178  001FD6  B4D8               	btfsc	status,2,c
  5179  001FD8  D778               	goto	l229
  5180  001FDA  0A3F               	xorlw	63	; case 33
  5181  001FDC  B4D8               	btfsc	status,2,c
  5182  001FDE  D77B               	goto	l230
  5183  001FE0  0A03               	xorlw	3	; case 34
  5184  001FE2  B4D8               	btfsc	status,2,c
  5185  001FE4  D77E               	goto	l231
  5186  001FE6  0A01               	xorlw	1	; case 35
  5187  001FE8  B4D8               	btfsc	status,2,c
  5188  001FEA  D781               	goto	l232
  5189  001FEC  0A07               	xorlw	7	; case 36
  5190  001FEE  B4D8               	btfsc	status,2,c
  5191  001FF0  D784               	goto	l233
  5192  001FF2  0A01               	xorlw	1	; case 37
  5193  001FF4  B4D8               	btfsc	status,2,c
  5194  001FF6  D787               	goto	l234
  5195  001FF8  0A03               	xorlw	3	; case 38
  5196  001FFA  B4D8               	btfsc	status,2,c
  5197  001FFC  D78A               	goto	l235
  5198  001FFE  0A01               	xorlw	1	; case 39
  5199  002000  B4D8               	btfsc	status,2,c
  5200  002002  D78D               	goto	l236
  5201  002004  0A0F               	xorlw	15	; case 40
  5202  002006  A4D8               	btfss	status,2,c
  5203  002008  0012               	return	
  5204  00200A  D78F               	goto	l237
  5205  00200C                     __end_of_digitalWrite:
  5206                           	opt stack 0
  5207                           tblptru	equ	0xFF8
  5208                           tblptrh	equ	0xFF7
  5209                           tblptrl	equ	0xFF6
  5210                           tablat	equ	0xFF5
  5211                           prodh	equ	0xFF4
  5212                           prodl	equ	0xFF3
  5213                           intcon	equ	0xFF2
  5214                           indf0	equ	0xFEF
  5215                           postinc0	equ	0xFEE
  5216                           fsr0h	equ	0xFEA
  5217                           fsr0l	equ	0xFE9
  5218                           wreg	equ	0xFE8
  5219                           indf2	equ	0xFDF
  5220                           postinc2	equ	0xFDE
  5221                           postdec2	equ	0xFDD
  5222                           fsr2h	equ	0xFDA
  5223                           fsr2l	equ	0xFD9
  5224                           status	equ	0xFD8
  5225                           
  5226 ;; *************** function _millis *****************
  5227 ;; Defined at:
  5228 ;;		line 173 in file "../../../RF24_c/utility/XC8/spi.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;		None
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;		None
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  4    2[COMRAM] long 
  5235 ;; Registers used:
  5236 ;;		None
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5242 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5245 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5246 ;;Total ram usage:        4 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; Hardware stack levels required when called:    1
  5249 ;; This function calls:
  5250 ;;		Nothing
  5251 ;; This function is called by:
  5252 ;;		_RF24_txStandBy_t
  5253 ;;		_RF24N_write
  5254 ;;		_RF24_writeBlocking
  5255 ;;		_RF24N_write_
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text29
  5260  0038EA                     __ptext29:
  5261                           	opt stack 0
  5262  0038EA                     _millis:
  5263                           	opt stack 26
  5264                           
  5265                           ;spi.c: 175: return mtime;
  5266                           
  5267                           ;incstack = 0
  5268  0038EA  C03E  F003         	movff	_mtime,?_millis
  5269  0038EE  C03F  F004         	movff	_mtime+1,?_millis+1
  5270  0038F2  C040  F005         	movff	_mtime+2,?_millis+2
  5271  0038F6  C041  F006         	movff	_mtime+3,?_millis+3
  5272  0038FA  0012               	return		;funcret
  5273  0038FC                     __end_of_millis:
  5274                           	opt stack 0
  5275                           tblptru	equ	0xFF8
  5276                           tblptrh	equ	0xFF7
  5277                           tblptrl	equ	0xFF6
  5278                           tablat	equ	0xFF5
  5279                           prodh	equ	0xFF4
  5280                           prodl	equ	0xFF3
  5281                           intcon	equ	0xFF2
  5282                           indf0	equ	0xFEF
  5283                           postinc0	equ	0xFEE
  5284                           fsr0h	equ	0xFEA
  5285                           fsr0l	equ	0xFE9
  5286                           wreg	equ	0xFE8
  5287                           indf2	equ	0xFDF
  5288                           postinc2	equ	0xFDE
  5289                           postdec2	equ	0xFDD
  5290                           fsr2h	equ	0xFDA
  5291                           fsr2l	equ	0xFD9
  5292                           status	equ	0xFD8
  5293                           
  5294 ;; *************** function _delayMicroseconds *****************
  5295 ;; Defined at:
  5296 ;;		line 210 in file "../../../RF24_c/utility/XC8/spi.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  d               1    wreg     unsigned char 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  d               1    9[COMRAM] unsigned char 
  5301 ;;  j               2   12[COMRAM] unsigned int 
  5302 ;;  i               2   10[COMRAM] unsigned int 
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  1    wreg      void 
  5305 ;; Registers used:
  5306 ;;		wreg, status,2, status,0
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5313 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5316 ;;Total ram usage:       12 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; Hardware stack levels required when called:    1
  5319 ;; This function calls:
  5320 ;;		Nothing
  5321 ;; This function is called by:
  5322 ;;		_RF24_csn_d
  5323 ;;		_RF24_stopListening
  5324 ;;		_RF24_startWrite
  5325 ;;		_RF24N_write_
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text30
  5330  0033EA                     __ptext30:
  5331                           	opt stack 0
  5332  0033EA                     _delayMicroseconds:
  5333                           	opt stack 24
  5334                           
  5335                           ;incstack = 0
  5336                           ;delayMicroseconds@d stored from wreg
  5337  0033EA  6E0A               	movwf	delayMicroseconds@d,c
  5338                           
  5339                           ;spi.c: 212: unsigned int i,j;
  5340                           ;spi.c: 213: for(i=0;i<d;i++)
  5341  0033EC  0E00               	movlw	0
  5342  0033EE  6E0C               	movwf	delayMicroseconds@i+1,c
  5343  0033F0  0E00               	movlw	0
  5344  0033F2  6E0B               	movwf	delayMicroseconds@i,c
  5345  0033F4  D010               	goto	l5155
  5346  0033F6                     l5143:
  5347                           
  5348                           ;spi.c: 214: for (j =0 ; j < (32000000/(4000000l)); j++)
  5349  0033F6  0E00               	movlw	0
  5350  0033F8  6E0E               	movwf	delayMicroseconds@j+1,c
  5351  0033FA  0E00               	movlw	0
  5352  0033FC  6E0D               	movwf	delayMicroseconds@j,c
  5353  0033FE                     l5145:
  5354  0033FE  500E               	movf	delayMicroseconds@j+1,w,c
  5355  003400  E108               	bnz	l5153
  5356  003402  0E08               	movlw	8
  5357  003404  5C0D               	subwf	delayMicroseconds@j,w,c
  5358  003406  B0D8               	btfsc	status,0,c
  5359  003408  D004               	goto	l5153
  5360  00340A  F000               	nop		;# 
  5361  00340C  4A0D               	infsnz	delayMicroseconds@j,f,c
  5362  00340E  2A0E               	incf	delayMicroseconds@j+1,f,c
  5363  003410  D7F6               	goto	l5145
  5364  003412                     l5153:
  5365  003412  4A0B               	infsnz	delayMicroseconds@i,f,c
  5366  003414  2A0C               	incf	delayMicroseconds@i+1,f,c
  5367  003416                     l5155:
  5368  003416  500A               	movf	delayMicroseconds@d,w,c
  5369  003418  6E03               	movwf	??_delayMicroseconds& (0+255),c
  5370  00341A  6A04               	clrf	(??_delayMicroseconds+1)& (0+255),c
  5371  00341C  5003               	movf	??_delayMicroseconds,w,c
  5372  00341E  5C0B               	subwf	delayMicroseconds@i,w,c
  5373  003420  5004               	movf	??_delayMicroseconds+1,w,c
  5374  003422  580C               	subwfb	delayMicroseconds@i+1,w,c
  5375  003424  B0D8               	btfsc	status,0,c
  5376  003426  0012               	return	
  5377  003428  D7E6               	goto	l5143
  5378  00342A                     __end_of_delayMicroseconds:
  5379                           	opt stack 0
  5380                           tblptru	equ	0xFF8
  5381                           tblptrh	equ	0xFF7
  5382                           tblptrl	equ	0xFF6
  5383                           tablat	equ	0xFF5
  5384                           prodh	equ	0xFF4
  5385                           prodl	equ	0xFF3
  5386                           intcon	equ	0xFF2
  5387                           indf0	equ	0xFEF
  5388                           postinc0	equ	0xFEE
  5389                           fsr0h	equ	0xFEA
  5390                           fsr0l	equ	0xFE9
  5391                           wreg	equ	0xFE8
  5392                           indf2	equ	0xFDF
  5393                           postinc2	equ	0xFDE
  5394                           postdec2	equ	0xFDD
  5395                           fsr2h	equ	0xFDA
  5396                           fsr2l	equ	0xFD9
  5397                           status	equ	0xFD8
  5398                           
  5399 ;; *************** function _RF24_write_payload *****************
  5400 ;; Defined at:
  5401 ;;		line 224 in file "../../../RF24_c/RF24_c.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;  buf             2   15[COMRAM] PTR const void 
  5404 ;;		 -> rn.frame_buffer(32), rn(370), 
  5405 ;;  data_len        1   17[COMRAM] unsigned char 
  5406 ;;  writeType       1   18[COMRAM] const unsigned char 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  current         2   31[COMRAM] PTR const unsigned char 
  5409 ;;		 -> rn.frame_buffer(32), rn(370), 
  5410 ;;  blank_len       1   30[COMRAM] unsigned char 
  5411 ;;  status          1   29[COMRAM] unsigned char 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  1    wreg      unsigned char 
  5414 ;; Registers used:
  5415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5425 ;;Total ram usage:       22 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; Hardware stack levels required when called:    4
  5428 ;; This function calls:
  5429 ;;		_RF24_beginTransaction
  5430 ;;		_RF24_endTransaction
  5431 ;;		_SPI_transfer
  5432 ;; This function is called by:
  5433 ;;		_RF24_startFastWrite
  5434 ;;		_RF24_startWrite
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text31
  5439  002C14                     __ptext31:
  5440                           	opt stack 0
  5441  002C14                     _RF24_write_payload:
  5442                           	opt stack 20
  5443                           
  5444                           ;RF24_c.c: 226: uint8_t status;
  5445                           ;RF24_c.c: 227: const uint8_t* current = (const uint8_t*)(buf);
  5446                           
  5447                           ;incstack = 0
  5448  002C14  C010  F020         	movff	RF24_write_payload@buf,RF24_write_payload@current
  5449  002C18  C011  F021         	movff	RF24_write_payload@buf+1,RF24_write_payload@current+1
  5450                           
  5451                           ;RF24_c.c: 228: uint8_t blank_len;
  5452                           ;RF24_c.c: 230: data_len = (data_len<rf.payload_size?data_len:rf.payload_size);
  5453  002C1C  5047               	movf	_rf+5,w,c
  5454  002C1E  5C12               	subwf	RF24_write_payload@data_len,w,c
  5455  002C20  A0D8               	btfss	status,0,c
  5456  002C22  D003               	goto	l378
  5457  002C24  C047  F022         	movff	_rf+5,_RF24_write_payload$1892
  5458  002C28  D002               	goto	L3
  5459  002C2A                     l378:
  5460  002C2A  C012  F022         	movff	RF24_write_payload@data_len,_RF24_write_payload$1892
  5461  002C2E                     L3:
  5462  002C2E  6A23               	clrf	_RF24_write_payload$1892+1,c
  5463  002C30  C022  F012         	movff	_RF24_write_payload$1892,RF24_write_payload@data_len
  5464                           
  5465                           ;RF24_c.c: 231: blank_len = rf.dynamic_payloads_enabled ? 0 : rf.payload_size - data_len
      +                          ;
  5466  002C34  5048               	movf	_rf+6,w,c
  5467  002C36  A4D8               	btfss	status,2,c
  5468  002C38  D00E               	goto	l5209
  5469  002C3A  5012               	movf	RF24_write_payload@data_len,w,c
  5470  002C3C  6E14               	movwf	??_RF24_write_payload& (0+255),c
  5471  002C3E  6A15               	clrf	(??_RF24_write_payload+1)& (0+255),c
  5472  002C40  1E14               	comf	??_RF24_write_payload,f,c
  5473  002C42  1E15               	comf	??_RF24_write_payload+1,f,c
  5474  002C44  4A14               	infsnz	??_RF24_write_payload,f,c
  5475  002C46  2A15               	incf	??_RF24_write_payload+1,f,c
  5476  002C48  5047               	movf	_rf+5,w,c
  5477  002C4A  2414               	addwf	??_RF24_write_payload,w,c
  5478  002C4C  6E24               	movwf	_RF24_write_payload$1893,c
  5479  002C4E  0E00               	movlw	0
  5480  002C50  2015               	addwfc	??_RF24_write_payload+1,w,c
  5481  002C52  6E25               	movwf	_RF24_write_payload$1893+1,c
  5482  002C54  D004               	goto	l5211
  5483  002C56                     l5209:
  5484  002C56  0E00               	movlw	0
  5485  002C58  6E25               	movwf	_RF24_write_payload$1893+1,c
  5486  002C5A  0E00               	movlw	0
  5487  002C5C  6E24               	movwf	_RF24_write_payload$1893,c
  5488  002C5E                     l5211:
  5489  002C5E  C024  F01F         	movff	_RF24_write_payload$1893,RF24_write_payload@blank_len
  5490                           
  5491                           ;RF24_c.c: 234: ;
  5492                           ;RF24_c.c: 255: RF24_beginTransaction();
  5493  002C62  EC9F  F01C         	call	_RF24_beginTransaction	;wreg free
  5494                           
  5495                           ;RF24_c.c: 256: status = SPI_transfer( writeType );
  5496  002C66  5013               	movf	RF24_write_payload@writeType,w,c
  5497  002C68  EC7E  F01C         	call	_SPI_transfer
  5498  002C6C  6E1E               	movwf	RF24_write_payload@status,c
  5499                           
  5500                           ;RF24_c.c: 257: while ( data_len-- ) {
  5501  002C6E  D009               	goto	l5221
  5502  002C70                     l5217:
  5503                           
  5504                           ;RF24_c.c: 258: SPI_transfer(*current++);
  5505  002C70  C020  FFD9         	movff	RF24_write_payload@current,fsr2l
  5506  002C74  C021  FFDA         	movff	RF24_write_payload@current+1,fsr2h
  5507  002C78  50DF               	movf	indf2,w,c
  5508  002C7A  EC7E  F01C         	call	_SPI_transfer
  5509  002C7E  4A20               	infsnz	RF24_write_payload@current,f,c
  5510  002C80  2A21               	incf	RF24_write_payload@current+1,f,c
  5511  002C82                     l5221:
  5512  002C82  0612               	decf	RF24_write_payload@data_len,f,c
  5513  002C84  2812               	incf	RF24_write_payload@data_len,w,c
  5514  002C86  B4D8               	btfsc	status,2,c
  5515  002C88  D004               	goto	l5225
  5516  002C8A  D7F2               	goto	l5217
  5517  002C8C                     l5223:
  5518                           
  5519                           ;RF24_c.c: 261: SPI_transfer(0);
  5520  002C8C  0E00               	movlw	0
  5521  002C8E  EC7E  F01C         	call	_SPI_transfer
  5522  002C92                     l5225:
  5523  002C92  061F               	decf	RF24_write_payload@blank_len,f,c
  5524  002C94  281F               	incf	RF24_write_payload@blank_len,w,c
  5525  002C96  A4D8               	btfss	status,2,c
  5526  002C98  D7F9               	goto	l5223
  5527                           
  5528                           ;RF24_c.c: 262: }
  5529                           ;RF24_c.c: 263: RF24_endTransaction();
  5530  002C9A  EC9B  F01C         	call	_RF24_endTransaction	;wreg free
  5531  002C9E  0012               	return	
  5532  002CA0                     __end_of_RF24_write_payload:
  5533                           	opt stack 0
  5534                           tblptru	equ	0xFF8
  5535                           tblptrh	equ	0xFF7
  5536                           tblptrl	equ	0xFF6
  5537                           tablat	equ	0xFF5
  5538                           prodh	equ	0xFF4
  5539                           prodl	equ	0xFF3
  5540                           intcon	equ	0xFF2
  5541                           indf0	equ	0xFEF
  5542                           postinc0	equ	0xFEE
  5543                           fsr0h	equ	0xFEA
  5544                           fsr0l	equ	0xFE9
  5545                           wreg	equ	0xFE8
  5546                           indf2	equ	0xFDF
  5547                           postinc2	equ	0xFDE
  5548                           postdec2	equ	0xFDD
  5549                           fsr2h	equ	0xFDA
  5550                           fsr2l	equ	0xFD9
  5551                           status	equ	0xFD8
  5552                           
  5553 ;; *************** function _RF24_read_payload *****************
  5554 ;; Defined at:
  5555 ;;		line 272 in file "../../../RF24_c/RF24_c.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;  buf             2   15[COMRAM] PTR void 
  5558 ;;		 -> rn(370), 
  5559 ;;  data_len        1   17[COMRAM] unsigned char 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  current         2   28[COMRAM] PTR unsigned char 
  5562 ;;		 -> rn(370), 
  5563 ;;  blank_len       1   27[COMRAM] unsigned char 
  5564 ;;  status          1   26[COMRAM] unsigned char 
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  1    wreg      unsigned char 
  5567 ;; Registers used:
  5568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5574 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5578 ;;Total ram usage:       17 bytes
  5579 ;; Hardware stack levels used:    1
  5580 ;; Hardware stack levels required when called:    4
  5581 ;; This function calls:
  5582 ;;		_RF24_beginTransaction
  5583 ;;		_RF24_endTransaction
  5584 ;;		_SPI_transfer
  5585 ;; This function is called by:
  5586 ;;		_RF24_read
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text32
  5591  002DA8                     __ptext32:
  5592                           	opt stack 0
  5593  002DA8                     _RF24_read_payload:
  5594                           	opt stack 23
  5595                           
  5596                           ;RF24_c.c: 274: uint8_t status;
  5597                           ;RF24_c.c: 275: uint8_t* current = (uint8_t*)(buf);
  5598                           
  5599                           ;incstack = 0
  5600  002DA8  C010  F01D         	movff	RF24_read_payload@buf,RF24_read_payload@current
  5601  002DAC  C011  F01E         	movff	RF24_read_payload@buf+1,RF24_read_payload@current+1
  5602                           
  5603                           ;RF24_c.c: 276: uint8_t blank_len;
  5604                           ;RF24_c.c: 278: if(data_len > rf.payload_size) data_len = rf.payload_size;
  5605  002DB0  5012               	movf	RF24_read_payload@data_len,w,c
  5606  002DB2  5C47               	subwf	_rf+5,w,c
  5607  002DB4  A0D8               	btfss	status,0,c
  5608  002DB6  C047  F012         	movff	_rf+5,RF24_read_payload@data_len
  5609                           
  5610                           ;RF24_c.c: 279: blank_len = rf.dynamic_payloads_enabled ? 0 : rf.payload_size - data_len
      +                          ;
  5611  002DBA  5048               	movf	_rf+6,w,c
  5612  002DBC  A4D8               	btfss	status,2,c
  5613  002DBE  D00E               	goto	l5273
  5614  002DC0  5012               	movf	RF24_read_payload@data_len,w,c
  5615  002DC2  6E13               	movwf	??_RF24_read_payload& (0+255),c
  5616  002DC4  6A14               	clrf	(??_RF24_read_payload+1)& (0+255),c
  5617  002DC6  1E13               	comf	??_RF24_read_payload,f,c
  5618  002DC8  1E14               	comf	??_RF24_read_payload+1,f,c
  5619  002DCA  4A13               	infsnz	??_RF24_read_payload,f,c
  5620  002DCC  2A14               	incf	??_RF24_read_payload+1,f,c
  5621  002DCE  5047               	movf	_rf+5,w,c
  5622  002DD0  2413               	addwf	??_RF24_read_payload,w,c
  5623  002DD2  6E1F               	movwf	_RF24_read_payload$1900,c
  5624  002DD4  0E00               	movlw	0
  5625  002DD6  2014               	addwfc	??_RF24_read_payload+1,w,c
  5626  002DD8  6E20               	movwf	_RF24_read_payload$1900+1,c
  5627  002DDA  D004               	goto	l5275
  5628  002DDC                     l5273:
  5629  002DDC  0E00               	movlw	0
  5630  002DDE  6E20               	movwf	_RF24_read_payload$1900+1,c
  5631  002DE0  0E00               	movlw	0
  5632  002DE2  6E1F               	movwf	_RF24_read_payload$1900,c
  5633  002DE4                     l5275:
  5634  002DE4  C01F  F01C         	movff	_RF24_read_payload$1900,RF24_read_payload@blank_len
  5635                           
  5636                           ;RF24_c.c: 283: ;
  5637                           ;RF24_c.c: 311: RF24_beginTransaction();
  5638  002DE8  EC9F  F01C         	call	_RF24_beginTransaction	;wreg free
  5639                           
  5640                           ;RF24_c.c: 312: status = SPI_transfer( 0x61 );
  5641  002DEC  0E61               	movlw	97
  5642  002DEE  EC7E  F01C         	call	_SPI_transfer
  5643  002DF2  6E1B               	movwf	RF24_read_payload@status,c
  5644                           
  5645                           ;RF24_c.c: 313: while ( data_len-- ) {
  5646  002DF4  D00A               	goto	l5285
  5647  002DF6                     l5281:
  5648                           
  5649                           ;RF24_c.c: 314: *current++ = SPI_transfer(0xFF);
  5650  002DF6  0EFF               	movlw	255
  5651  002DF8  EC7E  F01C         	call	_SPI_transfer
  5652  002DFC  C01D  FFD9         	movff	RF24_read_payload@current,fsr2l
  5653  002E00  C01E  FFDA         	movff	RF24_read_payload@current+1,fsr2h
  5654  002E04  6EDF               	movwf	indf2,c
  5655  002E06  4A1D               	infsnz	RF24_read_payload@current,f,c
  5656  002E08  2A1E               	incf	RF24_read_payload@current+1,f,c
  5657  002E0A                     l5285:
  5658  002E0A  0612               	decf	RF24_read_payload@data_len,f,c
  5659  002E0C  2812               	incf	RF24_read_payload@data_len,w,c
  5660  002E0E  B4D8               	btfsc	status,2,c
  5661  002E10  D004               	goto	l5289
  5662  002E12  D7F1               	goto	l5281
  5663  002E14                     l5287:
  5664                           
  5665                           ;RF24_c.c: 317: SPI_transfer(0xff);
  5666  002E14  0EFF               	movlw	255
  5667  002E16  EC7E  F01C         	call	_SPI_transfer
  5668  002E1A                     l5289:
  5669  002E1A  061C               	decf	RF24_read_payload@blank_len,f,c
  5670  002E1C  281C               	incf	RF24_read_payload@blank_len,w,c
  5671  002E1E  A4D8               	btfss	status,2,c
  5672  002E20  D7F9               	goto	l5287
  5673                           
  5674                           ;RF24_c.c: 318: }
  5675                           ;RF24_c.c: 319: RF24_endTransaction();
  5676  002E22  EC9B  F01C         	call	_RF24_endTransaction	;wreg free
  5677  002E26  0012               	return	
  5678  002E28                     __end_of_RF24_read_payload:
  5679                           	opt stack 0
  5680                           tblptru	equ	0xFF8
  5681                           tblptrh	equ	0xFF7
  5682                           tblptrl	equ	0xFF6
  5683                           tablat	equ	0xFF5
  5684                           prodh	equ	0xFF4
  5685                           prodl	equ	0xFF3
  5686                           intcon	equ	0xFF2
  5687                           indf0	equ	0xFEF
  5688                           postinc0	equ	0xFEE
  5689                           fsr0h	equ	0xFEA
  5690                           fsr0l	equ	0xFE9
  5691                           wreg	equ	0xFE8
  5692                           indf2	equ	0xFDF
  5693                           postinc2	equ	0xFDE
  5694                           postdec2	equ	0xFDD
  5695                           fsr2h	equ	0xFDA
  5696                           fsr2l	equ	0xFD9
  5697                           status	equ	0xFD8
  5698                           
  5699 ;; *************** function _RF24_spiTrans *****************
  5700 ;; Defined at:
  5701 ;;		line 327 in file "../../../RF24_c/RF24_c.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;  cmd             1    wreg     unsigned char 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  cmd             1   17[COMRAM] unsigned char 
  5706 ;;  status          1   18[COMRAM] unsigned char 
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  1    wreg      unsigned char 
  5709 ;; Registers used:
  5710 ;;		wreg, status,2, status,0, cstack
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5719 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5720 ;;Total ram usage:        4 bytes
  5721 ;; Hardware stack levels used:    1
  5722 ;; Hardware stack levels required when called:    4
  5723 ;; This function calls:
  5724 ;;		_RF24_beginTransaction
  5725 ;;		_RF24_endTransaction
  5726 ;;		_SPI_transfer
  5727 ;; This function is called by:
  5728 ;;		_RF24_flush_rx
  5729 ;;		_RF24_flush_tx
  5730 ;;		_RF24_get_status
  5731 ;;		_RF24_reUseTX
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           	psect	text33
  5736  0038AA                     __ptext33:
  5737                           	opt stack 0
  5738  0038AA                     _RF24_spiTrans:
  5739                           	opt stack 23
  5740                           
  5741                           ;incstack = 0
  5742                           ;RF24_spiTrans@cmd stored from wreg
  5743  0038AA  6E12               	movwf	RF24_spiTrans@cmd,c
  5744                           
  5745                           ;RF24_c.c: 329: uint8_t status;
  5746                           ;RF24_c.c: 331: RF24_beginTransaction();
  5747  0038AC  EC9F  F01C         	call	_RF24_beginTransaction	;wreg free
  5748                           
  5749                           ;RF24_c.c: 332: status = SPI_transfer( cmd );
  5750  0038B0  5012               	movf	RF24_spiTrans@cmd,w,c
  5751  0038B2  EC7E  F01C         	call	_SPI_transfer
  5752  0038B6  6E13               	movwf	RF24_spiTrans@status,c
  5753                           
  5754                           ;RF24_c.c: 333: RF24_endTransaction();
  5755  0038B8  EC9B  F01C         	call	_RF24_endTransaction	;wreg free
  5756                           
  5757                           ;RF24_c.c: 335: return status;
  5758  0038BC  5013               	movf	RF24_spiTrans@status,w,c
  5759  0038BE  0012               	return	
  5760  0038C0                     __end_of_RF24_spiTrans:
  5761                           	opt stack 0
  5762                           tblptru	equ	0xFF8
  5763                           tblptrh	equ	0xFF7
  5764                           tblptrl	equ	0xFF6
  5765                           tablat	equ	0xFF5
  5766                           prodh	equ	0xFF4
  5767                           prodl	equ	0xFF3
  5768                           intcon	equ	0xFF2
  5769                           indf0	equ	0xFEF
  5770                           postinc0	equ	0xFEE
  5771                           fsr0h	equ	0xFEA
  5772                           fsr0l	equ	0xFE9
  5773                           wreg	equ	0xFE8
  5774                           indf2	equ	0xFDF
  5775                           postinc2	equ	0xFDE
  5776                           postdec2	equ	0xFDD
  5777                           fsr2h	equ	0xFDA
  5778                           fsr2l	equ	0xFD9
  5779                           status	equ	0xFD8
  5780                           
  5781 ;; *************** function _RF24_get_status *****************
  5782 ;; Defined at:
  5783 ;;		line 355 in file "../../../RF24_c/RF24_c.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;		None
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;		None
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  1    wreg      unsigned char 
  5790 ;; Registers used:
  5791 ;;		wreg, status,2, status,0, cstack
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;Total ram usage:        0 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; Hardware stack levels required when called:    5
  5804 ;; This function calls:
  5805 ;;		_RF24_spiTrans
  5806 ;; This function is called by:
  5807 ;;		_RF24_writeFast_m
  5808 ;;		_RF24_txStandBy_t
  5809 ;;		_RF24_available_p
  5810 ;;		_RF24_write_m
  5811 ;;		_RF24_writeBlocking
  5812 ;;		_RF24_txStandBy
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text34
  5817  003926                     __ptext34:
  5818                           	opt stack 0
  5819  003926                     _RF24_get_status:
  5820                           	opt stack 22
  5821                           
  5822                           ;RF24_c.c: 357: return RF24_spiTrans( 0xFF);
  5823                           
  5824                           ;incstack = 0
  5825  003926  0EFF               	movlw	255
  5826  003928  EC55  F01C         	call	_RF24_spiTrans
  5827  00392C  0012               	return	
  5828  00392E                     __end_of_RF24_get_status:
  5829                           	opt stack 0
  5830                           tblptru	equ	0xFF8
  5831                           tblptrh	equ	0xFF7
  5832                           tblptrl	equ	0xFF6
  5833                           tablat	equ	0xFF5
  5834                           prodh	equ	0xFF4
  5835                           prodl	equ	0xFF3
  5836                           intcon	equ	0xFF2
  5837                           indf0	equ	0xFEF
  5838                           postinc0	equ	0xFEE
  5839                           fsr0h	equ	0xFEA
  5840                           fsr0l	equ	0xFE9
  5841                           wreg	equ	0xFE8
  5842                           indf2	equ	0xFDF
  5843                           postinc2	equ	0xFDE
  5844                           postdec2	equ	0xFDD
  5845                           fsr2h	equ	0xFDA
  5846                           fsr2l	equ	0xFD9
  5847                           status	equ	0xFD8
  5848                           
  5849 ;; *************** function _RF24_closeReadingPipe *****************
  5850 ;; Defined at:
  5851 ;;		line 1259 in file "../../../RF24_c/RF24_c.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;  pipe            1    wreg     unsigned char 
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;  pipe            1   24[COMRAM] unsigned char 
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      void 
  5858 ;; Registers used:
  5859 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5867 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5868 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5869 ;;Total ram usage:        5 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:    5
  5872 ;; This function calls:
  5873 ;;		_RF24_read_register_d
  5874 ;;		_RF24_write_register_d
  5875 ;; This function is called by:
  5876 ;;		_RF24_startListening
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           	psect	text35
  5881  00342A                     __ptext35:
  5882                           	opt stack 0
  5883  00342A                     _RF24_closeReadingPipe:
  5884                           	opt stack 22
  5885                           
  5886                           ;incstack = 0
  5887                           ;RF24_closeReadingPipe@pipe stored from wreg
  5888  00342A  6E19               	movwf	RF24_closeReadingPipe@pipe,c
  5889                           
  5890                           ;RF24_c.c: 1261: RF24_write_register_d(0x02,RF24_read_register_d(0x02) & ~(1<<((*(&child
      +                          _pipe_enable[pipe])))));
  5891  00342C  5019               	movf	RF24_closeReadingPipe@pipe,w,c
  5892  00342E  0D01               	mullw	1
  5893  003430  0E0D               	movlw	low _child_pipe_enable
  5894  003432  24F3               	addwf	prodl,w,c
  5895  003434  6EF6               	movwf	tblptrl,c
  5896  003436  0E10               	movlw	high _child_pipe_enable
  5897  003438  20F4               	addwfc	prodh,w,c
  5898  00343A  6EF7               	movwf	tblptrh,c
  5899  00343C                     	if	0	;There are less than 3 active tblptr bytes
  5900  00343C                     	endif
  5901  00343C  0008               	tblrd		*
  5902  00343E  CFF5 F015          	movff	tablat,??_RF24_closeReadingPipe
  5903  003442  0E01               	movlw	1
  5904  003444  6E16               	movwf	(??_RF24_closeReadingPipe+1)& (0+255),c
  5905  003446  2A15               	incf	??_RF24_closeReadingPipe,f,c
  5906  003448  D002               	goto	u6784
  5907  00344A                     u6785:
  5908  00344A  90D8               	bcf	status,0,c
  5909  00344C  3616               	rlcf	??_RF24_closeReadingPipe+1,f,c
  5910  00344E                     u6784:
  5911  00344E  2E15               	decfsz	??_RF24_closeReadingPipe,f,c
  5912  003450  D7FC               	goto	u6785
  5913  003452  5016               	movf	??_RF24_closeReadingPipe+1,w,c
  5914  003454  0AFF               	xorlw	255
  5915  003456  6E17               	movwf	(??_RF24_closeReadingPipe+2)& (0+255),c
  5916  003458  0E02               	movlw	2
  5917  00345A  EC07  F01C         	call	_RF24_read_register_d
  5918  00345E  1417               	andwf	??_RF24_closeReadingPipe+2,w,c
  5919  003460  6E12               	movwf	RF24_write_register_d@value,c
  5920  003462  0E02               	movlw	2
  5921  003464  ECF7  F01B         	call	_RF24_write_register_d
  5922  003468  0012               	return		;funcret
  5923  00346A                     __end_of_RF24_closeReadingPipe:
  5924                           	opt stack 0
  5925                           tblptru	equ	0xFF8
  5926                           tblptrh	equ	0xFF7
  5927                           tblptrl	equ	0xFF6
  5928                           tablat	equ	0xFF5
  5929                           prodh	equ	0xFF4
  5930                           prodl	equ	0xFF3
  5931                           intcon	equ	0xFF2
  5932                           indf0	equ	0xFEF
  5933                           postinc0	equ	0xFEE
  5934                           fsr0h	equ	0xFEA
  5935                           fsr0l	equ	0xFE9
  5936                           wreg	equ	0xFE8
  5937                           indf2	equ	0xFDF
  5938                           postinc2	equ	0xFDE
  5939                           postdec2	equ	0xFDD
  5940                           fsr2h	equ	0xFDA
  5941                           fsr2l	equ	0xFD9
  5942                           status	equ	0xFD8
  5943                           
  5944 ;; *************** function _RF24_stopListening *****************
  5945 ;; Defined at:
  5946 ;;		line 754 in file "../../../RF24_c/RF24_c.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;		None
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;		None
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  1    wreg      void 
  5953 ;; Registers used:
  5954 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5962 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5964 ;;Total ram usage:        2 bytes
  5965 ;; Hardware stack levels used:    1
  5966 ;; Hardware stack levels required when called:    6
  5967 ;; This function calls:
  5968 ;;		_RF24_ce_d
  5969 ;;		_RF24_flush_tx
  5970 ;;		_RF24_read_register_d
  5971 ;;		_RF24_write_register_d
  5972 ;;		_delayMicroseconds
  5973 ;; This function is called by:
  5974 ;;		_RF24_txStandBy_t
  5975 ;;		_RF24N_enqueue
  5976 ;;		_RF24N_write_to_pipe
  5977 ;;		_RF24N_write_
  5978 ;; This function uses a non-reentrant model
  5979 ;;
  5980                           
  5981                           	psect	text36
  5982  0030BE                     __ptext36:
  5983                           	opt stack 0
  5984  0030BE                     _RF24_stopListening:
  5985                           	opt stack 20
  5986                           
  5987                           ;RF24_c.c: 756: RF24_ce_d(0);
  5988                           
  5989                           ;incstack = 0
  5990  0030BE  0E00               	movlw	0
  5991  0030C0  EC60  F01C         	call	_RF24_ce_d
  5992                           
  5993                           ;RF24_c.c: 758: delayMicroseconds(rf.txDelay);
  5994  0030C4  504F               	movf	_rf+13,w,c
  5995  0030C6  ECF5  F019         	call	_delayMicroseconds
  5996                           
  5997                           ;RF24_c.c: 760: if(RF24_read_register_d(0x1D) & (1<<(1))){
  5998  0030CA  0E1D               	movlw	29
  5999  0030CC  EC07  F01C         	call	_RF24_read_register_d
  6000  0030D0  6E15               	movwf	??_RF24_stopListening& (0+255),c
  6001  0030D2  A215               	btfss	??_RF24_stopListening,1,c
  6002  0030D4  D005               	goto	l459
  6003                           
  6004                           ;RF24_c.c: 761: delayMicroseconds(rf.txDelay);
  6005  0030D6  504F               	movf	_rf+13,w,c
  6006  0030D8  ECF5  F019         	call	_delayMicroseconds
  6007                           
  6008                           ;RF24_c.c: 762: RF24_flush_tx();
  6009  0030DC  ECA3  F01C         	call	_RF24_flush_tx	;wreg free
  6010  0030E0                     l459:
  6011                           
  6012                           ;RF24_c.c: 763: }
  6013                           ;RF24_c.c: 765: RF24_write_register_d(0x00, ( RF24_read_register_d(0x00) ) & ~(1<<(0)) )
      +                          ;
  6014  0030E0  0E00               	movlw	0
  6015  0030E2  EC07  F01C         	call	_RF24_read_register_d
  6016  0030E6  0BFE               	andlw	254
  6017  0030E8  6E12               	movwf	RF24_write_register_d@value,c
  6018  0030EA  0E00               	movlw	0
  6019  0030EC  ECF7  F01B         	call	_RF24_write_register_d
  6020                           
  6021                           ;RF24_c.c: 774: RF24_write_register_d(0x02,RF24_read_register_d(0x02) | (1<<((*(&child_p
      +                          ipe_enable[0])))));
  6022  0030F0  0E0D               	movlw	low _child_pipe_enable
  6023  0030F2  6EF6               	movwf	tblptrl,c
  6024  0030F4                     	if	1	;There is more than 1 active tblptr byte
  6025  0030F4  0E10               	movlw	high _child_pipe_enable
  6026  0030F6  6EF7               	movwf	tblptrh,c
  6027  0030F8                     	endif
  6028  0030F8                     	if	0	;There are less than 3 active tblptr bytes
  6029  0030F8                     	endif
  6030  0030F8  0008               	tblrd		*
  6031  0030FA  CFF5 F015          	movff	tablat,??_RF24_stopListening
  6032  0030FE  0E01               	movlw	1
  6033  003100  6E16               	movwf	(??_RF24_stopListening+1)& (0+255),c
  6034  003102  2A15               	incf	??_RF24_stopListening,f,c
  6035  003104  D002               	goto	u6724
  6036  003106                     u6725:
  6037  003106  90D8               	bcf	status,0,c
  6038  003108  3616               	rlcf	??_RF24_stopListening+1,f,c
  6039  00310A                     u6724:
  6040  00310A  2E15               	decfsz	??_RF24_stopListening,f,c
  6041  00310C  D7FC               	goto	u6725
  6042  00310E  0E02               	movlw	2
  6043  003110  EC07  F01C         	call	_RF24_read_register_d
  6044  003114  1016               	iorwf	??_RF24_stopListening+1,w,c
  6045  003116  6E12               	movwf	RF24_write_register_d@value,c
  6046  003118  0E02               	movlw	2
  6047  00311A  ECF7  F01B         	call	_RF24_write_register_d
  6048  00311E  0012               	return		;funcret
  6049  003120                     __end_of_RF24_stopListening:
  6050                           	opt stack 0
  6051                           tblptru	equ	0xFF8
  6052                           tblptrh	equ	0xFF7
  6053                           tblptrl	equ	0xFF6
  6054                           tablat	equ	0xFF5
  6055                           prodh	equ	0xFF4
  6056                           prodl	equ	0xFF3
  6057                           intcon	equ	0xFF2
  6058                           indf0	equ	0xFEF
  6059                           postinc0	equ	0xFEE
  6060                           fsr0h	equ	0xFEA
  6061                           fsr0l	equ	0xFE9
  6062                           wreg	equ	0xFE8
  6063                           indf2	equ	0xFDF
  6064                           postinc2	equ	0xFDE
  6065                           postdec2	equ	0xFDD
  6066                           fsr2h	equ	0xFDA
  6067                           fsr2l	equ	0xFD9
  6068                           status	equ	0xFD8
  6069                           
  6070 ;; *************** function _RF24_startFastWrite *****************
  6071 ;; Defined at:
  6072 ;;		line 954 in file "../../../RF24_c/RF24_c.c"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;  buf             2   37[COMRAM] PTR const void 
  6075 ;;		 -> rn.frame_buffer(32), rn(370), 
  6076 ;;  len             1   39[COMRAM] unsigned char 
  6077 ;;  multicast       1   40[COMRAM] const unsigned char 
  6078 ;;  startTx         1   41[COMRAM] unsigned char 
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;		None
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  1    wreg      void 
  6083 ;; Registers used:
  6084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6090 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6094 ;;Total ram usage:        9 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; Hardware stack levels required when called:    5
  6097 ;; This function calls:
  6098 ;;		_RF24_ce_d
  6099 ;;		_RF24_write_payload
  6100 ;; This function is called by:
  6101 ;;		_RF24_writeFast_m
  6102 ;;		_RF24_write_m
  6103 ;;		_RF24_writeBlocking
  6104 ;; This function uses a non-reentrant model
  6105 ;;
  6106                           
  6107                           	psect	text37
  6108  0034EA                     __ptext37:
  6109                           	opt stack 0
  6110  0034EA                     _RF24_startFastWrite:
  6111                           	opt stack 20
  6112                           
  6113                           ;RF24_c.c: 957: RF24_write_payload( buf, len,multicast ? 0xB0 : 0xA0 ) ;
  6114                           
  6115                           ;incstack = 0
  6116  0034EA  5029               	movf	RF24_startFastWrite@multicast,w,c
  6117  0034EC  A4D8               	btfss	status,2,c
  6118  0034EE  D004               	goto	l5313
  6119  0034F0  0E00               	movlw	0
  6120  0034F2  6E2E               	movwf	_RF24_startFastWrite$1970+1,c
  6121  0034F4  0EA0               	movlw	160
  6122  0034F6  D003               	goto	L4
  6123  0034F8                     l5313:
  6124  0034F8  0E00               	movlw	0
  6125  0034FA  6E2E               	movwf	_RF24_startFastWrite$1970+1,c
  6126  0034FC  0EB0               	movlw	176
  6127  0034FE                     L4:
  6128  0034FE  6E2D               	movwf	_RF24_startFastWrite$1970,c
  6129  003500  C026  F010         	movff	RF24_startFastWrite@buf,RF24_write_payload@buf
  6130  003504  C027  F011         	movff	RF24_startFastWrite@buf+1,RF24_write_payload@buf+1
  6131  003508  C028  F012         	movff	RF24_startFastWrite@len,RF24_write_payload@data_len
  6132  00350C  C02D  F013         	movff	_RF24_startFastWrite$1970,RF24_write_payload@writeType
  6133  003510  EC0A  F016         	call	_RF24_write_payload	;wreg free
  6134                           
  6135                           ;RF24_c.c: 958: if(startTx){
  6136  003514  502A               	movf	RF24_startFastWrite@startTx,w,c
  6137  003516  B4D8               	btfsc	status,2,c
  6138  003518  0012               	return	
  6139                           
  6140                           ;RF24_c.c: 959: RF24_ce_d(1);
  6141  00351A  0E01               	movlw	1
  6142  00351C  EC60  F01C         	call	_RF24_ce_d
  6143  003520  0012               	return	
  6144  003522                     __end_of_RF24_startFastWrite:
  6145                           	opt stack 0
  6146                           tblptru	equ	0xFF8
  6147                           tblptrh	equ	0xFF7
  6148                           tblptrl	equ	0xFF6
  6149                           tablat	equ	0xFF5
  6150                           prodh	equ	0xFF4
  6151                           prodl	equ	0xFF3
  6152                           intcon	equ	0xFF2
  6153                           indf0	equ	0xFEF
  6154                           postinc0	equ	0xFEE
  6155                           fsr0h	equ	0xFEA
  6156                           fsr0l	equ	0xFE9
  6157                           wreg	equ	0xFE8
  6158                           indf2	equ	0xFDF
  6159                           postinc2	equ	0xFDE
  6160                           postdec2	equ	0xFDD
  6161                           fsr2h	equ	0xFDA
  6162                           fsr2l	equ	0xFD9
  6163                           status	equ	0xFD8
  6164                           
  6165 ;; *************** function _RF24_writeFast_m *****************
  6166 ;; Defined at:
  6167 ;;		line 909 in file "../../../RF24_c/RF24_c.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  buf             2   46[COMRAM] PTR const void 
  6170 ;;		 -> rn.frame_buffer(32), rn(370), 
  6171 ;;  len             1   48[COMRAM] unsigned char 
  6172 ;;  multicast       1   49[COMRAM] const unsigned char 
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;		None
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1    wreg      unsigned char 
  6177 ;; Registers used:
  6178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6184 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6187 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6188 ;;Total ram usage:        5 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; Hardware stack levels required when called:    6
  6191 ;; This function calls:
  6192 ;;		_RF24_get_status
  6193 ;;		_RF24_startFastWrite
  6194 ;;		_RF24_write_register_d
  6195 ;; This function is called by:
  6196 ;;		_RF24N_write_to_pipe
  6197 ;;		_RF24_writeFast
  6198 ;; This function uses a non-reentrant model
  6199 ;;
  6200                           
  6201                           	psect	text38
  6202  00346A                     __ptext38:
  6203                           	opt stack 0
  6204  00346A                     _RF24_writeFast_m:
  6205                           	opt stack 20
  6206                           
  6207                           ;RF24_c.c: 920: while( ( RF24_get_status() & ( (1<<(0)) ))) {
  6208                           
  6209                           ;incstack = 0
  6210  00346A  D00C               	goto	l5343
  6211  00346C                     l5335:
  6212                           
  6213                           ;RF24_c.c: 922: if( RF24_get_status() & (1<<(4))){
  6214  00346C  EC93  F01C         	call	_RF24_get_status	;wreg free
  6215  003470  6E33               	movwf	??_RF24_writeFast_m& (0+255),c
  6216  003472  A833               	btfss	??_RF24_writeFast_m,4,c
  6217  003474  D007               	goto	l5343
  6218                           
  6219                           ;RF24_c.c: 924: RF24_write_register_d(0x07,(1<<(4)) );
  6220  003476  0E10               	movlw	16
  6221  003478  6E12               	movwf	RF24_write_register_d@value,c
  6222  00347A  0E07               	movlw	7
  6223  00347C  ECF7  F01B         	call	_RF24_write_register_d
  6224                           
  6225                           ;RF24_c.c: 925: return 0;
  6226  003480  0E00               	movlw	0
  6227  003482  0012               	return	
  6228  003484                     l5343:
  6229  003484  EC93  F01C         	call	_RF24_get_status	;wreg free
  6230  003488  6E33               	movwf	??_RF24_writeFast_m& (0+255),c
  6231  00348A  B033               	btfsc	??_RF24_writeFast_m,0,c
  6232  00348C  D7EF               	goto	l5335
  6233                           
  6234                           ;RF24_c.c: 927: }
  6235                           ;RF24_c.c: 936: }
  6236                           ;RF24_c.c: 938: RF24_startFastWrite(buf,len,multicast,1);
  6237  00348E  C02F  F026         	movff	RF24_writeFast_m@buf,RF24_startFastWrite@buf
  6238  003492  C030  F027         	movff	RF24_writeFast_m@buf+1,RF24_startFastWrite@buf+1
  6239  003496  C031  F028         	movff	RF24_writeFast_m@len,RF24_startFastWrite@len
  6240  00349A  C032  F029         	movff	RF24_writeFast_m@multicast,RF24_startFastWrite@multicast
  6241  00349E  0E01               	movlw	1
  6242  0034A0  6E2A               	movwf	RF24_startFastWrite@startTx,c
  6243  0034A2  EC75  F01A         	call	_RF24_startFastWrite	;wreg free
  6244                           
  6245                           ;RF24_c.c: 940: return 1;
  6246  0034A6  0E01               	movlw	1
  6247  0034A8  0012               	return	
  6248  0034AA                     __end_of_RF24_writeFast_m:
  6249                           	opt stack 0
  6250                           tblptru	equ	0xFF8
  6251                           tblptrh	equ	0xFF7
  6252                           tblptrl	equ	0xFF6
  6253                           tablat	equ	0xFF5
  6254                           prodh	equ	0xFF4
  6255                           prodl	equ	0xFF3
  6256                           intcon	equ	0xFF2
  6257                           indf0	equ	0xFEF
  6258                           postinc0	equ	0xFEE
  6259                           fsr0h	equ	0xFEA
  6260                           fsr0l	equ	0xFE9
  6261                           wreg	equ	0xFE8
  6262                           indf2	equ	0xFDF
  6263                           postinc2	equ	0xFDE
  6264                           postdec2	equ	0xFDD
  6265                           fsr2h	equ	0xFDA
  6266                           fsr2l	equ	0xFD9
  6267                           status	equ	0xFD8
  6268                           
  6269 ;; *************** function _RF24_txStandBy_t *****************
  6270 ;; Defined at:
  6271 ;;		line 1018 in file "../../../RF24_c/RF24_c.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  timeout         4   22[COMRAM] unsigned long 
  6274 ;;  startTx         1   26[COMRAM] unsigned char 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;  start           4   39[COMRAM] unsigned long 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      unsigned char 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6286 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;Total ram usage:       21 bytes
  6291 ;; Hardware stack levels used:    1
  6292 ;; Hardware stack levels required when called:    7
  6293 ;; This function calls:
  6294 ;;		_RF24_ce_d
  6295 ;;		_RF24_flush_tx
  6296 ;;		_RF24_get_status
  6297 ;;		_RF24_read_register_d
  6298 ;;		_RF24_stopListening
  6299 ;;		_RF24_write_register_d
  6300 ;;		_millis
  6301 ;; This function is called by:
  6302 ;;		_RF24N_write
  6303 ;;		_RF24N_write_to_pipe
  6304 ;;		_RF24N_write_
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           	psect	text39
  6309  002A24                     __ptext39:
  6310                           	opt stack 0
  6311  002A24                     _RF24_txStandBy_t:
  6312                           	opt stack 20
  6313                           
  6314                           ;RF24_c.c: 1019: uint32_t start;
  6315                           ;RF24_c.c: 1021: if(startTx){
  6316                           
  6317                           ;incstack = 0
  6318  002A24  501B               	movf	RF24_txStandBy_t@startTx,w,c
  6319  002A26  B4D8               	btfsc	status,2,c
  6320  002A28  D005               	goto	l5357
  6321                           
  6322                           ;RF24_c.c: 1022: RF24_stopListening();
  6323  002A2A  EC5F  F018         	call	_RF24_stopListening	;wreg free
  6324                           
  6325                           ;RF24_c.c: 1023: RF24_ce_d(1);
  6326  002A2E  0E01               	movlw	1
  6327  002A30  EC60  F01C         	call	_RF24_ce_d
  6328  002A34                     l5357:
  6329                           
  6330                           ;RF24_c.c: 1024: }
  6331                           ;RF24_c.c: 1026: start = millis();
  6332  002A34  EC75  F01C         	call	_millis	;wreg free
  6333  002A38  C003  F028         	movff	?_millis,RF24_txStandBy_t@start
  6334  002A3C  C004  F029         	movff	?_millis+1,RF24_txStandBy_t@start+1
  6335  002A40  C005  F02A         	movff	?_millis+2,RF24_txStandBy_t@start+2
  6336  002A44  C006  F02B         	movff	?_millis+3,RF24_txStandBy_t@start+3
  6337                           
  6338                           ;RF24_c.c: 1028: while( ! (RF24_read_register_d(0x17) & (1<<(4))) ){
  6339  002A48  D040               	goto	l5369
  6340  002A4A                     l5359:
  6341                           
  6342                           ;RF24_c.c: 1029: if( RF24_get_status() & (1<<(4))){
  6343  002A4A  EC93  F01C         	call	_RF24_get_status	;wreg free
  6344  002A4E  6E1C               	movwf	??_RF24_txStandBy_t& (0+255),c
  6345  002A50  A81C               	btfss	??_RF24_txStandBy_t,4,c
  6346  002A52  D03B               	goto	l5369
  6347                           
  6348                           ;RF24_c.c: 1030: RF24_write_register_d(0x07,(1<<(4)) );
  6349  002A54  0E10               	movlw	16
  6350  002A56  6E12               	movwf	RF24_write_register_d@value,c
  6351  002A58  0E07               	movlw	7
  6352  002A5A  ECF7  F01B         	call	_RF24_write_register_d
  6353                           
  6354                           ;RF24_c.c: 1031: RF24_ce_d(0);
  6355  002A5E  0E00               	movlw	0
  6356  002A60  EC60  F01C         	call	_RF24_ce_d
  6357                           
  6358                           ;RF24_c.c: 1032: RF24_ce_d(1);
  6359  002A64  0E01               	movlw	1
  6360  002A66  EC60  F01C         	call	_RF24_ce_d
  6361                           
  6362                           ;RF24_c.c: 1033: if(millis() - start >= timeout){
  6363  002A6A  C028  F01C         	movff	RF24_txStandBy_t@start,??_RF24_txStandBy_t
  6364  002A6E  C029  F01D         	movff	RF24_txStandBy_t@start+1,??_RF24_txStandBy_t+1
  6365  002A72  C02A  F01E         	movff	RF24_txStandBy_t@start+2,??_RF24_txStandBy_t+2
  6366  002A76  C02B  F01F         	movff	RF24_txStandBy_t@start+3,??_RF24_txStandBy_t+3
  6367  002A7A  1E1C               	comf	??_RF24_txStandBy_t,f,c
  6368  002A7C  1E1D               	comf	??_RF24_txStandBy_t+1,f,c
  6369  002A7E  1E1E               	comf	??_RF24_txStandBy_t+2,f,c
  6370  002A80  1E1F               	comf	??_RF24_txStandBy_t+3,f,c
  6371  002A82  2A1C               	incf	??_RF24_txStandBy_t,f,c
  6372  002A84  0E00               	movlw	0
  6373  002A86  221D               	addwfc	??_RF24_txStandBy_t+1,f,c
  6374  002A88  221E               	addwfc	??_RF24_txStandBy_t+2,f,c
  6375  002A8A  221F               	addwfc	??_RF24_txStandBy_t+3,f,c
  6376  002A8C  EC75  F01C         	call	_millis	;wreg free
  6377  002A90  501C               	movf	??_RF24_txStandBy_t,w,c
  6378  002A92  2403               	addwf	?_millis,w,c
  6379  002A94  6E20               	movwf	(??_RF24_txStandBy_t+4)& (0+255),c
  6380  002A96  501D               	movf	??_RF24_txStandBy_t+1,w,c
  6381  002A98  2004               	addwfc	?_millis+1,w,c
  6382  002A9A  6E21               	movwf	(??_RF24_txStandBy_t+5)& (0+255),c
  6383  002A9C  501E               	movf	??_RF24_txStandBy_t+2,w,c
  6384  002A9E  2005               	addwfc	?_millis+2,w,c
  6385  002AA0  6E22               	movwf	(??_RF24_txStandBy_t+6)& (0+255),c
  6386  002AA2  501F               	movf	??_RF24_txStandBy_t+3,w,c
  6387  002AA4  2006               	addwfc	?_millis+3,w,c
  6388  002AA6  6E23               	movwf	(??_RF24_txStandBy_t+7)& (0+255),c
  6389  002AA8  5017               	movf	RF24_txStandBy_t@timeout,w,c
  6390  002AAA  5C20               	subwf	??_RF24_txStandBy_t+4,w,c
  6391  002AAC  5018               	movf	RF24_txStandBy_t@timeout+1,w,c
  6392  002AAE  5821               	subwfb	??_RF24_txStandBy_t+5,w,c
  6393  002AB0  5019               	movf	RF24_txStandBy_t@timeout+2,w,c
  6394  002AB2  5822               	subwfb	??_RF24_txStandBy_t+6,w,c
  6395  002AB4  501A               	movf	RF24_txStandBy_t@timeout+3,w,c
  6396  002AB6  5823               	subwfb	??_RF24_txStandBy_t+7,w,c
  6397  002AB8  A0D8               	btfss	status,0,c
  6398  002ABA  D007               	goto	l5369
  6399                           
  6400                           ;RF24_c.c: 1034: RF24_ce_d(0); RF24_flush_tx();; return 0;
  6401  002ABC  0E00               	movlw	0
  6402  002ABE  EC60  F01C         	call	_RF24_ce_d
  6403  002AC2  ECA3  F01C         	call	_RF24_flush_tx	;wreg free
  6404  002AC6  0E00               	movlw	0
  6405  002AC8  0012               	return	
  6406  002ACA                     l5369:
  6407  002ACA  0E17               	movlw	23
  6408  002ACC  EC07  F01C         	call	_RF24_read_register_d
  6409  002AD0  6E1C               	movwf	??_RF24_txStandBy_t& (0+255),c
  6410  002AD2  A81C               	btfss	??_RF24_txStandBy_t,4,c
  6411  002AD4  D7BA               	goto	l5359
  6412                           
  6413                           ;RF24_c.c: 1035: }
  6414                           ;RF24_c.c: 1036: }
  6415                           ;RF24_c.c: 1045: }
  6416                           ;RF24_c.c: 1048: RF24_ce_d(0);
  6417  002AD6  0E00               	movlw	0
  6418  002AD8  EC60  F01C         	call	_RF24_ce_d
  6419                           
  6420                           ;RF24_c.c: 1049: return 1;
  6421  002ADC  0E01               	movlw	1
  6422  002ADE  0012               	return	
  6423  002AE0                     __end_of_RF24_txStandBy_t:
  6424                           	opt stack 0
  6425                           tblptru	equ	0xFF8
  6426                           tblptrh	equ	0xFF7
  6427                           tblptrl	equ	0xFF6
  6428                           tablat	equ	0xFF5
  6429                           prodh	equ	0xFF4
  6430                           prodl	equ	0xFF3
  6431                           intcon	equ	0xFF2
  6432                           indf0	equ	0xFEF
  6433                           postinc0	equ	0xFEE
  6434                           fsr0h	equ	0xFEA
  6435                           fsr0l	equ	0xFE9
  6436                           wreg	equ	0xFE8
  6437                           indf2	equ	0xFDF
  6438                           postinc2	equ	0xFDE
  6439                           postdec2	equ	0xFDD
  6440                           fsr2h	equ	0xFDA
  6441                           fsr2l	equ	0xFD9
  6442                           status	equ	0xFD8
  6443                           
  6444 ;; *************** function _RF24_ce_d *****************
  6445 ;; Defined at:
  6446 ;;		line 67 in file "../../../RF24_c/RF24_c.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;  level           1    wreg     unsigned char 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;  level           1    5[COMRAM] unsigned char 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  1    wreg      void 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0, cstack
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6463 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6464 ;;Total ram usage:        1 bytes
  6465 ;; Hardware stack levels used:    1
  6466 ;; Hardware stack levels required when called:    2
  6467 ;; This function calls:
  6468 ;;		_digitalWrite
  6469 ;; This function is called by:
  6470 ;;		_RF24_begin
  6471 ;;		_RF24_startListening
  6472 ;;		_RF24_stopListening
  6473 ;;		_RF24_startFastWrite
  6474 ;;		_RF24_txStandBy_t
  6475 ;;		_RF24_powerDown
  6476 ;;		_RF24_write_m
  6477 ;;		_RF24_reUseTX
  6478 ;;		_RF24_startWrite
  6479 ;;		_RF24_txStandBy
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text40
  6484  0038C0                     __ptext40:
  6485                           	opt stack 0
  6486  0038C0                     _RF24_ce_d:
  6487                           	opt stack 26
  6488                           
  6489                           ;incstack = 0
  6490                           ;RF24_ce_d@level stored from wreg
  6491  0038C0  6E06               	movwf	RF24_ce_d@level,c
  6492                           
  6493                           ;RF24_c.c: 70: if (rf.ce_pin != rf.csn_pin) digitalWrite(rf.ce_pin,level);
  6494  0038C2  5042               	movf	_rf,w,c
  6495  0038C4  1843               	xorwf	_rf+1,w,c
  6496  0038C6  B4D8               	btfsc	status,2,c
  6497  0038C8  0012               	return	
  6498  0038CA  C006  F003         	movff	RF24_ce_d@level,digitalWrite@mode
  6499  0038CE  5042               	movf	_rf,w,c
  6500  0038D0  ECC7  F00E         	call	_digitalWrite
  6501  0038D4  0012               	return	
  6502  0038D6                     __end_of_RF24_ce_d:
  6503                           	opt stack 0
  6504                           tblptru	equ	0xFF8
  6505                           tblptrh	equ	0xFF7
  6506                           tblptrl	equ	0xFF6
  6507                           tablat	equ	0xFF5
  6508                           prodh	equ	0xFF4
  6509                           prodl	equ	0xFF3
  6510                           intcon	equ	0xFF2
  6511                           indf0	equ	0xFEF
  6512                           postinc0	equ	0xFEE
  6513                           fsr0h	equ	0xFEA
  6514                           fsr0l	equ	0xFE9
  6515                           wreg	equ	0xFE8
  6516                           indf2	equ	0xFDF
  6517                           postinc2	equ	0xFDE
  6518                           postdec2	equ	0xFDD
  6519                           fsr2h	equ	0xFDA
  6520                           fsr2l	equ	0xFD9
  6521                           status	equ	0xFD8
  6522                           
  6523 ;; *************** function _RF24_getDynamicPayloadSize *****************
  6524 ;; Defined at:
  6525 ;;		line 1067 in file "../../../RF24_c/RF24_c.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;		None
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  result          1   20[COMRAM] unsigned char 
  6530 ;; Return value:  Size  Location     Type
  6531 ;;                  1    wreg      unsigned char 
  6532 ;; Registers used:
  6533 ;;		wreg, status,2, status,0, cstack
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6542 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6543 ;;Total ram usage:        2 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; Hardware stack levels required when called:    6
  6546 ;; This function calls:
  6547 ;;		_RF24_beginTransaction
  6548 ;;		_RF24_endTransaction
  6549 ;;		_RF24_flush_rx
  6550 ;;		_SPI_transfer
  6551 ;;		_delay
  6552 ;; This function is called by:
  6553 ;;		_RF24N_update
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text41
  6558  003522                     __ptext41:
  6559                           	opt stack 0
  6560  003522                     _RF24_getDynamicPayloadSize:
  6561                           	opt stack 22
  6562                           
  6563                           ;RF24_c.c: 1069: uint8_t result = 0;
  6564                           
  6565                           ;incstack = 0
  6566  003522  0E00               	movlw	0
  6567  003524  6E15               	movwf	RF24_getDynamicPayloadSize@result,c
  6568                           
  6569                           ;RF24_c.c: 1079: RF24_beginTransaction();
  6570  003526  EC9F  F01C         	call	_RF24_beginTransaction	;wreg free
  6571                           
  6572                           ;RF24_c.c: 1080: SPI_transfer( 0x60 );
  6573  00352A  0E60               	movlw	96
  6574  00352C  EC7E  F01C         	call	_SPI_transfer
  6575                           
  6576                           ;RF24_c.c: 1081: result = SPI_transfer(0xff);
  6577  003530  0EFF               	movlw	255
  6578  003532  EC7E  F01C         	call	_SPI_transfer
  6579  003536  6E15               	movwf	RF24_getDynamicPayloadSize@result,c
  6580                           
  6581                           ;RF24_c.c: 1082: RF24_endTransaction();
  6582  003538  EC9B  F01C         	call	_RF24_endTransaction	;wreg free
  6583                           
  6584                           ;RF24_c.c: 1085: if(result > 32) { RF24_flush_rx();; delay(2); return 0; }
  6585  00353C  0E20               	movlw	32
  6586  00353E  6415               	cpfsgt	RF24_getDynamicPayloadSize@result,c
  6587  003540  D00A               	goto	l5395
  6588  003542  EC97  F01C         	call	_RF24_flush_rx	;wreg free
  6589  003546  0E00               	movlw	0
  6590  003548  6E04               	movwf	delay@val+1,c
  6591  00354A  0E02               	movlw	2
  6592  00354C  6E03               	movwf	delay@val,c
  6593  00354E  ECAF  F019         	call	_delay	;wreg free
  6594  003552  0E00               	movlw	0
  6595  003554  0012               	return	
  6596  003556                     l5395:
  6597                           
  6598                           ;RF24_c.c: 1086: return result;
  6599  003556  5015               	movf	RF24_getDynamicPayloadSize@result,w,c
  6600  003558  0012               	return	
  6601  00355A                     __end_of_RF24_getDynamicPayloadSize:
  6602                           	opt stack 0
  6603                           tblptru	equ	0xFF8
  6604                           tblptrh	equ	0xFF7
  6605                           tblptrl	equ	0xFF6
  6606                           tablat	equ	0xFF5
  6607                           prodh	equ	0xFF4
  6608                           prodl	equ	0xFF3
  6609                           intcon	equ	0xFF2
  6610                           indf0	equ	0xFEF
  6611                           postinc0	equ	0xFEE
  6612                           fsr0h	equ	0xFEA
  6613                           fsr0l	equ	0xFE9
  6614                           wreg	equ	0xFE8
  6615                           indf2	equ	0xFDF
  6616                           postinc2	equ	0xFDE
  6617                           postdec2	equ	0xFDD
  6618                           fsr2h	equ	0xFDA
  6619                           fsr2l	equ	0xFD9
  6620                           status	equ	0xFD8
  6621                           
  6622 ;; *************** function _RF24_flush_rx *****************
  6623 ;; Defined at:
  6624 ;;		line 341 in file "../../../RF24_c/RF24_c.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;		None
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;		None
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  1    wreg      unsigned char 
  6631 ;; Registers used:
  6632 ;;		wreg, status,2, status,0, cstack
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6642 ;;Total ram usage:        0 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; Hardware stack levels required when called:    5
  6645 ;; This function calls:
  6646 ;;		_RF24_spiTrans
  6647 ;; This function is called by:
  6648 ;;		_RF24_begin
  6649 ;;		_RF24_getDynamicPayloadSize
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           	psect	text42
  6654  00392E                     __ptext42:
  6655                           	opt stack 0
  6656  00392E                     _RF24_flush_rx:
  6657                           	opt stack 23
  6658                           
  6659                           ;RF24_c.c: 343: return RF24_spiTrans( 0xE2 );
  6660                           ;	Return value of _RF24_flush_rx is never used
  6661                           
  6662                           ;incstack = 0
  6663  00392E  0EE2               	movlw	226
  6664  003930  EC55  F01C         	call	_RF24_spiTrans
  6665  003934  0012               	return	
  6666  003936                     __end_of_RF24_flush_rx:
  6667                           	opt stack 0
  6668                           tblptru	equ	0xFF8
  6669                           tblptrh	equ	0xFF7
  6670                           tblptrl	equ	0xFF6
  6671                           tablat	equ	0xFF5
  6672                           prodh	equ	0xFF4
  6673                           prodl	equ	0xFF3
  6674                           intcon	equ	0xFF2
  6675                           indf0	equ	0xFEF
  6676                           postinc0	equ	0xFEE
  6677                           fsr0h	equ	0xFEA
  6678                           fsr0l	equ	0xFE9
  6679                           wreg	equ	0xFE8
  6680                           indf2	equ	0xFDF
  6681                           postinc2	equ	0xFDE
  6682                           postdec2	equ	0xFDD
  6683                           fsr2h	equ	0xFDA
  6684                           fsr2l	equ	0xFD9
  6685                           status	equ	0xFD8
  6686                           
  6687 ;; *************** function _RF24_available_p *****************
  6688 ;; Defined at:
  6689 ;;		line 1098 in file "../../../RF24_c/RF24_c.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  pipe_num        2   19[COMRAM] PTR unsigned char 
  6692 ;;		 -> RF24N_update@pipe_num(1), NULL(0), 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  status          1   23[COMRAM] unsigned char 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  1    wreg      unsigned char 
  6697 ;; Registers used:
  6698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6707 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;Total ram usage:        5 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; Hardware stack levels required when called:    6
  6711 ;; This function calls:
  6712 ;;		_RF24_get_status
  6713 ;;		_RF24_read_register_d
  6714 ;; This function is called by:
  6715 ;;		_RF24N_update
  6716 ;;		_RF24_available
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           	psect	text43
  6721  0035FA                     __ptext43:
  6722                           	opt stack 0
  6723  0035FA                     _RF24_available_p:
  6724                           	opt stack 22
  6725                           
  6726                           ;RF24_c.c: 1100: if (!( RF24_read_register_d(0x17) & (1<<(0)) )){
  6727                           
  6728                           ;incstack = 0
  6729  0035FA  0E17               	movlw	23
  6730  0035FC  EC07  F01C         	call	_RF24_read_register_d
  6731  003600  6E16               	movwf	??_RF24_available_p& (0+255),c
  6732  003602  B016               	btfsc	??_RF24_available_p,0,c
  6733  003604  D011               	goto	l5411
  6734                           
  6735                           ;RF24_c.c: 1103: if ( pipe_num ){
  6736  003606  5014               	movf	RF24_available_p@pipe_num,w,c
  6737  003608  1015               	iorwf	RF24_available_p@pipe_num+1,w,c
  6738  00360A  B4D8               	btfsc	status,2,c
  6739  00360C  D00B               	goto	l5407
  6740                           
  6741                           ;RF24_c.c: 1104: uint8_t status = RF24_get_status();
  6742  00360E  EC93  F01C         	call	_RF24_get_status	;wreg free
  6743  003612  6E18               	movwf	RF24_available_p@status,c
  6744                           
  6745                           ;RF24_c.c: 1105: *pipe_num = ( status >> 1 ) & 0b111;
  6746  003614  90D8               	bcf	status,0,c
  6747  003616  3018               	rrcf	RF24_available_p@status,w,c
  6748  003618  0B07               	andlw	7
  6749  00361A  C014  FFD9         	movff	RF24_available_p@pipe_num,fsr2l
  6750  00361E  C015  FFDA         	movff	RF24_available_p@pipe_num+1,fsr2h
  6751  003622  6EDF               	movwf	indf2,c
  6752  003624                     l5407:
  6753                           
  6754                           ;RF24_c.c: 1106: }
  6755                           ;RF24_c.c: 1107: return 1;
  6756  003624  0E01               	movlw	1
  6757  003626  0012               	return	
  6758  003628                     l5411:
  6759                           
  6760                           ;RF24_c.c: 1108: }
  6761                           ;RF24_c.c: 1111: return 0;
  6762  003628  0E00               	movlw	0
  6763  00362A  0012               	return	
  6764  00362C                     __end_of_RF24_available_p:
  6765                           	opt stack 0
  6766                           tblptru	equ	0xFF8
  6767                           tblptrh	equ	0xFF7
  6768                           tblptrl	equ	0xFF6
  6769                           tablat	equ	0xFF5
  6770                           prodh	equ	0xFF4
  6771                           prodl	equ	0xFF3
  6772                           intcon	equ	0xFF2
  6773                           indf0	equ	0xFEF
  6774                           postinc0	equ	0xFEE
  6775                           fsr0h	equ	0xFEA
  6776                           fsr0l	equ	0xFE9
  6777                           wreg	equ	0xFE8
  6778                           indf2	equ	0xFDF
  6779                           postinc2	equ	0xFDE
  6780                           postdec2	equ	0xFDD
  6781                           fsr2h	equ	0xFDA
  6782                           fsr2l	equ	0xFD9
  6783                           status	equ	0xFD8
  6784                           
  6785 ;; *************** function _RF24_read *****************
  6786 ;; Defined at:
  6787 ;;		line 1118 in file "../../../RF24_c/RF24_c.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  buf             2   32[COMRAM] PTR void 
  6790 ;;		 -> rn(370), 
  6791 ;;  len             1   34[COMRAM] unsigned char 
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;		None
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  1    wreg      void 
  6796 ;; Registers used:
  6797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6803 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6806 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6807 ;;Total ram usage:        3 bytes
  6808 ;; Hardware stack levels used:    1
  6809 ;; Hardware stack levels required when called:    5
  6810 ;; This function calls:
  6811 ;;		_RF24_read_payload
  6812 ;;		_RF24_write_register_d
  6813 ;; This function is called by:
  6814 ;;		_RF24N_update
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           	psect	text44
  6819  00382C                     __ptext44:
  6820                           	opt stack 0
  6821  00382C                     _RF24_read:
  6822                           	opt stack 23
  6823                           
  6824                           ;RF24_c.c: 1121: RF24_read_payload( buf, len );
  6825                           
  6826                           ;incstack = 0
  6827  00382C  C021  F010         	movff	RF24_read@buf,RF24_read_payload@buf
  6828  003830  C022  F011         	movff	RF24_read@buf+1,RF24_read_payload@buf+1
  6829  003834  C023  F012         	movff	RF24_read@len,RF24_read_payload@data_len
  6830  003838  ECD4  F016         	call	_RF24_read_payload	;wreg free
  6831                           
  6832                           ;RF24_c.c: 1124: RF24_write_register_d(0x07,(1<<(6)) | (1<<(4)) | (1<<(5)) );
  6833  00383C  0E70               	movlw	112
  6834  00383E  6E12               	movwf	RF24_write_register_d@value,c
  6835  003840  0E07               	movlw	7
  6836  003842  ECF7  F01B         	call	_RF24_write_register_d
  6837  003846  0012               	return		;funcret
  6838  003848                     __end_of_RF24_read:
  6839                           	opt stack 0
  6840                           tblptru	equ	0xFF8
  6841                           tblptrh	equ	0xFF7
  6842                           tblptrl	equ	0xFF6
  6843                           tablat	equ	0xFF5
  6844                           prodh	equ	0xFF4
  6845                           prodl	equ	0xFF3
  6846                           intcon	equ	0xFF2
  6847                           indf0	equ	0xFEF
  6848                           postinc0	equ	0xFEE
  6849                           fsr0h	equ	0xFEA
  6850                           fsr0l	equ	0xFE9
  6851                           wreg	equ	0xFE8
  6852                           indf2	equ	0xFDF
  6853                           postinc2	equ	0xFDE
  6854                           postdec2	equ	0xFDD
  6855                           fsr2h	equ	0xFDA
  6856                           fsr2l	equ	0xFD9
  6857                           status	equ	0xFD8
  6858                           
  6859 ;; *************** function _SPI_transfer *****************
  6860 ;; Defined at:
  6861 ;;		line 250 in file "../../../RF24_c/utility/XC8/spi.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  data            1    wreg     unsigned char 
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;  data            1    2[COMRAM] unsigned char 
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  1    wreg      unsigned char 
  6868 ;; Registers used:
  6869 ;;		wreg, status,2
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;Total ram usage:        1 bytes
  6880 ;; Hardware stack levels used:    1
  6881 ;; Hardware stack levels required when called:    1
  6882 ;; This function calls:
  6883 ;;		Nothing
  6884 ;; This function is called by:
  6885 ;;		_RF24_read_register_d
  6886 ;;		_RF24_write_register_c_d
  6887 ;;		_RF24_write_register_d
  6888 ;;		_RF24_write_payload
  6889 ;;		_RF24_read_payload
  6890 ;;		_RF24_spiTrans
  6891 ;;		_RF24_getDynamicPayloadSize
  6892 ;;		_RF24_toggle_features_d
  6893 ;;		_RF24_read_register_m_d
  6894 ;;		_RF24_writeAckPayload
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           	psect	text45
  6899  0038FC                     __ptext45:
  6900                           	opt stack 0
  6901  0038FC                     _SPI_transfer:
  6902                           	opt stack 26
  6903                           
  6904                           ;incstack = 0
  6905                           ;SPI_transfer@data stored from wreg
  6906  0038FC  6E03               	movwf	SPI_transfer@data,c
  6907                           
  6908                           ;spi.c: 252: SSPSTATbits.BF = 0;
  6909  0038FE  90C7               	bcf	4039,0,c	;volatile
  6910                           
  6911                           ;spi.c: 253: SSPBUF = data;
  6912  003900  C003  FFC9         	movff	SPI_transfer@data,4041	;volatile
  6913  003904                     l306:
  6914  003904  A0C7               	btfss	4039,0,c	;volatile
  6915  003906  D7FE               	goto	l306
  6916                           
  6917                           ;spi.c: 255: return SSPBUF;
  6918  003908  50C9               	movf	4041,w,c	;volatile
  6919  00390A  0012               	return		;funcret
  6920  00390C                     __end_of_SPI_transfer:
  6921                           	opt stack 0
  6922                           tblptru	equ	0xFF8
  6923                           tblptrh	equ	0xFF7
  6924                           tblptrl	equ	0xFF6
  6925                           tablat	equ	0xFF5
  6926                           prodh	equ	0xFF4
  6927                           prodl	equ	0xFF3
  6928                           intcon	equ	0xFF2
  6929                           indf0	equ	0xFEF
  6930                           postinc0	equ	0xFEE
  6931                           fsr0h	equ	0xFEA
  6932                           fsr0l	equ	0xFE9
  6933                           wreg	equ	0xFE8
  6934                           indf2	equ	0xFDF
  6935                           postinc2	equ	0xFDE
  6936                           postdec2	equ	0xFDD
  6937                           fsr2h	equ	0xFDA
  6938                           fsr2l	equ	0xFD9
  6939                           status	equ	0xFD8
  6940                           
  6941 ;; *************** function _RF24_endTransaction *****************
  6942 ;; Defined at:
  6943 ;;		line 84 in file "../../../RF24_c/RF24_c.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;		None
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;		None
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  1    wreg      void 
  6950 ;; Registers used:
  6951 ;;		wreg, status,2, status,0, cstack
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6961 ;;Total ram usage:        0 bytes
  6962 ;; Hardware stack levels used:    1
  6963 ;; Hardware stack levels required when called:    3
  6964 ;; This function calls:
  6965 ;;		_RF24_csn_d
  6966 ;; This function is called by:
  6967 ;;		_RF24_read_register_d
  6968 ;;		_RF24_write_register_c_d
  6969 ;;		_RF24_write_register_d
  6970 ;;		_RF24_write_payload
  6971 ;;		_RF24_read_payload
  6972 ;;		_RF24_spiTrans
  6973 ;;		_RF24_getDynamicPayloadSize
  6974 ;;		_RF24_toggle_features_d
  6975 ;;		_RF24_read_register_m_d
  6976 ;;		_RF24_writeAckPayload
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text46
  6981  003936                     __ptext46:
  6982                           	opt stack 0
  6983  003936                     _RF24_endTransaction:
  6984                           	opt stack 24
  6985                           
  6986                           ;RF24_c.c: 85: RF24_csn_d(1);
  6987                           
  6988                           ;incstack = 0
  6989  003936  0E01               	movlw	1
  6990  003938  EC6B  F01C         	call	_RF24_csn_d
  6991  00393C  0012               	return		;funcret
  6992  00393E                     __end_of_RF24_endTransaction:
  6993                           	opt stack 0
  6994                           tblptru	equ	0xFF8
  6995                           tblptrh	equ	0xFF7
  6996                           tblptrl	equ	0xFF6
  6997                           tablat	equ	0xFF5
  6998                           prodh	equ	0xFF4
  6999                           prodl	equ	0xFF3
  7000                           intcon	equ	0xFF2
  7001                           indf0	equ	0xFEF
  7002                           postinc0	equ	0xFEE
  7003                           fsr0h	equ	0xFEA
  7004                           fsr0l	equ	0xFE9
  7005                           wreg	equ	0xFE8
  7006                           indf2	equ	0xFDF
  7007                           postinc2	equ	0xFDE
  7008                           postdec2	equ	0xFDD
  7009                           fsr2h	equ	0xFDA
  7010                           fsr2l	equ	0xFD9
  7011                           status	equ	0xFD8
  7012                           
  7013 ;; *************** function _RF24_beginTransaction *****************
  7014 ;; Defined at:
  7015 ;;		line 75 in file "../../../RF24_c/RF24_c.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;		None
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;		None
  7020 ;; Return value:  Size  Location     Type
  7021 ;;                  1    wreg      void 
  7022 ;; Registers used:
  7023 ;;		wreg, status,2, status,0, cstack
  7024 ;; Tracked objects:
  7025 ;;		On entry : 0/0
  7026 ;;		On exit  : 0/0
  7027 ;;		Unchanged: 0/0
  7028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7033 ;;Total ram usage:        0 bytes
  7034 ;; Hardware stack levels used:    1
  7035 ;; Hardware stack levels required when called:    3
  7036 ;; This function calls:
  7037 ;;		_RF24_csn_d
  7038 ;; This function is called by:
  7039 ;;		_RF24_read_register_d
  7040 ;;		_RF24_write_register_c_d
  7041 ;;		_RF24_write_register_d
  7042 ;;		_RF24_write_payload
  7043 ;;		_RF24_read_payload
  7044 ;;		_RF24_spiTrans
  7045 ;;		_RF24_getDynamicPayloadSize
  7046 ;;		_RF24_toggle_features_d
  7047 ;;		_RF24_read_register_m_d
  7048 ;;		_RF24_writeAckPayload
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text47
  7053  00393E                     __ptext47:
  7054                           	opt stack 0
  7055  00393E                     _RF24_beginTransaction:
  7056                           	opt stack 24
  7057                           
  7058                           ;RF24_c.c: 79: RF24_csn_d(0);
  7059                           
  7060                           ;incstack = 0
  7061  00393E  0E00               	movlw	0
  7062  003940  EC6B  F01C         	call	_RF24_csn_d
  7063  003944  0012               	return		;funcret
  7064  003946                     __end_of_RF24_beginTransaction:
  7065                           	opt stack 0
  7066                           tblptru	equ	0xFF8
  7067                           tblptrh	equ	0xFF7
  7068                           tblptrl	equ	0xFF6
  7069                           tablat	equ	0xFF5
  7070                           prodh	equ	0xFF4
  7071                           prodl	equ	0xFF3
  7072                           intcon	equ	0xFF2
  7073                           indf0	equ	0xFEF
  7074                           postinc0	equ	0xFEE
  7075                           fsr0h	equ	0xFEA
  7076                           fsr0l	equ	0xFE9
  7077                           wreg	equ	0xFE8
  7078                           indf2	equ	0xFDF
  7079                           postinc2	equ	0xFDE
  7080                           postdec2	equ	0xFDD
  7081                           fsr2h	equ	0xFDA
  7082                           fsr2l	equ	0xFD9
  7083                           status	equ	0xFD8
  7084                           
  7085 ;; *************** function _RF24_csn_d *****************
  7086 ;; Defined at:
  7087 ;;		line 22 in file "../../../RF24_c/RF24_c.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  mode            1    wreg     unsigned char 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  mode            1   14[COMRAM] unsigned char 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  1    wreg      void 
  7094 ;; Registers used:
  7095 ;;		wreg, status,2, status,0, cstack
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7102 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7104 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7105 ;;Total ram usage:        1 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:    2
  7108 ;; This function calls:
  7109 ;;		_delayMicroseconds
  7110 ;;		_digitalWrite
  7111 ;; This function is called by:
  7112 ;;		_RF24_beginTransaction
  7113 ;;		_RF24_endTransaction
  7114 ;;		_RF24_begin
  7115 ;; This function uses a non-reentrant model
  7116 ;;
  7117                           
  7118                           	psect	text48
  7119  0038D6                     __ptext48:
  7120                           	opt stack 0
  7121  0038D6                     _RF24_csn_d:
  7122                           	opt stack 24
  7123                           
  7124                           ;incstack = 0
  7125                           ;RF24_csn_d@mode stored from wreg
  7126  0038D6  6E0F               	movwf	RF24_csn_d@mode,c
  7127                           
  7128                           ;RF24_c.c: 59: digitalWrite(rf.csn_pin,mode);
  7129  0038D8  C00F  F003         	movff	RF24_csn_d@mode,digitalWrite@mode
  7130  0038DC  5043               	movf	_rf+1,w,c
  7131  0038DE  ECC7  F00E         	call	_digitalWrite
  7132                           
  7133                           ;RF24_c.c: 60: delayMicroseconds(rf.csDelay);
  7134  0038E2  5053               	movf	_rf+17,w,c
  7135  0038E4  ECF5  F019         	call	_delayMicroseconds
  7136  0038E8  0012               	return		;funcret
  7137  0038EA                     __end_of_RF24_csn_d:
  7138                           	opt stack 0
  7139                           tblptru	equ	0xFF8
  7140                           tblptrh	equ	0xFF7
  7141                           tblptrl	equ	0xFF6
  7142                           tablat	equ	0xFF5
  7143                           prodh	equ	0xFF4
  7144                           prodl	equ	0xFF3
  7145                           intcon	equ	0xFF2
  7146                           indf0	equ	0xFEF
  7147                           postinc0	equ	0xFEE
  7148                           fsr0h	equ	0xFEA
  7149                           fsr0l	equ	0xFE9
  7150                           wreg	equ	0xFE8
  7151                           indf2	equ	0xFDF
  7152                           postinc2	equ	0xFDE
  7153                           postdec2	equ	0xFDD
  7154                           fsr2h	equ	0xFDA
  7155                           fsr2l	equ	0xFD9
  7156                           status	equ	0xFD8
  7157                           
  7158 ;; *************** function _RF24_openWritingPipe_d *****************
  7159 ;; Defined at:
  7160 ;;		line 1144 in file "../../../RF24_c/RF24_c.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;  value_          2   20[COMRAM] PTR const unsigned char 
  7163 ;;		 -> RF24N_write_to_pipe@out_pipe(5), 
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;  value           5   30[COMRAM] unsigned char [5]
  7166 ;;  i               1   35[COMRAM] unsigned char 
  7167 ;; Return value:  Size  Location     Type
  7168 ;;                  1    wreg      void 
  7169 ;; Registers used:
  7170 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7171 ;; Tracked objects:
  7172 ;;		On entry : 0/0
  7173 ;;		On exit  : 0/0
  7174 ;;		Unchanged: 0/0
  7175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7177 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7179 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7180 ;;Total ram usage:       16 bytes
  7181 ;; Hardware stack levels used:    1
  7182 ;; Hardware stack levels required when called:    5
  7183 ;; This function calls:
  7184 ;;		_RF24_write_register_c_d
  7185 ;;		_RF24_write_register_d
  7186 ;; This function is called by:
  7187 ;;		_RF24N_write_to_pipe
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           	psect	text49
  7192  002F18                     __ptext49:
  7193                           	opt stack 0
  7194  002F18                     _RF24_openWritingPipe_d:
  7195                           	opt stack 21
  7196                           
  7197                           ;RF24_c.c: 1146: uint8_t i;
  7198                           ;RF24_c.c: 1147: raddr_t value[5];
  7199                           ;RF24_c.c: 1148: for(i=0;i<5;i++)
  7200                           
  7201                           ;incstack = 0
  7202  002F18  0E00               	movlw	0
  7203  002F1A  6E24               	movwf	RF24_openWritingPipe_d@i,c
  7204  002F1C                     l5421:
  7205  002F1C  0E04               	movlw	4
  7206  002F1E  6424               	cpfsgt	RF24_openWritingPipe_d@i,c
  7207  002F20  D001               	goto	l5425
  7208  002F22  D01D               	goto	l5431
  7209  002F24                     l5425:
  7210                           
  7211                           ;RF24_c.c: 1149: {
  7212                           ;RF24_c.c: 1150: value[i]=value_[4-i];
  7213  002F24  5024               	movf	RF24_openWritingPipe_d@i,w,c
  7214  002F26  6E17               	movwf	??_RF24_openWritingPipe_d& (0+255),c
  7215  002F28  6A18               	clrf	(??_RF24_openWritingPipe_d+1)& (0+255),c
  7216  002F2A  1E17               	comf	??_RF24_openWritingPipe_d,f,c
  7217  002F2C  1E18               	comf	??_RF24_openWritingPipe_d+1,f,c
  7218  002F2E  4A17               	infsnz	??_RF24_openWritingPipe_d,f,c
  7219  002F30  2A18               	incf	??_RF24_openWritingPipe_d+1,f,c
  7220  002F32  0E04               	movlw	4
  7221  002F34  2617               	addwf	??_RF24_openWritingPipe_d,f,c
  7222  002F36  0E00               	movlw	0
  7223  002F38  2218               	addwfc	??_RF24_openWritingPipe_d+1,f,c
  7224  002F3A  5017               	movf	??_RF24_openWritingPipe_d,w,c
  7225  002F3C  2415               	addwf	RF24_openWritingPipe_d@value_,w,c
  7226  002F3E  6ED9               	movwf	fsr2l,c
  7227  002F40  5018               	movf	??_RF24_openWritingPipe_d+1,w,c
  7228  002F42  2016               	addwfc	RF24_openWritingPipe_d@value_+1,w,c
  7229  002F44  6EDA               	movwf	fsr2h,c
  7230  002F46  5024               	movf	RF24_openWritingPipe_d@i,w,c
  7231  002F48  0D01               	mullw	1
  7232  002F4A  0E1F               	movlw	low RF24_openWritingPipe_d@value
  7233  002F4C  24F3               	addwf	prodl,w,c
  7234  002F4E  6EE9               	movwf	fsr0l,c
  7235  002F50  0E00               	movlw	high RF24_openWritingPipe_d@value
  7236  002F52  20F4               	addwfc	prodh,w,c
  7237  002F54  6EEA               	movwf	fsr0h,c
  7238  002F56  CFDF FFEF          	movff	indf2,indf0
  7239  002F5A  2A24               	incf	RF24_openWritingPipe_d@i,f,c
  7240  002F5C  D7DF               	goto	l5421
  7241  002F5E                     l5431:
  7242                           
  7243                           ;RF24_c.c: 1151: }
  7244                           ;RF24_c.c: 1153: RF24_write_register_c_d(0x0A, ((uint8_t*)(value)), rf.addr_width);
  7245  002F5E  0E1F               	movlw	low RF24_openWritingPipe_d@value
  7246  002F60  6E10               	movwf	RF24_write_register_c_d@buf,c
  7247  002F62  0E00               	movlw	high RF24_openWritingPipe_d@value
  7248  002F64  6E11               	movwf	RF24_write_register_c_d@buf+1,c
  7249  002F66  C04E  F012         	movff	_rf+12,RF24_write_register_c_d@len
  7250  002F6A  0E0A               	movlw	10
  7251  002F6C  ECE3  F01A         	call	_RF24_write_register_c_d
  7252                           
  7253                           ;RF24_c.c: 1154: RF24_write_register_c_d(0x10, ((uint8_t*)(value)), rf.addr_width);
  7254  002F70  0E1F               	movlw	low RF24_openWritingPipe_d@value
  7255  002F72  6E10               	movwf	RF24_write_register_c_d@buf,c
  7256  002F74  0E00               	movlw	high RF24_openWritingPipe_d@value
  7257  002F76  6E11               	movwf	RF24_write_register_c_d@buf+1,c
  7258  002F78  C04E  F012         	movff	_rf+12,RF24_write_register_c_d@len
  7259  002F7C  0E10               	movlw	16
  7260  002F7E  ECE3  F01A         	call	_RF24_write_register_c_d
  7261                           
  7262                           ;RF24_c.c: 1159: RF24_write_register_d(0x11,rf.payload_size);
  7263  002F82  C047  F012         	movff	_rf+5,RF24_write_register_d@value
  7264  002F86  0E11               	movlw	17
  7265  002F88  ECF7  F01B         	call	_RF24_write_register_d
  7266  002F8C  0012               	return		;funcret
  7267  002F8E                     __end_of_RF24_openWritingPipe_d:
  7268                           	opt stack 0
  7269                           tblptru	equ	0xFF8
  7270                           tblptrh	equ	0xFF7
  7271                           tblptrl	equ	0xFF6
  7272                           tablat	equ	0xFF5
  7273                           prodh	equ	0xFF4
  7274                           prodl	equ	0xFF3
  7275                           intcon	equ	0xFF2
  7276                           indf0	equ	0xFEF
  7277                           postinc0	equ	0xFEE
  7278                           fsr0h	equ	0xFEA
  7279                           fsr0l	equ	0xFE9
  7280                           wreg	equ	0xFE8
  7281                           indf2	equ	0xFDF
  7282                           postinc2	equ	0xFDE
  7283                           postdec2	equ	0xFDD
  7284                           fsr2h	equ	0xFDA
  7285                           fsr2l	equ	0xFD9
  7286                           status	equ	0xFD8
  7287                           
  7288 ;; *************** function _RF24N_write *****************
  7289 ;; Defined at:
  7290 ;;		line 981 in file "../../RF24Network_c.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;  to_node         2    0[BANK0 ] unsigned int 
  7293 ;;  directTo        1    2[BANK0 ] unsigned char 
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  header          2   34[BANK0 ] PTR struct .
  7296 ;;		 -> rn.frame_buffer(32), rn(370), 
  7297 ;;  conversion      4   37[BANK0 ] struct .
  7298 ;;  reply_time      4   29[BANK0 ] unsigned long 
  7299 ;;  ok              1   36[BANK0 ] unsigned char 
  7300 ;;  isAckType       1   33[BANK0 ] unsigned char 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1    wreg      unsigned char 
  7303 ;; Registers used:
  7304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7310 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7311 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7312 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7313 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7314 ;;Total ram usage:       41 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; Hardware stack levels required when called:    9
  7317 ;; This function calls:
  7318 ;;		_RF24N_is_valid_address
  7319 ;;		_RF24N_logicalToPhysicalAddress
  7320 ;;		_RF24N_update
  7321 ;;		_RF24N_write_to_pipe
  7322 ;;		_RF24_setAutoAck_p
  7323 ;;		_RF24_startListening
  7324 ;;		_RF24_txStandBy_t
  7325 ;;		_millis
  7326 ;; This function is called by:
  7327 ;;		_RF24N_update
  7328 ;;		_RF24N__write
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           	psect	text50
  7333  00200C                     __ptext50:
  7334                           	opt stack 0
  7335  00200C                     _RF24N_write:
  7336                           	opt stack 19
  7337                           
  7338                           ;RF24Network_c.c: 983: uint8_t ok = 0;
  7339                           
  7340                           ;incstack = 0
  7341  00200C  0E00               	movlw	0
  7342  00200E  0100               	movlb	0	; () banked
  7343  002010  6FA4               	movwf	RF24N_write@ok& (0+255),b
  7344                           
  7345                           ;RF24Network_c.c: 984: uint8_t isAckType = 0;
  7346  002012  0E00               	movlw	0
  7347  002014  0100               	movlb	0	; () banked
  7348  002016  6FA1               	movwf	RF24N_write@isAckType& (0+255),b
  7349                           
  7350                           ; BSR set to: 0
  7351                           ;RF24Network_c.c: 985: uint32_t reply_time ;
  7352                           ;RF24Network_c.c: 986: logicalToPhysicalStruct conversion;
  7353                           ;RF24Network_c.c: 988: if(rn.frame_buffer[6] > 64 && rn.frame_buffer[6] < 192 ){ isAckTy
      +                          pe=1; }
  7354  002018  EE20  F0B6         	lfsr	2,_rn+13
  7355  00201C  0E40               	movlw	64
  7356  00201E  64DF               	cpfsgt	indf2,c
  7357  002020  D008               	goto	l5847
  7358                           
  7359                           ; BSR set to: 0
  7360  002022  EE20  F0B6         	lfsr	2,_rn+13
  7361  002026  0EC0               	movlw	192
  7362  002028  60DF               	cpfslt	indf2,c
  7363  00202A  D003               	goto	l5847
  7364                           
  7365                           ; BSR set to: 0
  7366  00202C  0E01               	movlw	1
  7367  00202E  0100               	movlb	0	; () banked
  7368  002030  6FA1               	movwf	RF24N_write@isAckType& (0+255),b
  7369  002032                     l5847:
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;RF24Network_c.c: 995: if ( !RF24N_is_valid_address(to_node) )
  7373  002032  C080  F003         	movff	RF24N_write@to_node,RF24N_is_valid_address@node
  7374  002036  C081  F004         	movff	RF24N_write@to_node+1,RF24N_is_valid_address@node+1
  7375  00203A  ECAD  F01A         	call	_RF24N_is_valid_address	;wreg free
  7376  00203E  0900               	iorlw	0
  7377  002040  A4D8               	btfss	status,2,c
  7378  002042  D002               	goto	l899
  7379                           
  7380                           ;RF24Network_c.c: 996: return 0;
  7381  002044  0E00               	movlw	0
  7382  002046  0012               	return	
  7383  002048                     l899:
  7384                           
  7385                           ;RF24Network_c.c: 999: conversion.send_node= to_node;
  7386  002048  C080  F0A5         	movff	RF24N_write@to_node,RF24N_write@conversion
  7387  00204C  C081  F0A6         	movff	RF24N_write@to_node+1,RF24N_write@conversion+1
  7388                           
  7389                           ;RF24Network_c.c: 1000: conversion.send_pipe=directTo;
  7390  002050  C082  F0A7         	movff	RF24N_write@directTo,RF24N_write@conversion+2
  7391                           
  7392                           ;RF24Network_c.c: 1001: conversion.multicast=0;
  7393  002054  0E00               	movlw	0
  7394  002056  0100               	movlb	0	; () banked
  7395  002058  6FA8               	movwf	(RF24N_write@conversion+3)& (0+255),b
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;RF24Network_c.c: 1002: RF24N_logicalToPhysicalAddress( &conversion);
  7399  00205A  0EA5               	movlw	low RF24N_write@conversion
  7400  00205C  6E12               	movwf	RF24N_logicalToPhysicalAddress@conversionInfo,c
  7401  00205E  0E00               	movlw	high RF24N_write@conversion
  7402  002060  6E13               	movwf	RF24N_logicalToPhysicalAddress@conversionInfo+1,c
  7403  002062  EC5F  F013         	call	_RF24N_logicalToPhysicalAddress	;wreg free
  7404                           
  7405                           ;RF24Network_c.c: 1007: ;
  7406                           ;RF24Network_c.c: 1010: ok=RF24N_write_to_pipe(conversion.send_node, conversion.send_pip
      +                          e, conversion.multicast);
  7407  002066  C0A5  F034         	movff	RF24N_write@conversion,RF24N_write_to_pipe@node
  7408  00206A  C0A6  F035         	movff	RF24N_write@conversion+1,RF24N_write_to_pipe@node+1
  7409  00206E  C0A7  F036         	movff	RF24N_write@conversion+2,RF24N_write_to_pipe@pipe
  7410  002072  C0A8  F037         	movff	RF24N_write@conversion+3,RF24N_write_to_pipe@multicast
  7411  002076  ECC0  F015         	call	_RF24N_write_to_pipe	;wreg free
  7412  00207A  0100               	movlb	0	; () banked
  7413  00207C  6FA4               	movwf	RF24N_write@ok& (0+255),b
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;RF24Network_c.c: 1019: }
  7417                           ;RF24Network_c.c: 1022: if( directTo == 1 && ok && conversion.send_node == to_node && is
      +                          AckType){
  7418                           
  7419                           ; BSR set to: 0
  7420                           
  7421                           ;RF24Network_c.c: 1018: ;
  7422                           
  7423                           ; BSR set to: 0
  7424  00207E  0100               	movlb	0	; () banked
  7425  002080  0582               	decf	RF24N_write@directTo& (0+255),w,b
  7426  002082  A4D8               	btfss	status,2,c
  7427  002084  D054               	goto	l5887
  7428                           
  7429                           ; BSR set to: 0
  7430  002086  0100               	movlb	0	; () banked
  7431  002088  51A4               	movf	RF24N_write@ok& (0+255),w,b
  7432  00208A  0100               	movlb	0	; () banked
  7433  00208C  B4D8               	btfsc	status,2,c
  7434  00208E  D04F               	goto	l5887
  7435                           
  7436                           ; BSR set to: 0
  7437  002090  0100               	movlb	0	; () banked
  7438  002092  5180               	movf	RF24N_write@to_node& (0+255),w,b
  7439  002094  0100               	movlb	0	; () banked
  7440  002096  19A5               	xorwf	RF24N_write@conversion& (0+255),w,b
  7441  002098  E14A               	bnz	l5887
  7442  00209A  0100               	movlb	0	; () banked
  7443  00209C  5181               	movf	(RF24N_write@to_node+1)& (0+255),w,b
  7444  00209E  0100               	movlb	0	; () banked
  7445  0020A0  19A6               	xorwf	(RF24N_write@conversion+1)& (0+255),w,b
  7446  0020A2  A4D8               	btfss	status,2,c
  7447  0020A4  D044               	goto	l5887
  7448                           
  7449                           ; BSR set to: 0
  7450  0020A6  0100               	movlb	0	; () banked
  7451  0020A8  51A1               	movf	RF24N_write@isAckType& (0+255),w,b
  7452  0020AA  0100               	movlb	0	; () banked
  7453  0020AC  B4D8               	btfsc	status,2,c
  7454  0020AE  D03F               	goto	l5887
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;RF24Network_c.c: 1024: RF24NetworkHeader* header = (RF24NetworkHeader*)rn.frame_buffer;
  7458  0020B0  0EB0               	movlw	low (_rn+7)
  7459  0020B2  0100               	movlb	0	; () banked
  7460  0020B4  6FA2               	movwf	RF24N_write@header& (0+255),b
  7461  0020B6  0E00               	movlw	high (_rn+7)
  7462  0020B8  0100               	movlb	0	; () banked
  7463  0020BA  6FA3               	movwf	(RF24N_write@header+1)& (0+255),b
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;RF24Network_c.c: 1025: header->type = 193;
  7467  0020BC  0100               	movlb	0	; () banked
  7468  0020BE  EE20 F006          	lfsr	2,6
  7469  0020C2  51A2               	movf	RF24N_write@header& (0+255),w,b
  7470  0020C4  26D9               	addwf	fsr2l,f,c
  7471  0020C6  51A3               	movf	(RF24N_write@header+1)& (0+255),w,b
  7472  0020C8  22DA               	addwfc	fsr2h,f,c
  7473  0020CA  0EC1               	movlw	193
  7474  0020CC  6EDF               	movwf	indf2,c
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;RF24Network_c.c: 1026: header->to_node = header->from_node;
  7478  0020CE  C0A2  FFD9         	movff	RF24N_write@header,fsr2l
  7479  0020D2  C0A3  FFDA         	movff	RF24N_write@header+1,fsr2h
  7480  0020D6  0100               	movlb	0	; () banked
  7481  0020D8  EE00 F002          	lfsr	0,2
  7482  0020DC  51A2               	movf	RF24N_write@header& (0+255),w,b
  7483  0020DE  26E9               	addwf	fsr0l,f,c
  7484  0020E0  51A3               	movf	(RF24N_write@header+1)& (0+255),w,b
  7485  0020E2  22EA               	addwfc	fsr0h,f,c
  7486  0020E4  CFDE FFEE          	movff	postinc2,postinc0
  7487  0020E8  CFDD FFED          	movff	postdec2,postdec0
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;RF24Network_c.c: 1028: conversion.send_node = header->from_node;
  7491  0020EC  C0A2  FFD9         	movff	RF24N_write@header,fsr2l
  7492  0020F0  C0A3  FFDA         	movff	RF24N_write@header+1,fsr2h
  7493  0020F4  CFDE F0A5          	movff	postinc2,RF24N_write@conversion
  7494  0020F8  CFDD F0A6          	movff	postdec2,RF24N_write@conversion+1
  7495                           
  7496                           ; BSR set to: 0
  7497                           ;RF24Network_c.c: 1029: conversion.send_pipe = 1;
  7498  0020FC  0E01               	movlw	1
  7499  0020FE  0100               	movlb	0	; () banked
  7500  002100  6FA7               	movwf	(RF24N_write@conversion+2)& (0+255),b
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;RF24Network_c.c: 1030: conversion.multicast = 0;
  7504  002102  0E00               	movlw	0
  7505  002104  0100               	movlb	0	; () banked
  7506  002106  6FA8               	movwf	(RF24N_write@conversion+3)& (0+255),b
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;RF24Network_c.c: 1031: RF24N_logicalToPhysicalAddress(&conversion);
  7510  002108  0EA5               	movlw	low RF24N_write@conversion
  7511  00210A  6E12               	movwf	RF24N_logicalToPhysicalAddress@conversionInfo,c
  7512  00210C  0E00               	movlw	high RF24N_write@conversion
  7513  00210E  6E13               	movwf	RF24N_logicalToPhysicalAddress@conversionInfo+1,c
  7514  002110  EC5F  F013         	call	_RF24N_logicalToPhysicalAddress	;wreg free
  7515                           
  7516                           ;RF24Network_c.c: 1034: rn.frame_size = sizeof(RF24NetworkHeader);
  7517  002114  0E08               	movlw	8
  7518  002116  CFE8 F0DB          	movff	wreg,_rn+50
  7519                           
  7520                           ;RF24Network_c.c: 1035: RF24N_write_to_pipe(conversion.send_node, conversion.send_pipe, 
      +                          conversion.multicast);
  7521  00211A  C0A5  F034         	movff	RF24N_write@conversion,RF24N_write_to_pipe@node
  7522  00211E  C0A6  F035         	movff	RF24N_write@conversion+1,RF24N_write_to_pipe@node+1
  7523  002122  C0A7  F036         	movff	RF24N_write@conversion+2,RF24N_write_to_pipe@pipe
  7524  002126  C0A8  F037         	movff	RF24N_write@conversion+3,RF24N_write_to_pipe@multicast
  7525  00212A  ECC0  F015         	call	_RF24N_write_to_pipe	;wreg free
  7526  00212E                     l5887:
  7527                           
  7528                           ;RF24Network_c.c: 1043: }
  7529                           ;RF24Network_c.c: 1047: if( ok && conversion.send_node != to_node && (directTo==0 || dir
      +                          ectTo==3) && isAckType){
  7530  00212E  0100               	movlb	0	; () banked
  7531  002130  51A4               	movf	RF24N_write@ok& (0+255),w,b
  7532  002132  0100               	movlb	0	; () banked
  7533  002134  B4D8               	btfsc	status,2,c
  7534  002136  D097               	goto	l5915
  7535                           
  7536                           ; BSR set to: 0
  7537  002138  0100               	movlb	0	; () banked
  7538  00213A  5180               	movf	RF24N_write@to_node& (0+255),w,b
  7539  00213C  0100               	movlb	0	; () banked
  7540  00213E  19A5               	xorwf	RF24N_write@conversion& (0+255),w,b
  7541  002140  E106               	bnz	u7700
  7542  002142  0100               	movlb	0	; () banked
  7543  002144  5181               	movf	(RF24N_write@to_node+1)& (0+255),w,b
  7544  002146  0100               	movlb	0	; () banked
  7545  002148  19A6               	xorwf	(RF24N_write@conversion+1)& (0+255),w,b
  7546  00214A  B4D8               	btfsc	status,2,c
  7547  00214C  D08C               	goto	l5915
  7548  00214E                     u7700:
  7549                           
  7550                           ; BSR set to: 0
  7551  00214E  0100               	movlb	0	; () banked
  7552  002150  5182               	movf	RF24N_write@directTo& (0+255),w,b
  7553  002152  0100               	movlb	0	; () banked
  7554  002154  B4D8               	btfsc	status,2,c
  7555  002156  D005               	goto	l5895
  7556                           
  7557                           ; BSR set to: 0
  7558  002158  0E03               	movlw	3
  7559  00215A  0100               	movlb	0	; () banked
  7560  00215C  1982               	xorwf	RF24N_write@directTo& (0+255),w,b
  7561  00215E  A4D8               	btfss	status,2,c
  7562  002160  D082               	goto	l5915
  7563  002162                     l5895:
  7564                           
  7565                           ; BSR set to: 0
  7566  002162  0100               	movlb	0	; () banked
  7567  002164  51A1               	movf	RF24N_write@isAckType& (0+255),w,b
  7568  002166  0100               	movlb	0	; () banked
  7569  002168  B4D8               	btfsc	status,2,c
  7570  00216A  D07D               	goto	l5915
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;RF24Network_c.c: 1050: if(rn.networkFlags & 4){
  7574  00216C  EE20  F0D3         	lfsr	2,_rn+42
  7575  002170  A4DF               	btfss	indf2,2,c
  7576  002172  D016               	goto	l5905
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;RF24Network_c.c: 1051: RF24_txStandBy_t(rn.txTimeout,0);
  7580  002174  C0AA  F017         	movff	_rn+1,RF24_txStandBy_t@timeout
  7581  002178  C0AB  F018         	movff	_rn+2,RF24_txStandBy_t@timeout+1
  7582  00217C  C0AC  F019         	movff	_rn+3,RF24_txStandBy_t@timeout+2
  7583  002180  C0AD  F01A         	movff	_rn+4,RF24_txStandBy_t@timeout+3
  7584  002184  0E00               	movlw	0
  7585  002186  6E1B               	movwf	RF24_txStandBy_t@startTx,c
  7586  002188  EC12  F015         	call	_RF24_txStandBy_t	;wreg free
  7587                           
  7588                           ;RF24Network_c.c: 1052: rn.networkFlags &= ~4;
  7589  00218C  C0D3  FFE8         	movff	_rn+42,wreg
  7590  002190  0BFB               	andlw	251
  7591  002192  CFE8 F0D3          	movff	wreg,_rn+42
  7592                           
  7593                           ;RF24Network_c.c: 1053: RF24_setAutoAck_p(0,0);
  7594  002196  0E00               	movlw	0
  7595  002198  6E15               	movwf	RF24_setAutoAck_p@enable,c
  7596  00219A  0E00               	movlw	0
  7597  00219C  ECE9  F018         	call	_RF24_setAutoAck_p
  7598  0021A0                     l5905:
  7599                           
  7600                           ;RF24Network_c.c: 1054: }
  7601                           ;RF24Network_c.c: 1055: RF24_startListening();
  7602  0021A0  ECBE  F018         	call	_RF24_startListening	;wreg free
  7603                           
  7604                           ;RF24Network_c.c: 1057: reply_time = millis();
  7605  0021A4  EC75  F01C         	call	_millis	;wreg free
  7606  0021A8  C003  F09D         	movff	?_millis,RF24N_write@reply_time
  7607  0021AC  C004  F09E         	movff	?_millis+1,RF24N_write@reply_time+1
  7608  0021B0  C005  F09F         	movff	?_millis+2,RF24N_write@reply_time+2
  7609  0021B4  C006  F0A0         	movff	?_millis+3,RF24N_write@reply_time+3
  7610                           
  7611                           ;RF24Network_c.c: 1059: while( RF24N_update() != 193){
  7612  0021B8  D050               	goto	l5913
  7613  0021BA                     l5909:
  7614                           
  7615                           ;RF24Network_c.c: 1063: if(millis() - reply_time > rn.routeTimeout){
  7616  0021BA  C09D  F083         	movff	RF24N_write@reply_time,??_RF24N_write
  7617  0021BE  C09E  F084         	movff	RF24N_write@reply_time+1,??_RF24N_write+1
  7618  0021C2  C09F  F085         	movff	RF24N_write@reply_time+2,??_RF24N_write+2
  7619  0021C6  C0A0  F086         	movff	RF24N_write@reply_time+3,??_RF24N_write+3
  7620  0021CA  0100               	movlb	0	; () banked
  7621  0021CC  1F83               	comf	??_RF24N_write& (0+255),f,b
  7622  0021CE  1F84               	comf	(??_RF24N_write+1)& (0+255),f,b
  7623  0021D0  1F85               	comf	(??_RF24N_write+2)& (0+255),f,b
  7624  0021D2  1F86               	comf	(??_RF24N_write+3)& (0+255),f,b
  7625  0021D4  2B83               	incf	??_RF24N_write& (0+255),f,b
  7626  0021D6  0E00               	movlw	0
  7627  0021D8  2384               	addwfc	(??_RF24N_write+1)& (0+255),f,b
  7628  0021DA  2385               	addwfc	(??_RF24N_write+2)& (0+255),f,b
  7629  0021DC  2386               	addwfc	(??_RF24N_write+3)& (0+255),f,b
  7630  0021DE  EC75  F01C         	call	_millis	;wreg free
  7631  0021E2  0100               	movlb	0	; () banked
  7632  0021E4  5183               	movf	??_RF24N_write& (0+255),w,b
  7633  0021E6  2403               	addwf	?_millis,w,c
  7634  0021E8  0100               	movlb	0	; () banked
  7635  0021EA  6F87               	movwf	(??_RF24N_write+4)& (0+255),b
  7636  0021EC  0100               	movlb	0	; () banked
  7637  0021EE  5184               	movf	(??_RF24N_write+1)& (0+255),w,b
  7638  0021F0  2004               	addwfc	?_millis+1,w,c
  7639  0021F2  0100               	movlb	0	; () banked
  7640  0021F4  6F88               	movwf	(??_RF24N_write+5)& (0+255),b
  7641  0021F6  0100               	movlb	0	; () banked
  7642  0021F8  5185               	movf	(??_RF24N_write+2)& (0+255),w,b
  7643  0021FA  2005               	addwfc	?_millis+2,w,c
  7644  0021FC  0100               	movlb	0	; () banked
  7645  0021FE  6F89               	movwf	(??_RF24N_write+6)& (0+255),b
  7646  002200  0100               	movlb	0	; () banked
  7647  002202  5186               	movf	(??_RF24N_write+3)& (0+255),w,b
  7648  002204  2006               	addwfc	?_millis+3,w,c
  7649  002206  0100               	movlb	0	; () banked
  7650  002208  6F8A               	movwf	(??_RF24N_write+7)& (0+255),b
  7651  00220A  EE20  F0AE         	lfsr	2,_rn+5
  7652  00220E  CFDE F08B          	movff	postinc2,??_RF24N_write+8
  7653  002212  CFDD F08C          	movff	postdec2,??_RF24N_write+9
  7654  002216  0100               	movlb	0	; () banked
  7655  002218  518B               	movf	(??_RF24N_write+8)& (0+255),w,b
  7656  00221A  0100               	movlb	0	; () banked
  7657  00221C  6F8D               	movwf	(??_RF24N_write+10)& (0+255),b
  7658  00221E  0100               	movlb	0	; () banked
  7659  002220  518C               	movf	(??_RF24N_write+9)& (0+255),w,b
  7660  002222  0100               	movlb	0	; () banked
  7661  002224  6F8E               	movwf	(??_RF24N_write+11)& (0+255),b
  7662  002226  0100               	movlb	0	; () banked
  7663  002228  6B8F               	clrf	(??_RF24N_write+12)& (0+255),b
  7664  00222A  0100               	movlb	0	; () banked
  7665  00222C  6B90               	clrf	(??_RF24N_write+13)& (0+255),b
  7666  00222E  0100               	movlb	0	; () banked
  7667  002230  5187               	movf	(??_RF24N_write+4)& (0+255),w,b
  7668  002232  0100               	movlb	0	; () banked
  7669  002234  5D8D               	subwf	(??_RF24N_write+10)& (0+255),w,b
  7670  002236  0100               	movlb	0	; () banked
  7671  002238  5188               	movf	(??_RF24N_write+5)& (0+255),w,b
  7672  00223A  0100               	movlb	0	; () banked
  7673  00223C  598E               	subwfb	(??_RF24N_write+11)& (0+255),w,b
  7674  00223E  0100               	movlb	0	; () banked
  7675  002240  5189               	movf	(??_RF24N_write+6)& (0+255),w,b
  7676  002242  0100               	movlb	0	; () banked
  7677  002244  598F               	subwfb	(??_RF24N_write+12)& (0+255),w,b
  7678  002246  0100               	movlb	0	; () banked
  7679  002248  518A               	movf	(??_RF24N_write+7)& (0+255),w,b
  7680  00224A  0100               	movlb	0	; () banked
  7681  00224C  5990               	subwfb	(??_RF24N_write+13)& (0+255),w,b
  7682  00224E  B0D8               	btfsc	status,0,c
  7683  002250  D004               	goto	l5913
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;RF24Network_c.c: 1067: ;
  7687                           ;RF24Network_c.c: 1069: ok=0;
  7688  002252  0E00               	movlw	0
  7689  002254  0100               	movlb	0	; () banked
  7690  002256  6FA4               	movwf	RF24N_write@ok& (0+255),b
  7691                           
  7692                           ;RF24Network_c.c: 1070: break;
  7693  002258  D006               	goto	l5915
  7694  00225A                     l5913:
  7695  00225A  ECE5  F00A         	call	_RF24N_update	;wreg free
  7696  00225E  0EC1               	movlw	193
  7697  002260  1870               	xorwf	btemp,w,c
  7698  002262  A4D8               	btfss	status,2,c
  7699  002264  D7AA               	goto	l5909
  7700  002266                     l5915:
  7701                           
  7702                           ;RF24Network_c.c: 1071: }
  7703                           ;RF24Network_c.c: 1072: }
  7704                           ;RF24Network_c.c: 1073: }
  7705                           ;RF24Network_c.c: 1074: if( !(rn.networkFlags & 4) ){
  7706  002266  EE20  F0D3         	lfsr	2,_rn+42
  7707  00226A  A4DF               	btfss	indf2,2,c
  7708                           
  7709                           ;RF24Network_c.c: 1077: RF24_startListening();
  7710  00226C  ECBE  F018         	call	_RF24_startListening	;wreg free
  7711                           
  7712                           ;RF24Network_c.c: 1079: }
  7713                           ;RF24Network_c.c: 1087: return ok;
  7714  002270  0100               	movlb	0	; () banked
  7715  002272  51A4               	movf	RF24N_write@ok& (0+255),w,b
  7716  002274  0012               	return	
  7717  002276                     __end_of_RF24N_write:
  7718                           	opt stack 0
  7719                           tblptru	equ	0xFF8
  7720                           tblptrh	equ	0xFF7
  7721                           tblptrl	equ	0xFF6
  7722                           tablat	equ	0xFF5
  7723                           prodh	equ	0xFF4
  7724                           prodl	equ	0xFF3
  7725                           intcon	equ	0xFF2
  7726                           indf0	equ	0xFEF
  7727                           postinc0	equ	0xFEE
  7728                           postdec0	equ	0xFED
  7729                           fsr0h	equ	0xFEA
  7730                           fsr0l	equ	0xFE9
  7731                           wreg	equ	0xFE8
  7732                           indf2	equ	0xFDF
  7733                           postinc2	equ	0xFDE
  7734                           postdec2	equ	0xFDD
  7735                           fsr2h	equ	0xFDA
  7736                           fsr2l	equ	0xFD9
  7737                           status	equ	0xFD8
  7738                           
  7739 ;; *************** function _RF24_startListening *****************
  7740 ;; Defined at:
  7741 ;;		line 723 in file "../../../RF24_c/RF24_c.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;		None
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      void 
  7748 ;; Registers used:
  7749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7757 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7758 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7759 ;;Total ram usage:        1 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:    6
  7762 ;; This function calls:
  7763 ;;		_RF24_ce_d
  7764 ;;		_RF24_closeReadingPipe
  7765 ;;		_RF24_flush_tx
  7766 ;;		_RF24_powerUp
  7767 ;;		_RF24_read_register_d
  7768 ;;		_RF24_write_register_c_d
  7769 ;;		_RF24_write_register_d
  7770 ;; This function is called by:
  7771 ;;		_RF24N_begin_d
  7772 ;;		_RF24N_write
  7773 ;;		_RF24N_write_
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           	psect	text51
  7778  00317C                     __ptext51:
  7779                           	opt stack 0
  7780  00317C                     _RF24_startListening:
  7781                           	opt stack 22
  7782                           
  7783                           ;RF24_c.c: 726: RF24_powerUp();
  7784                           
  7785                           ;incstack = 0
  7786  00317C  ECC2  F01B         	call	_RF24_powerUp	;wreg free
  7787                           
  7788                           ;RF24_c.c: 728: RF24_write_register_d(0x00, RF24_read_register_d(0x00) | (1<<(0)));
  7789  003180  0E00               	movlw	0
  7790  003182  EC07  F01C         	call	_RF24_read_register_d
  7791  003186  0901               	iorlw	1
  7792  003188  6E12               	movwf	RF24_write_register_d@value,c
  7793  00318A  0E00               	movlw	0
  7794  00318C  ECF7  F01B         	call	_RF24_write_register_d
  7795                           
  7796                           ;RF24_c.c: 729: RF24_write_register_d(0x07, (1<<(6)) | (1<<(5)) | (1<<(4)) );
  7797  003190  0E70               	movlw	112
  7798  003192  6E12               	movwf	RF24_write_register_d@value,c
  7799  003194  0E07               	movlw	7
  7800  003196  ECF7  F01B         	call	_RF24_write_register_d
  7801                           
  7802                           ;RF24_c.c: 730: RF24_ce_d(1);
  7803  00319A  0E01               	movlw	1
  7804  00319C  EC60  F01C         	call	_RF24_ce_d
  7805                           
  7806                           ;RF24_c.c: 732: if (rf.pipe0_reading_address[0] > 0){
  7807  0031A0  5049               	movf	_rf+7,w,c
  7808  0031A2  B4D8               	btfsc	status,2,c
  7809  0031A4  D00A               	goto	l5647
  7810                           
  7811                           ;RF24_c.c: 733: RF24_write_register_c_d(0x0A, rf.pipe0_reading_address, rf.addr_width);
  7812  0031A6  0E49               	movlw	low (_rf+7)
  7813  0031A8  6E10               	movwf	RF24_write_register_c_d@buf,c
  7814  0031AA  0E00               	movlw	high (_rf+7)
  7815  0031AC  6E11               	movwf	RF24_write_register_c_d@buf+1,c
  7816  0031AE  C04E  F012         	movff	_rf+12,RF24_write_register_c_d@len
  7817  0031B2  0E0A               	movlw	10
  7818  0031B4  ECE3  F01A         	call	_RF24_write_register_c_d
  7819                           
  7820                           ;RF24_c.c: 734: }else{
  7821  0031B8  D003               	goto	l5649
  7822  0031BA                     l5647:
  7823                           
  7824                           ;RF24_c.c: 735: RF24_closeReadingPipe(0);
  7825  0031BA  0E00               	movlw	0
  7826  0031BC  EC15  F01A         	call	_RF24_closeReadingPipe
  7827  0031C0                     l5649:
  7828                           
  7829                           ;RF24_c.c: 736: }
  7830                           ;RF24_c.c: 740: if(RF24_read_register_d(0x1D) & (1<<(1))){
  7831  0031C0  0E1D               	movlw	29
  7832  0031C2  EC07  F01C         	call	_RF24_read_register_d
  7833  0031C6  6E1A               	movwf	??_RF24_startListening& (0+255),c
  7834  0031C8  A21A               	btfss	??_RF24_startListening,1,c
  7835  0031CA  0012               	return	
  7836                           
  7837                           ;RF24_c.c: 741: RF24_flush_tx();
  7838  0031CC  ECA3  F01C         	call	_RF24_flush_tx	;wreg free
  7839  0031D0  0012               	return	
  7840  0031D2                     __end_of_RF24_startListening:
  7841                           	opt stack 0
  7842                           tblptru	equ	0xFF8
  7843                           tblptrh	equ	0xFF7
  7844                           tblptrl	equ	0xFF6
  7845                           tablat	equ	0xFF5
  7846                           prodh	equ	0xFF4
  7847                           prodl	equ	0xFF3
  7848                           intcon	equ	0xFF2
  7849                           indf0	equ	0xFEF
  7850                           postinc0	equ	0xFEE
  7851                           postdec0	equ	0xFED
  7852                           fsr0h	equ	0xFEA
  7853                           fsr0l	equ	0xFE9
  7854                           wreg	equ	0xFE8
  7855                           indf2	equ	0xFDF
  7856                           postinc2	equ	0xFDE
  7857                           postdec2	equ	0xFDD
  7858                           fsr2h	equ	0xFDA
  7859                           fsr2l	equ	0xFD9
  7860                           status	equ	0xFD8
  7861                           
  7862 ;; *************** function _RF24_write_register_c_d *****************
  7863 ;; Defined at:
  7864 ;;		line 162 in file "../../../RF24_c/RF24_c.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;  reg             1    wreg     unsigned char 
  7867 ;;  buf             2   15[COMRAM] PTR const unsigned char 
  7868 ;;		 -> RF24_openReadingPipe_d@address(5), RF24_openWritingPipe_d@value(5), rf.pipe0_reading_address(5), rf(22), 
  7869 ;;  len             1   17[COMRAM] unsigned char 
  7870 ;; Auto vars:     Size  Location     Type
  7871 ;;  reg             1   19[COMRAM] unsigned char 
  7872 ;;  status          1   18[COMRAM] unsigned char 
  7873 ;; Return value:  Size  Location     Type
  7874 ;;                  1    wreg      unsigned char 
  7875 ;; Registers used:
  7876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7877 ;; Tracked objects:
  7878 ;;		On entry : 0/0
  7879 ;;		On exit  : 0/0
  7880 ;;		Unchanged: 0/0
  7881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7882 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7883 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7885 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7886 ;;Total ram usage:        5 bytes
  7887 ;; Hardware stack levels used:    1
  7888 ;; Hardware stack levels required when called:    4
  7889 ;; This function calls:
  7890 ;;		_RF24_beginTransaction
  7891 ;;		_RF24_endTransaction
  7892 ;;		_SPI_transfer
  7893 ;; This function is called by:
  7894 ;;		_RF24_startListening
  7895 ;;		_RF24_openWritingPipe_d
  7896 ;;		_RF24_openReadingPipe_d
  7897 ;;		_RF24_openWritingPipe
  7898 ;;		_RF24_openReadingPipe
  7899 ;; This function uses a non-reentrant model
  7900 ;;
  7901                           
  7902                           	psect	text52
  7903  0035C6                     __ptext52:
  7904                           	opt stack 0
  7905  0035C6                     _RF24_write_register_c_d:
  7906                           	opt stack 23
  7907                           
  7908                           ;incstack = 0
  7909                           ;RF24_write_register_c_d@reg stored from wreg
  7910  0035C6  6E14               	movwf	RF24_write_register_c_d@reg,c
  7911                           
  7912                           ;RF24_c.c: 164: uint8_t status;
  7913                           ;RF24_c.c: 181: RF24_beginTransaction();
  7914  0035C8  EC9F  F01C         	call	_RF24_beginTransaction	;wreg free
  7915                           
  7916                           ;RF24_c.c: 182: status = SPI_transfer( 0x20 | ( 0x1F & reg ) );
  7917  0035CC  5014               	movf	RF24_write_register_c_d@reg,w,c
  7918  0035CE  0B1F               	andlw	31
  7919  0035D0  0920               	iorlw	32
  7920  0035D2  EC7E  F01C         	call	_SPI_transfer
  7921  0035D6  6E13               	movwf	RF24_write_register_c_d@status,c
  7922                           
  7923                           ;RF24_c.c: 183: while ( len-- )
  7924  0035D8  D009               	goto	l5259
  7925  0035DA                     l5255:
  7926                           
  7927                           ;RF24_c.c: 184: SPI_transfer(*buf++);
  7928  0035DA  C010  FFD9         	movff	RF24_write_register_c_d@buf,fsr2l
  7929  0035DE  C011  FFDA         	movff	RF24_write_register_c_d@buf+1,fsr2h
  7930  0035E2  50DF               	movf	indf2,w,c
  7931  0035E4  EC7E  F01C         	call	_SPI_transfer
  7932  0035E8  4A10               	infsnz	RF24_write_register_c_d@buf,f,c
  7933  0035EA  2A11               	incf	RF24_write_register_c_d@buf+1,f,c
  7934  0035EC                     l5259:
  7935  0035EC  0612               	decf	RF24_write_register_c_d@len,f,c
  7936  0035EE  2812               	incf	RF24_write_register_c_d@len,w,c
  7937  0035F0  A4D8               	btfss	status,2,c
  7938  0035F2  D7F3               	goto	l5255
  7939                           
  7940                           ;RF24_c.c: 185: RF24_endTransaction();
  7941  0035F4  EC9B  F01C         	call	_RF24_endTransaction	;wreg free
  7942  0035F8  0012               	return	
  7943  0035FA                     __end_of_RF24_write_register_c_d:
  7944                           	opt stack 0
  7945                           tblptru	equ	0xFF8
  7946                           tblptrh	equ	0xFF7
  7947                           tblptrl	equ	0xFF6
  7948                           tablat	equ	0xFF5
  7949                           prodh	equ	0xFF4
  7950                           prodl	equ	0xFF3
  7951                           intcon	equ	0xFF2
  7952                           indf0	equ	0xFEF
  7953                           postinc0	equ	0xFEE
  7954                           postdec0	equ	0xFED
  7955                           fsr0h	equ	0xFEA
  7956                           fsr0l	equ	0xFE9
  7957                           wreg	equ	0xFE8
  7958                           indf2	equ	0xFDF
  7959                           postinc2	equ	0xFDE
  7960                           postdec2	equ	0xFDD
  7961                           fsr2h	equ	0xFDA
  7962                           fsr2l	equ	0xFD9
  7963                           status	equ	0xFD8
  7964                           
  7965 ;; *************** function _RF24_powerUp *****************
  7966 ;; Defined at:
  7967 ;;		line 791 in file "../../../RF24_c/RF24_c.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;		None
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;  cfg             1   20[COMRAM] unsigned char 
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  1    wreg      void 
  7974 ;; Registers used:
  7975 ;;		wreg, status,2, status,0, cstack
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7985 ;;Total ram usage:        1 bytes
  7986 ;; Hardware stack levels used:    1
  7987 ;; Hardware stack levels required when called:    5
  7988 ;; This function calls:
  7989 ;;		_RF24_read_register_d
  7990 ;;		_RF24_write_register_d
  7991 ;;		_delay
  7992 ;; This function is called by:
  7993 ;;		_RF24_begin
  7994 ;;		_RF24_startListening
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           	psect	text53
  7999  003784                     __ptext53:
  8000                           	opt stack 0
  8001  003784                     _RF24_powerUp:
  8002                           	opt stack 23
  8003                           
  8004                           ;RF24_c.c: 793: uint8_t cfg = RF24_read_register_d(0x00);
  8005                           
  8006                           ;incstack = 0
  8007  003784  0E00               	movlw	0
  8008  003786  EC07  F01C         	call	_RF24_read_register_d
  8009  00378A  6E15               	movwf	RF24_powerUp@cfg,c
  8010                           
  8011                           ;RF24_c.c: 796: if (!(cfg & (1<<(1)))){
  8012  00378C  B215               	btfsc	RF24_powerUp@cfg,1,c
  8013  00378E  0012               	return	
  8014                           
  8015                           ;RF24_c.c: 797: RF24_write_register_d(0x00, cfg | (1<<(1)));
  8016  003790  5015               	movf	RF24_powerUp@cfg,w,c
  8017  003792  0902               	iorlw	2
  8018  003794  6E12               	movwf	RF24_write_register_d@value,c
  8019  003796  0E00               	movlw	0
  8020  003798  ECF7  F01B         	call	_RF24_write_register_d
  8021                           
  8022                           ;RF24_c.c: 802: delay(5);
  8023  00379C  0E00               	movlw	0
  8024  00379E  6E04               	movwf	delay@val+1,c
  8025  0037A0  0E05               	movlw	5
  8026  0037A2  6E03               	movwf	delay@val,c
  8027  0037A4  ECAF  F019         	call	_delay	;wreg free
  8028  0037A8  0012               	return	
  8029  0037AA                     __end_of_RF24_powerUp:
  8030                           	opt stack 0
  8031                           tblptru	equ	0xFF8
  8032                           tblptrh	equ	0xFF7
  8033                           tblptrl	equ	0xFF6
  8034                           tablat	equ	0xFF5
  8035                           prodh	equ	0xFF4
  8036                           prodl	equ	0xFF3
  8037                           intcon	equ	0xFF2
  8038                           indf0	equ	0xFEF
  8039                           postinc0	equ	0xFEE
  8040                           postdec0	equ	0xFED
  8041                           fsr0h	equ	0xFEA
  8042                           fsr0l	equ	0xFE9
  8043                           wreg	equ	0xFE8
  8044                           indf2	equ	0xFDF
  8045                           postinc2	equ	0xFDE
  8046                           postdec2	equ	0xFDD
  8047                           fsr2h	equ	0xFDA
  8048                           fsr2l	equ	0xFD9
  8049                           status	equ	0xFD8
  8050                           
  8051 ;; *************** function _RF24_flush_tx *****************
  8052 ;; Defined at:
  8053 ;;		line 348 in file "../../../RF24_c/RF24_c.c"
  8054 ;; Parameters:    Size  Location     Type
  8055 ;;		None
  8056 ;; Auto vars:     Size  Location     Type
  8057 ;;		None
  8058 ;; Return value:  Size  Location     Type
  8059 ;;                  1    wreg      unsigned char 
  8060 ;; Registers used:
  8061 ;;		wreg, status,2, status,0, cstack
  8062 ;; Tracked objects:
  8063 ;;		On entry : 0/0
  8064 ;;		On exit  : 0/0
  8065 ;;		Unchanged: 0/0
  8066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8071 ;;Total ram usage:        0 bytes
  8072 ;; Hardware stack levels used:    1
  8073 ;; Hardware stack levels required when called:    5
  8074 ;; This function calls:
  8075 ;;		_RF24_spiTrans
  8076 ;; This function is called by:
  8077 ;;		_RF24_begin
  8078 ;;		_RF24_startListening
  8079 ;;		_RF24_stopListening
  8080 ;;		_RF24_txStandBy_t
  8081 ;;		_RF24_write_m
  8082 ;;		_RF24_txStandBy
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086                           	psect	text54
  8087  003946                     __ptext54:
  8088                           	opt stack 0
  8089  003946                     _RF24_flush_tx:
  8090                           	opt stack 23
  8091                           
  8092                           ;RF24_c.c: 350: return RF24_spiTrans( 0xE1 );
  8093                           ;	Return value of _RF24_flush_tx is never used
  8094                           
  8095                           ;incstack = 0
  8096  003946  0EE1               	movlw	225
  8097  003948  EC55  F01C         	call	_RF24_spiTrans
  8098  00394C  0012               	return	
  8099  00394E                     __end_of_RF24_flush_tx:
  8100                           	opt stack 0
  8101                           tblptru	equ	0xFF8
  8102                           tblptrh	equ	0xFF7
  8103                           tblptrl	equ	0xFF6
  8104                           tablat	equ	0xFF5
  8105                           prodh	equ	0xFF4
  8106                           prodl	equ	0xFF3
  8107                           intcon	equ	0xFF2
  8108                           indf0	equ	0xFEF
  8109                           postinc0	equ	0xFEE
  8110                           postdec0	equ	0xFED
  8111                           fsr0h	equ	0xFEA
  8112                           fsr0l	equ	0xFE9
  8113                           wreg	equ	0xFE8
  8114                           indf2	equ	0xFDF
  8115                           postinc2	equ	0xFDE
  8116                           postdec2	equ	0xFDD
  8117                           fsr2h	equ	0xFDA
  8118                           fsr2l	equ	0xFD9
  8119                           status	equ	0xFD8
  8120                           
  8121 ;; *************** function _RF24_write_register_d *****************
  8122 ;; Defined at:
  8123 ;;		line 194 in file "../../../RF24_c/RF24_c.c"
  8124 ;; Parameters:    Size  Location     Type
  8125 ;;  reg             1    wreg     unsigned char 
  8126 ;;  value           1   17[COMRAM] unsigned char 
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;  reg             1   18[COMRAM] unsigned char 
  8129 ;;  status          1   19[COMRAM] unsigned char 
  8130 ;; Return value:  Size  Location     Type
  8131 ;;                  1    wreg      unsigned char 
  8132 ;; Registers used:
  8133 ;;		wreg, status,2, status,0, cstack
  8134 ;; Tracked objects:
  8135 ;;		On entry : 0/0
  8136 ;;		On exit  : 0/0
  8137 ;;		Unchanged: 0/0
  8138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8139 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8140 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8142 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8143 ;;Total ram usage:        3 bytes
  8144 ;; Hardware stack levels used:    1
  8145 ;; Hardware stack levels required when called:    4
  8146 ;; This function calls:
  8147 ;;		_RF24_beginTransaction
  8148 ;;		_RF24_endTransaction
  8149 ;;		_SPI_transfer
  8150 ;; This function is called by:
  8151 ;;		_RF24_setChannel
  8152 ;;		_RF24_begin
  8153 ;;		_RF24_startListening
  8154 ;;		_RF24_stopListening
  8155 ;;		_RF24_powerUp
  8156 ;;		_RF24_writeFast_m
  8157 ;;		_RF24_txStandBy_t
  8158 ;;		_RF24_read
  8159 ;;		_RF24_openWritingPipe_d
  8160 ;;		_RF24_openReadingPipe_d
  8161 ;;		_RF24_closeReadingPipe
  8162 ;;		_RF24_enableDynamicPayloads
  8163 ;;		_RF24_setAutoAck_p
  8164 ;;		_RF24_setDataRate
  8165 ;;		_RF24_setRetries
  8166 ;;		_RF24_powerDown
  8167 ;;		_RF24_write_m
  8168 ;;		_RF24_reUseTX
  8169 ;;		_RF24_txStandBy
  8170 ;;		_RF24_maskIRQ
  8171 ;;		_RF24_whatHappened
  8172 ;;		_RF24_openWritingPipe
  8173 ;;		_RF24_setAddressWidth
  8174 ;;		_RF24_openReadingPipe
  8175 ;;		_RF24_enableAckPayload
  8176 ;;		_RF24_enableDynamicAck
  8177 ;;		_RF24_setAutoAck
  8178 ;;		_RF24_setPALevel
  8179 ;;		_RF24_setCRCLength
  8180 ;;		_RF24_disableCRC
  8181 ;; This function uses a non-reentrant model
  8182 ;;
  8183                           
  8184                           	psect	text55
  8185  0037EE                     __ptext55:
  8186                           	opt stack 0
  8187  0037EE                     _RF24_write_register_d:
  8188                           	opt stack 24
  8189                           
  8190                           ;incstack = 0
  8191                           ;RF24_write_register_d@reg stored from wreg
  8192  0037EE  6E13               	movwf	RF24_write_register_d@reg,c
  8193                           
  8194                           ;RF24_c.c: 196: uint8_t status;
  8195                           ;RF24_c.c: 198: ;
  8196                           ;RF24_c.c: 212: RF24_beginTransaction();
  8197  0037F0  EC9F  F01C         	call	_RF24_beginTransaction	;wreg free
  8198                           
  8199                           ;RF24_c.c: 213: status = SPI_transfer( 0x20 | ( 0x1F & reg ) );
  8200  0037F4  5013               	movf	RF24_write_register_d@reg,w,c
  8201  0037F6  0B1F               	andlw	31
  8202  0037F8  0920               	iorlw	32
  8203  0037FA  EC7E  F01C         	call	_SPI_transfer
  8204  0037FE  6E14               	movwf	RF24_write_register_d@status,c
  8205                           
  8206                           ;RF24_c.c: 214: SPI_transfer(value);
  8207  003800  5012               	movf	RF24_write_register_d@value,w,c
  8208  003802  EC7E  F01C         	call	_SPI_transfer
  8209                           
  8210                           ;RF24_c.c: 215: RF24_endTransaction();
  8211  003806  EC9B  F01C         	call	_RF24_endTransaction	;wreg free
  8212                           
  8213                           ;RF24_c.c: 219: return status;
  8214  00380A  5014               	movf	RF24_write_register_d@status,w,c
  8215  00380C  0012               	return	
  8216  00380E                     __end_of_RF24_write_register_d:
  8217                           	opt stack 0
  8218                           tblptru	equ	0xFF8
  8219                           tblptrh	equ	0xFF7
  8220                           tblptrl	equ	0xFF6
  8221                           tablat	equ	0xFF5
  8222                           prodh	equ	0xFF4
  8223                           prodl	equ	0xFF3
  8224                           intcon	equ	0xFF2
  8225                           indf0	equ	0xFEF
  8226                           postinc0	equ	0xFEE
  8227                           postdec0	equ	0xFED
  8228                           fsr0h	equ	0xFEA
  8229                           fsr0l	equ	0xFE9
  8230                           wreg	equ	0xFE8
  8231                           indf2	equ	0xFDF
  8232                           postinc2	equ	0xFDE
  8233                           postdec2	equ	0xFDD
  8234                           fsr2h	equ	0xFDA
  8235                           fsr2l	equ	0xFD9
  8236                           status	equ	0xFD8
  8237                           
  8238 ;; *************** function _RF24_read_register_d *****************
  8239 ;; Defined at:
  8240 ;;		line 131 in file "../../../RF24_c/RF24_c.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;  reg             1    wreg     unsigned char 
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;  reg             1   15[COMRAM] unsigned char 
  8245 ;;  result          1   16[COMRAM] unsigned char 
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  1    wreg      unsigned char 
  8248 ;; Registers used:
  8249 ;;		wreg, status,2, status,0, cstack
  8250 ;; Tracked objects:
  8251 ;;		On entry : 0/0
  8252 ;;		On exit  : 0/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8256 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8258 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8259 ;;Total ram usage:        2 bytes
  8260 ;; Hardware stack levels used:    1
  8261 ;; Hardware stack levels required when called:    4
  8262 ;; This function calls:
  8263 ;;		_RF24_beginTransaction
  8264 ;;		_RF24_endTransaction
  8265 ;;		_SPI_transfer
  8266 ;; This function is called by:
  8267 ;;		_RF24_begin
  8268 ;;		_RF24_startListening
  8269 ;;		_RF24_stopListening
  8270 ;;		_RF24_powerUp
  8271 ;;		_RF24_txStandBy_t
  8272 ;;		_RF24_available_p
  8273 ;;		_RF24_openReadingPipe_d
  8274 ;;		_RF24_closeReadingPipe
  8275 ;;		_RF24_enableDynamicPayloads
  8276 ;;		_RF24_setAutoAck_p
  8277 ;;		_RF24_setDataRate
  8278 ;;		_RF24_getChannel
  8279 ;;		_RF24_powerDown
  8280 ;;		_RF24_rxFifoFull
  8281 ;;		_RF24_txStandBy
  8282 ;;		_RF24_maskIRQ
  8283 ;;		_RF24_openReadingPipe
  8284 ;;		_RF24_enableAckPayload
  8285 ;;		_RF24_enableDynamicAck
  8286 ;;		_RF24_isAckPayloadAvailable
  8287 ;;		_RF24_testCarrier
  8288 ;;		_RF24_testRPD
  8289 ;;		_RF24_setPALevel
  8290 ;;		_RF24_getPALevel
  8291 ;;		_RF24_getDataRate
  8292 ;;		_RF24_setCRCLength
  8293 ;;		_RF24_getCRCLength
  8294 ;;		_RF24_disableCRC
  8295 ;; This function uses a non-reentrant model
  8296 ;;
  8297                           
  8298                           	psect	text56
  8299  00380E                     __ptext56:
  8300                           	opt stack 0
  8301  00380E                     _RF24_read_register_d:
  8302                           	opt stack 23
  8303                           
  8304                           ;incstack = 0
  8305                           ;RF24_read_register_d@reg stored from wreg
  8306  00380E  6E10               	movwf	RF24_read_register_d@reg,c
  8307                           
  8308                           ;RF24_c.c: 133: uint8_t result;
  8309                           ;RF24_c.c: 150: RF24_beginTransaction();
  8310  003810  EC9F  F01C         	call	_RF24_beginTransaction	;wreg free
  8311                           
  8312                           ;RF24_c.c: 151: SPI_transfer( 0x00 | ( 0x1F & reg ) );
  8313  003814  5010               	movf	RF24_read_register_d@reg,w,c
  8314  003816  0B1F               	andlw	31
  8315  003818  EC7E  F01C         	call	_SPI_transfer
  8316                           
  8317                           ;RF24_c.c: 152: result = SPI_transfer(0xff);
  8318  00381C  0EFF               	movlw	255
  8319  00381E  EC7E  F01C         	call	_SPI_transfer
  8320  003822  6E11               	movwf	RF24_read_register_d@result,c
  8321                           
  8322                           ;RF24_c.c: 153: RF24_endTransaction();
  8323  003824  EC9B  F01C         	call	_RF24_endTransaction	;wreg free
  8324                           
  8325                           ;RF24_c.c: 157: return result;
  8326  003828  5011               	movf	RF24_read_register_d@result,w,c
  8327  00382A  0012               	return	
  8328  00382C                     __end_of_RF24_read_register_d:
  8329                           	opt stack 0
  8330                           tblptru	equ	0xFF8
  8331                           tblptrh	equ	0xFF7
  8332                           tblptrl	equ	0xFF6
  8333                           tablat	equ	0xFF5
  8334                           prodh	equ	0xFF4
  8335                           prodl	equ	0xFF3
  8336                           intcon	equ	0xFF2
  8337                           indf0	equ	0xFEF
  8338                           postinc0	equ	0xFEE
  8339                           postdec0	equ	0xFED
  8340                           fsr0h	equ	0xFEA
  8341                           fsr0l	equ	0xFE9
  8342                           wreg	equ	0xFE8
  8343                           indf2	equ	0xFDF
  8344                           postinc2	equ	0xFDE
  8345                           postdec2	equ	0xFDD
  8346                           fsr2h	equ	0xFDA
  8347                           fsr2l	equ	0xFD9
  8348                           status	equ	0xFD8
  8349                           
  8350 ;; *************** function _RF24N_write_to_pipe *****************
  8351 ;; Defined at:
  8352 ;;		line 1143 in file "../../RF24Network_c.c"
  8353 ;; Parameters:    Size  Location     Type
  8354 ;;  node            2   51[COMRAM] unsigned int 
  8355 ;;  pipe            1   53[COMRAM] unsigned char 
  8356 ;;  multicast       1   54[COMRAM] unsigned char 
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;  out_pipe        5   55[COMRAM] unsigned char [5]
  8359 ;;  ok              1   60[COMRAM] unsigned char 
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  1    wreg      unsigned char 
  8362 ;; Registers used:
  8363 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/0
  8366 ;;		On exit  : 0/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8369 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8370 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8372 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8373 ;;Total ram usage:       10 bytes
  8374 ;; Hardware stack levels used:    1
  8375 ;; Hardware stack levels required when called:    8
  8376 ;; This function calls:
  8377 ;;		_RF24N_pipe_address
  8378 ;;		_RF24_openWritingPipe_d
  8379 ;;		_RF24_setAutoAck_p
  8380 ;;		_RF24_stopListening
  8381 ;;		_RF24_txStandBy_t
  8382 ;;		_RF24_writeFast_m
  8383 ;; This function is called by:
  8384 ;;		_RF24N_write
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           	psect	text57
  8389  002B80                     __ptext57:
  8390                           	opt stack 0
  8391  002B80                     _RF24N_write_to_pipe:
  8392                           	opt stack 19
  8393                           
  8394                           ;RF24Network_c.c: 1145: uint8_t ok = 0;
  8395                           
  8396                           ;incstack = 0
  8397  002B80  0E00               	movlw	0
  8398  002B82  6E3D               	movwf	RF24N_write_to_pipe@ok,c
  8399                           
  8400                           ;RF24Network_c.c: 1146: raddr_t out_pipe[5];
  8401                           ;RF24Network_c.c: 1147: RF24N_pipe_address( node, pipe, out_pipe);
  8402  002B84  C034  F003         	movff	RF24N_write_to_pipe@node,RF24N_pipe_address@node
  8403  002B88  C035  F004         	movff	RF24N_write_to_pipe@node+1,RF24N_pipe_address@node+1
  8404  002B8C  C036  F005         	movff	RF24N_write_to_pipe@pipe,RF24N_pipe_address@pipe
  8405  002B90  0E38               	movlw	low RF24N_write_to_pipe@out_pipe
  8406  002B92  6E06               	movwf	RF24N_pipe_address@address,c
  8407  002B94  0E00               	movlw	high RF24N_write_to_pipe@out_pipe
  8408  002B96  6E07               	movwf	RF24N_pipe_address@address+1,c
  8409  002B98  ECCC  F011         	call	_RF24N_pipe_address	;wreg free
  8410                           
  8411                           ;RF24Network_c.c: 1153: if(!(rn.networkFlags & 4)){
  8412  002B9C  EE20  F0D3         	lfsr	2,_rn+42
  8413  002BA0  A4DF               	btfss	indf2,2,c
  8414                           
  8415                           ;RF24Network_c.c: 1154: RF24_stopListening();
  8416  002BA2  EC5F  F018         	call	_RF24_stopListening	;wreg free
  8417                           
  8418                           ;RF24Network_c.c: 1155: }
  8419                           ;RF24Network_c.c: 1157: if(multicast){ RF24_setAutoAck_p(0,0);}else{RF24_setAutoAck_p(0,
      +                          1);}
  8420  002BA6  5037               	movf	RF24N_write_to_pipe@multicast,w,c
  8421  002BA8  B4D8               	btfsc	status,2,c
  8422  002BAA  D006               	goto	l5721
  8423  002BAC  0E00               	movlw	0
  8424  002BAE  6E15               	movwf	RF24_setAutoAck_p@enable,c
  8425  002BB0  0E00               	movlw	0
  8426  002BB2  ECE9  F018         	call	_RF24_setAutoAck_p
  8427  002BB6  D005               	goto	l5723
  8428  002BB8                     l5721:
  8429  002BB8  0E01               	movlw	1
  8430  002BBA  6E15               	movwf	RF24_setAutoAck_p@enable,c
  8431  002BBC  0E00               	movlw	0
  8432  002BBE  ECE9  F018         	call	_RF24_setAutoAck_p
  8433  002BC2                     l5723:
  8434                           
  8435                           ;RF24Network_c.c: 1159: RF24_openWritingPipe_d(out_pipe);
  8436  002BC2  0E38               	movlw	low RF24N_write_to_pipe@out_pipe
  8437  002BC4  6E15               	movwf	RF24_openWritingPipe_d@value_,c
  8438  002BC6  0E00               	movlw	high RF24N_write_to_pipe@out_pipe
  8439  002BC8  6E16               	movwf	RF24_openWritingPipe_d@value_+1,c
  8440  002BCA  EC8C  F017         	call	_RF24_openWritingPipe_d	;wreg free
  8441                           
  8442                           ;RF24Network_c.c: 1161: ok = RF24_writeFast_m(rn.frame_buffer, rn.frame_size,0);
  8443  002BCE  0EB0               	movlw	low (_rn+7)
  8444  002BD0  6E2F               	movwf	RF24_writeFast_m@buf,c
  8445  002BD2  0E00               	movlw	high (_rn+7)
  8446  002BD4  6E30               	movwf	RF24_writeFast_m@buf+1,c
  8447  002BD6  C0DB  F031         	movff	_rn+50,RF24_writeFast_m@len
  8448  002BDA  0E00               	movlw	0
  8449  002BDC  6E32               	movwf	RF24_writeFast_m@multicast,c
  8450  002BDE  EC35  F01A         	call	_RF24_writeFast_m	;wreg free
  8451  002BE2  6E3D               	movwf	RF24N_write_to_pipe@ok,c
  8452                           
  8453                           ;RF24Network_c.c: 1163: if(!(rn.networkFlags & 4)){
  8454  002BE4  EE20  F0D3         	lfsr	2,_rn+42
  8455  002BE8  B4DF               	btfsc	indf2,2,c
  8456  002BEA  D012               	goto	l5733
  8457                           
  8458                           ;RF24Network_c.c: 1164: ok = RF24_txStandBy_t(rn.txTimeout,0);
  8459  002BEC  C0AA  F017         	movff	_rn+1,RF24_txStandBy_t@timeout
  8460  002BF0  C0AB  F018         	movff	_rn+2,RF24_txStandBy_t@timeout+1
  8461  002BF4  C0AC  F019         	movff	_rn+3,RF24_txStandBy_t@timeout+2
  8462  002BF8  C0AD  F01A         	movff	_rn+4,RF24_txStandBy_t@timeout+3
  8463  002BFC  0E00               	movlw	0
  8464  002BFE  6E1B               	movwf	RF24_txStandBy_t@startTx,c
  8465  002C00  EC12  F015         	call	_RF24_txStandBy_t	;wreg free
  8466  002C04  6E3D               	movwf	RF24N_write_to_pipe@ok,c
  8467                           
  8468                           ;RF24Network_c.c: 1165: RF24_setAutoAck_p(0,0);
  8469  002C06  0E00               	movlw	0
  8470  002C08  6E15               	movwf	RF24_setAutoAck_p@enable,c
  8471  002C0A  0E00               	movlw	0
  8472  002C0C  ECE9  F018         	call	_RF24_setAutoAck_p
  8473  002C10                     l5733:
  8474                           
  8475                           ;RF24Network_c.c: 1166: }
  8476                           ;RF24Network_c.c: 1181: return ok;
  8477  002C10  503D               	movf	RF24N_write_to_pipe@ok,w,c
  8478  002C12  0012               	return	
  8479  002C14                     __end_of_RF24N_write_to_pipe:
  8480                           	opt stack 0
  8481                           tblptru	equ	0xFF8
  8482                           tblptrh	equ	0xFF7
  8483                           tblptrl	equ	0xFF6
  8484                           tablat	equ	0xFF5
  8485                           prodh	equ	0xFF4
  8486                           prodl	equ	0xFF3
  8487                           intcon	equ	0xFF2
  8488                           indf0	equ	0xFEF
  8489                           postinc0	equ	0xFEE
  8490                           postdec0	equ	0xFED
  8491                           fsr0h	equ	0xFEA
  8492                           fsr0l	equ	0xFE9
  8493                           wreg	equ	0xFE8
  8494                           indf2	equ	0xFDF
  8495                           postinc2	equ	0xFDE
  8496                           postdec2	equ	0xFDD
  8497                           fsr2h	equ	0xFDA
  8498                           fsr2l	equ	0xFD9
  8499                           status	equ	0xFD8
  8500                           
  8501 ;; *************** function _RF24_setAutoAck_p *****************
  8502 ;; Defined at:
  8503 ;;		line 1387 in file "../../../RF24_c/RF24_c.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;  pipe            1    wreg     unsigned char 
  8506 ;;  enable          1   20[COMRAM] unsigned char 
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;  pipe            1   24[COMRAM] unsigned char 
  8509 ;;  en_aa           1   23[COMRAM] unsigned char 
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      void 
  8512 ;; Registers used:
  8513 ;;		wreg, status,2, status,0, cstack
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8519 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8521 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8522 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8523 ;;Total ram usage:        5 bytes
  8524 ;; Hardware stack levels used:    1
  8525 ;; Hardware stack levels required when called:    5
  8526 ;; This function calls:
  8527 ;;		_RF24_read_register_d
  8528 ;;		_RF24_write_register_d
  8529 ;; This function is called by:
  8530 ;;		_RF24N_begin_d
  8531 ;;		_RF24N_write
  8532 ;;		_RF24N_write_to_pipe
  8533 ;;		_RF24N_write_
  8534 ;; This function uses a non-reentrant model
  8535 ;;
  8536                           
  8537                           	psect	text58
  8538  0031D2                     __ptext58:
  8539                           	opt stack 0
  8540  0031D2                     _RF24_setAutoAck_p:
  8541                           	opt stack 23
  8542                           
  8543                           ;incstack = 0
  8544                           ;RF24_setAutoAck_p@pipe stored from wreg
  8545  0031D2  6E19               	movwf	RF24_setAutoAck_p@pipe,c
  8546                           
  8547                           ;RF24_c.c: 1389: if ( pipe <= 6 )
  8548  0031D4  0E07               	movlw	7
  8549  0031D6  6019               	cpfslt	RF24_setAutoAck_p@pipe,c
  8550  0031D8  0012               	return	
  8551                           
  8552                           ;RF24_c.c: 1390: {
  8553                           ;RF24_c.c: 1391: uint8_t en_aa = RF24_read_register_d( 0x01 ) ;
  8554  0031DA  0E01               	movlw	1
  8555  0031DC  EC07  F01C         	call	_RF24_read_register_d
  8556  0031E0  6E18               	movwf	RF24_setAutoAck_p@en_aa,c
  8557                           
  8558                           ;RF24_c.c: 1392: if( enable )
  8559  0031E2  5015               	movf	RF24_setAutoAck_p@enable,w,c
  8560  0031E4  B4D8               	btfsc	status,2,c
  8561  0031E6  D00D               	goto	l5443
  8562                           
  8563                           ;RF24_c.c: 1393: {
  8564                           ;RF24_c.c: 1394: en_aa |= (1<<(pipe)) ;
  8565  0031E8  C019  F016         	movff	RF24_setAutoAck_p@pipe,??_RF24_setAutoAck_p
  8566  0031EC  0E01               	movlw	1
  8567  0031EE  6E17               	movwf	(??_RF24_setAutoAck_p+1)& (0+255),c
  8568  0031F0  2A16               	incf	??_RF24_setAutoAck_p,f,c
  8569  0031F2  D002               	goto	u6924
  8570  0031F4                     u6925:
  8571  0031F4  90D8               	bcf	status,0,c
  8572  0031F6  3617               	rlcf	??_RF24_setAutoAck_p+1,f,c
  8573  0031F8                     u6924:
  8574  0031F8  2E16               	decfsz	??_RF24_setAutoAck_p,f,c
  8575  0031FA  D7FC               	goto	u6925
  8576  0031FC  5017               	movf	??_RF24_setAutoAck_p+1,w,c
  8577  0031FE  1218               	iorwf	RF24_setAutoAck_p@en_aa,f,c
  8578                           
  8579                           ;RF24_c.c: 1395: }
  8580  003200  D00D               	goto	l5445
  8581  003202                     l5443:
  8582                           
  8583                           ;RF24_c.c: 1396: else
  8584                           ;RF24_c.c: 1397: {
  8585                           ;RF24_c.c: 1398: en_aa &= ~(1<<(pipe)) ;
  8586  003202  C019  F016         	movff	RF24_setAutoAck_p@pipe,??_RF24_setAutoAck_p
  8587  003206  0E01               	movlw	1
  8588  003208  6E17               	movwf	(??_RF24_setAutoAck_p+1)& (0+255),c
  8589  00320A  2A16               	incf	??_RF24_setAutoAck_p,f,c
  8590  00320C  D002               	goto	u6934
  8591  00320E                     u6935:
  8592  00320E  90D8               	bcf	status,0,c
  8593  003210  3617               	rlcf	??_RF24_setAutoAck_p+1,f,c
  8594  003212                     u6934:
  8595  003212  2E16               	decfsz	??_RF24_setAutoAck_p,f,c
  8596  003214  D7FC               	goto	u6935
  8597  003216  5017               	movf	??_RF24_setAutoAck_p+1,w,c
  8598  003218  0AFF               	xorlw	255
  8599  00321A  1618               	andwf	RF24_setAutoAck_p@en_aa,f,c
  8600  00321C                     l5445:
  8601                           
  8602                           ;RF24_c.c: 1399: }
  8603                           ;RF24_c.c: 1400: RF24_write_register_d( 0x01, en_aa ) ;
  8604  00321C  C018  F012         	movff	RF24_setAutoAck_p@en_aa,RF24_write_register_d@value
  8605  003220  0E01               	movlw	1
  8606  003222  ECF7  F01B         	call	_RF24_write_register_d
  8607  003226  0012               	return	
  8608  003228                     __end_of_RF24_setAutoAck_p:
  8609                           	opt stack 0
  8610                           tblptru	equ	0xFF8
  8611                           tblptrh	equ	0xFF7
  8612                           tblptrl	equ	0xFF6
  8613                           tablat	equ	0xFF5
  8614                           prodh	equ	0xFF4
  8615                           prodl	equ	0xFF3
  8616                           intcon	equ	0xFF2
  8617                           indf0	equ	0xFEF
  8618                           postinc0	equ	0xFEE
  8619                           postdec0	equ	0xFED
  8620                           fsr0h	equ	0xFEA
  8621                           fsr0l	equ	0xFE9
  8622                           wreg	equ	0xFE8
  8623                           indf2	equ	0xFDF
  8624                           postinc2	equ	0xFDE
  8625                           postdec2	equ	0xFDD
  8626                           fsr2h	equ	0xFDA
  8627                           fsr2l	equ	0xFD9
  8628                           status	equ	0xFD8
  8629                           
  8630 ;; *************** function _RF24N_pipe_address *****************
  8631 ;; Defined at:
  8632 ;;		line 1359 in file "../../RF24Network_c.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;  node            2    2[COMRAM] unsigned int 
  8635 ;;  pipe            1    4[COMRAM] unsigned char 
  8636 ;;  address         2    5[COMRAM] PTR unsigned char 
  8637 ;;		 -> RF24N_multicastLevel@addr(5), RF24N_write_to_pipe@out_pipe(5), RF24N_begin_d@addr(5), 
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;  result          5   11[COMRAM] unsigned char [5]
  8640 ;;  out             2   19[COMRAM] PTR unsigned char 
  8641 ;;		 -> RF24N_pipe_address@result(5), 
  8642 ;;  dec             2   16[COMRAM] unsigned int 
  8643 ;;  i               1   21[COMRAM] unsigned char 
  8644 ;;  count           1   18[COMRAM] unsigned char 
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  1    wreg      void 
  8647 ;; Registers used:
  8648 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8654 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8655 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8656 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8657 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8658 ;;Total ram usage:       20 bytes
  8659 ;; Hardware stack levels used:    1
  8660 ;; Hardware stack levels required when called:    1
  8661 ;; This function calls:
  8662 ;;		Nothing
  8663 ;; This function is called by:
  8664 ;;		_RF24N_begin_d
  8665 ;;		_RF24N_write_to_pipe
  8666 ;;		_RF24N_multicastLevel
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           
  8670                           	psect	text59
  8671  002398                     __ptext59:
  8672                           	opt stack 0
  8673  002398                     _RF24N_pipe_address:
  8674                           	opt stack 27
  8675                           
  8676                           ;RF24Network_c.c: 1362: static uint8_t address_translation[] = { 0xc3,0x3c,0x33,0xce,0x3
      +                          e,0xe3,0xec };
  8677                           ;RF24Network_c.c: 1363: raddr_t result[5] = {0xCC,0xCC,0xCC,0xCC,0xCC};
  8678                           
  8679                           ;incstack = 0
  8680  002398  EE20  F069         	lfsr	2,RF24N_pipe_address@F3856
  8681  00239C  EE00  F00C         	lfsr	0,RF24N_pipe_address@result
  8682  0023A0  0E04               	movlw	4
  8683  0023A2                     u6961:
  8684  0023A2  CFDB FFEB          	movff	plusw2,plusw0
  8685  0023A6  06E8               	decf	wreg,f,c
  8686  0023A8  E2FC               	bc	u6961
  8687                           
  8688                           ;RF24Network_c.c: 1364: uint8_t* out = (uint8_t*)(result);
  8689  0023AA  0E0C               	movlw	low RF24N_pipe_address@result
  8690  0023AC  6E14               	movwf	RF24N_pipe_address@out,c
  8691  0023AE  0E00               	movlw	high RF24N_pipe_address@result
  8692  0023B0  6E15               	movwf	RF24N_pipe_address@out+1,c
  8693                           
  8694                           ;RF24Network_c.c: 1366: uint8_t i;
  8695                           ;RF24Network_c.c: 1369: uint8_t count = 1; uint16_t dec = node;
  8696  0023B2  0E01               	movlw	1
  8697  0023B4  6E13               	movwf	RF24N_pipe_address@count,c
  8698  0023B6  C003  F011         	movff	RF24N_pipe_address@node,RF24N_pipe_address@dec
  8699  0023BA  C004  F012         	movff	RF24N_pipe_address@node+1,RF24N_pipe_address@dec+1
  8700                           
  8701                           ;RF24Network_c.c: 1371: while(dec){
  8702  0023BE  D027               	goto	l5475
  8703  0023C0                     l5465:
  8704                           
  8705                           ;RF24Network_c.c: 1373: if(pipe != 0 || !node)
  8706  0023C0  5005               	movf	RF24N_pipe_address@pipe,w,c
  8707  0023C2  A4D8               	btfss	status,2,c
  8708  0023C4  D004               	goto	l5469
  8709  0023C6  5003               	movf	RF24N_pipe_address@node,w,c
  8710  0023C8  1004               	iorwf	RF24N_pipe_address@node+1,w,c
  8711  0023CA  A4D8               	btfss	status,2,c
  8712  0023CC  D016               	goto	l5471
  8713  0023CE                     l5469:
  8714                           
  8715                           ;RF24Network_c.c: 1375: out[count]=address_translation[(dec % 8)];
  8716  0023CE  0E07               	movlw	7
  8717  0023D0  1411               	andwf	RF24N_pipe_address@dec,w,c
  8718  0023D2  6E08               	movwf	??_RF24N_pipe_address& (0+255),c
  8719  0023D4  0E00               	movlw	0
  8720  0023D6  1412               	andwf	RF24N_pipe_address@dec+1,w,c
  8721  0023D8  6E09               	movwf	(??_RF24N_pipe_address+1)& (0+255),c
  8722  0023DA  0E62               	movlw	low RF24N_pipe_address@address_translation
  8723  0023DC  2408               	addwf	??_RF24N_pipe_address,w,c
  8724  0023DE  6ED9               	movwf	fsr2l,c
  8725  0023E0  0E00               	movlw	high RF24N_pipe_address@address_translation
  8726  0023E2  2009               	addwfc	??_RF24N_pipe_address+1,w,c
  8727  0023E4  6EDA               	movwf	fsr2h,c
  8728  0023E6  5013               	movf	RF24N_pipe_address@count,w,c
  8729  0023E8  0D01               	mullw	1
  8730  0023EA  50F3               	movf	prodl,w,c
  8731  0023EC  2414               	addwf	RF24N_pipe_address@out,w,c
  8732  0023EE  6EE9               	movwf	fsr0l,c
  8733  0023F0  50F4               	movf	prodh,w,c
  8734  0023F2  2015               	addwfc	RF24N_pipe_address@out+1,w,c
  8735  0023F4  6EEA               	movwf	fsr0h,c
  8736  0023F6  CFDF FFEF          	movff	indf2,indf0
  8737  0023FA                     l5471:
  8738                           
  8739                           ;RF24Network_c.c: 1377: dec /= 8;
  8740  0023FA  90D8               	bcf	status,0,c
  8741  0023FC  3212               	rrcf	RF24N_pipe_address@dec+1,f,c
  8742  0023FE  3211               	rrcf	RF24N_pipe_address@dec,f,c
  8743  002400  90D8               	bcf	status,0,c
  8744  002402  3212               	rrcf	RF24N_pipe_address@dec+1,f,c
  8745  002404  3211               	rrcf	RF24N_pipe_address@dec,f,c
  8746  002406  90D8               	bcf	status,0,c
  8747  002408  3212               	rrcf	RF24N_pipe_address@dec+1,f,c
  8748  00240A  3211               	rrcf	RF24N_pipe_address@dec,f,c
  8749                           
  8750                           ;RF24Network_c.c: 1378: count++;
  8751  00240C  2A13               	incf	RF24N_pipe_address@count,f,c
  8752  00240E                     l5475:
  8753  00240E  5011               	movf	RF24N_pipe_address@dec,w,c
  8754  002410  1012               	iorwf	RF24N_pipe_address@dec+1,w,c
  8755  002412  A4D8               	btfss	status,2,c
  8756  002414  D7D5               	goto	l5465
  8757                           
  8758                           ;RF24Network_c.c: 1379: }
  8759                           ;RF24Network_c.c: 1382: if(pipe != 0 || !node)
  8760  002416  5005               	movf	RF24N_pipe_address@pipe,w,c
  8761  002418  A4D8               	btfss	status,2,c
  8762  00241A  D004               	goto	l5481
  8763  00241C  5003               	movf	RF24N_pipe_address@node,w,c
  8764  00241E  1004               	iorwf	RF24N_pipe_address@node+1,w,c
  8765  002420  A4D8               	btfss	status,2,c
  8766  002422  D00D               	goto	l5483
  8767  002424                     l5481:
  8768                           
  8769                           ;RF24Network_c.c: 1384: out[0] = address_translation[pipe];
  8770  002424  5005               	movf	RF24N_pipe_address@pipe,w,c
  8771  002426  0D01               	mullw	1
  8772  002428  0E62               	movlw	low RF24N_pipe_address@address_translation
  8773  00242A  24F3               	addwf	prodl,w,c
  8774  00242C  6ED9               	movwf	fsr2l,c
  8775  00242E  0E00               	movlw	high RF24N_pipe_address@address_translation
  8776  002430  20F4               	addwfc	prodh,w,c
  8777  002432  6EDA               	movwf	fsr2h,c
  8778  002434  C014  FFE9         	movff	RF24N_pipe_address@out,fsr0l
  8779  002438  C015  FFEA         	movff	RF24N_pipe_address@out+1,fsr0h
  8780  00243C  D017               	goto	L5
  8781  00243E                     l5483:
  8782                           
  8783                           ;RF24Network_c.c: 1386: else
  8784                           ;RF24Network_c.c: 1387: out[1] = address_translation[count-1];
  8785  00243E  0EFF               	movlw	255
  8786  002440  6E08               	movwf	??_RF24N_pipe_address& (0+255),c
  8787  002442  0EFF               	movlw	255
  8788  002444  6E09               	movwf	(??_RF24N_pipe_address+1)& (0+255),c
  8789  002446  5013               	movf	RF24N_pipe_address@count,w,c
  8790  002448  6E0A               	movwf	(??_RF24N_pipe_address+2)& (0+255),c
  8791  00244A  6A0B               	clrf	(??_RF24N_pipe_address+3)& (0+255),c
  8792  00244C  5008               	movf	??_RF24N_pipe_address,w,c
  8793  00244E  260A               	addwf	??_RF24N_pipe_address+2,f,c
  8794  002450  5009               	movf	??_RF24N_pipe_address+1,w,c
  8795  002452  220B               	addwfc	??_RF24N_pipe_address+3,f,c
  8796  002454  0E62               	movlw	low RF24N_pipe_address@address_translation
  8797  002456  240A               	addwf	??_RF24N_pipe_address+2,w,c
  8798  002458  6ED9               	movwf	fsr2l,c
  8799  00245A  0E00               	movlw	high RF24N_pipe_address@address_translation
  8800  00245C  200B               	addwfc	??_RF24N_pipe_address+3,w,c
  8801  00245E  6EDA               	movwf	fsr2h,c
  8802  002460  EE00 F001          	lfsr	0,1
  8803  002464  5014               	movf	RF24N_pipe_address@out,w,c
  8804  002466  26E9               	addwf	fsr0l,f,c
  8805  002468  5015               	movf	RF24N_pipe_address@out+1,w,c
  8806  00246A  22EA               	addwfc	fsr0h,f,c
  8807  00246C                     L5:
  8808  00246C  CFDF FFEF          	movff	indf2,indf0
  8809                           
  8810                           ;RF24Network_c.c: 1395: ;
  8811                           ;RF24Network_c.c: 1399: for(i=0;i<5;i++)
  8812  002470  0E00               	movlw	0
  8813  002472  6E16               	movwf	RF24N_pipe_address@i,c
  8814  002474                     l5487:
  8815  002474  0E04               	movlw	4
  8816  002476  6416               	cpfsgt	RF24N_pipe_address@i,c
  8817  002478  D001               	goto	l5491
  8818  00247A  0012               	return	
  8819  00247C                     l5491:
  8820                           
  8821                           ;RF24Network_c.c: 1400: {
  8822                           ;RF24Network_c.c: 1401: address[i]=result[4-i];
  8823  00247C  5016               	movf	RF24N_pipe_address@i,w,c
  8824  00247E  6E08               	movwf	??_RF24N_pipe_address& (0+255),c
  8825  002480  6A09               	clrf	(??_RF24N_pipe_address+1)& (0+255),c
  8826  002482  1E08               	comf	??_RF24N_pipe_address,f,c
  8827  002484  1E09               	comf	??_RF24N_pipe_address+1,f,c
  8828  002486  4A08               	infsnz	??_RF24N_pipe_address,f,c
  8829  002488  2A09               	incf	??_RF24N_pipe_address+1,f,c
  8830  00248A  0E04               	movlw	4
  8831  00248C  2608               	addwf	??_RF24N_pipe_address,f,c
  8832  00248E  0E00               	movlw	0
  8833  002490  2209               	addwfc	??_RF24N_pipe_address+1,f,c
  8834  002492  0E0C               	movlw	low RF24N_pipe_address@result
  8835  002494  2408               	addwf	??_RF24N_pipe_address,w,c
  8836  002496  6ED9               	movwf	fsr2l,c
  8837  002498  0E00               	movlw	high RF24N_pipe_address@result
  8838  00249A  2009               	addwfc	??_RF24N_pipe_address+1,w,c
  8839  00249C  6EDA               	movwf	fsr2h,c
  8840  00249E  5016               	movf	RF24N_pipe_address@i,w,c
  8841  0024A0  0D01               	mullw	1
  8842  0024A2  50F3               	movf	prodl,w,c
  8843  0024A4  2406               	addwf	RF24N_pipe_address@address,w,c
  8844  0024A6  6EE9               	movwf	fsr0l,c
  8845  0024A8  50F4               	movf	prodh,w,c
  8846  0024AA  2007               	addwfc	RF24N_pipe_address@address+1,w,c
  8847  0024AC  6EEA               	movwf	fsr0h,c
  8848  0024AE  CFDF FFEF          	movff	indf2,indf0
  8849  0024B2  2A16               	incf	RF24N_pipe_address@i,f,c
  8850  0024B4  D7DF               	goto	l5487
  8851  0024B6                     __end_of_RF24N_pipe_address:
  8852                           	opt stack 0
  8853                           tblptru	equ	0xFF8
  8854                           tblptrh	equ	0xFF7
  8855                           tblptrl	equ	0xFF6
  8856                           tablat	equ	0xFF5
  8857                           prodh	equ	0xFF4
  8858                           prodl	equ	0xFF3
  8859                           intcon	equ	0xFF2
  8860                           indf0	equ	0xFEF
  8861                           postinc0	equ	0xFEE
  8862                           postdec0	equ	0xFED
  8863                           plusw0	equ	0xFEB
  8864                           fsr0h	equ	0xFEA
  8865                           fsr0l	equ	0xFE9
  8866                           wreg	equ	0xFE8
  8867                           indf2	equ	0xFDF
  8868                           postinc2	equ	0xFDE
  8869                           postdec2	equ	0xFDD
  8870                           plusw2	equ	0xFDB
  8871                           fsr2h	equ	0xFDA
  8872                           fsr2l	equ	0xFD9
  8873                           status	equ	0xFD8
  8874                           
  8875 ;; *************** function _RF24N_update *****************
  8876 ;; Defined at:
  8877 ;;		line 226 in file "../../RF24Network_c.c"
  8878 ;; Parameters:    Size  Location     Type
  8879 ;;		None
  8880 ;; Auto vars:     Size  Location     Type
  8881 ;;  val             1  [STACK] unsigned char 
  8882 ;;  requester       2    0        unsigned int 
  8883 ;;  header          2  [STACK] PTR struct .
  8884 ;;		 -> rn.frame_buffer(32), rn(370), 
  8885 ;;  returnVal       1  [STACK] unsigned char 
  8886 ;;  pipe_num        1  [STACK] unsigned char 
  8887 ;; Return value:  Size  Location     Type
  8888 ;;                  1  [STACK] unsigned char 
  8889 ;; Registers used:
  8890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  8891 ;; Tracked objects:
  8892 ;;		On entry : 0/0
  8893 ;;		On exit  : 0/0
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8900 ;;Total ram usage:        0 bytes
  8901 ;; Hardware stack levels used:    1
  8902 ;; Hardware stack levels required when called:   10
  8903 ;; This function calls:
  8904 ;;		_RF24N_available
  8905 ;;		_RF24N_enqueue
  8906 ;;		_RF24N_is_valid_address
  8907 ;;		_RF24N_levelToAddress
  8908 ;;		_RF24N_write
  8909 ;;		_RF24_available_p
  8910 ;;		_RF24_getDynamicPayloadSize
  8911 ;;		_RF24_isValid
  8912 ;;		_RF24_read
  8913 ;;		_delay
  8914 ;; This function is called by:
  8915 ;;		_loop
  8916 ;;		_RF24N_write
  8917 ;;		_RF24N_write_
  8918 ;; This function uses a recursive model
  8919 ;;
  8920                           
  8921                           	psect	text60
  8922  0015CA                     __ptext60:
  8923                           	opt stack 0
  8924  0015CA                     _RF24N_update:
  8925                           	opt stack 19
  8926                           
  8927                           ;incstack = 0
  8928  0015CA  0E07               	movlw	7
  8929  0015CC  26E1               	addwf	fsr1l,f,c
  8930  0015CE  0E00               	movlw	0
  8931  0015D0  22E2               	addwfc	fsr1h,f,c
  8932                           
  8933                           ;RF24Network_c.c: 229: uint8_t pipe_num;
  8934                           ;RF24Network_c.c: 230: uint8_t returnVal = 0;
  8935                           ;stkvar	RF24N_update@returnVal @ sp[(-7)+3]
  8936  0015D2  0EFC               	movlw	-4
  8937  0015D4  6AE3               	clrf	plusw1,c
  8938                           
  8939                           ;RF24Network_c.c: 237: if(!(rn.networkFlags & 2)){
  8940  0015D6  EE20  F0D3         	lfsr	2,_rn+42
  8941  0015DA  B2DF               	btfsc	indf2,1,c
  8942  0015DC  D27F               	goto	l5633
  8943                           
  8944                           ;RF24Network_c.c: 238: if( (rn.networkFlags & 1) || (rn.next_frame-rn.frame_queue) + 34 
      +                          > 144 + 10 ){
  8945  0015DE  EE20  F0D3         	lfsr	2,_rn+42
  8946  0015E2  B0DF               	btfsc	indf2,0,c
  8947  0015E4  D01E               	goto	l5523
  8948  0015E6  EE21  F07D         	lfsr	2,_rn+212
  8949  0015EA  CFDE F071          	movff	postinc2,btemp+1
  8950  0015EE  CFDD F072          	movff	postdec2,btemp+2
  8951  0015F2  0EA9               	movlw	low _rn
  8952  0015F4  6E7A               	movwf	btemp+10,c
  8953  0015F6  0E00               	movlw	high _rn
  8954  0015F8  6E7B               	movwf	btemp+11,c
  8955  0015FA  0EE8               	movlw	232
  8956  0015FC  6E78               	movwf	btemp+8,c
  8957  0015FE  0EFF               	movlw	255
  8958  001600  6E79               	movwf	btemp+9,c
  8959  001602  507A               	movf	btemp+10,w,c
  8960  001604  5E78               	subwf	btemp+8,f,c
  8961  001606  507B               	movf	btemp+11,w,c
  8962  001608  5A79               	subwfb	btemp+9,f,c
  8963  00160A  5071               	movf	btemp+1,w,c
  8964  00160C  2678               	addwf	btemp+8,f,c
  8965  00160E  5072               	movf	btemp+2,w,c
  8966  001610  2279               	addwfc	btemp+9,f,c
  8967  001612  BE79               	btfsc	btemp+9,7,c
  8968  001614  D263               	goto	l5633
  8969  001616  5079               	movf	btemp+9,w,c
  8970  001618  E104               	bnz	u7090
  8971  00161A  0E9B               	movlw	155
  8972  00161C  5C78               	subwf	btemp+8,w,c
  8973  00161E  A0D8               	btfss	status,0,c
  8974  001620  D25D               	goto	l5633
  8975  001622                     u7090:
  8976  001622                     l5523:
  8977                           
  8978                           ;RF24Network_c.c: 239: if(!RF24N_available()){
  8979  001622  ECE6  F01B         	call	_RF24N_available	;wreg free
  8980  001626  0900               	iorlw	0
  8981  001628  A4D8               	btfss	status,2,c
  8982  00162A  D006               	goto	l5527
  8983                           
  8984                           ;RF24Network_c.c: 240: rn.networkFlags &= ~1;
  8985  00162C  C0D3  FFE8         	movff	_rn+42,wreg
  8986  001630  0BFE               	andlw	254
  8987  001632  CFE8 F0D3          	movff	wreg,_rn+42
  8988                           
  8989                           ;RF24Network_c.c: 241: }else{
  8990  001636  D252               	goto	l5633
  8991  001638                     l5527:
  8992                           
  8993                           ;RF24Network_c.c: 242: return 0;
  8994  001638  0E00               	movlw	0
  8995  00163A  D192               	goto	L6
  8996  00163C                     l5531:
  8997                           
  8998                           ;RF24Network_c.c: 249: RF24NetworkHeader *header;
  8999                           ;RF24Network_c.c: 252: if( (rn.frame_size = RF24_getDynamicPayloadSize() ) < sizeof(RF24
      +                          NetworkHeader)){
  9000  00163C  EC91  F01A         	call	_RF24_getDynamicPayloadSize	;wreg free
  9001  001640  EE20  F0DB         	lfsr	2,_rn+50
  9002  001644  6EDF               	movwf	indf2,c
  9003  001646  0E08               	movlw	8
  9004  001648  60DF               	cpfslt	indf2,c
  9005  00164A  D007               	goto	l5535
  9006                           
  9007                           ;RF24Network_c.c: 253: delay(10);
  9008  00164C  0E00               	movlw	0
  9009  00164E  6E04               	movwf	delay@val+1,c
  9010  001650  0E0A               	movlw	10
  9011  001652  6E03               	movwf	delay@val,c
  9012  001654  ECAF  F019         	call	_delay	;wreg free
  9013                           
  9014                           ;RF24Network_c.c: 254: continue;
  9015  001658  D241               	goto	l5633
  9016  00165A                     l5535:
  9017                           
  9018                           ;RF24Network_c.c: 255: }
  9019                           ;RF24Network_c.c: 261: RF24_read(rn.frame_buffer, rn.frame_size );
  9020  00165A  0EB0               	movlw	low (_rn+7)
  9021  00165C  6E21               	movwf	RF24_read@buf,c
  9022  00165E  0E00               	movlw	high (_rn+7)
  9023  001660  6E22               	movwf	RF24_read@buf+1,c
  9024  001662  C0DB  F023         	movff	_rn+50,RF24_read@len
  9025  001666  EC16  F01C         	call	_RF24_read	;wreg free
  9026                           
  9027                           ;RF24Network_c.c: 264: header = (RF24NetworkHeader*)(rn.frame_buffer);
  9028                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9029  00166A  0E00               	movlw	high (_rn+7)
  9030  00166C  6E70               	movwf	btemp,c
  9031  00166E  0EFB               	movlw	-5
  9032  001670  C070  FFE3         	movff	btemp,plusw1
  9033  001674  0EB0               	movlw	low (_rn+7)
  9034  001676  6E70               	movwf	btemp,c
  9035  001678  0EFA               	movlw	-6
  9036  00167A  C070  FFE3         	movff	btemp,plusw1
  9037                           
  9038                           ;RF24Network_c.c: 273: ;
  9039                           ;RF24Network_c.c: 274: ;
  9040                           ;RF24Network_c.c: 278: if ( !RF24N_is_valid_address( header->to_node) ){
  9041                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9042  00167E  0EFA               	movlw	-6
  9043  001680  CFE3 F071          	movff	plusw1,btemp+1
  9044  001684  0EFB               	movlw	-5
  9045  001686  CFE3 F072          	movff	plusw1,btemp+2
  9046  00168A  0E02               	movlw	2
  9047  00168C  2471               	addwf	btemp+1,w,c
  9048  00168E  6ED9               	movwf	fsr2l,c
  9049  001690  0E00               	movlw	0
  9050  001692  2072               	addwfc	btemp+2,w,c
  9051  001694  6EDA               	movwf	fsr2h,c
  9052  001696  CFDE F003          	movff	postinc2,RF24N_is_valid_address@node
  9053  00169A  CFDD F004          	movff	postdec2,RF24N_is_valid_address@node+1
  9054  00169E  ECAD  F01A         	call	_RF24N_is_valid_address	;wreg free
  9055  0016A2  0900               	iorlw	0
  9056  0016A4  B4D8               	btfsc	status,2,c
  9057  0016A6  D21A               	goto	l5633
  9058                           
  9059                           ;RF24Network_c.c: 280: }
  9060                           ;RF24Network_c.c: 282: returnVal = header->type;
  9061                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9062  0016A8  0EFA               	movlw	-6
  9063  0016AA  CFE3 F071          	movff	plusw1,btemp+1
  9064  0016AE  0EFB               	movlw	-5
  9065  0016B0  CFE3 F072          	movff	plusw1,btemp+2
  9066  0016B4  0E06               	movlw	6
  9067  0016B6  2471               	addwf	btemp+1,w,c
  9068  0016B8  6ED9               	movwf	fsr2l,c
  9069  0016BA  0E00               	movlw	0
  9070  0016BC  2072               	addwfc	btemp+2,w,c
  9071  0016BE  6EDA               	movwf	fsr2h,c
  9072  0016C0  50DF               	movf	indf2,w,c
  9073  0016C2  6E7B               	movwf	btemp+11,c
  9074                           
  9075                           ;stkvar	RF24N_update@returnVal @ sp[(-7)+3]
  9076  0016C4  0EFC               	movlw	-4
  9077  0016C6  C07B  FFE3         	movff	btemp+11,plusw1
  9078                           
  9079                           ;RF24Network_c.c: 285: if ( header->to_node == rn.node_address ){
  9080  0016CA  EE20  F0D9         	lfsr	2,_rn+48
  9081                           
  9082                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9083  0016CE  0EFA               	movlw	-6
  9084  0016D0  CFE3 F071          	movff	plusw1,btemp+1
  9085  0016D4  0EFB               	movlw	-5
  9086  0016D6  CFE3 F072          	movff	plusw1,btemp+2
  9087  0016DA  0E02               	movlw	2
  9088  0016DC  2471               	addwf	btemp+1,w,c
  9089  0016DE  6EE9               	movwf	fsr0l,c
  9090  0016E0  0E00               	movlw	0
  9091  0016E2  2072               	addwfc	btemp+2,w,c
  9092  0016E4  6EEA               	movwf	fsr0h,c
  9093  0016E6  50DE               	movf	postinc2,w,c
  9094  0016E8  18EE               	xorwf	postinc0,w,c
  9095  0016EA  E103               	bnz	u7131
  9096  0016EC  50DE               	movf	postinc2,w,c
  9097  0016EE  18EE               	xorwf	postinc0,w,c
  9098  0016F0  A4D8               	btfss	status,2,c
  9099  0016F2                     u7131:
  9100  0016F2  D138               	goto	l5601
  9101                           
  9102                           ;RF24Network_c.c: 287: if(header->type == 130){
  9103                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9104  0016F4  0EFA               	movlw	-6
  9105  0016F6  CFE3 F071          	movff	plusw1,btemp+1
  9106  0016FA  0EFB               	movlw	-5
  9107  0016FC  CFE3 F072          	movff	plusw1,btemp+2
  9108  001700  0E06               	movlw	6
  9109  001702  2471               	addwf	btemp+1,w,c
  9110  001704  6ED9               	movwf	fsr2l,c
  9111  001706  0E00               	movlw	0
  9112  001708  2072               	addwfc	btemp+2,w,c
  9113  00170A  6EDA               	movwf	fsr2h,c
  9114  00170C  0E82               	movlw	130
  9115  00170E  18DE               	xorwf	postinc2,w,c
  9116  001710  B4D8               	btfsc	status,2,c
  9117  001712  D1E4               	goto	l5633
  9118                           
  9119                           ;RF24Network_c.c: 289: }
  9120                           ;RF24Network_c.c: 290: if(header->type == 128 ){
  9121                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9122  001714  0EFA               	movlw	-6
  9123  001716  CFE3 F071          	movff	plusw1,btemp+1
  9124  00171A  0EFB               	movlw	-5
  9125  00171C  CFE3 F072          	movff	plusw1,btemp+2
  9126  001720  0E06               	movlw	6
  9127  001722  2471               	addwf	btemp+1,w,c
  9128  001724  6ED9               	movwf	fsr2l,c
  9129  001726  0E00               	movlw	0
  9130  001728  2072               	addwfc	btemp+2,w,c
  9131  00172A  6EDA               	movwf	fsr2h,c
  9132  00172C  0E80               	movlw	128
  9133  00172E  18DE               	xorwf	postinc2,w,c
  9134  001730  A4D8               	btfss	status,2,c
  9135  001732  D04A               	goto	l5565
  9136                           
  9137                           ;RF24Network_c.c: 292: if(requester != rn.node_address){
  9138  001734  EE20  F0D9         	lfsr	2,_rn+48
  9139  001738  0E24               	movlw	36
  9140  00173A  18DE               	xorwf	postinc2,w,c
  9141  00173C  E104               	bnz	u7160
  9142  00173E  0E09               	movlw	9
  9143  001740  18DE               	xorwf	postinc2,w,c
  9144  001742  B4D8               	btfsc	status,2,c
  9145  001744  D041               	goto	l5565
  9146  001746                     u7160:
  9147                           
  9148                           ;RF24Network_c.c: 293: header->to_node = requester;
  9149                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9150  001746  0EFA               	movlw	-6
  9151  001748  CFE3 F071          	movff	plusw1,btemp+1
  9152  00174C  0EFB               	movlw	-5
  9153  00174E  CFE3 F072          	movff	plusw1,btemp+2
  9154  001752  0E02               	movlw	2
  9155  001754  2471               	addwf	btemp+1,w,c
  9156  001756  6ED9               	movwf	fsr2l,c
  9157  001758  0E00               	movlw	0
  9158  00175A  2072               	addwfc	btemp+2,w,c
  9159  00175C  6EDA               	movwf	fsr2h,c
  9160  00175E  0E24               	movlw	36
  9161  001760  6EDE               	movwf	postinc2,c
  9162  001762  0E09               	movlw	9
  9163  001764  6EDD               	movwf	postdec2,c
  9164                           
  9165                           ;RF24Network_c.c: 294: RF24N_write(header->to_node,2);
  9166                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9167  001766  0EFA               	movlw	-6
  9168  001768  CFE3 F071          	movff	plusw1,btemp+1
  9169  00176C  0EFB               	movlw	-5
  9170  00176E  CFE3 F072          	movff	plusw1,btemp+2
  9171  001772  0E02               	movlw	2
  9172  001774  2471               	addwf	btemp+1,w,c
  9173  001776  6ED9               	movwf	fsr2l,c
  9174  001778  0E00               	movlw	0
  9175  00177A  2072               	addwfc	btemp+2,w,c
  9176  00177C  6EDA               	movwf	fsr2h,c
  9177  00177E  CFDE F080          	movff	postinc2,RF24N_write@to_node
  9178  001782  CFDD F081          	movff	postdec2,RF24N_write@to_node+1
  9179  001786  0E02               	movlw	2
  9180  001788  0100               	movlb	0	; () banked
  9181  00178A  6F82               	movwf	RF24N_write@directTo& (0+255),b
  9182  00178C  EC06  F010         	call	_RF24N_write	;wreg free
  9183                           
  9184                           ;RF24Network_c.c: 295: delay(10);
  9185  001790  0E00               	movlw	0
  9186  001792  6E04               	movwf	delay@val+1,c
  9187  001794  0E0A               	movlw	10
  9188  001796  6E03               	movwf	delay@val,c
  9189  001798  ECAF  F019         	call	_delay	;wreg free
  9190                           
  9191                           ;RF24Network_c.c: 296: RF24N_write(header->to_node,2);
  9192                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9193  00179C  0EFA               	movlw	-6
  9194  00179E  CFE3 F071          	movff	plusw1,btemp+1
  9195  0017A2  0EFB               	movlw	-5
  9196  0017A4  CFE3 F072          	movff	plusw1,btemp+2
  9197  0017A8  0E02               	movlw	2
  9198  0017AA  2471               	addwf	btemp+1,w,c
  9199  0017AC  6ED9               	movwf	fsr2l,c
  9200  0017AE  0E00               	movlw	0
  9201  0017B0  2072               	addwfc	btemp+2,w,c
  9202  0017B2  6EDA               	movwf	fsr2h,c
  9203  0017B4  CFDE F080          	movff	postinc2,RF24N_write@to_node
  9204  0017B8  CFDD F081          	movff	postdec2,RF24N_write@to_node+1
  9205  0017BC  0E02               	movlw	2
  9206  0017BE  0100               	movlb	0	; () banked
  9207  0017C0  6F82               	movwf	RF24N_write@directTo& (0+255),b
  9208  0017C2  EC06  F010         	call	_RF24N_write	;wreg free
  9209                           
  9210                           ;RF24Network_c.c: 298: continue;
  9211  0017C6  D18A               	goto	l5633
  9212  0017C8                     l5565:
  9213                           
  9214                           ;RF24Network_c.c: 299: }
  9215                           ;RF24Network_c.c: 300: }
  9216                           ;RF24Network_c.c: 301: if(header->type == 195 && rn.node_address){
  9217                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9218  0017C8  0EFA               	movlw	-6
  9219  0017CA  CFE3 F071          	movff	plusw1,btemp+1
  9220  0017CE  0EFB               	movlw	-5
  9221  0017D0  CFE3 F072          	movff	plusw1,btemp+2
  9222  0017D4  0E06               	movlw	6
  9223  0017D6  2471               	addwf	btemp+1,w,c
  9224  0017D8  6ED9               	movwf	fsr2l,c
  9225  0017DA  0E00               	movlw	0
  9226  0017DC  2072               	addwfc	btemp+2,w,c
  9227  0017DE  6EDA               	movwf	fsr2h,c
  9228  0017E0  0EC3               	movlw	195
  9229  0017E2  18DE               	xorwf	postinc2,w,c
  9230  0017E4  A4D8               	btfss	status,2,c
  9231  0017E6  D038               	goto	l5575
  9232  0017E8  EE20  F0D9         	lfsr	2,_rn+48
  9233  0017EC  50DE               	movf	postinc2,w,c
  9234  0017EE  10DE               	iorwf	postinc2,w,c
  9235  0017F0  B4D8               	btfsc	status,2,c
  9236  0017F2  D032               	goto	l5575
  9237                           
  9238                           ;RF24Network_c.c: 303: header->from_node = rn.node_address;
  9239  0017F4  EE20  F0D9         	lfsr	2,_rn+48
  9240                           
  9241                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9242  0017F8  0EFA               	movlw	-6
  9243  0017FA  CFE3 FFE9          	movff	plusw1,fsr0l
  9244  0017FE  0EFB               	movlw	-5
  9245  001800  CFE3 FFEA          	movff	plusw1,fsr0h
  9246  001804  CFDE FFEE          	movff	postinc2,postinc0
  9247  001808  CFDD FFED          	movff	postdec2,postdec0
  9248                           
  9249                           ;RF24Network_c.c: 304: header->to_node = 0;
  9250                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9251  00180C  0EFA               	movlw	-6
  9252  00180E  CFE3 F071          	movff	plusw1,btemp+1
  9253  001812  0EFB               	movlw	-5
  9254  001814  CFE3 F072          	movff	plusw1,btemp+2
  9255  001818  0E02               	movlw	2
  9256  00181A  2471               	addwf	btemp+1,w,c
  9257  00181C  6ED9               	movwf	fsr2l,c
  9258  00181E  0E00               	movlw	0
  9259  001820  2072               	addwfc	btemp+2,w,c
  9260  001822  6EDA               	movwf	fsr2h,c
  9261  001824  0E00               	movlw	0
  9262  001826  6EDE               	movwf	postinc2,c
  9263  001828  0E00               	movlw	0
  9264  00182A  6EDD               	movwf	postdec2,c
  9265                           
  9266                           ;RF24Network_c.c: 305: RF24N_write(header->to_node,0);
  9267                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9268  00182C  0EFA               	movlw	-6
  9269  00182E  CFE3 F071          	movff	plusw1,btemp+1
  9270  001832  0EFB               	movlw	-5
  9271  001834  CFE3 F072          	movff	plusw1,btemp+2
  9272  001838  0E02               	movlw	2
  9273  00183A  2471               	addwf	btemp+1,w,c
  9274  00183C  6ED9               	movwf	fsr2l,c
  9275  00183E  0E00               	movlw	0
  9276  001840  2072               	addwfc	btemp+2,w,c
  9277  001842  6EDA               	movwf	fsr2h,c
  9278  001844  CFDE F080          	movff	postinc2,RF24N_write@to_node
  9279  001848  CFDD F081          	movff	postdec2,RF24N_write@to_node+1
  9280  00184C  0E00               	movlw	0
  9281  00184E  0100               	movlb	0	; () banked
  9282  001850  6F82               	movwf	RF24N_write@directTo& (0+255),b
  9283  001852  EC06  F010         	call	_RF24N_write	;wreg free
  9284                           
  9285                           ;RF24Network_c.c: 306: continue;
  9286  001856  D142               	goto	l5633
  9287  001858                     l5575:
  9288                           
  9289                           ;RF24Network_c.c: 307: }
  9290                           ;RF24Network_c.c: 309: if( (rn.returnSysMsgs && header->type > 127) || header->type == 1
      +                          93 ){
  9291  001858  EE20  F0D2         	lfsr	2,_rn+41
  9292  00185C  50DF               	movf	indf2,w,c
  9293  00185E  B4D8               	btfsc	status,2,c
  9294  001860  D00F               	goto	l5579
  9295                           
  9296                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9297  001862  0EFA               	movlw	-6
  9298  001864  CFE3 F071          	movff	plusw1,btemp+1
  9299  001868  0EFB               	movlw	-5
  9300  00186A  CFE3 F072          	movff	plusw1,btemp+2
  9301  00186E  0E06               	movlw	6
  9302  001870  2471               	addwf	btemp+1,w,c
  9303  001872  6ED9               	movwf	fsr2l,c
  9304  001874  0E00               	movlw	0
  9305  001876  2072               	addwfc	btemp+2,w,c
  9306  001878  6EDA               	movwf	fsr2h,c
  9307  00187A  0E80               	movlw	128
  9308  00187C  60DF               	cpfslt	indf2,c
  9309  00187E  D010               	goto	l5581
  9310  001880                     l5579:
  9311                           
  9312                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9313  001880  0EFA               	movlw	-6
  9314  001882  CFE3 F071          	movff	plusw1,btemp+1
  9315  001886  0EFB               	movlw	-5
  9316  001888  CFE3 F072          	movff	plusw1,btemp+2
  9317  00188C  0E06               	movlw	6
  9318  00188E  2471               	addwf	btemp+1,w,c
  9319  001890  6ED9               	movwf	fsr2l,c
  9320  001892  0E00               	movlw	0
  9321  001894  2072               	addwfc	btemp+2,w,c
  9322  001896  6EDA               	movwf	fsr2h,c
  9323  001898  0EC1               	movlw	193
  9324  00189A  18DE               	xorwf	postinc2,w,c
  9325  00189C  A4D8               	btfss	status,2,c
  9326  00189E  D054               	goto	l5595
  9327  0018A0                     l5581:
  9328                           
  9329                           ;RF24Network_c.c: 310: ;
  9330                           ;RF24Network_c.c: 312: if( header->type != 148 && header->type != 149 && header->type !=
      +                           200 && header->type != 131 && header->type!= 150){
  9331                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9332  0018A0  0EFA               	movlw	-6
  9333  0018A2  CFE3 F071          	movff	plusw1,btemp+1
  9334  0018A6  0EFB               	movlw	-5
  9335  0018A8  CFE3 F072          	movff	plusw1,btemp+2
  9336  0018AC  0E06               	movlw	6
  9337  0018AE  2471               	addwf	btemp+1,w,c
  9338  0018B0  6ED9               	movwf	fsr2l,c
  9339  0018B2  0E00               	movlw	0
  9340  0018B4  2072               	addwfc	btemp+2,w,c
  9341  0018B6  6EDA               	movwf	fsr2h,c
  9342  0018B8  0E94               	movlw	148
  9343  0018BA  18DE               	xorwf	postinc2,w,c
  9344  0018BC  B4D8               	btfsc	status,2,c
  9345  0018BE  D044               	goto	l5595
  9346                           
  9347                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9348  0018C0  0EFA               	movlw	-6
  9349  0018C2  CFE3 F071          	movff	plusw1,btemp+1
  9350  0018C6  0EFB               	movlw	-5
  9351  0018C8  CFE3 F072          	movff	plusw1,btemp+2
  9352  0018CC  0E06               	movlw	6
  9353  0018CE  2471               	addwf	btemp+1,w,c
  9354  0018D0  6ED9               	movwf	fsr2l,c
  9355  0018D2  0E00               	movlw	0
  9356  0018D4  2072               	addwfc	btemp+2,w,c
  9357  0018D6  6EDA               	movwf	fsr2h,c
  9358  0018D8  0E95               	movlw	149
  9359  0018DA  18DE               	xorwf	postinc2,w,c
  9360  0018DC  B4D8               	btfsc	status,2,c
  9361  0018DE  D034               	goto	l5595
  9362                           
  9363                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9364  0018E0  0EFA               	movlw	-6
  9365  0018E2  CFE3 F071          	movff	plusw1,btemp+1
  9366  0018E6  0EFB               	movlw	-5
  9367  0018E8  CFE3 F072          	movff	plusw1,btemp+2
  9368  0018EC  0E06               	movlw	6
  9369  0018EE  2471               	addwf	btemp+1,w,c
  9370  0018F0  6ED9               	movwf	fsr2l,c
  9371  0018F2  0E00               	movlw	0
  9372  0018F4  2072               	addwfc	btemp+2,w,c
  9373  0018F6  6EDA               	movwf	fsr2h,c
  9374  0018F8  0EC8               	movlw	200
  9375  0018FA  18DE               	xorwf	postinc2,w,c
  9376  0018FC  B4D8               	btfsc	status,2,c
  9377  0018FE  D024               	goto	l5595
  9378                           
  9379                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9380  001900  0EFA               	movlw	-6
  9381  001902  CFE3 F071          	movff	plusw1,btemp+1
  9382  001906  0EFB               	movlw	-5
  9383  001908  CFE3 F072          	movff	plusw1,btemp+2
  9384  00190C  0E06               	movlw	6
  9385  00190E  2471               	addwf	btemp+1,w,c
  9386  001910  6ED9               	movwf	fsr2l,c
  9387  001912  0E00               	movlw	0
  9388  001914  2072               	addwfc	btemp+2,w,c
  9389  001916  6EDA               	movwf	fsr2h,c
  9390  001918  0E83               	movlw	131
  9391  00191A  18DE               	xorwf	postinc2,w,c
  9392  00191C  B4D8               	btfsc	status,2,c
  9393  00191E  D014               	goto	l5595
  9394                           
  9395                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9396  001920  0EFA               	movlw	-6
  9397  001922  CFE3 F071          	movff	plusw1,btemp+1
  9398  001926  0EFB               	movlw	-5
  9399  001928  CFE3 F072          	movff	plusw1,btemp+2
  9400  00192C  0E06               	movlw	6
  9401  00192E  2471               	addwf	btemp+1,w,c
  9402  001930  6ED9               	movwf	fsr2l,c
  9403  001932  0E00               	movlw	0
  9404  001934  2072               	addwfc	btemp+2,w,c
  9405  001936  6EDA               	movwf	fsr2h,c
  9406  001938  0E96               	movlw	150
  9407  00193A  18DE               	xorwf	postinc2,w,c
  9408  00193C  B4D8               	btfsc	status,2,c
  9409  00193E  D004               	goto	l5595
  9410  001940                     l5591:
  9411                           
  9412                           ;RF24Network_c.c: 313: return returnVal;
  9413                           ;stkvar	RF24N_update@returnVal @ sp[(-7)+3]
  9414  001940  0EFC               	movlw	-4
  9415  001942  CFE3 F070          	movff	plusw1,btemp
  9416  001946  D0DF               	goto	l775
  9417  001948                     l5595:
  9418                           
  9419                           ;RF24Network_c.c: 314: }
  9420                           ;RF24Network_c.c: 315: }
  9421                           ;RF24Network_c.c: 317: if( RF24N_enqueue(header) == 2 ){
  9422                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9423  001948  0EFA               	movlw	-6
  9424  00194A  CFE3 F017          	movff	plusw1,RF24N_enqueue@header
  9425  00194E  0EFB               	movlw	-5
  9426  001950  CFE3 F018          	movff	plusw1,RF24N_enqueue@header+1
  9427  001954  EC2B  F008         	call	_RF24N_enqueue	;wreg free
  9428  001958  0A02               	xorlw	2
  9429  00195A  A4D8               	btfss	status,2,c
  9430  00195C  D0BF               	goto	l5633
  9431                           
  9432                           ;RF24Network_c.c: 321: return 131;
  9433  00195E  0E83               	movlw	131
  9434  001960                     L6:
  9435  001960  6E70               	movwf	btemp,c
  9436  001962  D0D1               	goto	l775
  9437  001964                     l5601:
  9438                           
  9439                           ;RF24Network_c.c: 327: if( header->to_node == 0100){
  9440                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9441  001964  0EFA               	movlw	-6
  9442  001966  CFE3 F071          	movff	plusw1,btemp+1
  9443  00196A  0EFB               	movlw	-5
  9444  00196C  CFE3 F072          	movff	plusw1,btemp+2
  9445  001970  0E02               	movlw	2
  9446  001972  2471               	addwf	btemp+1,w,c
  9447  001974  6ED9               	movwf	fsr2l,c
  9448  001976  0E00               	movlw	0
  9449  001978  2072               	addwfc	btemp+2,w,c
  9450  00197A  6EDA               	movwf	fsr2h,c
  9451  00197C  0E40               	movlw	64
  9452  00197E  18DE               	xorwf	postinc2,w,c
  9453  001980  10DE               	iorwf	postinc2,w,c
  9454  001982  A4D8               	btfss	status,2,c
  9455  001984  D096               	goto	l5631
  9456                           
  9457                           ;RF24Network_c.c: 328: uint8_t val;
  9458                           ;RF24Network_c.c: 330: if(header->type == 194 ){
  9459                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9460  001986  0EFA               	movlw	-6
  9461  001988  CFE3 F071          	movff	plusw1,btemp+1
  9462  00198C  0EFB               	movlw	-5
  9463  00198E  CFE3 F072          	movff	plusw1,btemp+2
  9464  001992  0E06               	movlw	6
  9465  001994  2471               	addwf	btemp+1,w,c
  9466  001996  6ED9               	movwf	fsr2l,c
  9467  001998  0E00               	movlw	0
  9468  00199A  2072               	addwfc	btemp+2,w,c
  9469  00199C  6EDA               	movwf	fsr2h,c
  9470  00199E  0EC2               	movlw	194
  9471  0019A0  18DE               	xorwf	postinc2,w,c
  9472  0019A2  A4D8               	btfss	status,2,c
  9473  0019A4  D04C               	goto	l5617
  9474                           
  9475                           ;RF24Network_c.c: 331: if( !(rn.networkFlags & 8) && rn.node_address != 04444 ){
  9476  0019A6  EE20  F0D3         	lfsr	2,_rn+42
  9477  0019AA  B6DF               	btfsc	indf2,3,c
  9478  0019AC  D097               	goto	l5633
  9479  0019AE  EE20  F0D9         	lfsr	2,_rn+48
  9480  0019B2  0E24               	movlw	36
  9481  0019B4  18DE               	xorwf	postinc2,w,c
  9482  0019B6  E104               	bnz	u7310
  9483  0019B8  0E09               	movlw	9
  9484  0019BA  18DE               	xorwf	postinc2,w,c
  9485  0019BC  B4D8               	btfsc	status,2,c
  9486  0019BE  D08E               	goto	l5633
  9487  0019C0                     u7310:
  9488                           
  9489                           ;RF24Network_c.c: 332: header->to_node = header->from_node;
  9490                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9491  0019C0  0EFA               	movlw	-6
  9492  0019C2  CFE3 FFD9          	movff	plusw1,fsr2l
  9493  0019C6  0EFB               	movlw	-5
  9494  0019C8  CFE3 FFDA          	movff	plusw1,fsr2h
  9495                           
  9496                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9497  0019CC  0EFA               	movlw	-6
  9498  0019CE  CFE3 F071          	movff	plusw1,btemp+1
  9499  0019D2  0EFB               	movlw	-5
  9500  0019D4  CFE3 F072          	movff	plusw1,btemp+2
  9501  0019D8  0E02               	movlw	2
  9502  0019DA  2471               	addwf	btemp+1,w,c
  9503  0019DC  6EE9               	movwf	fsr0l,c
  9504  0019DE  0E00               	movlw	0
  9505  0019E0  2072               	addwfc	btemp+2,w,c
  9506  0019E2  6EEA               	movwf	fsr0h,c
  9507  0019E4  CFDE FFEE          	movff	postinc2,postinc0
  9508  0019E8  CFDD FFED          	movff	postdec2,postdec0
  9509                           
  9510                           ;RF24Network_c.c: 333: header->from_node = rn.node_address;
  9511  0019EC  EE20  F0D9         	lfsr	2,_rn+48
  9512                           
  9513                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9514  0019F0  0EFA               	movlw	-6
  9515  0019F2  CFE3 FFE9          	movff	plusw1,fsr0l
  9516  0019F6  0EFB               	movlw	-5
  9517  0019F8  CFE3 FFEA          	movff	plusw1,fsr0h
  9518  0019FC  CFDE FFEE          	movff	postinc2,postinc0
  9519  001A00  CFDD FFED          	movff	postdec2,postdec0
  9520                           
  9521                           ;RF24Network_c.c: 334: delay(rn.parent_pipe);
  9522  001A04  EE20  F0E0         	lfsr	2,_rn+55
  9523  001A08  50DF               	movf	indf2,w,c
  9524  001A0A  6E03               	movwf	delay@val,c
  9525  001A0C  6A04               	clrf	delay@val+1,c
  9526  001A0E  ECAF  F019         	call	_delay	;wreg free
  9527                           
  9528                           ;RF24Network_c.c: 335: RF24N_write(header->to_node,2);
  9529                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9530  001A12  0EFA               	movlw	-6
  9531  001A14  CFE3 F071          	movff	plusw1,btemp+1
  9532  001A18  0EFB               	movlw	-5
  9533  001A1A  CFE3 F072          	movff	plusw1,btemp+2
  9534  001A1E  0E02               	movlw	2
  9535  001A20  2471               	addwf	btemp+1,w,c
  9536  001A22  6ED9               	movwf	fsr2l,c
  9537  001A24  0E00               	movlw	0
  9538  001A26  2072               	addwfc	btemp+2,w,c
  9539  001A28  6EDA               	movwf	fsr2h,c
  9540  001A2A  CFDE F080          	movff	postinc2,RF24N_write@to_node
  9541  001A2E  CFDD F081          	movff	postdec2,RF24N_write@to_node+1
  9542  001A32  0E02               	movlw	2
  9543  001A34  0100               	movlb	0	; () banked
  9544  001A36  6F82               	movwf	RF24N_write@directTo& (0+255),b
  9545  001A38  EC06  F010         	call	_RF24N_write	;wreg free
  9546  001A3C  D04F               	goto	l5633
  9547  001A3E                     l5617:
  9548                           
  9549                           ;RF24Network_c.c: 338: }
  9550                           ;RF24Network_c.c: 339: val = RF24N_enqueue(header);
  9551                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9552  001A3E  0EFA               	movlw	-6
  9553  001A40  CFE3 F017          	movff	plusw1,RF24N_enqueue@header
  9554  001A44  0EFB               	movlw	-5
  9555  001A46  CFE3 F018          	movff	plusw1,RF24N_enqueue@header+1
  9556  001A4A  EC2B  F008         	call	_RF24N_enqueue	;wreg free
  9557  001A4E  6E7B               	movwf	btemp+11,c
  9558                           
  9559                           ;stkvar	RF24N_update@val @ sp[(-7)+0]
  9560  001A50  0EF9               	movlw	-7
  9561  001A52  C07B  FFE3         	movff	btemp+11,plusw1
  9562                           
  9563                           ;RF24Network_c.c: 341: if(rn.multicastRelay){
  9564  001A56  EE20  F0A9         	lfsr	2,_rn
  9565  001A5A  50DF               	movf	indf2,w,c
  9566  001A5C  B4D8               	btfsc	status,2,c
  9567  001A5E  D023               	goto	l5625
  9568                           
  9569                           ;RF24Network_c.c: 342: ;
  9570                           ;RF24Network_c.c: 343: RF24N_write(RF24N_levelToAddress(rn.multicast_level)<<3,4);
  9571  001A60  EE20  F0D8         	lfsr	2,_rn+47
  9572  001A64  50DF               	movf	indf2,w,c
  9573  001A66  EC64  F019         	call	_RF24N_levelToAddress
  9574  001A6A  C003  F071         	movff	?_RF24N_levelToAddress,btemp+1
  9575  001A6E  C004  F072         	movff	?_RF24N_levelToAddress+1,btemp+2
  9576  001A72  90D8               	bcf	status,0,c
  9577  001A74  3671               	rlcf	btemp+1,f,c
  9578  001A76  3672               	rlcf	btemp+2,f,c
  9579  001A78  90D8               	bcf	status,0,c
  9580  001A7A  3671               	rlcf	btemp+1,f,c
  9581  001A7C  3672               	rlcf	btemp+2,f,c
  9582  001A7E  90D8               	bcf	status,0,c
  9583  001A80  3671               	rlcf	btemp+1,f,c
  9584  001A82  3672               	rlcf	btemp+2,f,c
  9585                           
  9586                           ;stkvar	_RF24N_update$3246 @ sp[(-7)+5]
  9587  001A84  0EFE               	movlw	-2
  9588  001A86  C071  FFE3         	movff	btemp+1,plusw1
  9589  001A8A  0EFF               	movlw	-1
  9590  001A8C  C072  FFE3         	movff	btemp+2,plusw1
  9591                           
  9592                           ;RF24Network_c.c: 342: ;
  9593                           ;RF24Network_c.c: 343: RF24N_write(RF24N_levelToAddress(rn.multicast_level)<<3,4);
  9594                           ;stkvar	_RF24N_update$3246 @ sp[(-7)+5]
  9595  001A90  0EFE               	movlw	-2
  9596  001A92  CFE3 F080          	movff	plusw1,RF24N_write@to_node
  9597  001A96  0EFF               	movlw	-1
  9598  001A98  CFE3 F081          	movff	plusw1,RF24N_write@to_node+1
  9599  001A9C  0E04               	movlw	4
  9600  001A9E  0100               	movlb	0	; () banked
  9601  001AA0  6F82               	movwf	RF24N_write@directTo& (0+255),b
  9602  001AA2  EC06  F010         	call	_RF24N_write	;wreg free
  9603  001AA6                     l5625:
  9604                           
  9605                           ;RF24Network_c.c: 344: }
  9606                           ;RF24Network_c.c: 345: if( val == 2 ){
  9607                           ;stkvar	RF24N_update@val @ sp[(-7)+0]
  9608  001AA6  0EF9               	movlw	-7
  9609  001AA8  CFE3 F070          	movff	plusw1,btemp
  9610  001AAC  0E02               	movlw	2
  9611  001AAE  1870               	xorwf	btemp,w,c
  9612  001AB0  D754               	goto	L7
  9613  001AB2                     l5631:
  9614                           
  9615                           ;RF24Network_c.c: 351: RF24N_write(header->to_node,1);
  9616                           ;stkvar	RF24N_update@header @ sp[(-7)+1]
  9617  001AB2  0EFA               	movlw	-6
  9618  001AB4  CFE3 F071          	movff	plusw1,btemp+1
  9619  001AB8  0EFB               	movlw	-5
  9620  001ABA  CFE3 F072          	movff	plusw1,btemp+2
  9621  001ABE  0E02               	movlw	2
  9622  001AC0  2471               	addwf	btemp+1,w,c
  9623  001AC2  6ED9               	movwf	fsr2l,c
  9624  001AC4  0E00               	movlw	0
  9625  001AC6  2072               	addwfc	btemp+2,w,c
  9626  001AC8  6EDA               	movwf	fsr2h,c
  9627  001ACA  CFDE F080          	movff	postinc2,RF24N_write@to_node
  9628  001ACE  CFDD F081          	movff	postdec2,RF24N_write@to_node+1
  9629  001AD2  0E01               	movlw	1
  9630  001AD4  0100               	movlb	0	; () banked
  9631  001AD6  6F82               	movwf	RF24N_write@directTo& (0+255),b
  9632  001AD8  EC06  F010         	call	_RF24N_write	;wreg free
  9633  001ADC                     l5633:
  9634  001ADC  EC3E  F01C         	call	_RF24_isValid	;wreg free
  9635  001AE0  0900               	iorlw	0
  9636  001AE2  B4D8               	btfsc	status,2,c
  9637  001AE4  D72D               	goto	l5591
  9638                           
  9639                           ;stkvar	RF24N_update@pipe_num @ sp[(-7)+4]
  9640  001AE6  0EFD               	movlw	253
  9641  001AE8  24E1               	addwf	fsr1l,w,c
  9642  001AEA  6E71               	movwf	btemp+1,c
  9643  001AEC  0EFF               	movlw	255
  9644  001AEE  20E2               	addwfc	fsr1h,w,c
  9645  001AF0  6E72               	movwf	btemp+2,c
  9646  001AF2  C071  F014         	movff	btemp+1,RF24_available_p@pipe_num
  9647  001AF6  C072  F015         	movff	btemp+2,RF24_available_p@pipe_num+1
  9648  001AFA  ECFD  F01A         	call	_RF24_available_p	;wreg free
  9649  001AFE  0900               	iorlw	0
  9650  001B00  B4D8               	btfsc	status,2,c
  9651  001B02  D71E               	goto	l5591
  9652  001B04  D59B               	goto	l5531
  9653  001B06                     l775:
  9654                           
  9655                           ; _RF24N_update: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9656  001B06  0EF9               	movlw	249
  9657  001B08  26E1               	addwf	fsr1l,f,c
  9658  001B0A  0EFF               	movlw	255
  9659  001B0C  22E2               	addwfc	fsr1h,f,c
  9660  001B0E  0012               	return		;funcret
  9661  001B10                     __end_of_RF24N_update:
  9662                           	opt stack 0
  9663                           tblptru	equ	0xFF8
  9664                           tblptrh	equ	0xFF7
  9665                           tblptrl	equ	0xFF6
  9666                           tablat	equ	0xFF5
  9667                           prodh	equ	0xFF4
  9668                           prodl	equ	0xFF3
  9669                           intcon	equ	0xFF2
  9670                           indf0	equ	0xFEF
  9671                           postinc0	equ	0xFEE
  9672                           postdec0	equ	0xFED
  9673                           plusw0	equ	0xFEB
  9674                           fsr0h	equ	0xFEA
  9675                           fsr0l	equ	0xFE9
  9676                           wreg	equ	0xFE8
  9677                           plusw1	equ	0xFE3
  9678                           fsr1h	equ	0xFE2
  9679                           fsr1l	equ	0xFE1
  9680                           indf2	equ	0xFDF
  9681                           postinc2	equ	0xFDE
  9682                           postdec2	equ	0xFDD
  9683                           plusw2	equ	0xFDB
  9684                           fsr2h	equ	0xFDA
  9685                           fsr2l	equ	0xFD9
  9686                           status	equ	0xFD8
  9687                           
  9688 ;; *************** function _delay *****************
  9689 ;; Defined at:
  9690 ;;		line 181 in file "../../../RF24_c/utility/XC8/spi.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;  val             2    2[COMRAM] unsigned int 
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;  j               2    6[COMRAM] unsigned int 
  9695 ;;  i               2    4[COMRAM] unsigned int 
  9696 ;; Return value:  Size  Location     Type
  9697 ;;                  1    wreg      void 
  9698 ;; Registers used:
  9699 ;;		wreg, status,2, status,0
  9700 ;; Tracked objects:
  9701 ;;		On entry : 0/0
  9702 ;;		On exit  : 0/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9706 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9708 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9709 ;;Total ram usage:        6 bytes
  9710 ;; Hardware stack levels used:    1
  9711 ;; Hardware stack levels required when called:    1
  9712 ;; This function calls:
  9713 ;;		Nothing
  9714 ;; This function is called by:
  9715 ;;		_RF24_begin
  9716 ;;		_RF24_powerUp
  9717 ;;		_RF24_getDynamicPayloadSize
  9718 ;;		_RF24N_update
  9719 ;;		_RF24N_write_
  9720 ;; This function uses a non-reentrant model
  9721 ;;
  9722                           
  9723                           	psect	text61
  9724  00335E                     __ptext61:
  9725                           	opt stack 0
  9726  00335E                     _delay:
  9727                           	opt stack 27
  9728                           
  9729                           ;spi.c: 183: unsigned int i;
  9730                           ;spi.c: 184: unsigned int j;
  9731                           ;spi.c: 186: for (i =0; i< val; i++)
  9732                           
  9733                           ;incstack = 0
  9734  00335E  0E00               	movlw	0
  9735  003360  6E06               	movwf	delay@i+1,c
  9736  003362  0E00               	movlw	0
  9737  003364  6E05               	movwf	delay@i,c
  9738  003366  D019               	goto	l5251
  9739  003368                     l5239:
  9740                           
  9741                           ;spi.c: 187: {
  9742                           ;spi.c: 189: for (j =0 ; j < (32000000/(4000l*10)); j++)
  9743  003368  0E00               	movlw	0
  9744  00336A  6E08               	movwf	delay@j+1,c
  9745  00336C  0E00               	movlw	0
  9746  00336E  6E07               	movwf	delay@j,c
  9747  003370                     l5241:
  9748  003370  0E20               	movlw	32
  9749  003372  5C07               	subwf	delay@j,w,c
  9750  003374  0E03               	movlw	3
  9751  003376  5808               	subwfb	delay@j+1,w,c
  9752  003378  B0D8               	btfsc	status,0,c
  9753  00337A  D00D               	goto	l5249
  9754  00337C  F000               	nop		;# 
  9755  00337E  F000               	nop		;# 
  9756  003380  F000               	nop		;# 
  9757  003382  F000               	nop		;# 
  9758  003384  F000               	nop		;# 
  9759  003386  F000               	nop		;# 
  9760  003388  F000               	nop		;# 
  9761  00338A  F000               	nop		;# 
  9762  00338C  F000               	nop		;# 
  9763  00338E  F000               	nop		;# 
  9764  003390  4A07               	infsnz	delay@j,f,c
  9765  003392  2A08               	incf	delay@j+1,f,c
  9766  003394  D7ED               	goto	l5241
  9767  003396                     l5249:
  9768  003396  4A05               	infsnz	delay@i,f,c
  9769  003398  2A06               	incf	delay@i+1,f,c
  9770  00339A                     l5251:
  9771  00339A  5003               	movf	delay@val,w,c
  9772  00339C  5C05               	subwf	delay@i,w,c
  9773  00339E  5004               	movf	delay@val+1,w,c
  9774  0033A0  5806               	subwfb	delay@i+1,w,c
  9775  0033A2  B0D8               	btfsc	status,0,c
  9776  0033A4  0012               	return	
  9777  0033A6  D7E0               	goto	l5239
  9778  0033A8                     __end_of_delay:
  9779                           	opt stack 0
  9780                           tblptru	equ	0xFF8
  9781                           tblptrh	equ	0xFF7
  9782                           tblptrl	equ	0xFF6
  9783                           tablat	equ	0xFF5
  9784                           prodh	equ	0xFF4
  9785                           prodl	equ	0xFF3
  9786                           intcon	equ	0xFF2
  9787                           indf0	equ	0xFEF
  9788                           postinc0	equ	0xFEE
  9789                           postdec0	equ	0xFED
  9790                           plusw0	equ	0xFEB
  9791                           fsr0h	equ	0xFEA
  9792                           fsr0l	equ	0xFE9
  9793                           wreg	equ	0xFE8
  9794                           plusw1	equ	0xFE3
  9795                           fsr1h	equ	0xFE2
  9796                           fsr1l	equ	0xFE1
  9797                           indf2	equ	0xFDF
  9798                           postinc2	equ	0xFDE
  9799                           postdec2	equ	0xFDD
  9800                           plusw2	equ	0xFDB
  9801                           fsr2h	equ	0xFDA
  9802                           fsr2l	equ	0xFD9
  9803                           status	equ	0xFD8
  9804                           
  9805 ;; *************** function _RF24_isValid *****************
  9806 ;; Defined at:
  9807 ;;		line 1420 in file "../../../RF24_c/RF24_c.c"
  9808 ;; Parameters:    Size  Location     Type
  9809 ;;		None
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;		None
  9812 ;; Return value:  Size  Location     Type
  9813 ;;                  1    wreg      unsigned char 
  9814 ;; Registers used:
  9815 ;;		wreg, status,2, status,0
  9816 ;; Tracked objects:
  9817 ;;		On entry : 0/0
  9818 ;;		On exit  : 0/0
  9819 ;;		Unchanged: 0/0
  9820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9824 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9825 ;;Total ram usage:        1 bytes
  9826 ;; Hardware stack levels used:    1
  9827 ;; Hardware stack levels required when called:    1
  9828 ;; This function calls:
  9829 ;;		Nothing
  9830 ;; This function is called by:
  9831 ;;		_RF24N_begin_d
  9832 ;;		_RF24N_update
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           	psect	text62
  9837  00387C                     __ptext62:
  9838                           	opt stack 0
  9839  00387C                     _RF24_isValid:
  9840                           	opt stack 27
  9841                           
  9842                           ;RF24_c.c: 1422: return rf.ce_pin != 0xff && rf.csn_pin != 0xff;
  9843                           
  9844                           ;incstack = 0
  9845  00387C  0E00               	movlw	0
  9846  00387E  6E03               	movwf	_RF24_isValid$2046,c
  9847  003880  2842               	incf	_rf,w,c
  9848  003882  B4D8               	btfsc	status,2,c
  9849  003884  D005               	goto	l637
  9850  003886  2843               	incf	_rf+1,w,c
  9851  003888  B4D8               	btfsc	status,2,c
  9852  00388A  D002               	goto	l637
  9853  00388C  0E01               	movlw	1
  9854  00388E  6E03               	movwf	_RF24_isValid$2046,c
  9855  003890                     l637:
  9856  003890  5003               	movf	_RF24_isValid$2046,w,c
  9857  003892  0012               	return	
  9858  003894                     __end_of_RF24_isValid:
  9859                           	opt stack 0
  9860                           tblptru	equ	0xFF8
  9861                           tblptrh	equ	0xFF7
  9862                           tblptrl	equ	0xFF6
  9863                           tablat	equ	0xFF5
  9864                           prodh	equ	0xFF4
  9865                           prodl	equ	0xFF3
  9866                           intcon	equ	0xFF2
  9867                           indf0	equ	0xFEF
  9868                           postinc0	equ	0xFEE
  9869                           postdec0	equ	0xFED
  9870                           plusw0	equ	0xFEB
  9871                           fsr0h	equ	0xFEA
  9872                           fsr0l	equ	0xFE9
  9873                           wreg	equ	0xFE8
  9874                           plusw1	equ	0xFE3
  9875                           fsr1h	equ	0xFE2
  9876                           fsr1l	equ	0xFE1
  9877                           indf2	equ	0xFDF
  9878                           postinc2	equ	0xFDE
  9879                           postdec2	equ	0xFDD
  9880                           plusw2	equ	0xFDB
  9881                           fsr2h	equ	0xFDA
  9882                           fsr2l	equ	0xFD9
  9883                           status	equ	0xFD8
  9884                           
  9885 ;; *************** function _RF24N_levelToAddress *****************
  9886 ;; Defined at:
  9887 ;;		line 1346 in file "../../RF24Network_c.c"
  9888 ;; Parameters:    Size  Location     Type
  9889 ;;  level           1    wreg     unsigned char 
  9890 ;; Auto vars:     Size  Location     Type
  9891 ;;  level           1    7[COMRAM] unsigned char 
  9892 ;;  levelAddr       2    8[COMRAM] unsigned int 
  9893 ;; Return value:  Size  Location     Type
  9894 ;;                  2    2[COMRAM] unsigned int 
  9895 ;; Registers used:
  9896 ;;		wreg, status,2, status,0, prodl, prodh
  9897 ;; Tracked objects:
  9898 ;;		On entry : 0/0
  9899 ;;		On exit  : 0/0
  9900 ;;		Unchanged: 0/0
  9901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9903 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9904 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9905 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9906 ;;Total ram usage:        8 bytes
  9907 ;; Hardware stack levels used:    1
  9908 ;; Hardware stack levels required when called:    1
  9909 ;; This function calls:
  9910 ;;		Nothing
  9911 ;; This function is called by:
  9912 ;;		_RF24N_update
  9913 ;;		_RF24N_multicast
  9914 ;;		_RF24N_multicastLevel
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918                           	psect	text63
  9919  0032C8                     __ptext63:
  9920                           	opt stack 0
  9921  0032C8                     _RF24N_levelToAddress:
  9922                           	opt stack 27
  9923                           
  9924                           ;incstack = 0
  9925                           ;RF24N_levelToAddress@level stored from wreg
  9926  0032C8  6E08               	movwf	RF24N_levelToAddress@level,c
  9927                           
  9928                           ;RF24Network_c.c: 1348: uint16_t levelAddr = 1;
  9929  0032CA  0E00               	movlw	0
  9930  0032CC  6E0A               	movwf	RF24N_levelToAddress@levelAddr+1,c
  9931  0032CE  0E01               	movlw	1
  9932  0032D0  6E09               	movwf	RF24N_levelToAddress@levelAddr,c
  9933                           
  9934                           ;RF24Network_c.c: 1349: if(level){
  9935  0032D2  5008               	movf	RF24N_levelToAddress@level,w,c
  9936  0032D4  B4D8               	btfsc	status,2,c
  9937  0032D6  D014               	goto	l6083
  9938                           
  9939                           ;RF24Network_c.c: 1350: levelAddr = levelAddr << ((level-1) * 3);
  9940  0032D8  0408               	decf	RF24N_levelToAddress@level,w,c
  9941  0032DA  0D03               	mullw	3
  9942  0032DC  CFF3 F005          	movff	prodl,??_RF24N_levelToAddress
  9943  0032E0  C009  F006         	movff	RF24N_levelToAddress@levelAddr,??_RF24N_levelToAddress+1
  9944  0032E4  C00A  F007         	movff	RF24N_levelToAddress@levelAddr+1,??_RF24N_levelToAddress+2
  9945  0032E8  2A05               	incf	??_RF24N_levelToAddress,f,c
  9946  0032EA  D003               	goto	u8044
  9947  0032EC                     u8045:
  9948  0032EC  90D8               	bcf	status,0,c
  9949  0032EE  3606               	rlcf	??_RF24N_levelToAddress+1,f,c
  9950  0032F0  3607               	rlcf	??_RF24N_levelToAddress+2,f,c
  9951  0032F2                     u8044:
  9952  0032F2  2E05               	decfsz	??_RF24N_levelToAddress,f,c
  9953  0032F4  D7FB               	goto	u8045
  9954  0032F6  C006  F009         	movff	??_RF24N_levelToAddress+1,RF24N_levelToAddress@levelAddr
  9955  0032FA  C007  F00A         	movff	??_RF24N_levelToAddress+2,RF24N_levelToAddress@levelAddr+1
  9956                           
  9957                           ;RF24Network_c.c: 1351: }else{
  9958  0032FE  D005               	goto	l965
  9959  003300                     l6083:
  9960                           
  9961                           ;RF24Network_c.c: 1352: return 0;
  9962  003300  0E00               	movlw	0
  9963  003302  6E04               	movwf	?_RF24N_levelToAddress+1,c
  9964  003304  0E00               	movlw	0
  9965  003306  6E03               	movwf	?_RF24N_levelToAddress,c
  9966  003308  0012               	return	
  9967  00330A                     l965:
  9968                           
  9969                           ;RF24Network_c.c: 1353: }
  9970                           ;RF24Network_c.c: 1354: return levelAddr;
  9971  00330A  C009  F003         	movff	RF24N_levelToAddress@levelAddr,?_RF24N_levelToAddress
  9972  00330E  C00A  F004         	movff	RF24N_levelToAddress@levelAddr+1,?_RF24N_levelToAddress+1
  9973  003312  0012               	return		;funcret
  9974  003314                     __end_of_RF24N_levelToAddress:
  9975                           	opt stack 0
  9976                           tblptru	equ	0xFF8
  9977                           tblptrh	equ	0xFF7
  9978                           tblptrl	equ	0xFF6
  9979                           tablat	equ	0xFF5
  9980                           prodh	equ	0xFF4
  9981                           prodl	equ	0xFF3
  9982                           intcon	equ	0xFF2
  9983                           indf0	equ	0xFEF
  9984                           postinc0	equ	0xFEE
  9985                           postdec0	equ	0xFED
  9986                           plusw0	equ	0xFEB
  9987                           fsr0h	equ	0xFEA
  9988                           fsr0l	equ	0xFE9
  9989                           wreg	equ	0xFE8
  9990                           plusw1	equ	0xFE3
  9991                           fsr1h	equ	0xFE2
  9992                           fsr1l	equ	0xFE1
  9993                           indf2	equ	0xFDF
  9994                           postinc2	equ	0xFDE
  9995                           postdec2	equ	0xFDD
  9996                           plusw2	equ	0xFDB
  9997                           fsr2h	equ	0xFDA
  9998                           fsr2l	equ	0xFD9
  9999                           status	equ	0xFD8
 10000                           
 10001 ;; *************** function _RF24N_is_valid_address *****************
 10002 ;; Defined at:
 10003 ;;		line 1312 in file "../../RF24Network_c.c"
 10004 ;; Parameters:    Size  Location     Type
 10005 ;;  node            2    2[COMRAM] unsigned int 
 10006 ;; Auto vars:     Size  Location     Type
 10007 ;;  digit           1    4[COMRAM] unsigned char 
 10008 ;;  result          1    5[COMRAM] unsigned char 
 10009 ;; Return value:  Size  Location     Type
 10010 ;;                  1    wreg      unsigned char 
 10011 ;; Registers used:
 10012 ;;		wreg, status,2, status,0
 10013 ;; Tracked objects:
 10014 ;;		On entry : 0/0
 10015 ;;		On exit  : 0/0
 10016 ;;		Unchanged: 0/0
 10017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10021 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10022 ;;Total ram usage:        4 bytes
 10023 ;; Hardware stack levels used:    1
 10024 ;; Hardware stack levels required when called:    1
 10025 ;; This function calls:
 10026 ;;		Nothing
 10027 ;; This function is called by:
 10028 ;;		_RF24N_begin_d
 10029 ;;		_RF24N_update
 10030 ;;		_RF24N_write
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           	psect	text64
 10035  00355A                     __ptext64:
 10036                           	opt stack 0
 10037  00355A                     _RF24N_is_valid_address:
 10038                           	opt stack 27
 10039                           
 10040                           ;RF24Network_c.c: 1314: uint8_t result = 1;
 10041                           
 10042                           ;incstack = 0
 10043  00355A  0E01               	movlw	1
 10044  00355C  6E06               	movwf	RF24N_is_valid_address@result,c
 10045                           
 10046                           ;RF24Network_c.c: 1316: while(node)
 10047  00355E  D012               	goto	l5671
 10048  003560                     l5665:
 10049                           
 10050                           ;RF24Network_c.c: 1317: {
 10051                           ;RF24Network_c.c: 1318: uint8_t digit = node & 0x07;
 10052  003560  5003               	movf	RF24N_is_valid_address@node,w,c
 10053  003562  0B07               	andlw	7
 10054  003564  6E05               	movwf	RF24N_is_valid_address@digit,c
 10055                           
 10056                           ;RF24Network_c.c: 1322: if ( (digit > 5))
 10057  003566  0E05               	movlw	5
 10058  003568  6405               	cpfsgt	RF24N_is_valid_address@digit,c
 10059  00356A  D003               	goto	l5669
 10060                           
 10061                           ;RF24Network_c.c: 1324: {
 10062                           ;RF24Network_c.c: 1325: result = 0;
 10063  00356C  0E00               	movlw	0
 10064  00356E  6E06               	movwf	RF24N_is_valid_address@result,c
 10065                           
 10066                           ;RF24Network_c.c: 1326: ;
 10067                           ;RF24Network_c.c: 1327: break;
 10068  003570  D00D               	goto	l5673
 10069  003572                     l5669:
 10070                           
 10071                           ;RF24Network_c.c: 1328: }
 10072                           ;RF24Network_c.c: 1329: node >>= 3;
 10073  003572  90D8               	bcf	status,0,c
 10074  003574  3204               	rrcf	RF24N_is_valid_address@node+1,f,c
 10075  003576  3203               	rrcf	RF24N_is_valid_address@node,f,c
 10076  003578  90D8               	bcf	status,0,c
 10077  00357A  3204               	rrcf	RF24N_is_valid_address@node+1,f,c
 10078  00357C  3203               	rrcf	RF24N_is_valid_address@node,f,c
 10079  00357E  90D8               	bcf	status,0,c
 10080  003580  3204               	rrcf	RF24N_is_valid_address@node+1,f,c
 10081  003582  3203               	rrcf	RF24N_is_valid_address@node,f,c
 10082  003584                     l5671:
 10083  003584  5003               	movf	RF24N_is_valid_address@node,w,c
 10084  003586  1004               	iorwf	RF24N_is_valid_address@node+1,w,c
 10085  003588  A4D8               	btfss	status,2,c
 10086  00358A  D7EA               	goto	l5665
 10087  00358C                     l5673:
 10088                           
 10089                           ;RF24Network_c.c: 1330: }
 10090                           ;RF24Network_c.c: 1332: return result;
 10091  00358C  5006               	movf	RF24N_is_valid_address@result,w,c
 10092  00358E  0012               	return	
 10093  003590                     __end_of_RF24N_is_valid_address:
 10094                           	opt stack 0
 10095                           tblptru	equ	0xFF8
 10096                           tblptrh	equ	0xFF7
 10097                           tblptrl	equ	0xFF6
 10098                           tablat	equ	0xFF5
 10099                           prodh	equ	0xFF4
 10100                           prodl	equ	0xFF3
 10101                           intcon	equ	0xFF2
 10102                           indf0	equ	0xFEF
 10103                           postinc0	equ	0xFEE
 10104                           postdec0	equ	0xFED
 10105                           plusw0	equ	0xFEB
 10106                           fsr0h	equ	0xFEA
 10107                           fsr0l	equ	0xFE9
 10108                           wreg	equ	0xFE8
 10109                           plusw1	equ	0xFE3
 10110                           fsr1h	equ	0xFE2
 10111                           fsr1l	equ	0xFE1
 10112                           indf2	equ	0xFDF
 10113                           postinc2	equ	0xFDE
 10114                           postdec2	equ	0xFDD
 10115                           plusw2	equ	0xFDB
 10116                           fsr2h	equ	0xFDA
 10117                           fsr2l	equ	0xFD9
 10118                           status	equ	0xFD8
 10119                           
 10120 ;; *************** function _RF24N_enqueue *****************
 10121 ;; Defined at:
 10122 ;;		line 527 in file "../../RF24Network_c.c"
 10123 ;; Parameters:    Size  Location     Type
 10124 ;;  header          2   22[COMRAM] PTR struct .
 10125 ;;		 -> rn.frame_buffer(32), rn(370), 
 10126 ;; Auto vars:     Size  Location     Type
 10127 ;;  padding         1   32[COMRAM] unsigned char 
 10128 ;;  padding         1   33[COMRAM] unsigned char 
 10129 ;;  message_size    2   36[COMRAM] unsigned int 
 10130 ;;  result          1   35[COMRAM] unsigned char 
 10131 ;;  isFragment      1   31[COMRAM] unsigned char 
 10132 ;; Return value:  Size  Location     Type
 10133 ;;                  1    wreg      unsigned char 
 10134 ;; Registers used:
 10135 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10136 ;; Tracked objects:
 10137 ;;		On entry : 0/0
 10138 ;;		On exit  : 0/0
 10139 ;;		Unchanged: 0/0
 10140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10142 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10143 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10144 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10145 ;;Total ram usage:       16 bytes
 10146 ;; Hardware stack levels used:    1
 10147 ;; Hardware stack levels required when called:    7
 10148 ;; This function calls:
 10149 ;;		_RF24_stopListening
 10150 ;;		___lwdiv
 10151 ;;		_memcpy
 10152 ;; This function is called by:
 10153 ;;		_RF24N_update
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           	psect	text65
 10158  001056                     __ptext65:
 10159                           	opt stack 0
 10160  001056                     _RF24N_enqueue:
 10161                           	opt stack 21
 10162                           
 10163                           ;RF24Network_c.c: 529: uint8_t result = 0;
 10164                           
 10165                           ;incstack = 0
 10166  001056  0E00               	movlw	0
 10167  001058  6E24               	movwf	RF24N_enqueue@result,c
 10168                           
 10169                           ;RF24Network_c.c: 530: uint16_t message_size = rn.frame_size - sizeof(RF24NetworkHeader)
      +                          ;
 10170  00105A  C0DB  F019         	movff	_rn+50,??_RF24N_enqueue
 10171  00105E  0EF8               	movlw	248
 10172  001060  2419               	addwf	??_RF24N_enqueue,w,c
 10173  001062  6E25               	movwf	RF24N_enqueue@message_size,c
 10174  001064  6A26               	clrf	RF24N_enqueue@message_size+1,c
 10175  001066  0EFF               	movlw	255
 10176  001068  2226               	addwfc	RF24N_enqueue@message_size+1,f,c
 10177                           
 10178                           ;RF24Network_c.c: 531: uint8_t isFragment;
 10179                           ;RF24Network_c.c: 533: ;
 10180                           ;RF24Network_c.c: 537: isFragment = header->type == 148 || header->type == 149 || header
      +                          ->type == 150 || header->type == 200 ;
 10181  00106A  0E01               	movlw	1
 10182  00106C  6E23               	movwf	_RF24N_enqueue$2286,c
 10183  00106E  EE20 F006          	lfsr	2,6
 10184  001072  5017               	movf	RF24N_enqueue@header,w,c
 10185  001074  26D9               	addwf	fsr2l,f,c
 10186  001076  5018               	movf	RF24N_enqueue@header+1,w,c
 10187  001078  22DA               	addwfc	fsr2h,f,c
 10188  00107A  0E94               	movlw	148
 10189  00107C  18DE               	xorwf	postinc2,w,c
 10190  00107E  B4D8               	btfsc	status,2,c
 10191  001080  D020               	goto	l5939
 10192  001082  EE20 F006          	lfsr	2,6
 10193  001086  5017               	movf	RF24N_enqueue@header,w,c
 10194  001088  26D9               	addwf	fsr2l,f,c
 10195  00108A  5018               	movf	RF24N_enqueue@header+1,w,c
 10196  00108C  22DA               	addwfc	fsr2h,f,c
 10197  00108E  0E95               	movlw	149
 10198  001090  18DE               	xorwf	postinc2,w,c
 10199  001092  B4D8               	btfsc	status,2,c
 10200  001094  D016               	goto	l5939
 10201  001096  EE20 F006          	lfsr	2,6
 10202  00109A  5017               	movf	RF24N_enqueue@header,w,c
 10203  00109C  26D9               	addwf	fsr2l,f,c
 10204  00109E  5018               	movf	RF24N_enqueue@header+1,w,c
 10205  0010A0  22DA               	addwfc	fsr2h,f,c
 10206  0010A2  0E96               	movlw	150
 10207  0010A4  18DE               	xorwf	postinc2,w,c
 10208  0010A6  B4D8               	btfsc	status,2,c
 10209  0010A8  D00C               	goto	l5939
 10210  0010AA  EE20 F006          	lfsr	2,6
 10211  0010AE  5017               	movf	RF24N_enqueue@header,w,c
 10212  0010B0  26D9               	addwf	fsr2l,f,c
 10213  0010B2  5018               	movf	RF24N_enqueue@header+1,w,c
 10214  0010B4  22DA               	addwfc	fsr2h,f,c
 10215  0010B6  0EC8               	movlw	200
 10216  0010B8  18DE               	xorwf	postinc2,w,c
 10217  0010BA  B4D8               	btfsc	status,2,c
 10218  0010BC  D002               	goto	l5939
 10219  0010BE  0E00               	movlw	0
 10220  0010C0  6E23               	movwf	_RF24N_enqueue$2286,c
 10221  0010C2                     l5939:
 10222  0010C2  C023  F020         	movff	_RF24N_enqueue$2286,RF24N_enqueue@isFragment
 10223                           
 10224                           ;RF24Network_c.c: 539: if(isFragment){
 10225  0010C6  5020               	movf	RF24N_enqueue@isFragment,w,c
 10226  0010C8  B4D8               	btfsc	status,2,c
 10227  0010CA  D1D5               	goto	l6049
 10228                           
 10229                           ;RF24Network_c.c: 541: if(header->type == 148){
 10230  0010CC  EE20 F006          	lfsr	2,6
 10231  0010D0  5017               	movf	RF24N_enqueue@header,w,c
 10232  0010D2  26D9               	addwf	fsr2l,f,c
 10233  0010D4  5018               	movf	RF24N_enqueue@header+1,w,c
 10234  0010D6  22DA               	addwfc	fsr2h,f,c
 10235  0010D8  0E94               	movlw	148
 10236  0010DA  18DE               	xorwf	postinc2,w,c
 10237  0010DC  A4D8               	btfss	status,2,c
 10238  0010DE  D0A3               	goto	l5981
 10239                           
 10240                           ;RF24Network_c.c: 543: if(header->reserved > (144 + 10-10 / rn.max_frame_payload_size) )
      +                          {
 10241  0010E0  EE20 F007          	lfsr	2,7
 10242  0010E4  5017               	movf	RF24N_enqueue@header,w,c
 10243  0010E6  26D9               	addwf	fsr2l,f,c
 10244  0010E8  5018               	movf	RF24N_enqueue@header+1,w,c
 10245  0010EA  22DA               	addwfc	fsr2h,f,c
 10246  0010EC  50DF               	movf	indf2,w,c
 10247  0010EE  6E19               	movwf	??_RF24N_enqueue& (0+255),c
 10248  0010F0  0E00               	movlw	0
 10249  0010F2  6E04               	movwf	___lwdiv@dividend+1,c
 10250  0010F4  0E0A               	movlw	10
 10251  0010F6  6E03               	movwf	___lwdiv@dividend,c
 10252  0010F8  C0DC  F005         	movff	_rn+51,___lwdiv@divisor
 10253  0010FC  C0DD  F006         	movff	_rn+52,___lwdiv@divisor+1
 10254  001100  EC14  F019         	call	___lwdiv	;wreg free
 10255  001104  1E03               	comf	?___lwdiv,f,c
 10256  001106  1E04               	comf	?___lwdiv+1,f,c
 10257  001108  4A03               	infsnz	?___lwdiv,f,c
 10258  00110A  2A04               	incf	?___lwdiv+1,f,c
 10259  00110C  0E9A               	movlw	154
 10260  00110E  2603               	addwf	?___lwdiv,f,c
 10261  001110  0E00               	movlw	0
 10262  001112  2204               	addwfc	?___lwdiv+1,f,c
 10263  001114  5019               	movf	??_RF24N_enqueue,w,c
 10264  001116  5C03               	subwf	?___lwdiv,w,c
 10265  001118  0E00               	movlw	0
 10266  00111A  5804               	subwfb	?___lwdiv+1,w,c
 10267  00111C  B0D8               	btfsc	status,0,c
 10268  00111E  D005               	goto	l5953
 10269                           
 10270                           ;RF24Network_c.c: 548: rn.frag_queue.header.reserved = 0;
 10271  001120  0E00               	movlw	0
 10272  001122  CFE8 F186          	movff	wreg,_rn+221
 10273                           
 10274                           ;RF24Network_c.c: 549: return 0;
 10275  001126  0E00               	movlw	0
 10276  001128  0012               	return	
 10277  00112A                     l5953:
 10278                           
 10279                           ;RF24Network_c.c: 551: if(rn.frag_queue.header.id == header->id && rn.frag_queue.header.
      +                          from_node == header->from_node){
 10280  00112A  EE20 F004          	lfsr	2,4
 10281  00112E  5017               	movf	RF24N_enqueue@header,w,c
 10282  001130  26D9               	addwf	fsr2l,f,c
 10283  001132  5018               	movf	RF24N_enqueue@header+1,w,c
 10284  001134  22DA               	addwfc	fsr2h,f,c
 10285  001136  EE01  F083         	lfsr	0,_rn+218
 10286  00113A  50DE               	movf	postinc2,w,c
 10287  00113C  18EE               	xorwf	postinc0,w,c
 10288  00113E  E113               	bnz	l5961
 10289  001140  50DE               	movf	postinc2,w,c
 10290  001142  18EE               	xorwf	postinc0,w,c
 10291  001144  A4D8               	btfss	status,2,c
 10292  001146  D00F               	goto	l5961
 10293  001148  C017  FFD9         	movff	RF24N_enqueue@header,fsr2l
 10294  00114C  C018  FFDA         	movff	RF24N_enqueue@header+1,fsr2h
 10295  001150  EE01  F07F         	lfsr	0,_rn+214
 10296  001154  50DE               	movf	postinc2,w,c
 10297  001156  18EE               	xorwf	postinc0,w,c
 10298  001158  E106               	bnz	l5961
 10299  00115A  50DE               	movf	postinc2,w,c
 10300  00115C  18EE               	xorwf	postinc0,w,c
 10301  00115E  A4D8               	btfss	status,2,c
 10302  001160  D002               	goto	l5961
 10303                           
 10304                           ;RF24Network_c.c: 552: return 1;
 10305  001162  0E01               	movlw	1
 10306  001164  0012               	return	
 10307  001166                     l5961:
 10308                           
 10309                           ;RF24Network_c.c: 553: }
 10310                           ;RF24Network_c.c: 555: if( (header->reserved * 24) > (144 + 10-10 - (rn.next_frame-rn.fr
      +                          ame_queue)) ){
 10311  001166  EE20 F007          	lfsr	2,7
 10312  00116A  5017               	movf	RF24N_enqueue@header,w,c
 10313  00116C  26D9               	addwf	fsr2l,f,c
 10314  00116E  5018               	movf	RF24N_enqueue@header+1,w,c
 10315  001170  22DA               	addwfc	fsr2h,f,c
 10316  001172  50DF               	movf	indf2,w,c
 10317  001174  6E19               	movwf	??_RF24N_enqueue& (0+255),c
 10318  001176  5019               	movf	??_RF24N_enqueue,w,c
 10319  001178  0D18               	mullw	24
 10320  00117A  EE21  F07D         	lfsr	2,_rn+212
 10321  00117E  CFDE F01A          	movff	postinc2,??_RF24N_enqueue+1
 10322  001182  CFDD F01B          	movff	postdec2,??_RF24N_enqueue+2
 10323  001186  0EA9               	movlw	low _rn
 10324  001188  6E1C               	movwf	(??_RF24N_enqueue+3)& (0+255),c
 10325  00118A  0E00               	movlw	high _rn
 10326  00118C  6E1D               	movwf	(??_RF24N_enqueue+4)& (0+255),c
 10327  00118E  0E3A               	movlw	58
 10328  001190  261C               	addwf	??_RF24N_enqueue+3,f,c
 10329  001192  0E00               	movlw	0
 10330  001194  221D               	addwfc	??_RF24N_enqueue+4,f,c
 10331  001196  1E1C               	comf	??_RF24N_enqueue+3,f,c
 10332  001198  1E1D               	comf	??_RF24N_enqueue+4,f,c
 10333  00119A  4A1C               	infsnz	??_RF24N_enqueue+3,f,c
 10334  00119C  2A1D               	incf	??_RF24N_enqueue+4,f,c
 10335  00119E  501A               	movf	??_RF24N_enqueue+1,w,c
 10336  0011A0  261C               	addwf	??_RF24N_enqueue+3,f,c
 10337  0011A2  501B               	movf	??_RF24N_enqueue+2,w,c
 10338  0011A4  221D               	addwfc	??_RF24N_enqueue+4,f,c
 10339  0011A6  1E1C               	comf	??_RF24N_enqueue+3,f,c
 10340  0011A8  1E1D               	comf	??_RF24N_enqueue+4,f,c
 10341  0011AA  4A1C               	infsnz	??_RF24N_enqueue+3,f,c
 10342  0011AC  2A1D               	incf	??_RF24N_enqueue+4,f,c
 10343  0011AE  0E90               	movlw	144
 10344  0011B0  261C               	addwf	??_RF24N_enqueue+3,f,c
 10345  0011B2  0E00               	movlw	0
 10346  0011B4  221D               	addwfc	??_RF24N_enqueue+4,f,c
 10347  0011B6  50F3               	movf	prodl,w,c
 10348  0011B8  5C1C               	subwf	??_RF24N_enqueue+3,w,c
 10349  0011BA  501D               	movf	??_RF24N_enqueue+4,w,c
 10350  0011BC  0A80               	xorlw	128
 10351  0011BE  6E1E               	movwf	(??_RF24N_enqueue+5)& (0+255),c
 10352  0011C0  50F4               	movf	prodh,w,c
 10353  0011C2  0A80               	xorlw	128
 10354  0011C4  581E               	subwfb	(??_RF24N_enqueue+5)& (0+255),w,c
 10355  0011C6  B0D8               	btfsc	status,0,c
 10356  0011C8  D007               	goto	l5967
 10357                           
 10358                           ;RF24Network_c.c: 556: rn.networkFlags |= 1;
 10359  0011CA  C0D3  FFE8         	movff	_rn+42,wreg
 10360  0011CE  0901               	iorlw	1
 10361  0011D0  CFE8 F0D3          	movff	wreg,_rn+42
 10362                           
 10363                           ;RF24Network_c.c: 557: RF24_stopListening();
 10364  0011D4  EC5F  F018         	call	_RF24_stopListening	;wreg free
 10365  0011D8                     l5967:
 10366                           
 10367                           ;RF24Network_c.c: 558: }
 10368                           ;RF24Network_c.c: 560: memcpy(&rn.frag_queue,rn.frame_buffer,8);
 10369  0011D8  0E7F               	movlw	low (_rn+214)
 10370  0011DA  6E03               	movwf	memcpy@d1,c
 10371  0011DC  0E01               	movlw	high (_rn+214)
 10372  0011DE  6E04               	movwf	memcpy@d1+1,c
 10373  0011E0  0EB0               	movlw	low (_rn+7)
 10374  0011E2  6E05               	movwf	memcpy@s1,c
 10375  0011E4  0E00               	movlw	high (_rn+7)
 10376  0011E6  6E06               	movwf	memcpy@s1+1,c
 10377  0011E8  0E00               	movlw	0
 10378  0011EA  6E08               	movwf	memcpy@n+1,c
 10379  0011EC  0E08               	movlw	8
 10380  0011EE  6E07               	movwf	memcpy@n,c
 10381  0011F0  EC55  F01A         	call	_memcpy	;wreg free
 10382                           
 10383                           ;RF24Network_c.c: 561: memcpy(rn.frag_queue.message_buffer,rn.frame_buffer+sizeof(RF24Ne
      +                          tworkHeader),message_size);
 10384  0011F4  C189  F003         	movff	_rn+224,memcpy@d1
 10385  0011F8  C18A  F004         	movff	_rn+225,memcpy@d1+1
 10386  0011FC  0EB8               	movlw	low (_rn+15)
 10387  0011FE  6E05               	movwf	memcpy@s1,c
 10388  001200  0E00               	movlw	high (_rn+15)
 10389  001202  6E06               	movwf	memcpy@s1+1,c
 10390  001204  C025  F007         	movff	RF24N_enqueue@message_size,memcpy@n
 10391  001208  C026  F008         	movff	RF24N_enqueue@message_size+1,memcpy@n+1
 10392  00120C  EC55  F01A         	call	_memcpy	;wreg free
 10393                           
 10394                           ;RF24Network_c.c: 565: rn.frag_queue.message_size = message_size;
 10395  001210  C025  F187         	movff	RF24N_enqueue@message_size,_rn+222
 10396  001214  C026  F188         	movff	RF24N_enqueue@message_size+1,_rn+223
 10397                           
 10398                           ;RF24Network_c.c: 566: --rn.frag_queue.header.reserved;
 10399  001218  C186  FFE8         	movff	_rn+221,wreg
 10400  00121C  0FFF               	addlw	-1
 10401  00121E  CFE8 F186          	movff	wreg,_rn+221
 10402                           
 10403                           ;RF24Network_c.c: 568: ;
 10404                           ;RF24Network_c.c: 570: return 1;
 10405  001222  0E01               	movlw	1
 10406  001224  0012               	return	
 10407  001226                     l5981:
 10408                           
 10409                           ;RF24Network_c.c: 573: if(header->type == 150 || header->type == 149 || header->type == 
      +                          200){
 10410  001226  EE20 F006          	lfsr	2,6
 10411  00122A  5017               	movf	RF24N_enqueue@header,w,c
 10412  00122C  26D9               	addwf	fsr2l,f,c
 10413  00122E  5018               	movf	RF24N_enqueue@header+1,w,c
 10414  001230  22DA               	addwfc	fsr2h,f,c
 10415  001232  0E96               	movlw	150
 10416  001234  18DE               	xorwf	postinc2,w,c
 10417  001236  B4D8               	btfsc	status,2,c
 10418  001238  D014               	goto	l5987
 10419  00123A  EE20 F006          	lfsr	2,6
 10420  00123E  5017               	movf	RF24N_enqueue@header,w,c
 10421  001240  26D9               	addwf	fsr2l,f,c
 10422  001242  5018               	movf	RF24N_enqueue@header+1,w,c
 10423  001244  22DA               	addwfc	fsr2h,f,c
 10424  001246  0E95               	movlw	149
 10425  001248  18DE               	xorwf	postinc2,w,c
 10426  00124A  B4D8               	btfsc	status,2,c
 10427  00124C  D00A               	goto	l5987
 10428  00124E  EE20 F006          	lfsr	2,6
 10429  001252  5017               	movf	RF24N_enqueue@header,w,c
 10430  001254  26D9               	addwf	fsr2l,f,c
 10431  001256  5018               	movf	RF24N_enqueue@header+1,w,c
 10432  001258  22DA               	addwfc	fsr2h,f,c
 10433  00125A  0EC8               	movlw	200
 10434  00125C  18DE               	xorwf	postinc2,w,c
 10435  00125E  A4D8               	btfss	status,2,c
 10436  001260  D12E               	goto	l6061
 10437  001262                     l5987:
 10438                           
 10439                           ;RF24Network_c.c: 575: if(rn.frag_queue.message_size + message_size > 144 + 10-10){
 10440  001262  EE21  F087         	lfsr	2,_rn+222
 10441  001266  CFDE F019          	movff	postinc2,??_RF24N_enqueue
 10442  00126A  CFDD F01A          	movff	postdec2,??_RF24N_enqueue+1
 10443  00126E  5025               	movf	RF24N_enqueue@message_size,w,c
 10444  001270  2619               	addwf	??_RF24N_enqueue,f,c
 10445  001272  5026               	movf	RF24N_enqueue@message_size+1,w,c
 10446  001274  221A               	addwfc	??_RF24N_enqueue+1,f,c
 10447  001276  501A               	movf	??_RF24N_enqueue+1,w,c
 10448  001278  E104               	bnz	u7910
 10449  00127A  0E91               	movlw	145
 10450  00127C  5C19               	subwf	??_RF24N_enqueue,w,c
 10451  00127E  A0D8               	btfss	status,0,c
 10452  001280  D005               	goto	l5995
 10453  001282                     u7910:
 10454                           
 10455                           ;RF24Network_c.c: 580: rn.frag_queue.header.reserved=0;
 10456  001282  0E00               	movlw	0
 10457  001284  CFE8 F186          	movff	wreg,_rn+221
 10458                           
 10459                           ;RF24Network_c.c: 581: return 0;
 10460  001288  0E00               	movlw	0
 10461  00128A  0012               	return	
 10462  00128C                     l5995:
 10463                           
 10464                           ;RF24Network_c.c: 582: }
 10465                           ;RF24Network_c.c: 583: if( rn.frag_queue.header.reserved == 0 || (header->type != 150 &&
      +                           header->reserved != rn.frag_queue.header.reserved ) || rn.frag_queue.header.id != heade
      +                          r->id ){
 10466  00128C  EE21  F086         	lfsr	2,_rn+221
 10467  001290  50DF               	movf	indf2,w,c
 10468  001292  B4D8               	btfsc	status,2,c
 10469  001294  D025               	goto	l6003
 10470  001296  EE20 F006          	lfsr	2,6
 10471  00129A  5017               	movf	RF24N_enqueue@header,w,c
 10472  00129C  26D9               	addwf	fsr2l,f,c
 10473  00129E  5018               	movf	RF24N_enqueue@header+1,w,c
 10474  0012A0  22DA               	addwfc	fsr2h,f,c
 10475  0012A2  0E96               	movlw	150
 10476  0012A4  18DE               	xorwf	postinc2,w,c
 10477  0012A6  B4D8               	btfsc	status,2,c
 10478  0012A8  D00C               	goto	l6001
 10479  0012AA  EE21  F086         	lfsr	2,_rn+221
 10480  0012AE  EE00 F007          	lfsr	0,7
 10481  0012B2  5017               	movf	RF24N_enqueue@header,w,c
 10482  0012B4  26E9               	addwf	fsr0l,f,c
 10483  0012B6  5018               	movf	RF24N_enqueue@header+1,w,c
 10484  0012B8  22EA               	addwfc	fsr0h,f,c
 10485  0012BA  50DE               	movf	postinc2,w,c
 10486  0012BC  18EE               	xorwf	postinc0,w,c
 10487  0012BE  A4D8               	btfss	status,2,c
 10488  0012C0  D00F               	goto	l6003
 10489  0012C2                     l6001:
 10490  0012C2  EE20 F004          	lfsr	2,4
 10491  0012C6  5017               	movf	RF24N_enqueue@header,w,c
 10492  0012C8  26D9               	addwf	fsr2l,f,c
 10493  0012CA  5018               	movf	RF24N_enqueue@header+1,w,c
 10494  0012CC  22DA               	addwfc	fsr2h,f,c
 10495  0012CE  EE01  F083         	lfsr	0,_rn+218
 10496  0012D2  50DE               	movf	postinc2,w,c
 10497  0012D4  18EE               	xorwf	postinc0,w,c
 10498  0012D6  E104               	bnz	l6003
 10499  0012D8  50DE               	movf	postinc2,w,c
 10500  0012DA  18EE               	xorwf	postinc0,w,c
 10501  0012DC  B4D8               	btfsc	status,2,c
 10502  0012DE  D002               	goto	l6007
 10503  0012E0                     l6003:
 10504                           
 10505                           ;RF24Network_c.c: 589: return 0;
 10506  0012E0  0E00               	movlw	0
 10507  0012E2  0012               	return	
 10508  0012E4                     l6007:
 10509                           
 10510                           ;RF24Network_c.c: 590: }
 10511                           ;RF24Network_c.c: 592: memcpy(rn.frag_queue.message_buffer+rn.frag_queue.message_size,rn
      +                          .frame_buffer+sizeof(RF24NetworkHeader),message_size);
 10512  0012E4  EE21  F087         	lfsr	2,_rn+222
 10513  0012E8  CFDE F019          	movff	postinc2,??_RF24N_enqueue
 10514  0012EC  CFDD F01A          	movff	postdec2,??_RF24N_enqueue+1
 10515  0012F0  EE21  F089         	lfsr	2,_rn+224
 10516  0012F4  CFDE F01B          	movff	postinc2,??_RF24N_enqueue+2
 10517  0012F8  CFDD F01C          	movff	postdec2,??_RF24N_enqueue+3
 10518  0012FC  5019               	movf	??_RF24N_enqueue,w,c
 10519  0012FE  241B               	addwf	??_RF24N_enqueue+2,w,c
 10520  001300  6E03               	movwf	memcpy@d1,c
 10521  001302  501A               	movf	??_RF24N_enqueue+1,w,c
 10522  001304  201C               	addwfc	??_RF24N_enqueue+3,w,c
 10523  001306  6E04               	movwf	memcpy@d1+1,c
 10524  001308  0EB8               	movlw	low (_rn+15)
 10525  00130A  6E05               	movwf	memcpy@s1,c
 10526  00130C  0E00               	movlw	high (_rn+15)
 10527  00130E  6E06               	movwf	memcpy@s1+1,c
 10528  001310  C025  F007         	movff	RF24N_enqueue@message_size,memcpy@n
 10529  001314  C026  F008         	movff	RF24N_enqueue@message_size+1,memcpy@n+1
 10530  001318  EC55  F01A         	call	_memcpy	;wreg free
 10531                           
 10532                           ;RF24Network_c.c: 593: rn.frag_queue.message_size += message_size;
 10533  00131C  EE21  F087         	lfsr	2,_rn+222
 10534  001320  5025               	movf	RF24N_enqueue@message_size,w,c
 10535  001322  26DE               	addwf	postinc2,f,c
 10536  001324  5026               	movf	RF24N_enqueue@message_size+1,w,c
 10537  001326  22DD               	addwfc	postdec2,f,c
 10538                           
 10539                           ;RF24Network_c.c: 595: if(header->type != 150){
 10540  001328  EE20 F006          	lfsr	2,6
 10541  00132C  5017               	movf	RF24N_enqueue@header,w,c
 10542  00132E  26D9               	addwf	fsr2l,f,c
 10543  001330  5018               	movf	RF24N_enqueue@header+1,w,c
 10544  001332  22DA               	addwfc	fsr2h,f,c
 10545  001334  0E96               	movlw	150
 10546  001336  18DE               	xorwf	postinc2,w,c
 10547  001338  B4D8               	btfsc	status,2,c
 10548  00133A  D007               	goto	l823
 10549                           
 10550                           ;RF24Network_c.c: 596: --rn.frag_queue.header.reserved;
 10551  00133C  C186  FFE8         	movff	_rn+221,wreg
 10552  001340  0FFF               	addlw	-1
 10553  001342  CFE8 F186          	movff	wreg,_rn+221
 10554                           
 10555                           ;RF24Network_c.c: 597: return 1;
 10556  001346  0E01               	movlw	1
 10557  001348  0012               	return	
 10558  00134A                     l823:
 10559                           
 10560                           ;RF24Network_c.c: 598: }
 10561                           ;RF24Network_c.c: 599: rn.frag_queue.header.reserved = 0;
 10562  00134A  0E00               	movlw	0
 10563  00134C  CFE8 F186          	movff	wreg,_rn+221
 10564                           
 10565                           ;RF24Network_c.c: 600: rn.frag_queue.header.type = header->reserved;
 10566  001350  EE20 F007          	lfsr	2,7
 10567  001354  5017               	movf	RF24N_enqueue@header,w,c
 10568  001356  26D9               	addwf	fsr2l,f,c
 10569  001358  5018               	movf	RF24N_enqueue@header+1,w,c
 10570  00135A  22DA               	addwfc	fsr2h,f,c
 10571  00135C  50DF               	movf	indf2,w,c
 10572  00135E  6E19               	movwf	??_RF24N_enqueue& (0+255),c
 10573  001360  C019  F185         	movff	??_RF24N_enqueue,_rn+220
 10574                           
 10575                           ;RF24Network_c.c: 602: ;
 10576                           ;RF24Network_c.c: 603: ;
 10577                           ;RF24Network_c.c: 606: if(rn.frag_queue.header.type == 131){
 10578  001364  C185  FFE8         	movff	_rn+220,wreg
 10579  001368  0A83               	xorlw	131
 10580  00136A  A4D8               	btfss	status,2,c
 10581  00136C  D002               	goto	l6025
 10582                           
 10583                           ;RF24Network_c.c: 607: return 2;
 10584  00136E  0E02               	movlw	2
 10585  001370  0012               	return	
 10586  001372                     l6025:
 10587                           
 10588                           ;RF24Network_c.c: 608: }
 10589                           ;RF24Network_c.c: 613: if(144 + 10-10 - (rn.next_frame-rn.frame_queue) >= rn.frag_queue.
      +                          message_size){
 10590  001372  EE21  F087         	lfsr	2,_rn+222
 10591  001376  EE01  F07D         	lfsr	0,_rn+212
 10592  00137A  CFEE F01B          	movff	postinc0,??_RF24N_enqueue+2
 10593  00137E  CFED F01C          	movff	postdec0,??_RF24N_enqueue+3
 10594  001382  0EA9               	movlw	low _rn
 10595  001384  6E1D               	movwf	(??_RF24N_enqueue+4)& (0+255),c
 10596  001386  0E00               	movlw	high _rn
 10597  001388  6E1E               	movwf	(??_RF24N_enqueue+5)& (0+255),c
 10598  00138A  0E3A               	movlw	58
 10599  00138C  261D               	addwf	??_RF24N_enqueue+4,f,c
 10600  00138E  0E00               	movlw	0
 10601  001390  221E               	addwfc	??_RF24N_enqueue+5,f,c
 10602  001392  1E1D               	comf	??_RF24N_enqueue+4,f,c
 10603  001394  1E1E               	comf	??_RF24N_enqueue+5,f,c
 10604  001396  4A1D               	infsnz	??_RF24N_enqueue+4,f,c
 10605  001398  2A1E               	incf	??_RF24N_enqueue+5,f,c
 10606  00139A  501B               	movf	??_RF24N_enqueue+2,w,c
 10607  00139C  261D               	addwf	??_RF24N_enqueue+4,f,c
 10608  00139E  501C               	movf	??_RF24N_enqueue+3,w,c
 10609  0013A0  221E               	addwfc	??_RF24N_enqueue+5,f,c
 10610  0013A2  1E1D               	comf	??_RF24N_enqueue+4,f,c
 10611  0013A4  1E1E               	comf	??_RF24N_enqueue+5,f,c
 10612  0013A6  4A1D               	infsnz	??_RF24N_enqueue+4,f,c
 10613  0013A8  2A1E               	incf	??_RF24N_enqueue+5,f,c
 10614  0013AA  0E90               	movlw	144
 10615  0013AC  261D               	addwf	??_RF24N_enqueue+4,f,c
 10616  0013AE  0E00               	movlw	0
 10617  0013B0  221E               	addwfc	??_RF24N_enqueue+5,f,c
 10618  0013B2  50DE               	movf	postinc2,w,c
 10619  0013B4  5C1D               	subwf	??_RF24N_enqueue+4,w,c
 10620  0013B6  501E               	movf	??_RF24N_enqueue+5,w,c
 10621  0013B8  0A80               	xorlw	128
 10622  0013BA  6E1F               	movwf	(??_RF24N_enqueue+6)& (0+255),c
 10623  0013BC  50DE               	movf	postinc2,w,c
 10624  0013BE  0A80               	xorlw	128
 10625  0013C0  581F               	subwfb	(??_RF24N_enqueue+6)& (0+255),w,c
 10626  0013C2  A0D8               	btfss	status,0,c
 10627  0013C4  D04F               	goto	l6041
 10628                           
 10629                           ;RF24Network_c.c: 614: uint8_t padding;
 10630                           ;RF24Network_c.c: 615: memcpy(rn.next_frame,&rn.frag_queue,10);
 10631  0013C6  C17D  F003         	movff	_rn+212,memcpy@d1
 10632  0013CA  C17E  F004         	movff	_rn+213,memcpy@d1+1
 10633  0013CE  0E7F               	movlw	low (_rn+214)
 10634  0013D0  6E05               	movwf	memcpy@s1,c
 10635  0013D2  0E01               	movlw	high (_rn+214)
 10636  0013D4  6E06               	movwf	memcpy@s1+1,c
 10637  0013D6  0E00               	movlw	0
 10638  0013D8  6E08               	movwf	memcpy@n+1,c
 10639  0013DA  0E0A               	movlw	10
 10640  0013DC  6E07               	movwf	memcpy@n,c
 10641  0013DE  EC55  F01A         	call	_memcpy	;wreg free
 10642                           
 10643                           ;RF24Network_c.c: 616: memcpy(rn.next_frame+10,rn.frag_queue.message_buffer,rn.frag_queu
      +                          e.message_size);
 10644  0013E2  EE21  F07D         	lfsr	2,_rn+212
 10645  0013E6  CFDE F019          	movff	postinc2,??_RF24N_enqueue
 10646  0013EA  CFDD F01A          	movff	postdec2,??_RF24N_enqueue+1
 10647  0013EE  0E0A               	movlw	10
 10648  0013F0  2419               	addwf	??_RF24N_enqueue,w,c
 10649  0013F2  6E03               	movwf	memcpy@d1,c
 10650  0013F4  0E00               	movlw	0
 10651  0013F6  201A               	addwfc	??_RF24N_enqueue+1,w,c
 10652  0013F8  6E04               	movwf	memcpy@d1+1,c
 10653  0013FA  C189  F005         	movff	_rn+224,memcpy@s1
 10654  0013FE  C18A  F006         	movff	_rn+225,memcpy@s1+1
 10655  001402  C187  F007         	movff	_rn+222,memcpy@n
 10656  001406  C188  F008         	movff	_rn+223,memcpy@n+1
 10657  00140A  EC55  F01A         	call	_memcpy	;wreg free
 10658                           
 10659                           ;RF24Network_c.c: 617: rn.next_frame += (10+rn.frag_queue.message_size);
 10660  00140E  EE21  F087         	lfsr	2,_rn+222
 10661  001412  CFDE F019          	movff	postinc2,??_RF24N_enqueue
 10662  001416  CFDD F01A          	movff	postdec2,??_RF24N_enqueue+1
 10663  00141A  0E0A               	movlw	10
 10664  00141C  2619               	addwf	??_RF24N_enqueue,f,c
 10665  00141E  0E00               	movlw	0
 10666  001420  221A               	addwfc	??_RF24N_enqueue+1,f,c
 10667  001422  EE21  F07D         	lfsr	2,_rn+212
 10668  001426  5019               	movf	??_RF24N_enqueue,w,c
 10669  001428  26DE               	addwf	postinc2,f,c
 10670  00142A  501A               	movf	??_RF24N_enqueue+1,w,c
 10671  00142C  22DD               	addwfc	postdec2,f,c
 10672                           
 10673                           ;RF24Network_c.c: 619: if((padding = (rn.frag_queue.message_size+10)%4)){
 10674                           ; multi bank
 10675  00142E  0101               	movlb	(_rn+222) shr (0+8)
 10676  001430  5187               	movf	(_rn+222)& (0+255),w,b
 10677  001432  0F0A               	addlw	10
 10678  001434  0B03               	andlw	3
 10679  001436  6E21               	movwf	RF24N_enqueue@padding,c
 10680  001438  5021               	movf	RF24N_enqueue@padding,w,c
 10681  00143A  B4D8               	btfsc	status,2,c
 10682  00143C  D011               	goto	l6035
 10683                           
 10684                           ;RF24Network_c.c: 620: rn.next_frame += 4 - padding;
 10685  00143E  5021               	movf	RF24N_enqueue@padding,w,c
 10686  001440  6E19               	movwf	??_RF24N_enqueue& (0+255),c
 10687  001442  6A1A               	clrf	(??_RF24N_enqueue+1)& (0+255),c
 10688  001444  1E19               	comf	??_RF24N_enqueue,f,c
 10689  001446  1E1A               	comf	??_RF24N_enqueue+1,f,c
 10690  001448  4A19               	infsnz	??_RF24N_enqueue,f,c
 10691  00144A  2A1A               	incf	??_RF24N_enqueue+1,f,c
 10692  00144C  0E04               	movlw	4
 10693  00144E  2619               	addwf	??_RF24N_enqueue,f,c
 10694  001450  0E00               	movlw	0
 10695  001452  221A               	addwfc	??_RF24N_enqueue+1,f,c
 10696  001454  EE21  F07D         	lfsr	2,_rn+212
 10697  001458  5019               	movf	??_RF24N_enqueue,w,c
 10698  00145A  26DE               	addwf	postinc2,f,c
 10699  00145C  501A               	movf	??_RF24N_enqueue+1,w,c
 10700  00145E  22DD               	addwfc	postdec2,f,c
 10701  001460                     l6035:
 10702                           
 10703                           ;RF24Network_c.c: 621: }
 10704                           ;RF24Network_c.c: 623: ;
 10705                           ;RF24Network_c.c: 624: return 1;
 10706  001460  0E01               	movlw	1
 10707  001462  0012               	return	
 10708  001464                     l6041:
 10709                           
 10710                           ;RF24Network_c.c: 626: RF24_stopListening();
 10711  001464  EC5F  F018         	call	_RF24_stopListening	;wreg free
 10712                           
 10713                           ;RF24Network_c.c: 627: rn.networkFlags |= 1;
 10714  001468  C0D3  FFE8         	movff	_rn+42,wreg
 10715  00146C  0901               	iorlw	1
 10716  00146E  CFE8 F0D3          	movff	wreg,_rn+42
 10717                           
 10718                           ;RF24Network_c.c: 628: }
 10719                           ;RF24Network_c.c: 629: ;
 10720                           ;RF24Network_c.c: 630: return 0;
 10721  001472  0E00               	movlw	0
 10722  001474  0012               	return	
 10723  001476                     l6049:
 10724                           
 10725                           ;RF24Network_c.c: 640: if(header->type == 131){
 10726  001476  EE20 F006          	lfsr	2,6
 10727  00147A  5017               	movf	RF24N_enqueue@header,w,c
 10728  00147C  26D9               	addwf	fsr2l,f,c
 10729  00147E  5018               	movf	RF24N_enqueue@header+1,w,c
 10730  001480  22DA               	addwfc	fsr2h,f,c
 10731  001482  0E83               	movlw	131
 10732  001484  18DE               	xorwf	postinc2,w,c
 10733  001486  A4D8               	btfss	status,2,c
 10734  001488  D01A               	goto	l6061
 10735                           
 10736                           ;RF24Network_c.c: 641: memcpy(&rn.frag_queue,rn.frame_buffer,8);
 10737  00148A  0E7F               	movlw	low (_rn+214)
 10738  00148C  6E03               	movwf	memcpy@d1,c
 10739  00148E  0E01               	movlw	high (_rn+214)
 10740  001490  6E04               	movwf	memcpy@d1+1,c
 10741  001492  0EB0               	movlw	low (_rn+7)
 10742  001494  6E05               	movwf	memcpy@s1,c
 10743  001496  0E00               	movlw	high (_rn+7)
 10744  001498  6E06               	movwf	memcpy@s1+1,c
 10745  00149A  0E00               	movlw	0
 10746  00149C  6E08               	movwf	memcpy@n+1,c
 10747  00149E  0E08               	movlw	8
 10748  0014A0  6E07               	movwf	memcpy@n,c
 10749  0014A2  EC55  F01A         	call	_memcpy	;wreg free
 10750                           
 10751                           ;RF24Network_c.c: 642: rn.frag_queue.message_buffer = rn.frame_buffer+sizeof(RF24Network
      +                          Header);
 10752  0014A6  0EB8               	movlw	low (_rn+15)
 10753  0014A8  CFE8 F189          	movff	wreg,_rn+224
 10754  0014AC  0E00               	movlw	high (_rn+15)
 10755  0014AE  CFE8 F18A          	movff	wreg,_rn+225
 10756                           
 10757                           ;RF24Network_c.c: 643: rn.frag_queue.message_size = message_size;
 10758  0014B2  C025  F187         	movff	RF24N_enqueue@message_size,_rn+222
 10759  0014B6  C026  F188         	movff	RF24N_enqueue@message_size+1,_rn+223
 10760                           
 10761                           ;RF24Network_c.c: 644: return 2;
 10762  0014BA  0E02               	movlw	2
 10763  0014BC  0012               	return	
 10764  0014BE                     l6061:
 10765                           
 10766                           ;RF24Network_c.c: 645: }
 10767                           ;RF24Network_c.c: 651: if(message_size + (rn.next_frame-rn.frame_queue) <= 144 + 10){
 10768  0014BE  EE21  F07D         	lfsr	2,_rn+212
 10769  0014C2  CFDE F019          	movff	postinc2,??_RF24N_enqueue
 10770  0014C6  CFDD F01A          	movff	postdec2,??_RF24N_enqueue+1
 10771  0014CA  0EA9               	movlw	low _rn
 10772  0014CC  6E1B               	movwf	(??_RF24N_enqueue+2)& (0+255),c
 10773  0014CE  0E00               	movlw	high _rn
 10774  0014D0  6E1C               	movwf	(??_RF24N_enqueue+3)& (0+255),c
 10775  0014D2  0E3A               	movlw	58
 10776  0014D4  261B               	addwf	??_RF24N_enqueue+2,f,c
 10777  0014D6  0E00               	movlw	0
 10778  0014D8  221C               	addwfc	??_RF24N_enqueue+3,f,c
 10779  0014DA  1E1B               	comf	??_RF24N_enqueue+2,f,c
 10780  0014DC  1E1C               	comf	??_RF24N_enqueue+3,f,c
 10781  0014DE  4A1B               	infsnz	??_RF24N_enqueue+2,f,c
 10782  0014E0  2A1C               	incf	??_RF24N_enqueue+3,f,c
 10783  0014E2  5019               	movf	??_RF24N_enqueue,w,c
 10784  0014E4  261B               	addwf	??_RF24N_enqueue+2,f,c
 10785  0014E6  501A               	movf	??_RF24N_enqueue+1,w,c
 10786  0014E8  221C               	addwfc	??_RF24N_enqueue+3,f,c
 10787  0014EA  5025               	movf	RF24N_enqueue@message_size,w,c
 10788  0014EC  261B               	addwf	??_RF24N_enqueue+2,f,c
 10789  0014EE  5026               	movf	RF24N_enqueue@message_size+1,w,c
 10790  0014F0  221C               	addwfc	??_RF24N_enqueue+3,f,c
 10791  0014F2  BE1C               	btfsc	??_RF24N_enqueue+3,7,c
 10792  0014F4  D006               	goto	l6063
 10793  0014F6  501C               	movf	??_RF24N_enqueue+3,w,c
 10794  0014F8  E164               	bnz	l6073
 10795  0014FA  0E9B               	movlw	155
 10796  0014FC  5C1B               	subwf	??_RF24N_enqueue+2,w,c
 10797  0014FE  B0D8               	btfsc	status,0,c
 10798  001500  D060               	goto	l6073
 10799  001502                     l6063:
 10800                           
 10801                           ;RF24Network_c.c: 652: uint8_t padding;
 10802                           ;RF24Network_c.c: 653: memcpy(rn.next_frame,rn.frame_buffer,8);
 10803  001502  C17D  F003         	movff	_rn+212,memcpy@d1
 10804  001506  C17E  F004         	movff	_rn+213,memcpy@d1+1
 10805  00150A  0EB0               	movlw	low (_rn+7)
 10806  00150C  6E05               	movwf	memcpy@s1,c
 10807  00150E  0E00               	movlw	high (_rn+7)
 10808  001510  6E06               	movwf	memcpy@s1+1,c
 10809  001512  0E00               	movlw	0
 10810  001514  6E08               	movwf	memcpy@n+1,c
 10811  001516  0E08               	movlw	8
 10812  001518  6E07               	movwf	memcpy@n,c
 10813  00151A  EC55  F01A         	call	_memcpy	;wreg free
 10814                           
 10815                           ;RF24Network_c.c: 654: memcpy(rn.next_frame+8,&message_size,2);
 10816  00151E  EE21  F07D         	lfsr	2,_rn+212
 10817  001522  CFDE F019          	movff	postinc2,??_RF24N_enqueue
 10818  001526  CFDD F01A          	movff	postdec2,??_RF24N_enqueue+1
 10819  00152A  0E08               	movlw	8
 10820  00152C  2419               	addwf	??_RF24N_enqueue,w,c
 10821  00152E  6E03               	movwf	memcpy@d1,c
 10822  001530  0E00               	movlw	0
 10823  001532  201A               	addwfc	??_RF24N_enqueue+1,w,c
 10824  001534  6E04               	movwf	memcpy@d1+1,c
 10825  001536  0E25               	movlw	low RF24N_enqueue@message_size
 10826  001538  6E05               	movwf	memcpy@s1,c
 10827  00153A  0E00               	movlw	high RF24N_enqueue@message_size
 10828  00153C  6E06               	movwf	memcpy@s1+1,c
 10829  00153E  0E00               	movlw	0
 10830  001540  6E08               	movwf	memcpy@n+1,c
 10831  001542  0E02               	movlw	2
 10832  001544  6E07               	movwf	memcpy@n,c
 10833  001546  EC55  F01A         	call	_memcpy	;wreg free
 10834                           
 10835                           ;RF24Network_c.c: 655: memcpy(rn.next_frame+10,rn.frame_buffer+8,message_size);
 10836  00154A  EE21  F07D         	lfsr	2,_rn+212
 10837  00154E  CFDE F019          	movff	postinc2,??_RF24N_enqueue
 10838  001552  CFDD F01A          	movff	postdec2,??_RF24N_enqueue+1
 10839  001556  0E0A               	movlw	10
 10840  001558  2419               	addwf	??_RF24N_enqueue,w,c
 10841  00155A  6E03               	movwf	memcpy@d1,c
 10842  00155C  0E00               	movlw	0
 10843  00155E  201A               	addwfc	??_RF24N_enqueue+1,w,c
 10844  001560  6E04               	movwf	memcpy@d1+1,c
 10845  001562  0EB8               	movlw	low (_rn+15)
 10846  001564  6E05               	movwf	memcpy@s1,c
 10847  001566  0E00               	movlw	high (_rn+15)
 10848  001568  6E06               	movwf	memcpy@s1+1,c
 10849  00156A  C025  F007         	movff	RF24N_enqueue@message_size,memcpy@n
 10850  00156E  C026  F008         	movff	RF24N_enqueue@message_size+1,memcpy@n+1
 10851  001572  EC55  F01A         	call	_memcpy	;wreg free
 10852                           
 10853                           ;RF24Network_c.c: 659: rn.next_frame += (message_size + 10);
 10854  001576  0E0A               	movlw	10
 10855  001578  2425               	addwf	RF24N_enqueue@message_size,w,c
 10856  00157A  6E19               	movwf	??_RF24N_enqueue& (0+255),c
 10857  00157C  0E00               	movlw	0
 10858  00157E  2026               	addwfc	RF24N_enqueue@message_size+1,w,c
 10859  001580  6E1A               	movwf	(??_RF24N_enqueue+1)& (0+255),c
 10860  001582  EE21  F07D         	lfsr	2,_rn+212
 10861  001586  5019               	movf	??_RF24N_enqueue,w,c
 10862  001588  26DE               	addwf	postinc2,f,c
 10863  00158A  501A               	movf	??_RF24N_enqueue+1,w,c
 10864  00158C  22DD               	addwfc	postdec2,f,c
 10865                           
 10866                           ;RF24Network_c.c: 661: if((padding = (message_size+10)%4)){
 10867  00158E  5025               	movf	RF24N_enqueue@message_size,w,c
 10868  001590  0F0A               	addlw	10
 10869  001592  0B03               	andlw	3
 10870  001594  6E22               	movwf	RF24N_enqueue@padding_2288,c
 10871  001596  5022               	movf	RF24N_enqueue@padding_2288,w,c
 10872  001598  B4D8               	btfsc	status,2,c
 10873  00159A  D011               	goto	l6071
 10874                           
 10875                           ;RF24Network_c.c: 662: rn.next_frame += 4 - padding;
 10876  00159C  5022               	movf	RF24N_enqueue@padding_2288,w,c
 10877  00159E  6E19               	movwf	??_RF24N_enqueue& (0+255),c
 10878  0015A0  6A1A               	clrf	(??_RF24N_enqueue+1)& (0+255),c
 10879  0015A2  1E19               	comf	??_RF24N_enqueue,f,c
 10880  0015A4  1E1A               	comf	??_RF24N_enqueue+1,f,c
 10881  0015A6  4A19               	infsnz	??_RF24N_enqueue,f,c
 10882  0015A8  2A1A               	incf	??_RF24N_enqueue+1,f,c
 10883  0015AA  0E04               	movlw	4
 10884  0015AC  2619               	addwf	??_RF24N_enqueue,f,c
 10885  0015AE  0E00               	movlw	0
 10886  0015B0  221A               	addwfc	??_RF24N_enqueue+1,f,c
 10887  0015B2  EE21  F07D         	lfsr	2,_rn+212
 10888  0015B6  5019               	movf	??_RF24N_enqueue,w,c
 10889  0015B8  26DE               	addwf	postinc2,f,c
 10890  0015BA  501A               	movf	??_RF24N_enqueue+1,w,c
 10891  0015BC  22DD               	addwfc	postdec2,f,c
 10892  0015BE                     l6071:
 10893                           
 10894                           ;RF24Network_c.c: 663: }
 10895                           ;RF24Network_c.c: 667: result = 1;
 10896  0015BE  0E01               	movlw	1
 10897  0015C0  D001               	goto	L8
 10898  0015C2                     l6073:
 10899                           
 10900                           ;RF24Network_c.c: 669: result = 0;
 10901  0015C2  0E00               	movlw	0
 10902  0015C4                     L8:
 10903  0015C4  6E24               	movwf	RF24N_enqueue@result,c
 10904                           
 10905                           ;RF24Network_c.c: 671: }
 10906                           ;RF24Network_c.c: 672: return result;
 10907                           
 10908                           ;RF24Network_c.c: 670: ;
 10909  0015C6  5024               	movf	RF24N_enqueue@result,w,c
 10910  0015C8  0012               	return	
 10911  0015CA                     __end_of_RF24N_enqueue:
 10912                           	opt stack 0
 10913                           tblptru	equ	0xFF8
 10914                           tblptrh	equ	0xFF7
 10915                           tblptrl	equ	0xFF6
 10916                           tablat	equ	0xFF5
 10917                           prodh	equ	0xFF4
 10918                           prodl	equ	0xFF3
 10919                           intcon	equ	0xFF2
 10920                           indf0	equ	0xFEF
 10921                           postinc0	equ	0xFEE
 10922                           postdec0	equ	0xFED
 10923                           plusw0	equ	0xFEB
 10924                           fsr0h	equ	0xFEA
 10925                           fsr0l	equ	0xFE9
 10926                           wreg	equ	0xFE8
 10927                           plusw1	equ	0xFE3
 10928                           fsr1h	equ	0xFE2
 10929                           fsr1l	equ	0xFE1
 10930                           indf2	equ	0xFDF
 10931                           postinc2	equ	0xFDE
 10932                           postdec2	equ	0xFDD
 10933                           plusw2	equ	0xFDB
 10934                           fsr2h	equ	0xFDA
 10935                           fsr2l	equ	0xFD9
 10936                           status	equ	0xFD8
 10937                           
 10938 ;; *************** function _memcpy *****************
 10939 ;; Defined at:
 10940 ;;		line 11 in file "/opt/microchip/xc8/v1.36/sources/common/memcpy.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;  d1              2    2[COMRAM] PTR void 
 10943 ;;		 -> RF24N_read@bufsize(2), RF24N_peek@msg_size(2), rn.frame_buffer(32), rn.frag_queue_message_buffer(144), 
 10944 ;;		 -> rn.frame_queue(154), rn(370), rf(22), loop@payload(8), 
 10945 ;;		 -> loop@header(8), 
 10946 ;;  s1              2    4[COMRAM] PTR const void 
 10947 ;;		 -> rn.header(8), rn.frame_queue.header(8), RF24N_enqueue@message_size(2), rn.frame_buffer(32), 
 10948 ;;		 -> rn.frag_queue_message_buffer(144), rn.frag_queue(13), rn.frame_queue(154), rn(370), 
 10949 ;;		 -> RF24_openReadingPipe_d@address(5), 
 10950 ;;  n               2    6[COMRAM] unsigned int 
 10951 ;; Auto vars:     Size  Location     Type
 10952 ;;  s               2   10[COMRAM] PTR const unsigned char 
 10953 ;;		 -> rn.header(8), rn.frame_queue.header(8), RF24N_enqueue@message_size(2), rn.frame_buffer(32), 
 10954 ;;		 -> rn.frag_queue_message_buffer(144), rn.frag_queue(13), rn.frame_queue(154), rn(370), 
 10955 ;;		 -> RF24_openReadingPipe_d@address(5), 
 10956 ;;  d               2    8[COMRAM] PTR unsigned char 
 10957 ;;		 -> RF24N_read@bufsize(2), RF24N_peek@msg_size(2), rn.frame_buffer(32), rn.frag_queue_message_buffer(144), 
 10958 ;;		 -> rn.frame_queue(154), rn(370), rf(22), loop@payload(8), 
 10959 ;;		 -> loop@header(8), 
 10960 ;; Return value:  Size  Location     Type
 10961 ;;                  2    2[COMRAM] PTR void 
 10962 ;; Registers used:
 10963 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 10964 ;; Tracked objects:
 10965 ;;		On entry : 0/0
 10966 ;;		On exit  : 0/0
 10967 ;;		Unchanged: 0/0
 10968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10969 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10970 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10972 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10973 ;;Total ram usage:       10 bytes
 10974 ;; Hardware stack levels used:    1
 10975 ;; Hardware stack levels required when called:    1
 10976 ;; This function calls:
 10977 ;;		Nothing
 10978 ;; This function is called by:
 10979 ;;		_RF24_openReadingPipe_d
 10980 ;;		_RF24N_enqueue
 10981 ;;		_RF24N_read
 10982 ;;		_RF24_openReadingPipe
 10983 ;;		_RF24N_peek
 10984 ;;		_RF24N__write
 10985 ;; This function uses a non-reentrant model
 10986 ;;
 10987                           
 10988                           	psect	text66
 10989  0034AA                     __ptext66:
 10990                           	opt stack 0
 10991  0034AA                     _memcpy:
 10992                           	opt stack 26
 10993                           
 10994                           ;incstack = 0
 10995  0034AA  C005  F00B         	movff	memcpy@s1,memcpy@s
 10996  0034AE  C006  F00C         	movff	memcpy@s1+1,memcpy@s+1
 10997  0034B2  C003  F009         	movff	memcpy@d1,memcpy@d
 10998  0034B6  C004  F00A         	movff	memcpy@d1+1,memcpy@d+1
 10999  0034BA  D00E               	goto	l5661
 11000  0034BC                     l5655:
 11001  0034BC  C00B  FFD9         	movff	memcpy@s,fsr2l
 11002  0034C0  C00C  FFDA         	movff	memcpy@s+1,fsr2h
 11003  0034C4  C009  FFE9         	movff	memcpy@d,fsr0l
 11004  0034C8  C00A  FFEA         	movff	memcpy@d+1,fsr0h
 11005  0034CC  CFDF FFEF          	movff	indf2,indf0
 11006  0034D0  4A0B               	infsnz	memcpy@s,f,c
 11007  0034D2  2A0C               	incf	memcpy@s+1,f,c
 11008  0034D4  4A09               	infsnz	memcpy@d,f,c
 11009  0034D6  2A0A               	incf	memcpy@d+1,f,c
 11010  0034D8                     l5661:
 11011  0034D8  0607               	decf	memcpy@n,f,c
 11012  0034DA  A0D8               	btfss	status,0,c
 11013  0034DC  0608               	decf	memcpy@n+1,f,c
 11014  0034DE  2807               	incf	memcpy@n,w,c
 11015  0034E0  E1ED               	bnz	l5655
 11016  0034E2  2808               	incf	memcpy@n+1,w,c
 11017  0034E4  B4D8               	btfsc	status,2,c
 11018  0034E6  0012               	return	
 11019  0034E8  D7E9               	goto	l5655
 11020  0034EA                     __end_of_memcpy:
 11021                           	opt stack 0
 11022                           tblptru	equ	0xFF8
 11023                           tblptrh	equ	0xFF7
 11024                           tblptrl	equ	0xFF6
 11025                           tablat	equ	0xFF5
 11026                           prodh	equ	0xFF4
 11027                           prodl	equ	0xFF3
 11028                           intcon	equ	0xFF2
 11029                           indf0	equ	0xFEF
 11030                           postinc0	equ	0xFEE
 11031                           postdec0	equ	0xFED
 11032                           plusw0	equ	0xFEB
 11033                           fsr0h	equ	0xFEA
 11034                           fsr0l	equ	0xFE9
 11035                           wreg	equ	0xFE8
 11036                           plusw1	equ	0xFE3
 11037                           fsr1h	equ	0xFE2
 11038                           fsr1l	equ	0xFE1
 11039                           indf2	equ	0xFDF
 11040                           postinc2	equ	0xFDE
 11041                           postdec2	equ	0xFDD
 11042                           plusw2	equ	0xFDB
 11043                           fsr2h	equ	0xFDA
 11044                           fsr2l	equ	0xFD9
 11045                           status	equ	0xFD8
 11046                           
 11047 ;; *************** function ___lwdiv *****************
 11048 ;; Defined at:
 11049 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwdiv.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;  dividend        2    2[COMRAM] unsigned int 
 11052 ;;  divisor         2    4[COMRAM] unsigned int 
 11053 ;; Auto vars:     Size  Location     Type
 11054 ;;  quotient        2    7[COMRAM] unsigned int 
 11055 ;;  counter         1    6[COMRAM] unsigned char 
 11056 ;; Return value:  Size  Location     Type
 11057 ;;                  2    2[COMRAM] unsigned int 
 11058 ;; Registers used:
 11059 ;;		wreg, status,2, status,0
 11060 ;; Tracked objects:
 11061 ;;		On entry : 0/0
 11062 ;;		On exit  : 0/0
 11063 ;;		Unchanged: 0/0
 11064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11066 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11068 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11069 ;;Total ram usage:        7 bytes
 11070 ;; Hardware stack levels used:    1
 11071 ;; Hardware stack levels required when called:    1
 11072 ;; This function calls:
 11073 ;;		Nothing
 11074 ;; This function is called by:
 11075 ;;		_RF24N_enqueue
 11076 ;;		_RF24N_write_
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080                           	psect	text67
 11081  003228                     __ptext67:
 11082                           	opt stack 0
 11083  003228                     ___lwdiv:
 11084                           	opt stack 26
 11085                           
 11086                           ;incstack = 0
 11087  003228  0E00               	movlw	0
 11088  00322A  6E09               	movwf	___lwdiv@quotient+1,c
 11089  00322C  0E00               	movlw	0
 11090  00322E  6E08               	movwf	___lwdiv@quotient,c
 11091  003230  5005               	movf	___lwdiv@divisor,w,c
 11092  003232  1006               	iorwf	___lwdiv@divisor+1,w,c
 11093  003234  B4D8               	btfsc	status,2,c
 11094  003236  D01C               	goto	l1426
 11095  003238  0E01               	movlw	1
 11096  00323A  6E07               	movwf	___lwdiv@counter,c
 11097  00323C  D004               	goto	l5745
 11098  00323E                     l5743:
 11099  00323E  90D8               	bcf	status,0,c
 11100  003240  3605               	rlcf	___lwdiv@divisor,f,c
 11101  003242  3606               	rlcf	___lwdiv@divisor+1,f,c
 11102  003244  2A07               	incf	___lwdiv@counter,f,c
 11103  003246                     l5745:
 11104  003246  AE06               	btfss	___lwdiv@divisor+1,7,c
 11105  003248  D7FA               	goto	l5743
 11106  00324A                     l5747:
 11107  00324A  90D8               	bcf	status,0,c
 11108  00324C  3608               	rlcf	___lwdiv@quotient,f,c
 11109  00324E  3609               	rlcf	___lwdiv@quotient+1,f,c
 11110  003250  5005               	movf	___lwdiv@divisor,w,c
 11111  003252  5C03               	subwf	___lwdiv@dividend,w,c
 11112  003254  5006               	movf	___lwdiv@divisor+1,w,c
 11113  003256  5804               	subwfb	___lwdiv@dividend+1,w,c
 11114  003258  A0D8               	btfss	status,0,c
 11115  00325A  D005               	goto	l5755
 11116  00325C  5005               	movf	___lwdiv@divisor,w,c
 11117  00325E  5E03               	subwf	___lwdiv@dividend,f,c
 11118  003260  5006               	movf	___lwdiv@divisor+1,w,c
 11119  003262  5A04               	subwfb	___lwdiv@dividend+1,f,c
 11120  003264  8008               	bsf	___lwdiv@quotient,0,c
 11121  003266                     l5755:
 11122  003266  90D8               	bcf	status,0,c
 11123  003268  3206               	rrcf	___lwdiv@divisor+1,f,c
 11124  00326A  3205               	rrcf	___lwdiv@divisor,f,c
 11125  00326C  2E07               	decfsz	___lwdiv@counter,f,c
 11126  00326E  D7ED               	goto	l5747
 11127  003270                     l1426:
 11128  003270  C008  F003         	movff	___lwdiv@quotient,?___lwdiv
 11129  003274  C009  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11130  003278  0012               	return		;funcret
 11131  00327A                     __end_of___lwdiv:
 11132                           	opt stack 0
 11133                           tblptru	equ	0xFF8
 11134                           tblptrh	equ	0xFF7
 11135                           tblptrl	equ	0xFF6
 11136                           tablat	equ	0xFF5
 11137                           prodh	equ	0xFF4
 11138                           prodl	equ	0xFF3
 11139                           intcon	equ	0xFF2
 11140                           indf0	equ	0xFEF
 11141                           postinc0	equ	0xFEE
 11142                           postdec0	equ	0xFED
 11143                           plusw0	equ	0xFEB
 11144                           fsr0h	equ	0xFEA
 11145                           fsr0l	equ	0xFE9
 11146                           wreg	equ	0xFE8
 11147                           plusw1	equ	0xFE3
 11148                           fsr1h	equ	0xFE2
 11149                           fsr1l	equ	0xFE1
 11150                           indf2	equ	0xFDF
 11151                           postinc2	equ	0xFDE
 11152                           postdec2	equ	0xFDD
 11153                           plusw2	equ	0xFDB
 11154                           fsr2h	equ	0xFDA
 11155                           fsr2l	equ	0xFD9
 11156                           status	equ	0xFD8
 11157                           
 11158 ;; *************** function _RF24N_available *****************
 11159 ;; Defined at:
 11160 ;;		line 679 in file "../../RF24Network_c.c"
 11161 ;; Parameters:    Size  Location     Type
 11162 ;;		None
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;		None
 11165 ;; Return value:  Size  Location     Type
 11166 ;;                  1    wreg      unsigned char 
 11167 ;; Registers used:
 11168 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11169 ;; Tracked objects:
 11170 ;;		On entry : 0/0
 11171 ;;		On exit  : 0/0
 11172 ;;		Unchanged: 0/0
 11173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11177 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11178 ;;Total ram usage:        2 bytes
 11179 ;; Hardware stack levels used:    1
 11180 ;; Hardware stack levels required when called:    1
 11181 ;; This function calls:
 11182 ;;		Nothing
 11183 ;; This function is called by:
 11184 ;;		_loop
 11185 ;;		_RF24N_update
 11186 ;;		_RF24N_read
 11187 ;;		_RF24N_peek
 11188 ;; This function uses a non-reentrant model
 11189 ;;
 11190                           
 11191                           	psect	text68
 11192  0037CC                     __ptext68:
 11193                           	opt stack 0
 11194  0037CC                     _RF24N_available:
 11195                           	opt stack 27
 11196                           
 11197                           ;RF24Network_c.c: 685: return (rn.next_frame > rn.frame_queue);
 11198                           
 11199                           ;incstack = 0
 11200  0037CC  EE21  F07D         	lfsr	2,_rn+212
 11201  0037D0  CFDE F003          	movff	postinc2,??_RF24N_available
 11202  0037D4  CFDD F004          	movff	postdec2,??_RF24N_available+1
 11203  0037D8  5004               	movf	??_RF24N_available+1,w,c
 11204  0037DA  0800               	sublw	high (_rn+58)
 11205  0037DC  E102               	bnz	u7505
 11206  0037DE  5003               	movf	??_RF24N_available,w,c
 11207  0037E0  08E3               	sublw	low (_rn+58)
 11208  0037E2                     u7505:
 11209  0037E2  B0D8               	btfsc	status,0,c
 11210  0037E4  D002               	goto	u7500
 11211  0037E6  0E01               	movlw	1
 11212  0037E8  0012               	return	
 11213  0037EA                     u7500:
 11214  0037EA  0E00               	movlw	0
 11215  0037EC  0012               	return	
 11216  0037EE                     __end_of_RF24N_available:
 11217                           	opt stack 0
 11218                           tblptru	equ	0xFF8
 11219                           tblptrh	equ	0xFF7
 11220                           tblptrl	equ	0xFF6
 11221                           tablat	equ	0xFF5
 11222                           prodh	equ	0xFF4
 11223                           prodl	equ	0xFF3
 11224                           intcon	equ	0xFF2
 11225                           indf0	equ	0xFEF
 11226                           postinc0	equ	0xFEE
 11227                           postdec0	equ	0xFED
 11228                           plusw0	equ	0xFEB
 11229                           fsr0h	equ	0xFEA
 11230                           fsr0l	equ	0xFE9
 11231                           wreg	equ	0xFE8
 11232                           plusw1	equ	0xFE3
 11233                           fsr1h	equ	0xFE2
 11234                           fsr1l	equ	0xFE1
 11235                           indf2	equ	0xFDF
 11236                           postinc2	equ	0xFDE
 11237                           postdec2	equ	0xFDD
 11238                           plusw2	equ	0xFDB
 11239                           fsr2h	equ	0xFDA
 11240                           fsr2l	equ	0xFD9
 11241                           status	equ	0xFD8
 11242                           
 11243 ;; *************** function _RF24N_logicalToPhysicalAddress *****************
 11244 ;; Defined at:
 11245 ;;		line 1093 in file "../../RF24Network_c.c"
 11246 ;; Parameters:    Size  Location     Type
 11247 ;;  conversionIn    2   17[COMRAM] PTR struct .
 11248 ;;		 -> RF24N_write@conversion(4), 
 11249 ;; Auto vars:     Size  Location     Type
 11250 ;;  to_node         2   27[COMRAM] PTR unsigned int 
 11251 ;;		 -> conversion.send_node(2), RF24N_write@conversion(4), 
 11252 ;;  directTo        2   24[COMRAM] PTR unsigned char 
 11253 ;;		 -> conversion.send_pipe(1), RF24N_write@conversion(4), 
 11254 ;;  pre_conversi    2   22[COMRAM] unsigned int 
 11255 ;;  multicast       2   20[COMRAM] PTR unsigned char 
 11256 ;;		 -> conversion.multicast(1), RF24N_write@conversion(4), 
 11257 ;;  pre_conversi    1   26[COMRAM] unsigned char 
 11258 ;; Return value:  Size  Location     Type
 11259 ;;                  1    wreg      unsigned char 
 11260 ;; Registers used:
 11261 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 11262 ;; Tracked objects:
 11263 ;;		On entry : 0/0
 11264 ;;		On exit  : 0/0
 11265 ;;		Unchanged: 0/0
 11266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11268 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11269 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11270 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11271 ;;Total ram usage:       12 bytes
 11272 ;; Hardware stack levels used:    1
 11273 ;; Hardware stack levels required when called:    3
 11274 ;; This function calls:
 11275 ;;		_RF24N_direct_child_route_to
 11276 ;;		_RF24N_is_descendant
 11277 ;;		_RF24N_is_direct_child
 11278 ;; This function is called by:
 11279 ;;		_RF24N_write
 11280 ;; This function uses a non-reentrant model
 11281 ;;
 11282                           
 11283                           	psect	text69
 11284  0026BE                     __ptext69:
 11285                           	opt stack 0
 11286  0026BE                     _RF24N_logicalToPhysicalAddress:
 11287                           	opt stack 24
 11288                           
 11289                           ;RF24Network_c.c: 1098: uint16_t *to_node = &conversionInfo->send_node;
 11290                           
 11291                           ;incstack = 0
 11292  0026BE  C012  F01C         	movff	RF24N_logicalToPhysicalAddress@conversionInfo,RF24N_logicalToPhysicalAddress@to_n
      +                          ode
 11293  0026C2  C013  F01D         	movff	RF24N_logicalToPhysicalAddress@conversionInfo+1,RF24N_logicalToPhysicalAddress@to
      +                          _node+1
 11294                           
 11295                           ;RF24Network_c.c: 1099: uint8_t *directTo = &conversionInfo->send_pipe;
 11296  0026C6  0E02               	movlw	2
 11297  0026C8  2412               	addwf	RF24N_logicalToPhysicalAddress@conversionInfo,w,c
 11298  0026CA  6E19               	movwf	RF24N_logicalToPhysicalAddress@directTo,c
 11299  0026CC  0E00               	movlw	0
 11300  0026CE  2013               	addwfc	RF24N_logicalToPhysicalAddress@conversionInfo+1,w,c
 11301  0026D0  6E1A               	movwf	RF24N_logicalToPhysicalAddress@directTo+1,c
 11302                           
 11303                           ;RF24Network_c.c: 1100: uint8_t *multicast = &conversionInfo->multicast;
 11304  0026D2  0E03               	movlw	3
 11305  0026D4  2412               	addwf	RF24N_logicalToPhysicalAddress@conversionInfo,w,c
 11306  0026D6  6E15               	movwf	RF24N_logicalToPhysicalAddress@multicast,c
 11307  0026D8  0E00               	movlw	0
 11308  0026DA  2013               	addwfc	RF24N_logicalToPhysicalAddress@conversionInfo+1,w,c
 11309  0026DC  6E16               	movwf	RF24N_logicalToPhysicalAddress@multicast+1,c
 11310                           
 11311                           ;RF24Network_c.c: 1103: uint16_t pre_conversion_send_node = rn.parent_node;
 11312  0026DE  C0DE  F017         	movff	_rn+53,RF24N_logicalToPhysicalAddress@pre_conversion_send_node
 11313  0026E2  C0DF  F018         	movff	_rn+54,RF24N_logicalToPhysicalAddress@pre_conversion_send_node+1
 11314                           
 11315                           ;RF24Network_c.c: 1106: uint8_t pre_conversion_send_pipe = rn.parent_pipe;
 11316  0026E6  C0E0  F01B         	movff	_rn+55,RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe
 11317                           
 11318                           ;RF24Network_c.c: 1108: if(*directTo > 1 ){
 11319  0026EA  C019  FFD9         	movff	RF24N_logicalToPhysicalAddress@directTo,fsr2l
 11320  0026EE  C01A  FFDA         	movff	RF24N_logicalToPhysicalAddress@directTo+1,fsr2h
 11321  0026F2  0E01               	movlw	1
 11322  0026F4  64DF               	cpfsgt	indf2,c
 11323  0026F6  D010               	goto	l5691
 11324                           
 11325                           ;RF24Network_c.c: 1109: pre_conversion_send_node = *to_node;
 11326  0026F8  C01C  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
 11327  0026FC  C01D  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
 11328  002700  CFDE F017          	movff	postinc2,RF24N_logicalToPhysicalAddress@pre_conversion_send_node
 11329  002704  CFDD F018          	movff	postdec2,RF24N_logicalToPhysicalAddress@pre_conversion_send_node+1
 11330                           
 11331                           ;RF24Network_c.c: 1110: *multicast = 1;
 11332  002708  C015  FFD9         	movff	RF24N_logicalToPhysicalAddress@multicast,fsr2l
 11333  00270C  C016  FFDA         	movff	RF24N_logicalToPhysicalAddress@multicast+1,fsr2h
 11334  002710  0E01               	movlw	1
 11335  002712  6EDF               	movwf	indf2,c
 11336                           
 11337                           ;RF24Network_c.c: 1112: pre_conversion_send_pipe=0;
 11338  002714  0E00               	movlw	0
 11339  002716  D016               	goto	L9
 11340  002718                     l5691:
 11341                           
 11342                           ;RF24Network_c.c: 1116: else
 11343                           ;RF24Network_c.c: 1117: if ( RF24N_is_direct_child(*to_node) )
 11344  002718  C01C  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
 11345  00271C  C01D  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
 11346  002720  CFDE F009          	movff	postinc2,RF24N_is_direct_child@node
 11347  002724  CFDD F00A          	movff	postdec2,RF24N_is_direct_child@node+1
 11348  002728  EC2D  F018         	call	_RF24N_is_direct_child	;wreg free
 11349  00272C  0900               	iorlw	0
 11350  00272E  B4D8               	btfsc	status,2,c
 11351  002730  D00B               	goto	l5697
 11352                           
 11353                           ;RF24Network_c.c: 1118: {
 11354                           ;RF24Network_c.c: 1120: pre_conversion_send_node = *to_node;
 11355  002732  C01C  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
 11356  002736  C01D  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
 11357  00273A  CFDE F017          	movff	postinc2,RF24N_logicalToPhysicalAddress@pre_conversion_send_node
 11358  00273E  CFDD F018          	movff	postdec2,RF24N_logicalToPhysicalAddress@pre_conversion_send_node+1
 11359  002742  D01D               	goto	l5701
 11360  002744                     L9:
 11361  002744  6E1B               	movwf	RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe,c
 11362                           
 11363                           ;RF24Network_c.c: 1123: }
 11364  002746  D01D               	goto	l5703
 11365  002748                     l5697:
 11366                           
 11367                           ;RF24Network_c.c: 1127: else if ( RF24N_is_descendant(*to_node) )
 11368  002748  C01C  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
 11369  00274C  C01D  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
 11370  002750  CFDE F003          	movff	postinc2,RF24N_is_descendant@node
 11371  002754  CFDD F004          	movff	postdec2,RF24N_is_descendant@node+1
 11372  002758  EC5D  F01B         	call	_RF24N_is_descendant	;wreg free
 11373  00275C  0900               	iorlw	0
 11374  00275E  B4D8               	btfsc	status,2,c
 11375  002760  D010               	goto	l5703
 11376                           
 11377                           ;RF24Network_c.c: 1128: {
 11378                           ;RF24Network_c.c: 1129: pre_conversion_send_node = RF24N_direct_child_route_to(*to_node)
      +                          ;
 11379  002762  C01C  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
 11380  002766  C01D  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
 11381  00276A  CFDE F003          	movff	postinc2,RF24N_direct_child_route_to@node
 11382  00276E  CFDD F004          	movff	postdec2,RF24N_direct_child_route_to@node+1
 11383  002772  ECC8  F01A         	call	_RF24N_direct_child_route_to	;wreg free
 11384  002776  C003  F017         	movff	?_RF24N_direct_child_route_to,RF24N_logicalToPhysicalAddress@pre_conversion_send_
      +                          node
 11385  00277A  C004  F018         	movff	?_RF24N_direct_child_route_to+1,RF24N_logicalToPhysicalAddress@pre_conversion_sen
      +                          d_node+1
 11386  00277E                     l5701:
 11387                           
 11388                           ;RF24Network_c.c: 1130: pre_conversion_send_pipe = 5;
 11389  00277E  0E05               	movlw	5
 11390  002780  D7E1               	goto	L9
 11391  002782                     l5703:
 11392                           
 11393                           ;RF24Network_c.c: 1131: }
 11394                           ;RF24Network_c.c: 1133: *to_node = pre_conversion_send_node;
 11395  002782  C01C  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
 11396  002786  C01D  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
 11397  00278A  C017  FFDE         	movff	RF24N_logicalToPhysicalAddress@pre_conversion_send_node,postinc2
 11398  00278E  C018  FFDD         	movff	RF24N_logicalToPhysicalAddress@pre_conversion_send_node+1,postdec2
 11399                           
 11400                           ;RF24Network_c.c: 1134: *directTo = pre_conversion_send_pipe;
 11401  002792  C019  FFD9         	movff	RF24N_logicalToPhysicalAddress@directTo,fsr2l
 11402  002796  C01A  FFDA         	movff	RF24N_logicalToPhysicalAddress@directTo+1,fsr2h
 11403  00279A  C01B  FFDF         	movff	RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe,indf2
 11404  00279E  0012               	return	
 11405  0027A0                     __end_of_RF24N_logicalToPhysicalAddress:
 11406                           	opt stack 0
 11407                           tblptru	equ	0xFF8
 11408                           tblptrh	equ	0xFF7
 11409                           tblptrl	equ	0xFF6
 11410                           tablat	equ	0xFF5
 11411                           prodh	equ	0xFF4
 11412                           prodl	equ	0xFF3
 11413                           intcon	equ	0xFF2
 11414                           indf0	equ	0xFEF
 11415                           postinc0	equ	0xFEE
 11416                           postdec0	equ	0xFED
 11417                           plusw0	equ	0xFEB
 11418                           fsr0h	equ	0xFEA
 11419                           fsr0l	equ	0xFE9
 11420                           wreg	equ	0xFE8
 11421                           plusw1	equ	0xFE3
 11422                           fsr1h	equ	0xFE2
 11423                           fsr1l	equ	0xFE1
 11424                           indf2	equ	0xFDF
 11425                           postinc2	equ	0xFDE
 11426                           postdec2	equ	0xFDD
 11427                           plusw2	equ	0xFDB
 11428                           fsr2h	equ	0xFDA
 11429                           fsr2l	equ	0xFD9
 11430                           status	equ	0xFD8
 11431                           
 11432 ;; *************** function _RF24N_is_direct_child *****************
 11433 ;; Defined at:
 11434 ;;		line 1196 in file "../../RF24Network_c.c"
 11435 ;; Parameters:    Size  Location     Type
 11436 ;;  node            2    8[COMRAM] unsigned int 
 11437 ;; Auto vars:     Size  Location     Type
 11438 ;;  child_node_m    2   14[COMRAM] unsigned int 
 11439 ;;  result          1   16[COMRAM] unsigned char 
 11440 ;; Return value:  Size  Location     Type
 11441 ;;                  1    wreg      unsigned char 
 11442 ;; Registers used:
 11443 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 11444 ;; Tracked objects:
 11445 ;;		On entry : 0/0
 11446 ;;		On exit  : 0/0
 11447 ;;		Unchanged: 0/0
 11448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11450 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11451 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11452 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11453 ;;Total ram usage:        9 bytes
 11454 ;; Hardware stack levels used:    1
 11455 ;; Hardware stack levels required when called:    2
 11456 ;; This function calls:
 11457 ;;		_RF24N_is_descendant
 11458 ;; This function is called by:
 11459 ;;		_RF24N_logicalToPhysicalAddress
 11460 ;; This function uses a non-reentrant model
 11461 ;;
 11462                           
 11463                           	psect	text70
 11464  00305A                     __ptext70:
 11465                           	opt stack 0
 11466  00305A                     _RF24N_is_direct_child:
 11467                           	opt stack 24
 11468                           
 11469                           ;RF24Network_c.c: 1198: uint8_t result = 0;
 11470                           
 11471                           ;incstack = 0
 11472  00305A  0E00               	movlw	0
 11473  00305C  6E11               	movwf	RF24N_is_direct_child@result,c
 11474                           
 11475                           ;RF24Network_c.c: 1207: if ( RF24N_is_descendant(node) )
 11476  00305E  C009  F003         	movff	RF24N_is_direct_child@node,RF24N_is_descendant@node
 11477  003062  C00A  F004         	movff	RF24N_is_direct_child@node+1,RF24N_is_descendant@node+1
 11478  003066  EC5D  F01B         	call	_RF24N_is_descendant	;wreg free
 11479  00306A  0900               	iorlw	0
 11480  00306C  B4D8               	btfsc	status,2,c
 11481  00306E  D025               	goto	l5505
 11482                           
 11483                           ;RF24Network_c.c: 1208: {
 11484                           ;RF24Network_c.c: 1210: uint16_t child_node_mask = ( ~ rn.node_mask ) << 3;
 11485  003070  EE20  F0E1         	lfsr	2,_rn+56
 11486  003074  CFDE F00B          	movff	postinc2,??_RF24N_is_direct_child
 11487  003078  CFDD F00C          	movff	postdec2,??_RF24N_is_direct_child+1
 11488  00307C  1C0B               	comf	??_RF24N_is_direct_child,w,c
 11489  00307E  6E0D               	movwf	(??_RF24N_is_direct_child+2)& (0+255),c
 11490  003080  1C0C               	comf	??_RF24N_is_direct_child+1,w,c
 11491  003082  6E0E               	movwf	(??_RF24N_is_direct_child+3)& (0+255),c
 11492  003084  90D8               	bcf	status,0,c
 11493  003086  360D               	rlcf	??_RF24N_is_direct_child+2,f,c
 11494  003088  360E               	rlcf	??_RF24N_is_direct_child+3,f,c
 11495  00308A  90D8               	bcf	status,0,c
 11496  00308C  360D               	rlcf	??_RF24N_is_direct_child+2,f,c
 11497  00308E  360E               	rlcf	??_RF24N_is_direct_child+3,f,c
 11498  003090  90D8               	bcf	status,0,c
 11499  003092  360D               	rlcf	??_RF24N_is_direct_child+2,f,c
 11500  003094  360E               	rlcf	??_RF24N_is_direct_child+3,f,c
 11501  003096  C00D  F00F         	movff	??_RF24N_is_direct_child+2,RF24N_is_direct_child@child_node_mask
 11502  00309A  C00E  F010         	movff	??_RF24N_is_direct_child+3,RF24N_is_direct_child@child_node_mask+1
 11503                           
 11504                           ;RF24Network_c.c: 1211: result = ( node & child_node_mask ) == 0 ;
 11505  00309E  500F               	movf	RF24N_is_direct_child@child_node_mask,w,c
 11506  0030A0  1409               	andwf	RF24N_is_direct_child@node,w,c
 11507  0030A2  6E0B               	movwf	??_RF24N_is_direct_child& (0+255),c
 11508  0030A4  5010               	movf	RF24N_is_direct_child@child_node_mask+1,w,c
 11509  0030A6  140A               	andwf	RF24N_is_direct_child@node+1,w,c
 11510  0030A8  6E0C               	movwf	(??_RF24N_is_direct_child+1)& (0+255),c
 11511  0030AA  500B               	movf	??_RF24N_is_direct_child,w,c
 11512  0030AC  100C               	iorwf	??_RF24N_is_direct_child+1,w,c
 11513  0030AE  A4D8               	btfss	status,2,c
 11514  0030B0  D002               	goto	u7050
 11515  0030B2  0E01               	movlw	1
 11516  0030B4  D001               	goto	u7060
 11517  0030B6                     u7050:
 11518  0030B6  0E00               	movlw	0
 11519  0030B8                     u7060:
 11520  0030B8  6E11               	movwf	RF24N_is_direct_child@result,c
 11521  0030BA                     l5505:
 11522                           
 11523                           ;RF24Network_c.c: 1212: }
 11524                           ;RF24Network_c.c: 1213: return result;
 11525  0030BA  5011               	movf	RF24N_is_direct_child@result,w,c
 11526  0030BC  0012               	return	
 11527  0030BE                     __end_of_RF24N_is_direct_child:
 11528                           	opt stack 0
 11529                           tblptru	equ	0xFF8
 11530                           tblptrh	equ	0xFF7
 11531                           tblptrl	equ	0xFF6
 11532                           tablat	equ	0xFF5
 11533                           prodh	equ	0xFF4
 11534                           prodl	equ	0xFF3
 11535                           intcon	equ	0xFF2
 11536                           indf0	equ	0xFEF
 11537                           postinc0	equ	0xFEE
 11538                           postdec0	equ	0xFED
 11539                           plusw0	equ	0xFEB
 11540                           fsr0h	equ	0xFEA
 11541                           fsr0l	equ	0xFE9
 11542                           wreg	equ	0xFE8
 11543                           plusw1	equ	0xFE3
 11544                           fsr1h	equ	0xFE2
 11545                           fsr1l	equ	0xFE1
 11546                           indf2	equ	0xFDF
 11547                           postinc2	equ	0xFDE
 11548                           postdec2	equ	0xFDD
 11549                           plusw2	equ	0xFDB
 11550                           fsr2h	equ	0xFDA
 11551                           fsr2l	equ	0xFD9
 11552                           status	equ	0xFD8
 11553                           
 11554 ;; *************** function _RF24N_is_descendant *****************
 11555 ;; Defined at:
 11556 ;;		line 1218 in file "../../RF24Network_c.c"
 11557 ;; Parameters:    Size  Location     Type
 11558 ;;  node            2    2[COMRAM] unsigned int 
 11559 ;; Auto vars:     Size  Location     Type
 11560 ;;		None
 11561 ;; Return value:  Size  Location     Type
 11562 ;;                  1    wreg      unsigned char 
 11563 ;; Registers used:
 11564 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 11565 ;; Tracked objects:
 11566 ;;		On entry : 0/0
 11567 ;;		On exit  : 0/0
 11568 ;;		Unchanged: 0/0
 11569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11572 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11573 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11574 ;;Total ram usage:        6 bytes
 11575 ;; Hardware stack levels used:    1
 11576 ;; Hardware stack levels required when called:    1
 11577 ;; This function calls:
 11578 ;;		Nothing
 11579 ;; This function is called by:
 11580 ;;		_RF24N_logicalToPhysicalAddress
 11581 ;;		_RF24N_is_direct_child
 11582 ;; This function uses a non-reentrant model
 11583 ;;
 11584                           
 11585                           	psect	text71
 11586  0036BA                     __ptext71:
 11587                           	opt stack 0
 11588  0036BA                     _RF24N_is_descendant:
 11589                           	opt stack 24
 11590                           
 11591                           ;RF24Network_c.c: 1220: return ( node & rn.node_mask ) == rn.node_address;
 11592                           
 11593                           ;incstack = 0
 11594  0036BA  EE20  F0D9         	lfsr	2,_rn+48
 11595  0036BE  EE00  F0E1         	lfsr	0,_rn+56
 11596  0036C2  CFEE F007          	movff	postinc0,??_RF24N_is_descendant+2
 11597  0036C6  CFED F008          	movff	postdec0,??_RF24N_is_descendant+3
 11598  0036CA  5003               	movf	RF24N_is_descendant@node,w,c
 11599  0036CC  1607               	andwf	??_RF24N_is_descendant+2,f,c
 11600  0036CE  5004               	movf	RF24N_is_descendant@node+1,w,c
 11601  0036D0  1608               	andwf	??_RF24N_is_descendant+3,f,c
 11602  0036D2  50DE               	movf	postinc2,w,c
 11603  0036D4  1807               	xorwf	??_RF24N_is_descendant+2,w,c
 11604  0036D6  E106               	bnz	u6750
 11605  0036D8  50DE               	movf	postinc2,w,c
 11606  0036DA  1808               	xorwf	??_RF24N_is_descendant+3,w,c
 11607  0036DC  A4D8               	btfss	status,2,c
 11608  0036DE  D002               	goto	u6750
 11609  0036E0  0E01               	movlw	1
 11610  0036E2  0012               	return	
 11611  0036E4                     u6750:
 11612  0036E4  0E00               	movlw	0
 11613  0036E6  0012               	return	
 11614  0036E8                     __end_of_RF24N_is_descendant:
 11615                           	opt stack 0
 11616                           tblptru	equ	0xFF8
 11617                           tblptrh	equ	0xFF7
 11618                           tblptrl	equ	0xFF6
 11619                           tablat	equ	0xFF5
 11620                           prodh	equ	0xFF4
 11621                           prodl	equ	0xFF3
 11622                           intcon	equ	0xFF2
 11623                           indf0	equ	0xFEF
 11624                           postinc0	equ	0xFEE
 11625                           postdec0	equ	0xFED
 11626                           plusw0	equ	0xFEB
 11627                           fsr0h	equ	0xFEA
 11628                           fsr0l	equ	0xFE9
 11629                           wreg	equ	0xFE8
 11630                           plusw1	equ	0xFE3
 11631                           fsr1h	equ	0xFE2
 11632                           fsr1l	equ	0xFE1
 11633                           indf2	equ	0xFDF
 11634                           postinc2	equ	0xFDE
 11635                           postdec2	equ	0xFDD
 11636                           plusw2	equ	0xFDB
 11637                           fsr2h	equ	0xFDA
 11638                           fsr2l	equ	0xFD9
 11639                           status	equ	0xFD8
 11640                           
 11641 ;; *************** function _RF24N_direct_child_route_to *****************
 11642 ;; Defined at:
 11643 ;;		line 1286 in file "../../RF24Network_c.c"
 11644 ;; Parameters:    Size  Location     Type
 11645 ;;  node            2    2[COMRAM] unsigned int 
 11646 ;; Auto vars:     Size  Location     Type
 11647 ;;  child_mask      2    6[COMRAM] unsigned int 
 11648 ;; Return value:  Size  Location     Type
 11649 ;;                  2    2[COMRAM] unsigned int 
 11650 ;; Registers used:
 11651 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11652 ;; Tracked objects:
 11653 ;;		On entry : 0/0
 11654 ;;		On exit  : 0/0
 11655 ;;		Unchanged: 0/0
 11656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11658 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11659 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11660 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11661 ;;Total ram usage:        6 bytes
 11662 ;; Hardware stack levels used:    1
 11663 ;; Hardware stack levels required when called:    1
 11664 ;; This function calls:
 11665 ;;		Nothing
 11666 ;; This function is called by:
 11667 ;;		_RF24N_logicalToPhysicalAddress
 11668 ;; This function uses a non-reentrant model
 11669 ;;
 11670                           
 11671                           	psect	text72
 11672  003590                     __ptext72:
 11673                           	opt stack 0
 11674  003590                     _RF24N_direct_child_route_to:
 11675                           	opt stack 25
 11676                           
 11677                           ;RF24Network_c.c: 1289: uint16_t child_mask = ( rn.node_mask << 3 ) | 0x07;
 11678                           
 11679                           ;incstack = 0
 11680  003590  0E07               	movlw	7
 11681  003592  EE20  F0E1         	lfsr	2,_rn+56
 11682  003596  CFDE F005          	movff	postinc2,??_RF24N_direct_child_route_to
 11683  00359A  CFDD F006          	movff	postdec2,??_RF24N_direct_child_route_to+1
 11684  00359E  90D8               	bcf	status,0,c
 11685  0035A0  3605               	rlcf	??_RF24N_direct_child_route_to,f,c
 11686  0035A2  3606               	rlcf	??_RF24N_direct_child_route_to+1,f,c
 11687  0035A4  90D8               	bcf	status,0,c
 11688  0035A6  3605               	rlcf	??_RF24N_direct_child_route_to,f,c
 11689  0035A8  3606               	rlcf	??_RF24N_direct_child_route_to+1,f,c
 11690  0035AA  90D8               	bcf	status,0,c
 11691  0035AC  3605               	rlcf	??_RF24N_direct_child_route_to,f,c
 11692  0035AE  3606               	rlcf	??_RF24N_direct_child_route_to+1,f,c
 11693  0035B0  1005               	iorwf	??_RF24N_direct_child_route_to,w,c
 11694  0035B2  6E07               	movwf	RF24N_direct_child_route_to@child_mask,c
 11695  0035B4  5006               	movf	??_RF24N_direct_child_route_to+1,w,c
 11696  0035B6  6E08               	movwf	RF24N_direct_child_route_to@child_mask+1,c
 11697                           
 11698                           ;RF24Network_c.c: 1290: return node & child_mask;
 11699  0035B8  5007               	movf	RF24N_direct_child_route_to@child_mask,w,c
 11700  0035BA  1403               	andwf	RF24N_direct_child_route_to@node,w,c
 11701  0035BC  6E03               	movwf	?_RF24N_direct_child_route_to,c
 11702  0035BE  5008               	movf	RF24N_direct_child_route_to@child_mask+1,w,c
 11703  0035C0  1404               	andwf	RF24N_direct_child_route_to@node+1,w,c
 11704  0035C2  6E04               	movwf	?_RF24N_direct_child_route_to+1,c
 11705  0035C4  0012               	return	
 11706  0035C6                     __end_of_RF24N_direct_child_route_to:
 11707                           	opt stack 0
 11708                           tblptru	equ	0xFF8
 11709                           tblptrh	equ	0xFF7
 11710                           tblptrl	equ	0xFF6
 11711                           tablat	equ	0xFF5
 11712                           prodh	equ	0xFF4
 11713                           prodl	equ	0xFF3
 11714                           intcon	equ	0xFF2
 11715                           indf0	equ	0xFEF
 11716                           postinc0	equ	0xFEE
 11717                           postdec0	equ	0xFED
 11718                           plusw0	equ	0xFEB
 11719                           fsr0h	equ	0xFEA
 11720                           fsr0l	equ	0xFE9
 11721                           wreg	equ	0xFE8
 11722                           plusw1	equ	0xFE3
 11723                           fsr1h	equ	0xFE2
 11724                           fsr1l	equ	0xFE1
 11725                           indf2	equ	0xFDF
 11726                           postinc2	equ	0xFDE
 11727                           postdec2	equ	0xFDD
 11728                           plusw2	equ	0xFDB
 11729                           fsr2h	equ	0xFDA
 11730                           fsr2l	equ	0xFD9
 11731                           status	equ	0xFD8
 11732                           
 11733 ;; *************** function _isr *****************
 11734 ;; Defined at:
 11735 ;;		line 12 in file "pic_main.c"
 11736 ;; Parameters:    Size  Location     Type
 11737 ;;		None
 11738 ;; Auto vars:     Size  Location     Type
 11739 ;;		None
 11740 ;; Return value:  Size  Location     Type
 11741 ;;                  1    wreg      void 
 11742 ;; Registers used:
 11743 ;;		wreg, status,2, status,0
 11744 ;; Tracked objects:
 11745 ;;		On entry : 0/0
 11746 ;;		On exit  : 0/0
 11747 ;;		Unchanged: 0/0
 11748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11751 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11752 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11753 ;;Total ram usage:        2 bytes
 11754 ;; Hardware stack levels used:    1
 11755 ;; This function calls:
 11756 ;;		Nothing
 11757 ;; This function is called by:
 11758 ;;		Interrupt level 2
 11759 ;; This function uses a non-reentrant model
 11760 ;;
 11761                           
 11762                           	psect	intcode
 11763  000008                     __pintcode:
 11764                           	opt stack 0
 11765  000008                     _isr:
 11766                           	opt stack 19
 11767                           
 11768                           ;incstack = 0
 11769  000008  CFE1 F001          	movff	fsr1l,??_isr
 11770  00000C  CFE2 F002          	movff	fsr1h,??_isr+1
 11771  000010  ED74  F01B         	call	int_func,f	;refresh shadow registers
 11772                           tblptru	equ	0xFF8
 11773                           tblptrh	equ	0xFF7
 11774                           tblptrl	equ	0xFF6
 11775                           tablat	equ	0xFF5
 11776                           prodh	equ	0xFF4
 11777                           prodl	equ	0xFF3
 11778                           intcon	equ	0xFF2
 11779                           indf0	equ	0xFEF
 11780                           postinc0	equ	0xFEE
 11781                           postdec0	equ	0xFED
 11782                           plusw0	equ	0xFEB
 11783                           fsr0h	equ	0xFEA
 11784                           fsr0l	equ	0xFE9
 11785                           wreg	equ	0xFE8
 11786                           plusw1	equ	0xFE3
 11787                           fsr1h	equ	0xFE2
 11788                           fsr1l	equ	0xFE1
 11789                           indf2	equ	0xFDF
 11790                           postinc2	equ	0xFDE
 11791                           postdec2	equ	0xFDD
 11792                           plusw2	equ	0xFDB
 11793                           fsr2h	equ	0xFDA
 11794                           fsr2l	equ	0xFD9
 11795                           status	equ	0xFD8
 11796                           
 11797                           	psect	intcode_body
 11798  0036E8                     __pintcode_body:
 11799                           	opt stack 19
 11800  0036E8                     int_func:
 11801                           	opt stack 19
 11802  0036E8  0006               	pop		; remove dummy address from shadow register refresh
 11803  0036EA  EE16  F092         	lfsr	1,___inthi_sp
 11804                           
 11805                           ;pic_main.c: 14: if(INTCONbits.TMR0IF)
 11806  0036EE  A4F2               	btfss	intcon,2,c	;volatile
 11807  0036F0  D00B               	goto	i2l53
 11808                           
 11809                           ;pic_main.c: 15: {
 11810                           ;pic_main.c: 16: TMR0H=(65536l-(32000000/4000l)&0xFF00)>>8;
 11811  0036F2  0EE0               	movlw	224
 11812  0036F4  6ED7               	movwf	4055,c	;volatile
 11813                           
 11814                           ;pic_main.c: 17: TMR0L=(65536l-(32000000/4000l)&0x00FF);
 11815  0036F6  0EC0               	movlw	192
 11816  0036F8  6ED6               	movwf	4054,c	;volatile
 11817                           
 11818                           ;pic_main.c: 18: mtime++;
 11819  0036FA  0E01               	movlw	1
 11820  0036FC  263E               	addwf	_mtime,f,c
 11821  0036FE  0E00               	movlw	0
 11822  003700  223F               	addwfc	_mtime+1,f,c
 11823  003702  2240               	addwfc	_mtime+2,f,c
 11824  003704  2241               	addwfc	_mtime+3,f,c
 11825                           
 11826                           ;pic_main.c: 19: INTCONbits.TMR0IF=0;
 11827  003706  94F2               	bcf	intcon,2,c	;volatile
 11828  003708                     i2l53:
 11829  003708  C002  FFE2         	movff	??_isr+1,fsr1h
 11830  00370C  C001  FFE1         	movff	??_isr,fsr1l
 11831  003710  0011               	retfie		f
 11832  003712                     __end_of_isr:
 11833                           	opt stack 0
 11834                           tblptru	equ	0xFF8
 11835                           tblptrh	equ	0xFF7
 11836                           tblptrl	equ	0xFF6
 11837                           tablat	equ	0xFF5
 11838                           prodh	equ	0xFF4
 11839                           prodl	equ	0xFF3
 11840                           intcon	equ	0xFF2
 11841                           indf0	equ	0xFEF
 11842                           postinc0	equ	0xFEE
 11843                           postdec0	equ	0xFED
 11844                           plusw0	equ	0xFEB
 11845                           fsr0h	equ	0xFEA
 11846                           fsr0l	equ	0xFE9
 11847                           wreg	equ	0xFE8
 11848                           plusw1	equ	0xFE3
 11849                           fsr1h	equ	0xFE2
 11850                           fsr1l	equ	0xFE1
 11851                           indf2	equ	0xFDF
 11852                           postinc2	equ	0xFDE
 11853                           postdec2	equ	0xFDD
 11854                           plusw2	equ	0xFDB
 11855                           fsr2h	equ	0xFDA
 11856                           fsr2l	equ	0xFD9
 11857                           status	equ	0xFD8
 11858                           tblptru	equ	0xFF8
 11859                           tblptrh	equ	0xFF7
 11860                           tblptrl	equ	0xFF6
 11861                           tablat	equ	0xFF5
 11862                           prodh	equ	0xFF4
 11863                           prodl	equ	0xFF3
 11864                           intcon	equ	0xFF2
 11865                           indf0	equ	0xFEF
 11866                           postinc0	equ	0xFEE
 11867                           postdec0	equ	0xFED
 11868                           plusw0	equ	0xFEB
 11869                           fsr0h	equ	0xFEA
 11870                           fsr0l	equ	0xFE9
 11871                           wreg	equ	0xFE8
 11872                           plusw1	equ	0xFE3
 11873                           fsr1h	equ	0xFE2
 11874                           fsr1l	equ	0xFE1
 11875                           indf2	equ	0xFDF
 11876                           postinc2	equ	0xFDE
 11877                           postdec2	equ	0xFDD
 11878                           plusw2	equ	0xFDB
 11879                           fsr2h	equ	0xFDA
 11880                           fsr2l	equ	0xFD9
 11881                           status	equ	0xFD8
 11882                           
 11883                           	psect	rparam
 11884  0000                     tblptru	equ	0xFF8
 11885                           tblptrh	equ	0xFF7
 11886                           tblptrl	equ	0xFF6
 11887                           tablat	equ	0xFF5
 11888                           prodh	equ	0xFF4
 11889                           prodl	equ	0xFF3
 11890                           intcon	equ	0xFF2
 11891                           indf0	equ	0xFEF
 11892                           postinc0	equ	0xFEE
 11893                           postdec0	equ	0xFED
 11894                           plusw0	equ	0xFEB
 11895                           fsr0h	equ	0xFEA
 11896                           fsr0l	equ	0xFE9
 11897                           wreg	equ	0xFE8
 11898                           plusw1	equ	0xFE3
 11899                           fsr1h	equ	0xFE2
 11900                           fsr1l	equ	0xFE1
 11901                           indf2	equ	0xFDF
 11902                           postinc2	equ	0xFDE
 11903                           postdec2	equ	0xFDD
 11904                           plusw2	equ	0xFDB
 11905                           fsr2h	equ	0xFDA
 11906                           fsr2l	equ	0xFD9
 11907                           status	equ	0xFD8
 11908                           
 11909                           	psect	temp
 11910  000070                     btemp:
 11911                           	opt stack 0
 11912  000070                     	ds	12
 11913                           tblptru	equ	0xFF8
 11914                           tblptrh	equ	0xFF7
 11915                           tblptrl	equ	0xFF6
 11916                           tablat	equ	0xFF5
 11917                           prodh	equ	0xFF4
 11918                           prodl	equ	0xFF3
 11919                           intcon	equ	0xFF2
 11920                           indf0	equ	0xFEF
 11921                           postinc0	equ	0xFEE
 11922                           postdec0	equ	0xFED
 11923                           plusw0	equ	0xFEB
 11924                           fsr0h	equ	0xFEA
 11925                           fsr0l	equ	0xFE9
 11926                           wreg	equ	0xFE8
 11927                           plusw1	equ	0xFE3
 11928                           fsr1h	equ	0xFE2
 11929                           fsr1l	equ	0xFE1
 11930                           indf2	equ	0xFDF
 11931                           postinc2	equ	0xFDE
 11932                           postdec2	equ	0xFDD
 11933                           plusw2	equ	0xFDB
 11934                           fsr2h	equ	0xFDA
 11935                           fsr2l	equ	0xFD9
 11936                           status	equ	0xFD8


Data Sizes:
    Strings     62
    Constant    22
    Data        14
    BSS         406
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          115     56     106
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    rn.message_buffer	PTR unsigned char  size(2) Largest target is 0
		 -> rn(BIGRAM[370]), 

    rn.frame_queue.message_buffer	PTR unsigned char  size(2) Largest target is 0
		 -> rn(BIGRAM[370]), 

    ?_RF24N_getFrag_ptr.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    ?_RF24N_getFrame_buffer.frag_queue.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    ?_RF24N_getFrame_buffer.next_frame	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    ?_RF24N_getFrame_buffer.frag_ptr	PTR struct . size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    memmove@d1	PTR void  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    memmove@s1	PTR const void  size(2) Largest target is 373
		 -> rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 373
		 -> rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), 

    memcpy@d1	PTR void  size(2) Largest target is 373
		 -> RF24N_read@bufsize(COMRAM[2]), RF24N_peek@msg_size(COMRAM[2]), rn.frame_buffer(BIGRAM[32]), rn.frag_queue_message_buffer(BIGRAM[144]), 
		 -> rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), rf(COMRAM[22]), loop@payload(COMRAM[8]), 
		 -> loop@header(COMRAM[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 373
		 -> RF24N_read@bufsize(COMRAM[2]), RF24N_peek@msg_size(COMRAM[2]), rn.frame_buffer(BIGRAM[32]), rn.frag_queue_message_buffer(BIGRAM[144]), 
		 -> rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), rf(COMRAM[22]), loop@payload(COMRAM[8]), 
		 -> loop@header(COMRAM[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 373
		 -> rn.header(BIGRAM[8]), rn.frame_queue.header(BIGRAM[8]), RF24N_enqueue@message_size(COMRAM[2]), rn.frame_buffer(BIGRAM[32]), 
		 -> rn.frag_queue_message_buffer(BIGRAM[144]), rn.frag_queue(BIGRAM[13]), rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), 
		 -> RF24_openReadingPipe_d@address(COMRAM[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 373
		 -> rn.header(BIGRAM[8]), rn.frame_queue.header(BIGRAM[8]), RF24N_enqueue@message_size(COMRAM[2]), rn.frame_buffer(BIGRAM[32]), 
		 -> rn.frag_queue_message_buffer(BIGRAM[144]), rn.frag_queue(BIGRAM[13]), rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), 
		 -> RF24_openReadingPipe_d@address(COMRAM[5]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> buff(COMRAM[10]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    sp__RF24N_getFrag_ptr.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    sp__RF24N_getFrag_ptr	PTR struct . size(2) Largest target is 373
		 -> rn.frag_queue(BIGRAM[13]), rn(BIGRAM[370]), 

    sp__RF24N_getFrame_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24N_pipe_address@address	PTR unsigned char  size(2) Largest target is 5
		 -> RF24N_multicastLevel@addr(COMRAM[5]), RF24N_write_to_pipe@out_pipe(COMRAM[5]), RF24N_begin_d@addr(COMRAM[5]), 

    RF24N_pipe_address@out	PTR unsigned char  size(2) Largest target is 5
		 -> RF24N_pipe_address@result(COMRAM[5]), 

    RF24N_logicalToPhysicalAddress@multicast	PTR unsigned char  size(2) Largest target is 4
		 -> conversion.multicast(COMRAM[1]), RF24N_write@conversion(BANK0[4]), 

    RF24N_logicalToPhysicalAddress@directTo	PTR unsigned char  size(2) Largest target is 4
		 -> conversion.send_pipe(COMRAM[1]), RF24N_write@conversion(BANK0[4]), 

    RF24N_logicalToPhysicalAddress@conversionInfo	PTR struct . size(2) Largest target is 4
		 -> RF24N_write@conversion(BANK0[4]), 

    RF24N_logicalToPhysicalAddress@to_node	PTR unsigned int  size(2) Largest target is 4
		 -> conversion.send_node(COMRAM[2]), RF24N_write@conversion(BANK0[4]), 

    RF24N_write@header	PTR struct . size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    sp__memmove	PTR void  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24N_read@message	PTR void  size(2) Largest target is 8
		 -> loop@payload(COMRAM[8]), 

    RF24N_read@header	PTR struct . size(2) Largest target is 8
		 -> loop@header(COMRAM[8]), 

    RF24N_peek@frame.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24N_enqueue@header	PTR struct . size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24N_update@header	PTR struct . size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    rn.frag_ptr.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    S2076$message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    rn.frag_queue.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn.frag_queue_message_buffer(BIGRAM[144]), rn(BIGRAM[370]), 

    S2080$next_frame	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    rn.next_frame	PTR unsigned char  size(2) Largest target is 373
		 -> rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), 

    S2080$frag_ptr	PTR struct . size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    rn.frag_ptr	PTR struct . size(2) Largest target is 373
		 -> rn.frag_queue(BIGRAM[13]), rn(BIGRAM[370]), 

    sp__memcpy	PTR void  size(2) Largest target is 373
		 -> RF24N_read@bufsize(COMRAM[2]), RF24N_peek@msg_size(COMRAM[2]), rn.frame_buffer(BIGRAM[32]), rn.frag_queue_message_buffer(BIGRAM[144]), 
		 -> rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), rf(COMRAM[22]), loop@payload(COMRAM[8]), 
		 -> loop@header(COMRAM[8]), 

    RF24_openReadingPipe_d@address_	PTR const unsigned char  size(2) Largest target is 5
		 -> RF24N_multicastLevel@addr(COMRAM[5]), RF24N_begin_d@addr(COMRAM[5]), 

    RF24_openWritingPipe_d@value_	PTR const unsigned char  size(2) Largest target is 5
		 -> RF24N_write_to_pipe@out_pipe(COMRAM[5]), 

    RF24_read@buf	PTR void  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24_available_p@pipe_num	PTR unsigned char  size(2) Largest target is 1
		 -> RF24N_update@pipe_num(UNKNOWN), NULL(NULL[0]), 

    RF24_startFastWrite@buf	PTR const void  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24_writeFast_m@buf	PTR const void  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24_read_payload@buf	PTR void  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24_read_payload@current	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24_write_payload@buf	PTR const void  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24_write_payload@current	PTR const unsigned char  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24_write_register_c_d@buf	PTR const unsigned char  size(2) Largest target is 22
		 -> RF24_openReadingPipe_d@address(COMRAM[5]), RF24_openWritingPipe_d@value(COMRAM[5]), rf.pipe0_reading_address(COMRAM[5]), rf(COMRAM[22]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 10
		 -> buff(COMRAM[10]), 

    Serial_println@val	PTR const unsigned char  size(2) Largest target is 36
		 -> buff(COMRAM[10]), STR_1(CODE[36]), 

    Serial_print@val	PTR const unsigned char  size(2) Largest target is 36
		 -> buff(COMRAM[10]), STR_4(CODE[3]), STR_3(CODE[5]), STR_2(CODE[18]), 
		 -> STR_1(CODE[36]), 

    sp__itoa_	PTR const unsigned char  size(2) Largest target is 10
		 -> buff(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_loop
    _setup->_RF24N_begin_d
    _Serial_begin->___lldiv
    _RF24_begin->_RF24_setChannel
    _RF24_begin->_RF24_setRetries
    _RF24_setDataRate->_RF24_write_register_d
    _RF24N_begin_d->_RF24_openReadingPipe_d
    _RF24_setRetries->_RF24_write_register_d
    _RF24_setChannel->_RF24_write_register_d
    _RF24_openReadingPipe_d->_RF24_write_register_c_d
    _RF24_openReadingPipe_d->_RF24_write_register_d
    _RF24_enableDynamicPayloads->_RF24_write_register_d
    _loop->_Serial_println
    _itoa_->_ultoa
    _ultoa->___lldiv
    _Serial_println->_Serial_print
    _Serial_print->_itoa_
    _RF24N_read->_memmove
    _RF24_get_status->_RF24_spiTrans
    _RF24_closeReadingPipe->_RF24_write_register_d
    _RF24_stopListening->_RF24_write_register_d
    _RF24_startFastWrite->_RF24_write_payload
    _RF24_writeFast_m->_RF24_startFastWrite
    _RF24_startFastWrite->_RF24_write_payload
    _RF24_txStandBy_t->_RF24_stopListening
    _RF24_ce_d->_digitalWrite
    _RF24_flush_rx->_RF24_spiTrans
    _RF24_get_status->_RF24_spiTrans
    _RF24_read->_RF24_read_payload
    _RF24_endTransaction->_RF24_csn_d
    _RF24_beginTransaction->_RF24_csn_d
    _RF24_csn_d->_delayMicroseconds
    _RF24_openWritingPipe_d->_RF24_write_register_c_d
    _RF24_openWritingPipe_d->_RF24_write_register_d
    _RF24N_write->_RF24N_write_to_pipe
    _RF24_startListening->_RF24_closeReadingPipe
    _RF24_powerUp->_RF24_write_register_d
    _RF24_flush_tx->_RF24_spiTrans
    _RF24_closeReadingPipe->_RF24_write_register_d
    _RF24_write_register_d->_RF24_read_register_d
    _RF24N_write_to_pipe->_RF24_writeFast_m
    _RF24_writeFast_m->_RF24_startFastWrite
    _RF24_txStandBy_t->_RF24_stopListening
    _RF24_stopListening->_RF24_write_register_d
    _RF24_setAutoAck_p->_RF24_write_register_d
    _RF24_openWritingPipe_d->_RF24_write_register_c_d
    _RF24_openWritingPipe_d->_RF24_write_register_d
    _RF24N_update->_RF24_read
    _RF24_read->_RF24_read_payload
    _RF24N_write->_RF24N_write_to_pipe
    _RF24N_enqueue->_RF24_stopListening
    _RF24N_logicalToPhysicalAddress->_RF24N_is_direct_child
    _RF24N_is_direct_child->_RF24N_is_descendant

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  266806
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0  174925
                      _RF24N_begin_d
                         _RF24N_init
                         _RF24_begin
                          _RF24_init
                       _Serial_begin
                     _Serial_println
 ---------------------------------------------------------------------------------
 (2) _Serial_begin                                         8     4      4     761
                                             15 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _RF24_init                                            2     1      1     120
                                              2 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _RF24_begin                                           2     2      0   63687
                                             24 COMRAM     2     2      0
                          _RF24_ce_d
                         _RF24_csn_d
                      _RF24_flush_rx
                      _RF24_flush_tx
                       _RF24_powerUp
               _RF24_read_register_d
                    _RF24_setChannel
                   _RF24_setDataRate
                    _RF24_setRetries
             _RF24_toggle_features_d
              _RF24_write_register_d
                          _SPI_begin
                              _delay
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              2     1      1     944
                                              2 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _SPI_begin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RF24_toggle_features_d                               0     0      0    2957
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _RF24_setDataRate                                     3     3      0    9938
                                             20 COMRAM     3     3      0
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (2) _RF24N_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RF24N_begin_d                                       10     8      2  109698
                                             31 COMRAM    10     8      2
             _RF24N_is_valid_address
                 _RF24N_pipe_address
                _RF24N_setup_address
         _RF24_enableDynamicPayloads
                       _RF24_isValid
             _RF24_openReadingPipe_d
                  _RF24_setAutoAck_p
                    _RF24_setChannel
                    _RF24_setRetries
                _RF24_startListening
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     463
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     463
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _RF24_setRetries                                      4     3      1    6985
                                             20 COMRAM     4     3      1
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24_setChannel                                      4     4      0    6907
                                             20 COMRAM     4     4      0
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24_openReadingPipe_d                              11     9      2   20176
                                             20 COMRAM    11     9      2
               _RF24_read_register_d
            _RF24_write_register_c_d
              _RF24_write_register_d
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _RF24_enableDynamicPayloads                           0     0      0    9765
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24N_setup_address                                 11    11      0     105
                                              2 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 (1) _loop                                                16    16      0   91881
                                             40 COMRAM    16    16      0
                    _RF24N_available
                         _RF24N_read
                       _RF24N_update
                       _Serial_print
                     _Serial_println
                              _itoa_
 ---------------------------------------------------------------------------------
 (2) _itoa_                                                4     0      4    1821
                                             28 COMRAM     4     0      4
                              _ultoa
 ---------------------------------------------------------------------------------
 (3) _ultoa                                               13     5      8    1647
                                             15 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     311
                                              2 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     618
                                              2 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _Serial_println                                       2     0      2     659
                                             38 COMRAM     2     0      2
                       _Serial_print
                              _itoa_ (ARG)
 ---------------------------------------------------------------------------------
 (3) _Serial_print                                         6     4      2     485
                                             32 COMRAM     6     4      2
                          _Serial_tx
                              _itoa_ (ARG)
 ---------------------------------------------------------------------------------
 (4) _Serial_tx                                            1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RF24N_read                                          15     9      6    6389
                                             14 COMRAM    15     9      6
                    _RF24N_available
                             _memcpy
                            _memmove
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     6      6     592
                                              2 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (6) _digitalWrite                                         2     1      1    1296
                                              2 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (4) _millis                                               4     0      4       0
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _delayMicroseconds                                    7     7      0     136
                                              2 COMRAM    12    12      0
 ---------------------------------------------------------------------------------
 (7) _RF24_write_payload                                  14    10      4    6798
                                             15 COMRAM    22    18      4
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _RF24_read_payload                                   11     8      3    6339
                                             15 COMRAM    17    14      3
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _RF24_spiTrans                                        2     2      0    5979
                                             15 COMRAM     4     4      0
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _RF24_get_status                                      0     0      0   11958
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (4) _RF24_closeReadingPipe                                4     4      0   19561
                                             20 COMRAM     5     5      0
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (5) _RF24_stopListening                                   2     2      0   34414
                                             20 COMRAM     2     2      0
                          _RF24_ce_d
                      _RF24_flush_tx
               _RF24_read_register_d
              _RF24_write_register_d
                  _delayMicroseconds
 ---------------------------------------------------------------------------------
 (6) _RF24_startFastWrite                                  7     2      5   17491
                                             37 COMRAM     9     4      5
                          _RF24_ce_d
                 _RF24_write_payload
 ---------------------------------------------------------------------------------
 (7) _RF24_write_payload                                  14    10      4    6798
                                             15 COMRAM    22    18      4
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (5) _RF24_writeFast_m                                     5     1      4   73017
                                             46 COMRAM     5     1      4
                    _RF24_get_status
                _RF24_startFastWrite
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (6) _RF24_startFastWrite                                  7     2      5   17491
                                             37 COMRAM     9     4      5
                          _RF24_ce_d
                 _RF24_write_payload
 ---------------------------------------------------------------------------------
 (4) _RF24_txStandBy_t                                    17    12      5  127522
                                             22 COMRAM    21    16      5
                          _RF24_ce_d
                      _RF24_flush_tx
                    _RF24_get_status
               _RF24_read_register_d
                 _RF24_stopListening
              _RF24_write_register_d
                             _millis
 ---------------------------------------------------------------------------------
 (3) _RF24_ce_d                                            1     1      0    1327
                                              5 COMRAM     1     1      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _RF24_getDynamicPayloadSize                           1     1      0   19472
                                             19 COMRAM     2     2      0
              _RF24_beginTransaction
                _RF24_endTransaction
                      _RF24_flush_rx
                       _SPI_transfer
                              _delay
 ---------------------------------------------------------------------------------
 (3) _RF24_flush_rx                                        0     0      0    5979
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (3) _RF24_available_p                                     4     2      2   30236
                                             19 COMRAM     5     3      2
                    _RF24_get_status
               _RF24_read_register_d
 ---------------------------------------------------------------------------------
 (4) _RF24_get_status                                      0     0      0   11958
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (4) _RF24_spiTrans                                        2     2      0    5979
                                             15 COMRAM     4     4      0
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _RF24_read                                            3     0      3   26406
                                             32 COMRAM     3     0      3
                  _RF24_read_payload
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (4) _RF24_read_payload                                   11     8      3    6339
                                             15 COMRAM    17    14      3
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _SPI_transfer                                         1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RF24_endTransaction                                  0     0      0    1463
                         _RF24_csn_d
 ---------------------------------------------------------------------------------
 (4) _RF24_beginTransaction                                0     0      0    1463
                         _RF24_csn_d
 ---------------------------------------------------------------------------------
 (5) _RF24_csn_d                                           1     1      0    1463
                                             14 COMRAM     1     1      0
                  _delayMicroseconds
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _digitalWrite                                         2     1      1    1296
                                              2 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (6) _delayMicroseconds                                    7     7      0     136
                                              2 COMRAM    12    12      0
 ---------------------------------------------------------------------------------
 (5) _RF24_openWritingPipe_d                              10     8      2   23205
                                             20 COMRAM    16    14      2
            _RF24_write_register_c_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24N_write                                         29    26      3 1092540
                                              0 BANK0     41    38      3
             _RF24N_is_valid_address
     _RF24N_logicalToPhysicalAddress
                       _RF24N_update
                _RF24N_write_to_pipe
                  _RF24_setAutoAck_p
                _RF24_startListening
                   _RF24_txStandBy_t
                             _millis
 ---------------------------------------------------------------------------------
 (4) _millis                                               4     0      4       0
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _RF24_startListening                                  1     1      0   51911
                                             25 COMRAM     1     1      0
                          _RF24_ce_d
              _RF24_closeReadingPipe
                      _RF24_flush_tx
                       _RF24_powerUp
               _RF24_read_register_d
            _RF24_write_register_c_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (4) _RF24_write_register_c_d                              5     2      3    4683
                                             15 COMRAM     5     2      3
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _RF24_powerUp                                         1     1      0   10596
                                             20 COMRAM     1     1      0
               _RF24_read_register_d
              _RF24_write_register_d
                              _delay
 ---------------------------------------------------------------------------------
 (3) _RF24_flush_tx                                        0     0      0    5979
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (4) _RF24_closeReadingPipe                                4     4      0   19561
                                             20 COMRAM     5     5      0
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24_write_register_d                                3     2      1    6743
                                             17 COMRAM     3     2      1
              _RF24_beginTransaction
                _RF24_endTransaction
               _RF24_read_register_d (ARG)
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _RF24_read_register_d                                 2     2      0    3022
                                             15 COMRAM     2     2      0
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _RF24N_write_to_pipe                                 10     6      4  270846
                                             51 COMRAM    10     6      4
                 _RF24N_pipe_address
             _RF24_openWritingPipe_d
                  _RF24_setAutoAck_p
                 _RF24_stopListening
                   _RF24_txStandBy_t
                   _RF24_writeFast_m
 ---------------------------------------------------------------------------------
 (5) _RF24_writeFast_m                                     5     1      4   73017
                                             46 COMRAM     5     1      4
                    _RF24_get_status
                _RF24_startFastWrite
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (4) _RF24_txStandBy_t                                    17    12      5  127522
                                             22 COMRAM    21    16      5
                          _RF24_ce_d
                      _RF24_flush_tx
                    _RF24_get_status
               _RF24_read_register_d
                 _RF24_stopListening
              _RF24_write_register_d
                             _millis
 ---------------------------------------------------------------------------------
 (5) _RF24_stopListening                                   2     2      0   34414
                                             20 COMRAM     2     2      0
                          _RF24_ce_d
                      _RF24_flush_tx
               _RF24_read_register_d
              _RF24_write_register_d
                  _delayMicroseconds
 ---------------------------------------------------------------------------------
 (3) _RF24_setAutoAck_p                                    5     4      1   10469
                                             20 COMRAM     5     4      1
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (5) _RF24_openWritingPipe_d                              10     8      2   23205
                                             20 COMRAM    16    14      2
            _RF24_write_register_c_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24N_pipe_address                                  20    15      5    1475
                                              2 COMRAM    20    15      5
 ---------------------------------------------------------------------------------
 (2) _RF24N_update                                         9     9      0   82388
                    _RF24N_available
                      _RF24N_enqueue
             _RF24N_is_valid_address
               _RF24N_levelToAddress
                        _RF24N_write
                   _RF24_available_p
         _RF24_getDynamicPayloadSize
                       _RF24_isValid
                          _RF24_read
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                6     4      2     766
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _RF24_read                                            3     0      3   26406
                                             32 COMRAM     3     0      3
                  _RF24_read_payload
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24_isValid                                         1     1      0      37
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RF24_getDynamicPayloadSize                           1     1      0   19472
                                             19 COMRAM     2     2      0
              _RF24_beginTransaction
                _RF24_endTransaction
                      _RF24_flush_rx
                       _SPI_transfer
                              _delay
 ---------------------------------------------------------------------------------
 (3) _RF24_available_p                                     4     2      2   30236
                                             19 COMRAM     5     3      2
                    _RF24_get_status
               _RF24_read_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24N_write                                         29    26      3 1092540
                                              0 BANK0     41    38      3
             _RF24N_is_valid_address
     _RF24N_logicalToPhysicalAddress
                       _RF24N_update
                _RF24N_write_to_pipe
                  _RF24_setAutoAck_p
                _RF24_startListening
                   _RF24_txStandBy_t
                             _millis
 ---------------------------------------------------------------------------------
 (3) _RF24N_levelToAddress                                 8     6      2     130
                                              2 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _RF24N_is_valid_address                               4     2      2     406
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _RF24N_enqueue                                       16    14      2   41313
                                             22 COMRAM    16    14      2
                 _RF24_stopListening
                            ___lwdiv
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6    5034
                                              2 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     601
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _RF24N_available                                      2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _RF24N_logicalToPhysicalAddress                      12    10      2    1447
                                             17 COMRAM    12    10      2
        _RF24N_direct_child_route_to
                _RF24N_is_descendant
              _RF24N_is_direct_child
 ---------------------------------------------------------------------------------
 (5) _RF24N_is_direct_child                                9     7      2     434
                                              8 COMRAM     9     7      2
                _RF24N_is_descendant
 ---------------------------------------------------------------------------------
 (6) _RF24N_is_descendant                                  6     4      2     211
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _RF24N_direct_child_route_to                          6     4      2     155
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isr                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _RF24N_available
     _RF24N_read
       _RF24N_available
       _memcpy
       _memmove
     _RF24N_update
       _RF24N_available
       _RF24N_enqueue
         _RF24_stopListening
           _RF24_ce_d
             _digitalWrite
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
           _delayMicroseconds
         ___lwdiv
         _memcpy
       _RF24N_is_valid_address
       _RF24N_levelToAddress
       _RF24N_write
         _RF24N_is_valid_address
         _RF24N_logicalToPhysicalAddress
           _RF24N_direct_child_route_to
           _RF24N_is_descendant
           _RF24N_is_direct_child
             _RF24N_is_descendant
         _RF24N_write_to_pipe
           _RF24N_pipe_address
           _RF24_openWritingPipe_d
             _RF24_write_register_c_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
           _RF24_setAutoAck_p
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
           _RF24_stopListening
             _RF24_ce_d
               _digitalWrite
             _RF24_flush_tx
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _delayMicroseconds
           _RF24_txStandBy_t
             _RF24_ce_d
               _digitalWrite
             _RF24_flush_tx
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_get_status
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_stopListening
               _RF24_ce_d
                 _digitalWrite
               _RF24_flush_tx
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
               _delayMicroseconds
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _millis
           _RF24_writeFast_m
             _RF24_get_status
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_startFastWrite
               _RF24_ce_d
                 _digitalWrite
               _RF24_write_payload
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
         _RF24_setAutoAck_p
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
         _RF24_startListening
           _RF24_ce_d
             _digitalWrite
           _RF24_closeReadingPipe
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_powerUp
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _delay
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_c_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
         _RF24_txStandBy_t
           _RF24_ce_d
             _digitalWrite
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_get_status
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_stopListening
             _RF24_ce_d
               _digitalWrite
             _RF24_flush_tx
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _delayMicroseconds
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
           _millis
         _millis
       _RF24_available_p
         _RF24_get_status
           _RF24_spiTrans
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
       _RF24_getDynamicPayloadSize
         _RF24_beginTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_endTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_flush_rx
           _RF24_spiTrans
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
         _SPI_transfer
         _delay
       _RF24_isValid
       _RF24_read
         _RF24_read_payload
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _delay
     _Serial_print
       _Serial_tx
       _itoa_ (ARG)
         _ultoa
           ___lldiv
           ___llmod
     _Serial_println
       _Serial_print
         _Serial_tx
         _itoa_ (ARG)
           _ultoa
             ___lldiv
             ___llmod
       _itoa_ (ARG)
         _ultoa
           ___lldiv
           ___llmod
     _itoa_
       _ultoa
         ___lldiv
         ___llmod
   _setup
     _RF24N_begin_d
       _RF24N_is_valid_address
       _RF24N_pipe_address
       _RF24N_setup_address
       _RF24_enableDynamicPayloads
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_isValid
       _RF24_openReadingPipe_d
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_c_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
         _memcpy
       _RF24_setAutoAck_p
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_setChannel
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_setRetries
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_startListening
         _RF24_ce_d
           _digitalWrite
         _RF24_closeReadingPipe
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
         _RF24_flush_tx
           _RF24_spiTrans
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
         _RF24_powerUp
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
           _delay
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_c_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       ___lwmod
       ___wmul
     _RF24N_init
     _RF24_begin
       _RF24_ce_d
         _digitalWrite
       _RF24_csn_d
         _delayMicroseconds
         _digitalWrite
       _RF24_flush_rx
         _RF24_spiTrans
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
       _RF24_flush_tx
         _RF24_spiTrans
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
       _RF24_powerUp
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
         _delay
       _RF24_read_register_d
         _RF24_beginTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_endTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _SPI_transfer
       _RF24_setChannel
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_setDataRate
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_setRetries
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_toggle_features_d
         _RF24_beginTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_endTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _SPI_transfer
       _RF24_write_register_d
         _RF24_beginTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_endTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_read_register_d (ARG)
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _SPI_transfer (ARG)
       _SPI_begin
       _delay
       _pinMode
     _RF24_init
     _Serial_begin
       ___lldiv
     _Serial_println
       _Serial_print
         _Serial_tx
         _itoa_ (ARG)
           _ultoa
             ___lldiv
             ___llmod
       _itoa_ (ARG)
         _ultoa
           ___lldiv
           ___llmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0     172      37        9.3%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           73      0       0       0        0.0%
COMRAM              73     38      6A       1       92.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6A      34        0.0%
DATA                 0      0     1DC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Dec  5 19:28:17 2016

                          __size_of_RF24N_write_to_pipe 0094  
                                         ?_RF24_powerUp 0001  
                                       ??_RF24N_begin_d 0022  
                                        ?_RF24_spiTrans 0001  
                                           _SSPSTATbits 000FC7  
                                                    l87 3920  
                            RF24_read_register_d@result 0011  
                                                    _rf 0042  
                                                    _rn 00A9  
                                   ___wmul@multiplicand 0005  
                                           __CFG_BORV$3 000000  
                                          __CFG_CP0$OFF 000000  
                                       ??_RF24N_enqueue 0019  
                                          __CFG_CP1$OFF 000000  
                                          __CFG_CP2$OFF 000000  
                                          __CFG_CP3$OFF 000000  
                                _RF24_openReadingPipe_d 24B6  
                                                   l210 1DE6  
                                                   l202 1D92  
                                                   l211 1DF2  
                                                   l220 1E5E  
                                                   l212 1DFE  
                                                   l204 1D9E  
                                                   l221 1E6A  
                                                   l213 1E0A  
                                                   l205 1DAA  
                                                   l230 1ED6  
                                                   l222 1E76  
                                                   l214 1E16  
                                                   l206 1DB6  
                                                   l231 1EE2  
                                                   l223 1E82  
                                                   l215 1E22  
                                                   l207 1DC2  
                                                   l232 1EEE  
                                                   l224 1E8E  
                                                   l216 1E2E  
                                                   l208 1DCE  
                                                   l233 1EFA  
                                                   l225 1E9A  
                                                   l217 1E3A  
                                                   l209 1DDA  
                                                   l161 1B14  
                                                   l306 3904  
                                                   l234 1F06  
                                                   l226 1EA6  
                                                   l218 1E46  
                                                   l170 1B74  
                                                   l235 1F12  
                                                   l227 1EB2  
                                                   l219 1E52  
                                                   l171 1B80  
                                                   l163 1B20  
                                                   l236 1F1E  
                                                   l228 1EBE  
                                                   l180 1BEC  
                                                   l172 1B8C  
                                                   l164 1B2C  
                                                   l237 1F2A  
                                                   l229 1ECA  
                                                   l181 1BF8  
                                                   l173 1B98  
                                                   l165 1B38  
                                                   l190 1C64  
                                                   l182 1C04  
                                                   l174 1BA4  
                                                   l166 1B44  
                                                   l191 1C70  
                                                   l183 1C10  
                                                   l175 1BB0  
                                                   l167 1B50  
                                                   l424 374C  
                                                   l192 1C7C  
                                                   l184 1C1C  
                                                   l176 1BBC  
                                                   l168 1B5C  
                                                   l193 1C88  
                                                   l185 1C28  
                                                   l177 1BC8  
                                                   l169 1B68  
                                                   l194 1C94  
                                                   l186 1C34  
                                                   l178 1BD4  
                                                   l195 1CA0  
                                                   l187 1C40  
                                                   l179 1BE0  
                                                   l196 1CAC  
                                                   l188 1C4C  
                                                   l189 1C58  
                                                   l378 2C2A  
                                                   l459 30E0  
                                                   l652 2FF0  
                                                   l637 3890  
                                                   l823 134A  
                                                   l763 28AE  
                                                   l775 1B06  
                                                   l965 330A  
                                                   l899 2048  
                                ??_RF24_read_register_d 0010  
                                          __CFG_CPB$OFF 000000  
                                          __CFG_CPD$OFF 000000  
                            __end_of_child_payload_size 1007  
                                                   _isr 0008  
                                 _RF24_write_register_d 37EE  
                                                   prod 000FF3  
                                                   wreg 000FE8  
                         ??_RF24N_direct_child_route_to 0005  
                                          __CFG_LVP$OFF 000000  
                                   _RF24N_is_descendant 36BA  
                                          __CFG_WDT$OFF 000000  
                                 __size_of_SPI_transfer 0010  
                                                  l1416 269A  
                                                  l1426 3270  
                                                  l1436 33E0  
                                                  l1359 2D96  
                                                  l4121 2EE2  
                                                  l1369 3048  
                                                  l4117 2EAC  
                                                  l4061 2D48  
                                                  l4125 25D8  
                                                  l2453 27AA  
                                RF24_startFastWrite@buf 0026  
                                                  l4063 2D54  
                                                  l4135 2630  
                                                  l2471 286A  
                                                  l2455 27BE  
                                                  l6001 12C2  
                                                  l4073 2D88  
                                                  l4065 2D58  
                                                  l4081 3006  
                                                  l4153 1CB8  
                                                  l6003 12E0  
                                                  l5211 2C5E  
                                                  l4083 3012  
                                                  l5221 2C82  
                                                  l4085 3016  
                                                  l2469 2846  
                                                  l6007 12E4  
                                                  l5223 2C8C  
                                                  l5143 33F6  
                                                  l6041 1464  
                                                  l6025 1372  
                                                  l5241 3370  
                                                  l5313 34F8  
                                                  l5225 2C92  
                                                  l5217 2C70  
                                                  l5209 2C56  
                                                  l5153 3412  
                                                  l5145 33FE  
                                                  l4089 303A  
                                                  l6113 29BC  
                                                  l6035 1460  
                                                  l5251 339A  
                                                  l5411 3628  
                                                  l5155 3416  
                                                  l5139 1F36  
                                                  l4523 33D6  
                                                  l4515 33B6  
                                                  l6061 14BE  
                                                  l5421 2F1C  
                                                  l4517 33BE  
                                RF24_startFastWrite@len 0028  
                                                  l6071 15BE  
                                                  l6063 1502  
                                                  l5239 3368  
                                                  l5255 35DA  
                                                  l5431 2F5E  
                                                  l5407 3624  
                                                  l5335 346C  
                                                  l5343 3484  
                                                  l6215 2CA6  
                                                  l4519 33C2  
                                                  l5505 30BA  
                                                  l6073 15C2  
                                                  l6049 1476  
                                                  l5249 3396  
                                                  l5601 1964  
                                                  l5425 2F24  
                                                  l5281 2DF6  
                                                  l5273 2DDC  
                                                  l6225 2D1A  
                                                  l6083 3300  
                                                  l5531 163C  
                                                  l5523 1622  
                                                  l5443 3202  
                                                  l5259 35EC  
                                                  l5275 2DE4  
                                                  l4491 2B24  
                                                  l5701 277E  
                                                  l5445 321C  
                                                  l5357 2A34  
                                                  l5285 2E0A  
                                                  l6165 2920  
                                                  l6093 296A  
                                                  l5703 2782  
                                                  l5631 1AB2  
                                                  l5535 165A  
                                                  l5527 1638  
                                                  l5471 23FA  
                                                  l5359 2A4A  
                                                  l5287 2E14  
                                                  l4495 2B54  
                                                  l6263 3656  
                                                  l5625 1AA6  
                                                  l5617 1A3E  
                                                  l5633 1ADC  
                                                  l5481 2424  
                                                  l5465 23C0  
                                                  l5721 2BB8  
                                                  l5369 2ACA  
                                                  l5289 2E1A  
                                                  l6185 22DC  
                                                  l6169 2946  
                                                  l6097 297C  
                                                  l5491 247C  
                                                  l5483 243E  
                                                  l5475 240E  
                                                  l5723 2BC2  
                                                  l5395 3556  
                                                  l6187 22F8  
                                                  l5661 34D8  
                                                  l5581 18A0  
                                                  l5565 17C8  
                                                  l5469 23CE  
                                                  l5733 2C10  
                                                  l6197 233A  
                                                  l5813 24C4  
                                                  l5743 323E  
                                                  l5655 34BC  
                                                  l5671 3584  
                                                  l5591 1940  
                                                  l5575 1858  
                                                  l5487 2474  
                                                  l5647 31BA  
                                                  l5831 2574  
                                                  l5823 251E  
                                                  l5745 3246  
                                                  l5673 358C  
                                                  l5665 3560  
                                                  l5649 31C0  
                                                  l5913 225A  
                                                  l5905 21A0  
                                                  l5809 24BC  
                                                  l5691 2718  
                                                  l5755 3266  
                                                  l5747 324A  
                                                  l5595 1948  
                                                  l5579 1880  
                                                  l5915 2266  
                                                  l5819 24FE  
                                                  ?_isr 0001  
                                                  l5669 3572  
                                                  l5909 21BA  
                                                  l5829 2550  
                                                  l5847 2032  
                                                  l5697 2748  
                                                  l5961 1166  
                                                  l5953 112A  
                                                  l5793 2FD6  
                                                  l5939 10C2  
                                                  l5787 2FBE  
                                                  l5981 1226  
                                                  l5967 11D8  
                                                  l5895 2162  
                                                  l5887 212E  
                                                  l5995 128C  
                                                  l5987 1262  
                                                  STR_1 1017  
                                                  STR_2 103B  
                                                  STR_3 104D  
                                                  STR_4 1052  
                            __size_of_RF24_read_payload 0080  
                                                  u4540 2EDA  
                                                  u6205 1DA6  
                                                  u4605 1B1C  
                                                  u6206 1DA8  
                                                  u4550 2F10  
                                                  u4606 1B1E  
                                                  u6215 1DB2  
                                                  u4615 1B28  
                                                  u6216 1DB4  
                                                  u4616 1B2A  
                                                  u6305 1E1E  
                                                  u6225 1DBE  
                                                  u4705 1B94  
                                                  u4625 1B34  
                                                  u7050 30B6  
                                                  u6306 1E20  
                                                  u6226 1DC0  
                                                  u4706 1B96  
                                                  u4626 1B36  
                                                  u7131 16F2  
                                                  u6315 1E2A  
                                                  u6235 1DCA  
                                                  u4547 2ED0  
                                                  u4715 1BA0  
                                                  u4635 1B40  
                                                  u7060 30B8  
                                                  u6316 1E2C  
                                                  u6236 1DCC  
                                                  u4716 1BA2  
                                                  u4636 1B42  
                                                  u6405 1E96  
                                                  u6325 1E36  
                                                  u6245 1DD6  
                                                  u4557 2F06  
                                                  u4805 1C0C  
                                                  u4725 1BAC  
                                                  u4645 1B4C  
                                                  u7310 19C0  
                                                  u6406 1E98  
                                                  u6326 1E38  
                                                  u6246 1DD8  
                                                  u4806 1C0E  
                                                  u4726 1BAE  
                                                  u4646 1B4E  
                                                  u6415 1EA2  
                                                  u6335 1E42  
                                                  u6255 1DE2  
                                                  u4815 1C18  
                                                  u4735 1BB8  
                                                  u4655 1B58  
                                                  u7160 1746  
                                                  u6416 1EA4  
                                                  u6336 1E44  
                                                  u6256 1DE4  
                                                  u4816 1C1A  
                                                  u4736 1BBA  
                                                  u4656 1B5A  
                                                  u6505 1F0E  
                                                  u6425 1EAE  
                                                  u6345 1E4E  
                                                  u6265 1DEE  
                                                  u4905 1C84  
                                                  u4825 1C24  
                                                  u4745 1BC4  
                                                  u4665 1B64  
                                                  u7090 1622  
                                                  u6506 1F10  
                                                  u6426 1EB0  
                                                  u6346 1E50  
                                                  u6266 1DF0  
                                                  u4906 1C86  
                                                  u4826 1C26  
                                                  u4746 1BC6  
                                                  u4666 1B66  
                                                  u6515 1F1A  
                                                  u6435 1EBA  
                                                  u6355 1E5A  
                                                  u6275 1DFA  
                                                  u6195 1D9A  
                                                  u4915 1C90  
                                                  u4835 1C30  
                                                  u4755 1BD0  
                                                  u4675 1B70  
                                                  u7500 37EA  
                                                  u8044 32F2  
                                                  u6516 1F1C  
                                                  u6436 1EBC  
                                                  u6356 1E5C  
                                                  u6276 1DFC  
                                                  u6196 1D9C  
                                                  u4916 1C92  
                                                  u4836 1C32  
                                                  u4756 1BD2  
                                                  u4676 1B72  
                                   RF24_writeFast_m@buf 002F  
                                                  i2l53 3708  
                                                  u8045 32EC  
                                                  u6525 1F26  
                                                  u6445 1EC6  
                                                  u6365 1E66  
                                                  u6285 1E06  
                                                  u4925 1C9C  
                                                  u4845 1C3C  
                                                  u4765 1BDC  
                                                  u4685 1B7C  
                                                  u5565 2E4E  
                                                  u6526 1F28  
                                                  u6446 1EC8  
                                                  u6366 1E68  
                                                  u6286 1E08  
                                                  u4926 1C9E  
                                                  u4846 1C3E  
                                                  u4766 1BDE  
                                                  u4686 1B7E  
                                                  u6535 1F32  
                                                  u6455 1ED2  
                                                  u6375 1E72  
                                                  u6295 1E12  
                                                  u4935 1CA8  
                                                  u4855 1C48  
                                                  u4775 1BE8  
                                                  u4695 1B88  
                                                  u6536 1F34  
                                                  u6456 1ED4  
                                                  u6376 1E74  
                                                  u6296 1E14  
                                                  u4936 1CAA  
                                                  u4856 1C4A  
                                                  u4776 1BEA  
                                                  u4696 1B8A  
                                                  u7505 37E2  
                                                  u6465 1EDE  
                                                  u6385 1E7E  
                                                  u4945 1CB4  
                                                  u4865 1C54  
                                                  u4785 1BF4  
                                                  u6466 1EE0  
                                                  u6386 1E80  
                                                  u4946 1CB6  
                                                  u4866 1C56  
                                                  u4786 1BF6  
                                                  u6475 1EEA  
                                                  u6395 1E8A  
                                                  u4875 1C60  
                                                  u4795 1C00  
                                                  u7700 214E  
                                                  u6724 310A  
                                                  u6476 1EEC  
                                                  u6396 1E8C  
                                                  u4876 1C62  
                                                  u4796 1C02  
                                                  u6725 3106  
                                                  u6485 1EF6  
                                                  u4885 1C6C  
                                                  u6750 36E4  
                                                  u6486 1EF8  
                                                  u7614 25B2  
                                                  u4886 1C6E  
                                                  u6495 1F02  
                                                  u7615 25AE  
                                                  u4895 1C78  
                                                  u6496 1F04  
                                                  u4896 1C7A  
                                                  u6924 31F8  
                                   RF24_writeFast_m@len 0031  
                                                  u6925 31F4  
                                                  u7910 1282  
                                                  u6934 3212  
                                                  u6935 320E  
                                                  u6784 344E  
                                                  u6961 23A2  
                                                  u6785 344A  
                                 RF24N_write_to_pipe@ok 003D  
                                     ??_RF24N_available 0003  
                           RF24_write_register_d@status 0014  
                                          __CFG_PWRT$ON 000000  
                          RF24N_is_valid_address@result 0006  
                                    __size_of_RF24_ce_d 0016  
                                    __size_of_RF24_init 0030  
                                    __size_of_RF24_read 001C  
                                                  _buff 0058  
                                                  _main 362C  
                                        ??_RF24_isValid 0003  
                                                  _loop 2CA0  
                                                  fsr0h 000FEA  
                                                  fsr1h 000FE2  
                                                  indf0 000FEF  
                                                  fsr0l 000FE9  
                                                  fsr2h 000FDA  
                                                  fsr1l 000FE1  
                                                  indf2 000FDF  
                                                  fsr2l 000FD9  
                                                  btemp 0070  
                           ?_RF24_enableDynamicPayloads 0001  
                                          RF24_read@buf 0021  
                                                  prodh 000FF4  
                                                  prodl 000FF3  
                                          RF24_read@len 0023  
                                                  start 0014  
                                         __CFG_IESO$OFF 000000  
                                         __CFG_MCLRE$ON 000000  
                                        ??_RF24_powerUp 0015  
                                          ___param_bank 000010  
                              ??_RF24N_is_valid_address 0005  
                                _RF24_openWritingPipe_d 2F18  
                                  ?_RF24N_is_descendant 0003  
                                   RF24_spiTrans@status 0013  
                          __end_of_RF24N_levelToAddress 3314  
                                                 ??_isr 0001  
                                ?_RF24_closeReadingPipe 0001  
                               _RF24_write_payload$1892 0022  
                               _RF24_write_payload$1893 0024  
                                                 ?_main 0001  
                                                 ?_loop 0001  
                                       __end_of___lldiv 2DA8  
                                       __end_of___llmod 305A  
                           __size_of_RF24N_pipe_address 011E  
                                       __end_of___lwdiv 327A  
                                       __end_of___lwmod 33EA  
                                      SPI_transfer@data 0003  
                                                 _RCREG 000FAE  
                                 RF24N_begin_d@_channel 0028  
                                   __size_of_RF24N_init 005C  
                                   __size_of_RF24N_read 0122  
                                          _SPI_transfer 38FC  
                                                 _TMR0H 000FD7  
                                                 _TMR0L 000FD6  
                                                 _SPBRG 000FAF  
                                                 _TXREG 000FAD  
                                     ?_RF24_txStandBy_t 0017  
                                         __CFG_WRT0$OFF 000000  
                                         __CFG_WRT1$OFF 000000  
                                         __CFG_WRT2$OFF 000000  
                                         __CFG_WRT3$OFF 000000  
                             __size_of_RF24_available_p 0032  
                                        __CFG_EBTR0$OFF 000000  
                                        __CFG_FCMEN$OFF 000000  
                                        __CFG_EBTR1$OFF 000000  
                                        __CFG_EBTR2$OFF 000000  
                                        __CFG_EBTR3$OFF 000000  
                                   __size_of_RF24_begin 00D0  
                                         __CFG_WRTB$OFF 000000  
                                         __CFG_WRTC$OFF 000000  
                                         __CFG_WRTD$OFF 000000  
                                   __size_of_RF24_csn_d 0014  
                          ??_RF24_getDynamicPayloadSize 0014  
                                    ??_RF24_txStandBy_t 001C  
                                        __CFG_EBTRB$OFF 000000  
                                                 _delay 335E  
                                        RF24_ce_d@level 0006  
                                                 _itoa_ 368C  
                                       __end_of_memmove 2B80  
                                   RF24N_pipe_address@i 0016  
                                                 _mtime 003E  
                                       __end_of_pinMode 1D8E  
                                                 _setup 327A  
                                                 _ultoa 25C8  
                                        __CFG_BOREN$OFF 000000  
                                                 tablat 000FF5  
                                       ??_RF24_flush_rx 0014  
                                       ??_RF24_flush_tx 0014  
                               _RF24_write_register_c_d 35C6  
                                                 plusw0 000FEB  
                                                 plusw1 000FE3  
                                                 plusw2 000FDB  
                          RF24_startFastWrite@multicast 0029  
                                                 status 000FD8  
                                    __size_of_SPI_begin 001A  
                       __size_of_RF24_toggle_features_d 0016  
                  __size_of_RF24N_direct_child_route_to 0036  
                                       ??_RF24_spiTrans 0010  
                                  __end_of_digitalWrite 200C  
                                       __initialization 3314  
                            __size_of_RF24_setAutoAck_p 0056  
                                 ??_RF24N_is_descendant 0005  
                           __size_of_RF24_write_payload 008C  
                                          __end_of_main 365C  
                                          __end_of_loop 2D26  
RF24N_logicalToPhysicalAddress@pre_conversion_send_node 0017  
RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe 001B  
                  RF24N_is_direct_child@child_node_mask 000F  
                                 RF24N_begin_d@retryVar 0027  
                                        __CFG_OSC$HSPLL 000000  
                   __size_of_RF24_getDynamicPayloadSize 0038  
                                     __end_of_RF24_ce_d 38D6  
                                                ??_main 0039  
                                     __end_of_RF24_init 368C  
                               RF24_setAutoAck_p@enable 0015  
                                     __end_of_RF24_read 3848  
                                                ??_loop 0029  
                                         __activetblptr 000002  
                 RF24N_pipe_address@address_translation 0062  
                                ?_RF24_write_register_d 0012  
                           __end_of_RF24N_setup_address 287C  
                                     _child_pipe_enable 100D  
                                        _Serial_println 3862  
                                                ?_delay 0003  
                                      ___llmod@dividend 0003  
                                                ?_itoa_ 001D  
                                                ?_setup 0001  
                                                ?_ultoa 0010  
                                     ?_RF24_writeFast_m 002F  
                                    delayMicroseconds@d 000A  
                                    delayMicroseconds@i 000B  
                                    delayMicroseconds@j 000D  
                              RF24_available_p@pipe_num 0014  
                                  RF24N_write@isAckType 00A1  
                                    ??_RF24_writeFast_m 0033  
                                                _SPBRGH 000FB0  
                                  __end_of_RF24N_update 1B10  
                                                _SSPBUF 000FC9  
                                  __size_of_RF24N_write 026A  
                             RF24N_is_direct_child@node 0009  
                               RF24N_write_to_pipe@node 0034  
                               RF24N_write_to_pipe@pipe 0036  
                                 RF24_write_payload@buf 0010  
                                        __CFG_XINST$OFF 000000  
                                        RF24_csn_d@mode 000F  
                       __size_of_RF24N_is_valid_address 0036  
                                                ___wmul 3712  
                        RF24_openReadingPipe_d@address_ 0015  
                                   _RF24_endTransaction 3936  
                                             ??___lldiv 000B  
                                             ??___llmod 000B  
                                             ??___lwdiv 0007  
                                             ??___lwmod 0007  
                           __end_of_RF24_startFastWrite 3522  
                                                _memcpy 34AA  
                                                delay@i 0005  
                                                delay@j 0007  
                                                _millis 38EA  
                                                clear_0 331C  
                                                clear_1 332E  
                                    __size_of_Serial_tx 000C  
                             __end_of_child_pipe_enable 1013  
                                __end_of_Serial_println 387C  
                                _RF24_toggle_features_d 3894  
                                  __end_of_RF24_isValid 3894  
                                     __end_of_SPI_begin 3862  
                                          __pdataCOMRAM 0062  
                                  RF24_read_payload@buf 0010  
                                             ??_memmove 0009  
                                             ??_pinMode 0004  
                                 _RF24N_is_direct_child 305A  
                                          __mediumconst 0000  
                                 _RF24_beginTransaction 393E  
                                                tblptrh 000FF7  
                                                tblptrl 000FF6  
                                                tblptru 000FF8  
                                                ultoa@c 001C  
                                  __end_of_RF24_powerUp 37AA  
                                                ultoa@v 0018  
                                   _RF24N_write_to_pipe 2B80  
                             ??_RF24_write_register_c_d 0013  
                                  ?_RF24_endTransaction 0001  
                                      Serial_begin@baud 0010  
                                  _RF24N_levelToAddress 32C8  
                            __end_of_RF24_stopListening 3120  
                 RF24N_direct_child_route_to@child_mask 0007  
                                            __accesstop 0080  
                               __end_of__initialization 3354  
                                          ??_RF24N_init 0003  
                          RF24_openWritingPipe_d@value_ 0015  
                                          ??_RF24N_read 0015  
                                       __CFG_PBADEN$OFF 000000  
                                 RF24_setDataRate@speed 0016  
                                 RF24_setDataRate@setup 0017  
                             __size_of_RF24_setDataRate 0066  
                           __end_of_RF24_startListening 31D2  
                                      RF24_spiTrans@cmd 0012  
                                         ___rparam_used 000001  
                                          ??_RF24_begin 0019  
                                          ??_RF24_csn_d 000F  
                                           pinMode@mode 0003  
                                       RF24_begin@setup 001A  
                                        __pcstackCOMRAM 0001  
                                            ___inthi_sp 0692  
                       RF24N_direct_child_route_to@node 0003  
                                  ?_RF24N_write_to_pipe 0034  
                              __size_of_RF24_get_status 0008  
                                         __end_of_delay 33A8  
                               ?_RF24_openReadingPipe_d 0015  
                                         __end_of_itoa_ 36BA  
                                         __end_of_setup 32C8  
                                         __end_of_ultoa 26BE  
                                       ?_Serial_println 0027  
                                 RF24_setAutoAck_p@pipe 0019  
                                  _RF24_setChannel$1915 0015  
                                       _RF24N_available 37CC  
                                _RF24_read_payload$1900 001F  
                                    __end_of_RF24N_init 317C  
                                    __end_of_RF24N_read 2398  
                                      _RF24_available_p 35FA  
                    __end_of_RF24_getDynamicPayloadSize 355A  
                            _RF24_getDynamicPayloadSize 3522  
                                RF24_available_p@status 0018  
                                _RF24N_is_valid_address 355A  
                                 ??_RF24_endTransaction 0010  
                                    __end_of_RF24_begin 2A24  
                                               ??_delay 0005  
                                    __end_of_RF24_csn_d 38EA  
                                               ??_itoa_ 0021  
                                               ??_setup 002A  
                                               ??_ultoa 0018  
                                 ?_RF24N_levelToAddress 0003  
                                           loop@payload 0031  
                                         ?_Serial_begin 0010  
                                    _child_payload_size 1001  
                                     __end_of_Serial_tx 3926  
                                 __size_of_digitalWrite 027E  
                                         ?_Serial_print 0021  
                             RF24_closeReadingPipe@pipe 0019  
                               ?_RF24_openWritingPipe_d 0015  
                                            _child_pipe 1007  
                              __size_of_RF24_setChannel 0026  
                                 ??_RF24N_write_to_pipe 0038  
                        __end_of_RF24_openReadingPipe_d 25C8  
                               ??_RF24_closeReadingPipe 0015  
                                               ?___wmul 0003  
          RF24N_logicalToPhysicalAddress@conversionInfo 0012  
                                 __end_of_RF24N_begin_d 2954  
                                               ?_memcpy 0003  
                                               ?_millis 0003  
                            RF24_write_payload@data_len 0012  
                                   RF24N_enqueue@header 0017  
                              __size_of_RF24_setRetries 0022  
                                ?_RF24N_is_direct_child 0009  
                                 __end_of_RF24N_enqueue 15CA  
                                ?_RF24_beginTransaction 0001  
                                   RF24N_enqueue@result 0024  
                         __size_of_RF24_read_register_d 001E  
                            RF24N_is_valid_address@node 0003  
                                          _digitalWrite 1D8E  
                                 __size_of_RF24N_update 0546  
                                        ??_Serial_begin 0014  
                                        ??_Serial_print 0023  
                        __end_of_RF24_openWritingPipe_d 2F8E  
                          RF24N_write_to_pipe@multicast 0037  
                             __size_of_RF24_txStandBy_t 00BC  
                                               __Hparam 0000  
                                     RF24N_write@header 00A2  
                                               __Lparam 0000  
                           RF24N_write_to_pipe@out_pipe 0038  
                                               ___lldiv 2D26  
                                       __size_of___wmul 0026  
                      ??_RF24N_logicalToPhysicalAddress 0014  
                       ?_RF24N_logicalToPhysicalAddress 0012  
                                               ___llmod 2FF4  
                               __end_of_RF24N_available 37EE  
                                               ___lwdiv 3228  
                                 __size_of_RF24_isValid 0018  
                                               ___lwmod 33A8  
                                          __psmallconst 1000  
                               ??_RF24_write_register_d 0013  
                            __end_of_RF24N_pipe_address 24B6  
                                       __CFG_STVREN$OFF 000000  
                                               __pcinit 3314  
                                       __size_of_memcpy 0040  
                         RF24_write_register_c_d@status 0013  
                                       __size_of_millis 0012  
                                               __ramtop 1000  
                                      RF24N_read@header 000F  
                                               __ptext0 362C  
                                               __ptext1 327A  
                                               __ptext2 2E28  
                                               __ptext3 365C  
                                               __ptext4 2954  
                                               __ptext5 1B10  
                                               __ptext6 3848  
                                               __ptext7 3894  
                                               __ptext8 2F8E  
                                               __ptext9 3120  
                                 RF24N_write@conversion 00A5  
                                          _RF24N_update 15CA  
                                             _T0CONbits 000FD5  
                                      RF24N_read@maxlen 0013  
                                     ??_RF24_get_status 0014  
                   __end_of_RF24N_direct_child_route_to 35C6  
                           _RF24N_direct_child_route_to 3590  
                                 __size_of_RF24_powerUp 0026  
                                          __size_of_isr 370A  
                                               _memmove 2AE0  
                                               _pinMode 1B10  
                                         Serial_print@i 0025  
                                 RF24N_pipe_address@dec 0011  
                                             _RF24_ce_d 38C0  
                                               _next_id 006E  
                                 RF24N_pipe_address@out 0014  
                                             _RF24_init 365C  
                                             _RF24_read 382C  
                             RF24N_enqueue@padding_2288 0022  
                                ??_RF24N_levelToAddress 0005  
                                        __pintcode_body 36E8  
                                     RF24N_begin_d@addr 0022  
                                  end_of_initialization 3354  
                                  RF24_setRetries@delay 0018  
                                  RF24_setRetries@count 0015  
                                               memcpy@d 0009  
                                               memcpy@n 0007  
                                               memcpy@s 000B  
                                         __Lmediumconst 0000  
                                               int_func 36E8  
                                 __end_of_RF24_flush_rx 3936  
                                 __end_of_RF24_flush_tx 394E  
                                      _RF24_setDataRate 2F8E  
                                       RF24_init@_cepin 0004  
                           __end_of_RF24N_is_descendant 36E8  
                              RF24N_pipe_address@result 000C  
                                       RF24_init@_cspin 0003  
                      RF24_getDynamicPayloadSize@result 0015  
                                          _RF24_isValid 387C  
                            __end_of_RF24_write_payload 2CA0  
                                     __end_of_this_node 1017  
                                       ___lldiv@divisor 0007  
                                       ___lldiv@counter 000F  
                                             _RCSTAbits 000FAB  
                                               postdec0 000FED  
                                               postdec2 000FDD  
                                               postinc0 000FEE  
                                               postinc2 000FDE  
                                 __end_of_RF24_spiTrans 38C0  
                             __size_of_RF24_writeFast_m 0040  
                                          _RF24_powerUp 3784  
                               ?_RF24_toggle_features_d 0001  
                             RF24N_pipe_address@address 0006  
                                            _other_node 1013  
                                     ??_RF24_setChannel 0015  
                                             _PORTAbits 000F80  
                                             _PORTBbits 000F81  
                                             _PORTCbits 000F82  
                                             _PORTDbits 000F83  
                                             _PORTEbits 000F84  
                                    _RF24N_enqueue$2286 0023  
                                            ?_RF24_ce_d 0001  
                                             _TRISAbits 000F92  
                                             _TRISBbits 000F93  
                                             _TRISCbits 000F94  
                                            ?_RF24_init 0003  
                                            ?_RF24_read 0021  
                                             _TRISDbits 000F95  
                                             _TRISEbits 000F96  
                 RF24N_logicalToPhysicalAddress@to_node 001C  
                              _RF24_startFastWrite$1970 002D  
                                 RF24N_write@reply_time 009D  
                                     ??_RF24_setRetries 0016  
                                             _SPI_begin 3848  
                                RF24_setDataRate@result 0015  
                                         ??_RF24N_write 0083  
                          __size_of_RF24N_setup_address 00DC  
                                             _TXSTAbits 000FAC  
                            RF24_write_register_d@value 0012  
                            RF24_write_register_c_d@buf 0010  
                            RF24_write_register_c_d@len 0012  
                            RF24_write_register_c_d@reg 0014  
                              __end_of_RF24_available_p 362C  
                                      ??_Serial_println 0029  
                        __end_of_RF24_toggle_features_d 38AA  
                            RF24_setChannel@max_channel 0018  
                                    _RF24_stopListening 30BE  
                                      ?_RF24N_available 0001  
                            RF24N_begin_d@_node_address 0020  
                                        __end_of___wmul 3738  
                                  RF24N_setup_address@i 0005  
                                  RF24N_setup_address@m 0007  
                                           _BAUDCONbits 000FB8  
                                         __pidataCOMRAM 390C  
                                  __end_of_Serial_begin 2EA2  
                                        __end_of_memcpy 34EA  
                              RF24_write_payload@status 001E  
                                        __end_of_millis 38FC  
                                  __end_of_Serial_print 2F18  
                                   ?_RF24_stopListening 0001  
                               ?_RF24N_is_valid_address 0003  
                                   start_initialization 3314  
                          __size_of_RF24_startFastWrite 0038  
                           ?_RF24_getDynamicPayloadSize 0001  
                                           __end_of_isr 3712  
                                       _RF24_begin$1931 0019  
                                            ?_SPI_begin 0001  
                                RF24_setAutoAck_p@en_aa 0018  
                             RF24_writeFast_m@multicast 0032  
                             RF24N_enqueue@message_size 0025  
                              RF24_write_register_d@reg 0013  
                                       ___llmod@divisor 0007  
                                  ??_RF24_stopListening 0015  
                                       ___llmod@counter 000B  
                                      _RF24_txStandBy_t 2A24  
                                   __end_of_RF24N_write 2276  
                          ??_RF24_enableDynamicPayloads 0015  
               RF24N_logicalToPhysicalAddress@multicast 0015  
                                   RF24N_write@directTo 0082  
                                             _Serial_tx 391A  
                                              ??___wmul 0007  
                        __size_of_RF24_closeReadingPipe 0040  
                          __size_of_RF24_startListening 0056  
                         __end_of_RF24_closeReadingPipe 346A  
                                      __CFG_LPT1OSC$OFF 000000  
                               ??_RF24N_is_direct_child 000B  
                                              ??_memcpy 0009  
                                              ??_millis 0007  
                               ??_RF24_beginTransaction 0010  
                        __end_of_RF24N_is_valid_address 3590  
                           __end_of_RF24_endTransaction 393E  
                                         ?_SPI_transfer 0001  
                                           __pbssBIGRAM 00A9  
                              ?_RF24_write_register_c_d 0010  
                                           __pbssCOMRAM 003E  
                                           ??_RF24_ce_d 0006  
                                         __pcstackBANK0 0080  
                                           ??_RF24_init 0004  
                                           ??_RF24_read 0024  
                              RF24_read_payload@current 001D  
                                            pinMode@pin 0004  
                                     _delayMicroseconds 33EA  
                   __size_of_RF24_enableDynamicPayloads 0026  
                                    ?_delayMicroseconds 0001  
                               RF24_openReadingPipe_d@i 001E  
                                            loop@header 0029  
                           __end_of_RF24N_write_to_pipe 2C14  
                                       RF24_powerUp@cfg 0015  
                           RF24_openReadingPipe_d@child 001F  
                                   ??_delayMicroseconds 0003  
                          __end_of_RF24_read_register_d 382C  
                                      ___lwdiv@dividend 0003  
                                            ?_Serial_tx 0001  
                                     _RF24_isValid$2046 0003  
                            RF24_read_payload@blank_len 001C  
                                     __CFG_CCP2MX$PORTC 000000  
                                       _RF24_get_status 3926  
                             RF24N_levelToAddress@level 0008  
                                             __pintcode 0008  
                                      _RF24_writeFast_m 346A  
                                              ?___lldiv 0003  
                                              ?___llmod 0003  
                                              ?___lwdiv 0003  
                                              ?___lwmod 0003  
                               RF24N_enqueue@isFragment 0020  
                        __size_of_RF24_write_register_d 0020  
                             RF24_write_payload@current 0020  
                                        ??_SPI_transfer 0003  
                         __end_of_RF24_write_register_d 380E  
                              __end_of_RF24_setDataRate 2FF4  
                                           __smallconst 1000  
                             __end_of_delayMicroseconds 342A  
                                              ?_memmove 0003  
                                              ?_pinMode 0003  
                           RF24_write_payload@blank_len 001F  
                               RF24N_pipe_address@F3856 0069  
                __end_of_RF24N_logicalToPhysicalAddress 27A0  
               __size_of_RF24N_logicalToPhysicalAddress 00E2  
                        _RF24N_logicalToPhysicalAddress 26BE  
                                           ??_SPI_begin 0003  
                                      ___lwdiv@quotient 0008  
                                        __size_of_delay 004A  
                                    _RF24N_pipe_address 2398  
                                        __size_of_itoa_ 002E  
                                        __size_of_setup 004E  
                    RF24N_setup_address@node_mask_check 000C  
                                        __size_of_ultoa 00F6  
                                           _RF24N_write 200C  
                                          Serial_tx@val 0003  
                                  RF24N_enqueue@padding 0021  
                                       Serial_print@val 0021  
                                __size_of_RF24N_begin_d 00D8  
                                        ___wmul@product 0007  
                                              _LATAbits 000F89  
                                              _LATBbits 000F8A  
                                              _LATCbits 000F8B  
                                              _LATDbits 000F8C  
                                              _LATEbits 000F8D  
                                   ?_RF24N_pipe_address 0003  
                               RF24N_pipe_address@count 0013  
                           RF24N_is_valid_address@digit 0005  
                                       _RF24_setChannel 3738  
                                __size_of_RF24N_enqueue 0574  
                                              _PIR1bits 000F9E  
                                 __size_of_Serial_begin 007A  
                                      __CFG_WDTPS$32768 000000  
                                             _this_node 1015  
                                 __size_of_Serial_print 0076  
                                   _RF24N_setup_address 27A0  
                       __end_of_RF24_write_register_c_d 35FA  
                                       _RF24_setRetries 37AA  
                                    _RF24_write_payload 2C14  
                                  ??_RF24N_pipe_address 0008  
                                     ___wmul@multiplier 0003  
                           RF24N_is_direct_child@result 0011  
                              RF24N_setup_address@count 0009  
                                RF24_setChannel@channel 0017  
                                   ?_RF24_write_payload 0010  
                                    __end_of_child_pipe 100D  
                                             copy_data0 3348  
                                  ?_RF24N_setup_address 0001  
                         __size_of_RF24N_levelToAddress 004C  
                               __end_of_RF24_get_status 392E  
                                          _Serial_begin 2E28  
                              ??_RF24_openReadingPipe_d 0017  
                    __end_of_RF24_enableDynamicPayloads 3784  
                            _RF24_enableDynamicPayloads 375E  
                                          _Serial_print 2EA2  
                                              __Hrparam 0000  
                                   _RF24_startFastWrite 34EA  
                                           ??_Serial_tx 0003  
                                              __Lrparam 0000  
                                     ?_RF24_available_p 0014  
                                  ??_RF24_write_payload 0014  
                                        RF24N_begin_d@i 0029  
                          __size_of_RF24N_is_descendant 002E  
                         RF24_openReadingPipe_d@address 0019  
                                    ??_RF24_available_p 0016  
                                             memmove@d1 0003  
                                             memmove@s1 0005  
                           RF24_write_payload@writeType 0013  
                                      __size_of___lldiv 0082  
                                      __size_of___llmod 0066  
                                      __size_of___lwdiv 0052  
                                      __size_of___lwmod 0042  
                                    RF24N_write@to_node 0080  
                                         _RF24N_begin_d 287C  
                               RF24_read_payload@status 001B  
                              __end_of_RF24_txStandBy_t 2AE0  
                            __size_of_delayMicroseconds 0040  
                                __size_of_RF24_flush_rx 0008  
                                __size_of_RF24_flush_tx 0008  
                                         _RF24N_enqueue 1056  
                                  ?_RF24_startFastWrite 0026  
                                  _RF24_read_register_d 380E  
                           RF24_openWritingPipe_d@value 001F  
                             RF24_read_payload@data_len 0012  
                                      __size_of_memmove 00A0  
                                      __size_of_pinMode 027E  
                                       ___lwdiv@divisor 0005  
                                       ___lwdiv@counter 0007  
                              ??_RF24_openWritingPipe_d 0017  
                                              __ptext10 287C  
                                              __ptext11 3712  
                                              __ptext20 25C8  
                                              __ptext12 33A8  
                                              __ptext21 2FF4  
                                              __ptext13 37AA  
                                              __ptext30 33EA  
                                              __ptext22 2D26  
                                              __ptext14 3738  
                                              __ptext31 2C14  
                                              __ptext23 3862  
                                              __ptext15 24B6  
                                              __ptext40 38C0  
                                              __ptext32 2DA8  
                                              __ptext24 2EA2  
                                              __ptext16 375E  
                                              __ptext41 3522  
                                              __ptext33 38AA  
                                              __ptext25 391A  
                                              __ptext17 27A0  
                                              __ptext50 200C  
                                              __ptext42 392E  
                                              __ptext34 3926  
                                              __ptext26 2276  
                                              __ptext18 2CA0  
                                              __ptext51 317C  
                                              __ptext43 35FA  
                                              __ptext35 342A  
                                              __ptext27 2AE0  
                                              __ptext19 368C  
                                              __ptext60 15CA  
                                              __ptext52 35C6  
                                              __ptext44 382C  
                                              __ptext36 30BE  
                                              __ptext28 1D8E  
                                              __ptext61 335E  
                                              __ptext53 3784  
                                              __ptext45 38FC  
                                              __ptext37 34EA  
                                              __ptext29 38EA  
                                              __ptext70 305A  
                                              __ptext62 387C  
                                              __ptext54 3946  
                                              __ptext46 3936  
                                              __ptext38 346A  
                                              __ptext71 36BA  
                                              __ptext63 32C8  
                                              __ptext55 37EE  
                                              __ptext47 393E  
                                              __ptext39 2A24  
                                              __ptext72 3590  
                                              __ptext64 355A  
                                              __ptext56 380E  
                                              __ptext48 38D6  
                                              __ptext65 1056  
                                              __ptext57 2B80  
                                              __ptext49 2F18  
                                              __ptext66 34AA  
                                              __ptext58 31D2  
                                              __ptext67 3228  
                                              __ptext59 2398  
                                              __ptext68 37CC  
                                              __ptext69 26BE  
                                 ??_RF24N_setup_address 0003  
                                     RF24N_read@bufsize 001C  
                               RF24_openWritingPipe_d@i 0024  
                                     RF24N_read@padding 001B  
                                   _RF24_startListening 317C  
                                __size_of_RF24_spiTrans 0016  
                               __end_of_RF24_setChannel 375E  
                                     RF24N_read@message 0011  
                                         __size_of_main 0030  
                               RF24_read_register_d@reg 0010  
                                     _RF24_read_payload 2DA8  
                                            _RF24N_init 3120  
                                            _RF24N_read 2276  
                                         __size_of_loop 0086  
                                  __end_of_SPI_transfer 390C  
                                              delay@val 0003  
                                    ?_RF24_read_payload 0010  
                               RF24N_is_descendant@node 0003  
                                            _RF24_begin 2954  
                                RF24N_pipe_address@node 0003  
                                RF24N_pipe_address@pipe 0005  
                                            _RF24_csn_d 38D6  
                               __end_of_RF24_setRetries 37CC  
                                  ?_RF24_startListening 0001  
                                   ??_RF24_read_payload 0013  
                                        ?_RF24N_begin_d 0020  
                         RF24N_levelToAddress@levelAddr 0009  
                                     Serial_println@val 0027  
                            RF24_startFastWrite@startTx 002A  
                        __size_of_RF24N_is_direct_child 0064  
                         __end_of_RF24N_is_direct_child 30BE  
                        __size_of_RF24_beginTransaction 0008  
                         __end_of_RF24_beginTransaction 3946  
                                        ?_RF24N_enqueue 0017  
                                 ??_RF24_startFastWrite 002B  
                                            _INTCONbits 000FF2  
                                 ?_RF24_read_register_d 0001  
                              __size_of_RF24N_available 0022  
                                              memcpy@d1 0003  
                                              memcpy@s1 0005  
                                         ?_digitalWrite 0003  
                                             ultoa@base 0016  
                                              memmove@d 000B  
                                              memmove@n 0007  
                                              memmove@s 000D  
                               RF24_txStandBy_t@timeout 0017  
                                              itoa_@val 001D  
                              __end_of_RF24_writeFast_m 34AA  
                               RF24_txStandBy_t@startTx 001B  
                                              intlevel2 0000  
                             __end_of_RF24_read_payload 2E28  
                                      ___lwmod@dividend 0003  
                                      ?_RF24_get_status 0001  
                                      ___lldiv@dividend 0003  
                                    __end_of_other_node 1015  
                      __size_of_RF24_write_register_c_d 0034  
                       __size_of_RF24_openReadingPipe_d 0112  
                           __size_of_RF24_stopListening 0062  
                                         _RF24_flush_rx 392E  
                                         _RF24_flush_tx 3946  
                                 ??_RF24_startListening 001A  
                                     _RF24_setAutoAck_p 31D2  
                                         _RF24_spiTrans 38AA  
                                    ?_RF24_setAutoAck_p 0015  
                                 _RF24_closeReadingPipe 342A  
                                              ultoa@buf 0010  
                                              ultoa@val 0012  
                                      digitalWrite@mode 0003  
                                     ?_RF24_setDataRate 0001  
                                      ___lldiv@quotient 000B  
                          ?_RF24N_direct_child_route_to 0003  
                                       ___lwmod@divisor 0005  
                                         RF24N_write@ok 00A4  
                                       ___lwmod@counter 0007  
                               __size_of_Serial_println 001A  
                                        ??_digitalWrite 0004  
                                   ??_RF24_setAutoAck_p 0016  
                                    ??_RF24_setDataRate 0015  
                                           _SSPCON1bits 000FC6  
                RF24N_logicalToPhysicalAddress@directTo 0019  
                       __size_of_RF24_openWritingPipe_d 0076  
                          __size_of_RF24_endTransaction 0008  
                                 RF24_txStandBy_t@start 0028  
                                          ?_RF24N_write 0080  
                                       digitalWrite@pin 0005  
                                      ?_RF24_setChannel 0001  
                                           ?_RF24N_init 0001  
                                           ?_RF24N_read 000F  
                                        ?_RF24_flush_rx 0001  
                                        ?_RF24_flush_tx 0001  
                              ??_RF24_toggle_features_d 0010  
                                         ?_RF24_isValid 0001  
                        RF24N_setup_address@parent_mask 000A  
                                           ?_RF24_begin 0001  
                                           ?_RF24_csn_d 0001  
                                      ?_RF24_setRetries 0015  
                             __end_of_RF24_setAutoAck_p 3228  
