

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Dec  5 19:29:25 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92  0000                     
    93 ;;RF24N_update@val	offset	0
    94 ;;RF24N_update@header	offset	1
    95 ;;RF24N_update@returnVal	offset	3
    96 ;;RF24N_update@pipe_num	offset	4
    97 ;;RF24N_write@header	offset	0
    98 ;;RF24N_write@conversion	offset	2
    99 ;;RF24N_write@reply_time	offset	6
   100 ;;RF24N_write@ok	offset	10
   101 ;;RF24N_write@isAckType	offset	11
   102 ;;RF24N_write@to_node	offset=-2 (param)
   103 ;;RF24N_write@directTo	offset=-3 (param)
   104                           
   105                           	psect	idataCOMRAM
   106  003BEC                     __pidataCOMRAM:
   107                           	opt stack 0
   108                           
   109                           ;initializer for _next_id
   110  003BEC  0001               	dw	1
   111                           
   112                           	psect	idataBANK0
   113  003BAC                     __pidataBANK0:
   114                           	opt stack 0
   115                           
   116                           ;initializer for RF24N_pipe_address@address_translation
   117  003BAC  C3                 	db	195
   118  003BAD  3C                 	db	60
   119  003BAE  33                 	db	51
   120  003BAF  CE                 	db	206
   121  003BB0  3E                 	db	62
   122  003BB1  E3                 	db	227
   123  003BB2  EC                 	db	236
   124                           
   125                           ;initializer for RF24N_pipe_address@F3856
   126  003BB3  CC                 	db	204
   127  003BB4  CC                 	db	204
   128  003BB5  CC                 	db	204
   129  003BB6  CC                 	db	204
   130  003BB7  CC                 	db	204
   131                           
   132                           	psect	smallconst
   133  001000                     __psmallconst:
   134                           	opt stack 0
   135  001000  00                 	db	0
   136  001001                     _child_payload_size:
   137                           	opt stack 0
   138  001001  11                 	db	17
   139  001002  12                 	db	18
   140  001003  13                 	db	19
   141  001004  14                 	db	20
   142  001005  15                 	db	21
   143  001006  16                 	db	22
   144  001007                     __end_of_child_payload_size:
   145                           	opt stack 0
   146  001007                     _child_pipe:
   147                           	opt stack 0
   148  001007  0A                 	db	10
   149  001008  0B                 	db	11
   150  001009  0C                 	db	12
   151  00100A  0D                 	db	13
   152  00100B  0E                 	db	14
   153  00100C  0F                 	db	15
   154  00100D                     __end_of_child_pipe:
   155                           	opt stack 0
   156  00100D                     _child_pipe_enable:
   157                           	opt stack 0
   158  00100D  00                 	db	0
   159  00100E  01                 	db	1
   160  00100F  02                 	db	2
   161  001010  03                 	db	3
   162  001011  04                 	db	4
   163  001012  05                 	db	5
   164  001013                     __end_of_child_pipe_enable:
   165                           	opt stack 0
   166  001013                     _interval:
   167                           	opt stack 0
   168  001013  07D0               	dw	2000
   169  001015  0000               	dw	0
   170  001017                     __end_of_interval:
   171                           	opt stack 0
   172  001017                     _other_node:
   173                           	opt stack 0
   174  001017  0000               	dw	0
   175  001019                     __end_of_other_node:
   176                           	opt stack 0
   177  001019                     _this_node:
   178                           	opt stack 0
   179  001019  0001               	dw	1
   180  00101B                     __end_of_this_node:
   181                           	opt stack 0
   182  0000                     _BAUDCONbits	set	4024
   183  0000                     _INTCONbits	set	4082
   184  0000                     _LATAbits	set	3977
   185  0000                     _LATBbits	set	3978
   186  0000                     _LATCbits	set	3979
   187  0000                     _LATDbits	set	3980
   188  0000                     _LATEbits	set	3981
   189  0000                     _PIR1bits	set	3998
   190  0000                     _PORTAbits	set	3968
   191  0000                     _PORTBbits	set	3969
   192  0000                     _PORTCbits	set	3970
   193  0000                     _PORTDbits	set	3971
   194  0000                     _PORTEbits	set	3972
   195  0000                     _RCREG	set	4014
   196  0000                     _RCSTAbits	set	4011
   197  0000                     _SPBRG	set	4015
   198  0000                     _SPBRGH	set	4016
   199  0000                     _SSPBUF	set	4041
   200  0000                     _SSPCON1bits	set	4038
   201  0000                     _SSPSTATbits	set	4039
   202  0000                     _T0CONbits	set	4053
   203  0000                     _TMR0H	set	4055
   204  0000                     _TMR0L	set	4054
   205  0000                     _TRISAbits	set	3986
   206  0000                     _TRISBbits	set	3987
   207  0000                     _TRISCbits	set	3988
   208  0000                     _TRISDbits	set	3989
   209  0000                     _TRISEbits	set	3990
   210  0000                     _TXREG	set	4013
   211  0000                     _TXSTAbits	set	4012
   212  00101B                     STR_1:
   213  00101B  52                 	db	82	;'R'
   214  00101C  46                 	db	70	;'F'
   215  00101D  32                 	db	50	;'2'
   216  00101E  34                 	db	52	;'4'
   217  00101F  4E                 	db	78	;'N'
   218  001020  65                 	db	101	;'e'
   219  001021  74                 	db	116	;'t'
   220  001022  77                 	db	119	;'w'
   221  001023  6F                 	db	111	;'o'
   222  001024  72                 	db	114	;'r'
   223  001025  6B                 	db	107	;'k'
   224  001026  2F                 	db	47
   225  001027  65                 	db	101	;'e'
   226  001028  78                 	db	120	;'x'
   227  001029  61                 	db	97	;'a'
   228  00102A  6D                 	db	109	;'m'
   229  00102B  70                 	db	112	;'p'
   230  00102C  6C                 	db	108	;'l'
   231  00102D  65                 	db	101	;'e'
   232  00102E  73                 	db	115	;'s'
   233  00102F  2F                 	db	47
   234  001030  68                 	db	104	;'h'
   235  001031  65                 	db	101	;'e'
   236  001032  6C                 	db	108	;'l'
   237  001033  6C                 	db	108	;'l'
   238  001034  6F                 	db	111	;'o'
   239  001035  77                 	db	119	;'w'
   240  001036  6F                 	db	111	;'o'
   241  001037  72                 	db	114	;'r'
   242  001038  6C                 	db	108	;'l'
   243  001039  64                 	db	100	;'d'
   244  00103A  5F                 	db	95	;'_'
   245  00103B  74                 	db	116	;'t'
   246  00103C  78                 	db	120	;'x'
   247  00103D  2F                 	db	47
   248  00103E  00                 	db	0
   249  00103F                     STR_2:
   250  00103F  53                 	db	83	;'S'
   251  001040  65                 	db	101	;'e'
   252  001041  6E                 	db	110	;'n'
   253  001042  64                 	db	100	;'d'
   254  001043  69                 	db	105	;'i'
   255  001044  6E                 	db	110	;'n'
   256  001045  67                 	db	103	;'g'
   257  001046  2E                 	db	46
   258  001047  2E                 	db	46
   259  001048  2E                 	db	46
   260  001049  00                 	db	0
   261  00104A                     STR_4:
   262  00104A  66                 	db	102	;'f'
   263  00104B  61                 	db	97	;'a'
   264  00104C  69                 	db	105	;'i'
   265  00104D  6C                 	db	108	;'l'
   266  00104E  65                 	db	101	;'e'
   267  00104F  64                 	db	100	;'d'
   268  001050  2E                 	db	46
   269  001051  00                 	db	0
   270  001052                     STR_3:
   271  001052  6F                 	db	111	;'o'
   272  001053  6B                 	db	107	;'k'
   273  001054  2E                 	db	46
   274  001055  00                 	db	0
   275  001056                     STR_5:
   276  001056  0D                 	db	13
   277  001057  0A                 	db	10
   278  001058  00                 	db	0
   279                           
   280                           ; #config settings
   281  001059  00                 	db	0	; dummy byte at the end
   282  0000                     
   283                           	psect	cinit
   284  003306                     __pcinit:
   285                           	opt stack 0
   286  003306                     start_initialization:
   287                           	opt stack 0
   288  003306                     __initialization:
   289                           	opt stack 0
   290                           
   291                           ; Clear objects allocated to BIGRAM (370 bytes)
   292  003306  EE00  F0D5         	lfsr	0,__pbssBIGRAM
   293  00330A  EE21 F072          	lfsr	2,370
   294  00330E                     clear_0:
   295  00330E  6AEE               	clrf	postinc0,c
   296  003310  50DD               	movf	postdec2,w,c
   297  003312  50D9               	movf	fsr2l,w,c
   298  003314  E1FC               	bnz	clear_0
   299  003316  50DA               	movf	fsr2h,w,c
   300  003318  E1FA               	bnz	clear_0
   301                           
   302                           ; Clear objects allocated to BANK0 (44 bytes)
   303  00331A  EE00  F080         	lfsr	0,__pbssBANK0
   304  00331E  0E2C               	movlw	44
   305  003320                     clear_1:
   306  003320  6AEE               	clrf	postinc0,c
   307  003322  06E8               	decf	wreg,f,c
   308  003324  E1FD               	bnz	clear_1
   309                           
   310                           ; Initialize objects allocated to BANK0 (12 bytes)
   311                           ; load TBLPTR registers with __pidataBANK0
   312  003326  0EAC               	movlw	low __pidataBANK0
   313  003328  6EF6               	movwf	tblptrl,c
   314  00332A  0E3B               	movlw	high __pidataBANK0
   315  00332C  6EF7               	movwf	tblptrh,c
   316  00332E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   317  003330  6EF8               	movwf	tblptru,c
   318  003332  EE00  F0C9         	lfsr	0,__pdataBANK0
   319  003336  EE20 F00C          	lfsr	2,12
   320  00333A                     copy_data0:
   321  00333A  0009               	tblrd		*+
   322  00333C  CFF5 FFEE          	movff	tablat,postinc0
   323  003340  50DD               	movf	postdec2,w,c
   324  003342  50D9               	movf	fsr2l,w,c
   325  003344  E1FA               	bnz	copy_data0
   326                           
   327                           ; Initialize objects allocated to COMRAM (2 bytes)
   328                           ; load TBLPTR registers with __pidataCOMRAM
   329  003346  0EEC               	movlw	low __pidataCOMRAM
   330  003348  6EF6               	movwf	tblptrl,c
   331  00334A  0E3B               	movlw	high __pidataCOMRAM
   332  00334C  6EF7               	movwf	tblptrh,c
   333  00334E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   334  003350  6EF8               	movwf	tblptru,c
   335  003352  0009               	tblrd		*+	;fetch initializer
   336  003354  CFF5 F076          	movff	tablat,__pdataCOMRAM
   337  003358  0009               	tblrd		*+	;fetch initializer
   338  00335A  CFF5 F077          	movff	tablat,__pdataCOMRAM+1
   339  00335E                     end_of_initialization:
   340                           	opt stack 0
   341  00335E                     __end_of__initialization:
   342                           	opt stack 0
   343  00335E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   344  003360  6EF8               	movwf	tblptru,c
   345  003362  0100               	movlb	0
   346  003364  EF5F  F01C         	goto	_main	;jump to C main() function
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           postinc0	equ	0xFEE
   352                           wreg	equ	0xFE8
   353                           postdec2	equ	0xFDD
   354                           fsr2h	equ	0xFDA
   355                           fsr2l	equ	0xFD9
   356                           
   357                           	psect	dataCOMRAM
   358  000076                     __pdataCOMRAM:
   359                           	opt stack 0
   360  000076                     _next_id:
   361                           	opt stack 0
   362  000076                     	ds	2
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           postdec2	equ	0xFDD
   370                           fsr2h	equ	0xFDA
   371                           fsr2l	equ	0xFD9
   372                           
   373                           	psect	bssBANK0
   374  000080                     __pbssBANK0:
   375                           	opt stack 0
   376  000080                     _last_sent:
   377                           	opt stack 0
   378  000080                     	ds	4
   379  000084                     _mtime:
   380                           	opt stack 0
   381  000084                     	ds	4
   382  000088                     _packets_sent:
   383                           	opt stack 0
   384  000088                     	ds	4
   385  00008C                     _rf:
   386                           	opt stack 0
   387  00008C                     	ds	22
   388  0000A2                     _buff:
   389                           	opt stack 0
   390  0000A2                     	ds	10
   391                           tblptru	equ	0xFF8
   392                           tblptrh	equ	0xFF7
   393                           tblptrl	equ	0xFF6
   394                           tablat	equ	0xFF5
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           postdec2	equ	0xFDD
   398                           fsr2h	equ	0xFDA
   399                           fsr2l	equ	0xFD9
   400                           
   401                           	psect	dataBANK0
   402  0000C9                     __pdataBANK0:
   403                           	opt stack 0
   404  0000C9                     RF24N_pipe_address@address_translation:
   405                           	opt stack 0
   406  0000C9                     	ds	7
   407  0000D0                     RF24N_pipe_address@F3856:
   408                           	opt stack 0
   409  0000D0                     	ds	5
   410                           tblptru	equ	0xFF8
   411                           tblptrh	equ	0xFF7
   412                           tblptrl	equ	0xFF6
   413                           tablat	equ	0xFF5
   414                           postinc0	equ	0xFEE
   415                           wreg	equ	0xFE8
   416                           postdec2	equ	0xFDD
   417                           fsr2h	equ	0xFDA
   418                           fsr2l	equ	0xFD9
   419                           
   420                           	psect	bssBIGRAM
   421  0000D5                     __pbssBIGRAM:
   422                           	opt stack 0
   423  0000D5                     _rn:
   424                           	opt stack 0
   425  0000D5                     	ds	370
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           postinc0	equ	0xFEE
   431                           wreg	equ	0xFE8
   432                           postdec2	equ	0xFDD
   433                           fsr2h	equ	0xFDA
   434                           fsr2l	equ	0xFD9
   435                           
   436                           	psect	cstackBANK0
   437  0000AC                     __pcstackBANK0:
   438                           	opt stack 0
   439  0000AC                     ??_loop:
   440                           
   441                           ; 1 bytes @ 0x0
   442  0000AC                     	ds	8
   443  0000B4                     loop@ok:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x8
   447  0000B4                     	ds	1
   448  0000B5                     loop@now:
   449                           	opt stack 0
   450                           
   451                           ; 4 bytes @ 0x9
   452  0000B5                     	ds	4
   453  0000B9                     loop@payload:
   454                           	opt stack 0
   455                           
   456                           ; 8 bytes @ 0xD
   457  0000B9                     	ds	8
   458  0000C1                     loop@header:
   459                           	opt stack 0
   460                           
   461                           ; 8 bytes @ 0x15
   462  0000C1                     	ds	8
   463                           tblptru	equ	0xFF8
   464                           tblptrh	equ	0xFF7
   465                           tblptrl	equ	0xFF6
   466                           tablat	equ	0xFF5
   467                           postinc0	equ	0xFEE
   468                           wreg	equ	0xFE8
   469                           postdec2	equ	0xFDD
   470                           fsr2h	equ	0xFDA
   471                           fsr2l	equ	0xFD9
   472                           
   473                           	psect	cstackCOMRAM
   474  000001                     __pcstackCOMRAM:
   475                           	opt stack 0
   476  000001                     ??_isr:
   477  000001                     
   478                           ; 1 bytes @ 0x0
   479  000001                     	ds	2
   480  000003                     ??_RF24N_setup_address:
   481  000003                     ??_RF24N_available:
   482  000003                     ??_delayMicroseconds:
   483  000003                     ?_RF24N_levelToAddress:
   484                           	opt stack 0
   485  000003                     ?_RF24N_direct_child_route_to:
   486                           	opt stack 0
   487  000003                     ?___wmul:
   488                           	opt stack 0
   489  000003                     ?___lwdiv:
   490                           	opt stack 0
   491  000003                     ?___lwmod:
   492                           	opt stack 0
   493  000003                     ?_millis:
   494                           	opt stack 0
   495  000003                     ?___lldiv:
   496                           	opt stack 0
   497  000003                     Serial_tx@val:
   498                           	opt stack 0
   499  000003                     pinMode@mode:
   500                           	opt stack 0
   501  000003                     digitalWrite@mode:
   502                           	opt stack 0
   503  000003                     SPI_transfer@data:
   504                           	opt stack 0
   505  000003                     RF24_init@_cspin:
   506                           	opt stack 0
   507  000003                     delay@val:
   508                           	opt stack 0
   509  000003                     RF24NH_init@rnh:
   510                           	opt stack 0
   511  000003                     RF24N_is_descendant@node:
   512                           	opt stack 0
   513  000003                     RF24N_direct_child_route_to@node:
   514                           	opt stack 0
   515  000003                     RF24N_is_valid_address@node:
   516                           	opt stack 0
   517  000003                     RF24N_pipe_address@node:
   518                           	opt stack 0
   519  000003                     ___wmul@multiplier:
   520                           	opt stack 0
   521  000003                     ___lwdiv@dividend:
   522                           	opt stack 0
   523  000003                     ___lwmod@dividend:
   524                           	opt stack 0
   525  000003                     memcpy@d1:
   526                           	opt stack 0
   527  000003                     ___lldiv@dividend:
   528                           	opt stack 0
   529                           
   530                           ; 4 bytes @ 0x2
   531  000003                     	ds	1
   532  000004                     pinMode@pin:
   533                           	opt stack 0
   534  000004                     RF24_init@_cepin:
   535                           	opt stack 0
   536  000004                     _RF24_isValid$2468:
   537                           	opt stack 0
   538  000004                     Serial_print@val:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x3
   542  000004                     	ds	1
   543  000005                     ??_RF24N_levelToAddress:
   544  000005                     ??_RF24N_is_descendant:
   545  000005                     ??_RF24N_direct_child_route_to:
   546  000005                     digitalWrite@pin:
   547                           	opt stack 0
   548  000005                     delayMicroseconds@d:
   549                           	opt stack 0
   550  000005                     RF24N_pipe_address@pipe:
   551                           	opt stack 0
   552  000005                     delay@i:
   553                           	opt stack 0
   554  000005                     RF24NH_init@_to:
   555                           	opt stack 0
   556  000005                     RF24N_setup_address@i:
   557                           	opt stack 0
   558  000005                     ___wmul@multiplicand:
   559                           	opt stack 0
   560  000005                     ___lwdiv@divisor:
   561                           	opt stack 0
   562  000005                     ___lwmod@divisor:
   563                           	opt stack 0
   564  000005                     memcpy@s1:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x4
   568  000005                     	ds	1
   569  000006                     ??_Serial_print:
   570  000006                     delayMicroseconds@i:
   571                           	opt stack 0
   572  000006                     RF24N_pipe_address@address:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x5
   576  000006                     	ds	1
   577  000007                     RF24NH_init@_type:
   578                           	opt stack 0
   579  000007                     RF24N_is_valid_address@digit:
   580                           	opt stack 0
   581  000007                     RF24_ce_d@level:
   582                           	opt stack 0
   583  000007                     ___lwmod@counter:
   584                           	opt stack 0
   585  000007                     delay@j:
   586                           	opt stack 0
   587  000007                     RF24N_setup_address@m:
   588                           	opt stack 0
   589  000007                     ___wmul@product:
   590                           	opt stack 0
   591  000007                     ___lwdiv@quotient:
   592                           	opt stack 0
   593  000007                     memcpy@n:
   594                           	opt stack 0
   595  000007                     ___lldiv@divisor:
   596                           	opt stack 0
   597                           
   598                           ; 4 bytes @ 0x6
   599  000007                     	ds	1
   600  000008                     ??_RF24N_pipe_address:
   601  000008                     RF24N_is_valid_address@result:
   602                           	opt stack 0
   603  000008                     Serial_print@i:
   604                           	opt stack 0
   605  000008                     delayMicroseconds@j:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x7
   609  000008                     	ds	1
   610  000009                     RF24N_setup_address@count:
   611                           	opt stack 0
   612  000009                     ___lwdiv@counter:
   613                           	opt stack 0
   614  000009                     RF24N_is_direct_child@node:
   615                           	opt stack 0
   616  000009                     RF24N_direct_child_route_to@child_mask:
   617                           	opt stack 0
   618  000009                     memcpy@d:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x8
   622  000009                     	ds	1
   623  00000A                     Serial_println@val:
   624                           	opt stack 0
   625  00000A                     RF24N_setup_address@parent_mask:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x9
   629  00000A                     	ds	1
   630  00000B                     ??_RF24N_is_direct_child:
   631  00000B                     RF24N_levelToAddress@level:
   632                           	opt stack 0
   633  00000B                     RF24_csn_d@mode:
   634                           	opt stack 0
   635  00000B                     memcpy@s:
   636                           	opt stack 0
   637  00000B                     ___lldiv@quotient:
   638                           	opt stack 0
   639                           
   640                           ; 4 bytes @ 0xA
   641  00000B                     	ds	1
   642  00000C                     RF24_read_register_d@reg:
   643                           	opt stack 0
   644  00000C                     RF24N_setup_address@node_mask_check:
   645                           	opt stack 0
   646  00000C                     RF24N_levelToAddress@levelAddr:
   647                           	opt stack 0
   648  00000C                     RF24_write_register_c_d@buf:
   649                           	opt stack 0
   650  00000C                     RF24_write_payload@buf:
   651                           	opt stack 0
   652  00000C                     RF24_read_payload@buf:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0xB
   656  00000C                     	ds	1
   657  00000D                     RF24_read_register_d@result:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0xC
   661  00000D                     	ds	1
   662  00000E                     RF24_write_register_c_d@len:
   663                           	opt stack 0
   664  00000E                     RF24_write_register_d@value:
   665                           	opt stack 0
   666  00000E                     RF24_write_payload@data_len:
   667                           	opt stack 0
   668  00000E                     RF24_read_payload@data_len:
   669                           	opt stack 0
   670  00000E                     RF24_spiTrans@cmd:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0xD
   674  00000E                     	ds	1
   675  00000F                     ??_RF24_read_payload:
   676  00000F                     RF24_write_register_c_d@status:
   677                           	opt stack 0
   678  00000F                     RF24_write_register_d@reg:
   679                           	opt stack 0
   680  00000F                     RF24_write_payload@writeType:
   681                           	opt stack 0
   682  00000F                     RF24_spiTrans@status:
   683                           	opt stack 0
   684  00000F                     ___lldiv@counter:
   685                           	opt stack 0
   686                           
   687                           ; 1 bytes @ 0xE
   688  00000F                     	ds	1
   689  000010                     ??_RF24_write_payload:
   690  000010                     RF24_write_register_c_d@reg:
   691                           	opt stack 0
   692  000010                     RF24_write_register_d@status:
   693                           	opt stack 0
   694  000010                     RF24_available_p@pipe_num:
   695                           	opt stack 0
   696  000010                     Serial_begin@baud:
   697                           	opt stack 0
   698                           
   699                           ; 4 bytes @ 0xF
   700  000010                     	ds	1
   701  000011                     ??_RF24_stopListening:
   702  000011                     ??_RF24_closeReadingPipe:
   703  000011                     RF24_getDynamicPayloadSize@result:
   704                           	opt stack 0
   705  000011                     RF24_setAutoAck_p@enable:
   706                           	opt stack 0
   707  000011                     RF24_setDataRate@result:
   708                           	opt stack 0
   709  000011                     RF24_setRetries@count:
   710                           	opt stack 0
   711  000011                     _RF24_setChannel$2342:
   712                           	opt stack 0
   713  000011                     RF24_openWritingPipe_d@value_:
   714                           	opt stack 0
   715  000011                     RF24_openReadingPipe_d@address_:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x10
   719  000011                     	ds	1
   720  000012                     ??_RF24_setAutoAck_p:
   721  000012                     ??_RF24_setRetries:
   722  000012                     ??_RF24_available_p:
   723  000012                     RF24_powerUp@cfg:
   724                           	opt stack 0
   725  000012                     RF24_setDataRate@speed:
   726                           	opt stack 0
   727  000012                     RF24N_is_direct_child@child_node_mask:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x11
   731  000012                     	ds	1
   732  000013                     ??_RF24_openReadingPipe_d:
   733  000013                     ??_RF24_openWritingPipe_d:
   734  000013                     RF24_setChannel@channel:
   735                           	opt stack 0
   736  000013                     RF24_setDataRate@setup:
   737                           	opt stack 0
   738  000013                     RF24N_enqueue@header:
   739                           	opt stack 0
   740  000013                     RF24_txStandBy_t@timeout:
   741                           	opt stack 0
   742                           
   743                           ; 4 bytes @ 0x12
   744  000013                     	ds	1
   745  000014                     ??_Serial_begin:
   746  000014                     RF24N_is_direct_child@result:
   747                           	opt stack 0
   748  000014                     RF24_setChannel@max_channel:
   749                           	opt stack 0
   750  000014                     RF24_available_p@status:
   751                           	opt stack 0
   752  000014                     RF24_setAutoAck_p@en_aa:
   753                           	opt stack 0
   754  000014                     RF24_setRetries@delay:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x13
   758  000014                     	ds	1
   759  000015                     ??_RF24N_enqueue:
   760  000015                     _RF24_begin$2356:
   761                           	opt stack 0
   762  000015                     RF24_closeReadingPipe@pipe:
   763                           	opt stack 0
   764  000015                     RF24_setAutoAck_p@pipe:
   765                           	opt stack 0
   766  000015                     RF24N_logicalToPhysicalAddress@conversionInfo:
   767                           	opt stack 0
   768  000015                     RF24_openReadingPipe_d@address:
   769                           	opt stack 0
   770                           
   771                           ; 5 bytes @ 0x14
   772  000015                     	ds	1
   773  000016                     ??_RF24_startListening:
   774  000016                     RF24_begin@setup:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0x15
   778  000016                     	ds	1
   779  000017                     RF24_read_payload@status:
   780                           	opt stack 0
   781  000017                     RF24_txStandBy_t@startTx:
   782                           	opt stack 0
   783  000017                     RF24N_pipe_address@result:
   784                           	opt stack 0
   785                           
   786                           ; 5 bytes @ 0x16
   787  000017                     	ds	1
   788  000018                     ??_RF24_txStandBy_t:
   789  000018                     RF24_read_payload@current:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0x17
   793  000018                     	ds	2
   794  00001A                     RF24_write_payload@status:
   795                           	opt stack 0
   796  00001A                     RF24_openReadingPipe_d@i:
   797                           	opt stack 0
   798  00001A                     _RF24_read_payload$2327:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x19
   802  00001A                     	ds	1
   803  00001B                     RF24_openReadingPipe_d@child:
   804                           	opt stack 0
   805  00001B                     RF24_write_payload@current:
   806                           	opt stack 0
   807  00001B                     RF24_openWritingPipe_d@value:
   808                           	opt stack 0
   809                           
   810                           ; 5 bytes @ 0x1A
   811  00001B                     	ds	1
   812  00001C                     RF24_read_payload@blank_len:
   813                           	opt stack 0
   814  00001C                     RF24N_pipe_address@dec:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x1B
   818  00001C                     	ds	1
   819  00001D                     _RF24_write_payload$2319:
   820                           	opt stack 0
   821  00001D                     RF24_read@buf:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x1C
   825  00001D                     	ds	1
   826  00001E                     RF24N_pipe_address@count:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0x1D
   830  00001E                     	ds	1
   831  00001F                     RF24_read@len:
   832                           	opt stack 0
   833  00001F                     RF24N_pipe_address@out:
   834                           	opt stack 0
   835  00001F                     _RF24_write_payload$2320:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x1E
   839  00001F                     	ds	1
   840  000020                     RF24_openWritingPipe_d@i:
   841                           	opt stack 0
   842  000020                     RF24_txStandBy_t@start:
   843                           	opt stack 0
   844                           
   845                           ; 4 bytes @ 0x1F
   846  000020                     	ds	1
   847  000021                     RF24N_pipe_address@i:
   848                           	opt stack 0
   849  000021                     RF24_write_payload@blank_len:
   850                           	opt stack 0
   851  000021                     RF24N_logicalToPhysicalAddress@multicast:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x20
   855  000021                     	ds	1
   856  000022                     RF24N_begin_d@_node_address:
   857                           	opt stack 0
   858  000022                     RF24_startFastWrite@buf:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x21
   862  000022                     	ds	1
   863  000023                     RF24N_enqueue@isFragment:
   864                           	opt stack 0
   865  000023                     RF24N_logicalToPhysicalAddress@pre_conversion_send_node:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x22
   869  000023                     	ds	1
   870  000024                     RF24N_enqueue@padding:
   871                           	opt stack 0
   872  000024                     RF24_startFastWrite@len:
   873                           	opt stack 0
   874  000024                     RF24N_begin_d@addr:
   875                           	opt stack 0
   876                           
   877                           ; 5 bytes @ 0x23
   878  000024                     	ds	1
   879  000025                     RF24N_enqueue@padding_2049:
   880                           	opt stack 0
   881  000025                     RF24_startFastWrite@multicast:
   882                           	opt stack 0
   883  000025                     RF24N_logicalToPhysicalAddress@directTo:
   884                           	opt stack 0
   885                           
   886                           ; 2 bytes @ 0x24
   887  000025                     	ds	1
   888  000026                     _RF24N_enqueue$2047:
   889                           	opt stack 0
   890  000026                     RF24_startFastWrite@startTx:
   891                           	opt stack 0
   892                           
   893                           ; 1 bytes @ 0x25
   894  000026                     	ds	1
   895  000027                     RF24N_enqueue@result:
   896                           	opt stack 0
   897  000027                     RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe:
   898                           	opt stack 0
   899                           
   900                           ; 1 bytes @ 0x26
   901  000027                     	ds	1
   902  000028                     RF24N_enqueue@message_size:
   903                           	opt stack 0
   904  000028                     RF24N_logicalToPhysicalAddress@to_node:
   905                           	opt stack 0
   906                           
   907                           ; 2 bytes @ 0x27
   908  000028                     	ds	1
   909  000029                     RF24N_begin_d@retryVar:
   910                           	opt stack 0
   911  000029                     _RF24_startFastWrite$2393:
   912                           	opt stack 0
   913                           
   914                           ; 2 bytes @ 0x28
   915  000029                     	ds	1
   916  00002A                     RF24N_begin_d@_channel:
   917                           	opt stack 0
   918                           
   919                           ; 1 bytes @ 0x29
   920  00002A                     	ds	1
   921  00002B                     RF24N_begin_d@i:
   922                           	opt stack 0
   923  00002B                     RF24_writeFast_m@buf:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0x2A
   927  00002B                     	ds	1
   928  00002C                     
   929                           ; 1 bytes @ 0x2B
   930  00002C                     	ds	1
   931  00002D                     RF24_writeFast_m@len:
   932                           	opt stack 0
   933                           
   934                           ; 1 bytes @ 0x2C
   935  00002D                     	ds	1
   936  00002E                     RF24_writeFast_m@multicast:
   937                           	opt stack 0
   938                           
   939                           ; 1 bytes @ 0x2D
   940  00002E                     	ds	1
   941  00002F                     ??_RF24_writeFast_m:
   942                           
   943                           ; 1 bytes @ 0x2E
   944  00002F                     	ds	1
   945  000030                     RF24N_write_to_pipe@node:
   946                           	opt stack 0
   947                           
   948                           ; 2 bytes @ 0x2F
   949  000030                     	ds	2
   950  000032                     RF24N_write_to_pipe@pipe:
   951                           	opt stack 0
   952                           
   953                           ; 1 bytes @ 0x31
   954  000032                     	ds	1
   955  000033                     RF24N_write_to_pipe@multicast:
   956                           	opt stack 0
   957                           
   958                           ; 1 bytes @ 0x32
   959  000033                     	ds	1
   960  000034                     
   961                           ; 1 bytes @ 0x33
   962  000034                     	ds	6
   963  00003A                     RF24N_write_to_pipe@out_pipe:
   964                           	opt stack 0
   965                           
   966                           ; 5 bytes @ 0x39
   967  00003A                     	ds	5
   968  00003F                     RF24N_write_to_pipe@ok:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x3E
   972  00003F                     	ds	1
   973  000040                     RF24N__write@header:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x3F
   977  000040                     	ds	2
   978  000042                     RF24N__write@message:
   979                           	opt stack 0
   980                           
   981                           ; 2 bytes @ 0x41
   982  000042                     	ds	2
   983  000044                     RF24N__write@len:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x43
   987  000044                     	ds	2
   988  000046                     RF24N__write@writeDirect:
   989                           	opt stack 0
   990                           
   991                           ; 2 bytes @ 0x45
   992  000046                     	ds	2
   993  000048                     ??_RF24N__write:
   994                           
   995                           ; 1 bytes @ 0x47
   996  000048                     	ds	2
   997  00004A                     RF24N__write@sendType:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x49
  1001  00004A                     	ds	1
  1002  00004B                     RF24N_write_@header:
  1003                           	opt stack 0
  1004                           
  1005                           ; 2 bytes @ 0x4A
  1006  00004B                     	ds	2
  1007  00004D                     RF24N_write_@message:
  1008                           	opt stack 0
  1009                           
  1010                           ; 2 bytes @ 0x4C
  1011  00004D                     	ds	2
  1012  00004F                     RF24N_write_@len:
  1013                           	opt stack 0
  1014                           
  1015                           ; 2 bytes @ 0x4E
  1016  00004F                     	ds	2
  1017  000051                     RF24N_write_@writeDirect:
  1018                           	opt stack 0
  1019                           
  1020                           ; 2 bytes @ 0x50
  1021  000051                     	ds	2
  1022  000053                     ??_RF24N_write_:
  1023                           
  1024                           ; 1 bytes @ 0x52
  1025  000053                     	ds	8
  1026  00005B                     RF24N_write_@retriesPerFrag:
  1027                           	opt stack 0
  1028                           
  1029                           ; 1 bytes @ 0x5A
  1030  00005B                     	ds	1
  1031  00005C                     RF24N_write_@fragmentLen:
  1032                           	opt stack 0
  1033                           
  1034                           ; 2 bytes @ 0x5B
  1035  00005C                     	ds	2
  1036  00005E                     RF24N_write_@type:
  1037                           	opt stack 0
  1038                           
  1039                           ; 1 bytes @ 0x5D
  1040  00005E                     	ds	1
  1041  00005F                     RF24N_write_@msgCount:
  1042                           	opt stack 0
  1043                           
  1044                           ; 1 bytes @ 0x5E
  1045  00005F                     	ds	1
  1046  000060                     RF24N_write_@offset:
  1047                           	opt stack 0
  1048                           
  1049                           ; 2 bytes @ 0x5F
  1050  000060                     	ds	2
  1051  000062                     RF24N_write_@ok:
  1052                           	opt stack 0
  1053                           
  1054                           ; 1 bytes @ 0x61
  1055  000062                     	ds	1
  1056  000063                     RF24N_write_@fragment_id:
  1057                           	opt stack 0
  1058                           
  1059                           ; 1 bytes @ 0x62
  1060  000063                     	ds	1
  1061  000064                     RF24N_write_m@header:
  1062                           	opt stack 0
  1063                           
  1064                           ; 2 bytes @ 0x63
  1065  000064                     	ds	2
  1066  000066                     RF24N_write_m@message:
  1067                           	opt stack 0
  1068                           
  1069                           ; 2 bytes @ 0x65
  1070  000066                     	ds	2
  1071  000068                     RF24N_write_m@len:
  1072                           	opt stack 0
  1073                           
  1074                           ; 2 bytes @ 0x67
  1075  000068                     	ds	2
  1076  00006A                     tblptru	equ	0xFF8
  1077                           tblptrh	equ	0xFF7
  1078                           tblptrl	equ	0xFF6
  1079                           tablat	equ	0xFF5
  1080                           postinc0	equ	0xFEE
  1081                           wreg	equ	0xFE8
  1082                           postdec2	equ	0xFDD
  1083                           fsr2h	equ	0xFDA
  1084                           fsr2l	equ	0xFD9
  1085                           
  1086                           ; 1 bytes @ 0x69
  1087 ;;
  1088 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1089 ;;
  1090 ;; *************** function _main *****************
  1091 ;; Defined at:
  1092 ;;		line 30 in file "pic_main.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;Total ram usage:        0 bytes
  1111 ;; Hardware stack levels required when called:   14
  1112 ;; This function calls:
  1113 ;;		_loop
  1114 ;;		_setup
  1115 ;; This function is called by:
  1116 ;;		Startup code after reset
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text0
  1121  0038BE                     __ptext0:
  1122                           	opt stack 0
  1123  0038BE                     _main:
  1124                           	opt stack 17
  1125                           
  1126                           ;pic_main.c: 32: mtime=0;
  1127                           
  1128                           ;incstack = 0
  1129  0038BE  0E00               	movlw	0
  1130  0038C0  0100               	movlb	0	; () banked
  1131  0038C2  6F84               	movwf	_mtime& (0+255),b
  1132  0038C4  0E00               	movlw	0
  1133  0038C6  6F85               	movwf	(_mtime+1)& (0+255),b
  1134  0038C8  0E00               	movlw	0
  1135  0038CA  6F86               	movwf	(_mtime+2)& (0+255),b
  1136  0038CC  0E00               	movlw	0
  1137  0038CE  6F87               	movwf	(_mtime+3)& (0+255),b
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;pic_main.c: 34: T0CONbits.T08BIT=0;
  1141  0038D0  9CD5               	bcf	4053,6,c	;volatile
  1142                           
  1143                           ; BSR set to: 0
  1144                           ;pic_main.c: 35: T0CONbits.T0CS=0;
  1145  0038D2  9AD5               	bcf	4053,5,c	;volatile
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;pic_main.c: 36: T0CONbits.PSA=1;
  1149  0038D4  86D5               	bsf	4053,3,c	;volatile
  1150                           
  1151                           ;pic_main.c: 40: TMR0H=(65536l-(32000000/4000l)&0xFF00)>>8;
  1152  0038D6  0EE0               	movlw	224
  1153  0038D8  6ED7               	movwf	4055,c	;volatile
  1154                           
  1155                           ;pic_main.c: 41: TMR0L=(65536l-(32000000/4000l)&0x00FF);
  1156  0038DA  0EC0               	movlw	192
  1157  0038DC  6ED6               	movwf	4054,c	;volatile
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;pic_main.c: 42: INTCONbits.TMR0IF=0;
  1161  0038DE  94F2               	bcf	intcon,2,c	;volatile
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;pic_main.c: 43: INTCONbits.GIE = 1;
  1165  0038E0  8EF2               	bsf	intcon,7,c	;volatile
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;pic_main.c: 44: INTCONbits.TMR0IE = 1;
  1169  0038E2  8AF2               	bsf	intcon,5,c	;volatile
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;pic_main.c: 45: T0CONbits.TMR0ON=1;
  1173  0038E4  8ED5               	bsf	4053,7,c	;volatile
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;pic_main.c: 47: setup();
  1177  0038E6  EC62  F01A         	call	_setup	;wreg free
  1178  0038EA                     l5225:
  1179                           
  1180                           ;pic_main.c: 51: {
  1181                           ;pic_main.c: 52: loop();
  1182  0038EA  EC17  F013         	call	_loop	;wreg free
  1183  0038EE  D7FD               	goto	l5225
  1184  0038F0                     __end_of_main:
  1185                           	opt stack 0
  1186                           tblptru	equ	0xFF8
  1187                           tblptrh	equ	0xFF7
  1188                           tblptrl	equ	0xFF6
  1189                           tablat	equ	0xFF5
  1190                           intcon	equ	0xFF2
  1191                           postinc0	equ	0xFEE
  1192                           wreg	equ	0xFE8
  1193                           postdec2	equ	0xFDD
  1194                           fsr2h	equ	0xFDA
  1195                           fsr2l	equ	0xFD9
  1196                           
  1197 ;; *************** function _setup *****************
  1198 ;; Defined at:
  1199 ;;		line 40 in file "helloworld_tx.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1217 ;;Total ram usage:        0 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    8
  1220 ;; This function calls:
  1221 ;;		_RF24N_begin_d
  1222 ;;		_RF24N_init
  1223 ;;		_RF24_begin
  1224 ;;		_RF24_init
  1225 ;;		_Serial_begin
  1226 ;;		_Serial_println
  1227 ;; This function is called by:
  1228 ;;		_main
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text1
  1233  0034C4                     __ptext1:
  1234                           	opt stack 0
  1235  0034C4                     _setup:
  1236                           	opt stack 22
  1237                           
  1238                           ;helloworld_tx.c: 42: RF24_init(36,35);
  1239                           
  1240                           ;incstack = 0
  1241  0034C4  0E23               	movlw	35
  1242  0034C6  6E03               	movwf	RF24_init@_cspin,c
  1243  0034C8  0E24               	movlw	36
  1244  0034CA  ECB9  F01B         	call	_RF24_init
  1245                           
  1246                           ;helloworld_tx.c: 43: RF24N_init();
  1247  0034CE  ECB4  F019         	call	_RF24N_init	;wreg free
  1248                           
  1249                           ;helloworld_tx.c: 45: Serial_begin(57600);
  1250  0034D2  0E00               	movlw	0
  1251  0034D4  6E10               	movwf	Serial_begin@baud,c
  1252  0034D6  0EE1               	movlw	225
  1253  0034D8  6E11               	movwf	Serial_begin@baud+1,c
  1254  0034DA  0E00               	movlw	0
  1255  0034DC  6E12               	movwf	Serial_begin@baud+2,c
  1256  0034DE  0E00               	movlw	0
  1257  0034E0  6E13               	movwf	Serial_begin@baud+3,c
  1258  0034E2  EC71  F018         	call	_Serial_begin	;wreg free
  1259                           
  1260                           ;helloworld_tx.c: 46: Serial_println("RF24Network/examples/helloworld_tx/");
  1261  0034E6  0E1B               	movlw	low STR_1
  1262  0034E8  6E0A               	movwf	Serial_println@val,c
  1263  0034EA  0E10               	movlw	high STR_1
  1264  0034EC  6E0B               	movwf	Serial_println@val+1,c
  1265  0034EE  EC96  F01D         	call	_Serial_println	;wreg free
  1266                           
  1267                           ;helloworld_tx.c: 48: RF24_begin();
  1268  0034F2  EC48  F015         	call	_RF24_begin	;wreg free
  1269                           
  1270                           ;helloworld_tx.c: 49: RF24N_begin_d( 90, this_node);
  1271  0034F6  0E19               	movlw	low _this_node
  1272  0034F8  6EF6               	movwf	tblptrl,c
  1273  0034FA                     	if	1	;There is more than 1 active tblptr byte
  1274  0034FA  0E10               	movlw	high _this_node
  1275  0034FC  6EF7               	movwf	tblptrh,c
  1276  0034FE                     	endif
  1277  0034FE                     	if	0	;There are less than 3 active tblptr bytes
  1278  0034FE                     	endif
  1279  0034FE  0009               	tblrd		*+
  1280  003500  CFF5 F022          	movff	tablat,RF24N_begin_d@_node_address
  1281  003504  000A               	tblrd		*-
  1282  003506  CFF5 F023          	movff	tablat,RF24N_begin_d@_node_address+1
  1283  00350A  0E5A               	movlw	90
  1284  00350C  EC25  F016         	call	_RF24N_begin_d
  1285  003510  0012               	return		;funcret
  1286  003512                     __end_of_setup:
  1287                           	opt stack 0
  1288                           tblptru	equ	0xFF8
  1289                           tblptrh	equ	0xFF7
  1290                           tblptrl	equ	0xFF6
  1291                           tablat	equ	0xFF5
  1292                           intcon	equ	0xFF2
  1293                           postinc0	equ	0xFEE
  1294                           wreg	equ	0xFE8
  1295                           postdec2	equ	0xFDD
  1296                           fsr2h	equ	0xFDA
  1297                           fsr2l	equ	0xFD9
  1298                           
  1299 ;; *************** function _Serial_begin *****************
  1300 ;; Defined at:
  1301 ;;		line 31 in file "serial.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  baud            4   15[COMRAM] unsigned long 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;		None
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;Total ram usage:        8 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    2
  1322 ;; This function calls:
  1323 ;;		___lldiv
  1324 ;; This function is called by:
  1325 ;;		_setup
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text2
  1330  0030E2                     __ptext2:
  1331                           	opt stack 0
  1332  0030E2                     _Serial_begin:
  1333                           	opt stack 27
  1334                           
  1335                           ;serial.c: 33: TRISCbits.TRISC6=1;
  1336                           
  1337                           ;incstack = 0
  1338  0030E2  8C94               	bsf	3988,6,c	;volatile
  1339                           
  1340                           ;serial.c: 34: TRISCbits.TRISC7=1;
  1341  0030E4  8E94               	bsf	3988,7,c	;volatile
  1342                           
  1343                           ;serial.c: 36: baud=((32000000/(4*baud))-1);
  1344  0030E6  0E00               	movlw	0
  1345  0030E8  6E03               	movwf	___lldiv@dividend,c
  1346  0030EA  0E48               	movlw	72
  1347  0030EC  6E04               	movwf	___lldiv@dividend+1,c
  1348  0030EE  0EE8               	movlw	232
  1349  0030F0  6E05               	movwf	___lldiv@dividend+2,c
  1350  0030F2  0E01               	movlw	1
  1351  0030F4  6E06               	movwf	___lldiv@dividend+3,c
  1352  0030F6  C010  F014         	movff	Serial_begin@baud,??_Serial_begin
  1353  0030FA  C011  F015         	movff	Serial_begin@baud+1,??_Serial_begin+1
  1354  0030FE  C012  F016         	movff	Serial_begin@baud+2,??_Serial_begin+2
  1355  003102  C013  F017         	movff	Serial_begin@baud+3,??_Serial_begin+3
  1356  003106  0E02               	movlw	2
  1357  003108                     u5605:
  1358  003108  90D8               	bcf	status,0,c
  1359  00310A  3614               	rlcf	??_Serial_begin,f,c
  1360  00310C  3615               	rlcf	??_Serial_begin+1,f,c
  1361  00310E  3616               	rlcf	??_Serial_begin+2,f,c
  1362  003110  3617               	rlcf	??_Serial_begin+3,f,c
  1363  003112  2EE8               	decfsz	wreg,f,c
  1364  003114  D7F9               	goto	u5605
  1365  003116  C014  F007         	movff	??_Serial_begin,___lldiv@divisor
  1366  00311A  C015  F008         	movff	??_Serial_begin+1,___lldiv@divisor+1
  1367  00311E  C016  F009         	movff	??_Serial_begin+2,___lldiv@divisor+2
  1368  003122  C017  F00A         	movff	??_Serial_begin+3,___lldiv@divisor+3
  1369  003126  EC30  F018         	call	___lldiv	;wreg free
  1370  00312A  0EFF               	movlw	255
  1371  00312C  2403               	addwf	?___lldiv,w,c
  1372  00312E  6E10               	movwf	Serial_begin@baud,c
  1373  003130  0EFF               	movlw	255
  1374  003132  2004               	addwfc	?___lldiv+1,w,c
  1375  003134  6E11               	movwf	Serial_begin@baud+1,c
  1376  003136  0EFF               	movlw	255
  1377  003138  2005               	addwfc	?___lldiv+2,w,c
  1378  00313A  6E12               	movwf	Serial_begin@baud+2,c
  1379  00313C  0EFF               	movlw	255
  1380  00313E  2006               	addwfc	?___lldiv+3,w,c
  1381  003140  6E13               	movwf	Serial_begin@baud+3,c
  1382                           
  1383                           ;serial.c: 42: SPBRG= (0x00FF & baud);
  1384  003142  C010  FFAF         	movff	Serial_begin@baud,4015	;volatile
  1385                           
  1386                           ;serial.c: 43: SPBRGH=(0xFF00 & baud)>>8;
  1387  003146  C011  FFB0         	movff	Serial_begin@baud+1,4016	;volatile
  1388                           
  1389                           ;serial.c: 46: TXSTAbits.TX9=0;
  1390  00314A  9CAC               	bcf	4012,6,c	;volatile
  1391                           
  1392                           ;serial.c: 47: TXSTAbits.SYNC=0;
  1393  00314C  98AC               	bcf	4012,4,c	;volatile
  1394                           
  1395                           ;serial.c: 48: TXSTAbits.BRGH=1;
  1396  00314E  84AC               	bsf	4012,2,c	;volatile
  1397                           
  1398                           ;serial.c: 49: BAUDCONbits.BRG16=1;
  1399  003150  86B8               	bsf	4024,3,c	;volatile
  1400                           
  1401                           ;serial.c: 50: RCSTAbits.RX9=0;
  1402  003152  9CAB               	bcf	4011,6,c	;volatile
  1403                           
  1404                           ;serial.c: 51: RCSTAbits.CREN=1;
  1405  003154  88AB               	bsf	4011,4,c	;volatile
  1406                           
  1407                           ;serial.c: 52: TXSTAbits.TXEN=1;
  1408  003156  8AAC               	bsf	4012,5,c	;volatile
  1409                           
  1410                           ;serial.c: 53: RCSTAbits.SPEN=1;
  1411  003158  8EAB               	bsf	4011,7,c	;volatile
  1412  00315A  0012               	return		;funcret
  1413  00315C                     __end_of_Serial_begin:
  1414                           	opt stack 0
  1415                           tblptru	equ	0xFF8
  1416                           tblptrh	equ	0xFF7
  1417                           tblptrl	equ	0xFF6
  1418                           tablat	equ	0xFF5
  1419                           intcon	equ	0xFF2
  1420                           postinc0	equ	0xFEE
  1421                           wreg	equ	0xFE8
  1422                           postdec2	equ	0xFDD
  1423                           fsr2h	equ	0xFDA
  1424                           fsr2l	equ	0xFD9
  1425                           status	equ	0xFD8
  1426                           
  1427 ;; *************** function ___lldiv *****************
  1428 ;; Defined at:
  1429 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lldiv.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  dividend        4    2[COMRAM] unsigned long 
  1432 ;;  divisor         4    6[COMRAM] unsigned long 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  quotient        4   10[COMRAM] unsigned long 
  1435 ;;  counter         1   14[COMRAM] unsigned char 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  4    2[COMRAM] unsigned long 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1445 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;Total ram usage:       13 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:    1
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_Serial_begin
  1456 ;;		_ultoa
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text3
  1461  003060                     __ptext3:
  1462                           	opt stack 0
  1463  003060                     ___lldiv:
  1464                           	opt stack 27
  1465                           
  1466                           ;incstack = 0
  1467  003060  0E00               	movlw	0
  1468  003062  6E0B               	movwf	___lldiv@quotient,c
  1469  003064  0E00               	movlw	0
  1470  003066  6E0C               	movwf	___lldiv@quotient+1,c
  1471  003068  0E00               	movlw	0
  1472  00306A  6E0D               	movwf	___lldiv@quotient+2,c
  1473  00306C  0E00               	movlw	0
  1474  00306E  6E0E               	movwf	___lldiv@quotient+3,c
  1475  003070  5007               	movf	___lldiv@divisor,w,c
  1476  003072  1008               	iorwf	___lldiv@divisor+1,w,c
  1477  003074  1009               	iorwf	___lldiv@divisor+2,w,c
  1478  003076  100A               	iorwf	___lldiv@divisor+3,w,c
  1479  003078  B4D8               	btfsc	status,2,c
  1480  00307A  D02A               	goto	l1365
  1481  00307C  0E01               	movlw	1
  1482  00307E  6E0F               	movwf	___lldiv@counter,c
  1483  003080  D006               	goto	l4601
  1484  003082                     l4599:
  1485  003082  90D8               	bcf	status,0,c
  1486  003084  3607               	rlcf	___lldiv@divisor,f,c
  1487  003086  3608               	rlcf	___lldiv@divisor+1,f,c
  1488  003088  3609               	rlcf	___lldiv@divisor+2,f,c
  1489  00308A  360A               	rlcf	___lldiv@divisor+3,f,c
  1490  00308C  2A0F               	incf	___lldiv@counter,f,c
  1491  00308E                     l4601:
  1492  00308E  AE0A               	btfss	___lldiv@divisor+3,7,c
  1493  003090  D7F8               	goto	l4599
  1494  003092                     l4603:
  1495  003092  90D8               	bcf	status,0,c
  1496  003094  360B               	rlcf	___lldiv@quotient,f,c
  1497  003096  360C               	rlcf	___lldiv@quotient+1,f,c
  1498  003098  360D               	rlcf	___lldiv@quotient+2,f,c
  1499  00309A  360E               	rlcf	___lldiv@quotient+3,f,c
  1500  00309C  5007               	movf	___lldiv@divisor,w,c
  1501  00309E  5C03               	subwf	___lldiv@dividend,w,c
  1502  0030A0  5008               	movf	___lldiv@divisor+1,w,c
  1503  0030A2  5804               	subwfb	___lldiv@dividend+1,w,c
  1504  0030A4  5009               	movf	___lldiv@divisor+2,w,c
  1505  0030A6  5805               	subwfb	___lldiv@dividend+2,w,c
  1506  0030A8  500A               	movf	___lldiv@divisor+3,w,c
  1507  0030AA  5806               	subwfb	___lldiv@dividend+3,w,c
  1508  0030AC  A0D8               	btfss	status,0,c
  1509  0030AE  D009               	goto	l4611
  1510  0030B0  5007               	movf	___lldiv@divisor,w,c
  1511  0030B2  5E03               	subwf	___lldiv@dividend,f,c
  1512  0030B4  5008               	movf	___lldiv@divisor+1,w,c
  1513  0030B6  5A04               	subwfb	___lldiv@dividend+1,f,c
  1514  0030B8  5009               	movf	___lldiv@divisor+2,w,c
  1515  0030BA  5A05               	subwfb	___lldiv@dividend+2,f,c
  1516  0030BC  500A               	movf	___lldiv@divisor+3,w,c
  1517  0030BE  5A06               	subwfb	___lldiv@dividend+3,f,c
  1518  0030C0  800B               	bsf	___lldiv@quotient,0,c
  1519  0030C2                     l4611:
  1520  0030C2  90D8               	bcf	status,0,c
  1521  0030C4  320A               	rrcf	___lldiv@divisor+3,f,c
  1522  0030C6  3209               	rrcf	___lldiv@divisor+2,f,c
  1523  0030C8  3208               	rrcf	___lldiv@divisor+1,f,c
  1524  0030CA  3207               	rrcf	___lldiv@divisor,f,c
  1525  0030CC  2E0F               	decfsz	___lldiv@counter,f,c
  1526  0030CE  D7E1               	goto	l4603
  1527  0030D0                     l1365:
  1528  0030D0  C00B  F003         	movff	___lldiv@quotient,?___lldiv
  1529  0030D4  C00C  F004         	movff	___lldiv@quotient+1,?___lldiv+1
  1530  0030D8  C00D  F005         	movff	___lldiv@quotient+2,?___lldiv+2
  1531  0030DC  C00E  F006         	movff	___lldiv@quotient+3,?___lldiv+3
  1532  0030E0  0012               	return		;funcret
  1533  0030E2                     __end_of___lldiv:
  1534                           	opt stack 0
  1535                           tblptru	equ	0xFF8
  1536                           tblptrh	equ	0xFF7
  1537                           tblptrl	equ	0xFF6
  1538                           tablat	equ	0xFF5
  1539                           intcon	equ	0xFF2
  1540                           postinc0	equ	0xFEE
  1541                           wreg	equ	0xFE8
  1542                           postdec2	equ	0xFDD
  1543                           fsr2h	equ	0xFDA
  1544                           fsr2l	equ	0xFD9
  1545                           status	equ	0xFD8
  1546                           
  1547 ;; *************** function _RF24_init *****************
  1548 ;; Defined at:
  1549 ;;		line 433 in file "../../../RF24_c/RF24_c.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  _cepin          1    wreg     unsigned char 
  1552 ;;  _cspin          1    2[COMRAM] unsigned char 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  _cepin          1    3[COMRAM] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1564 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;Total ram usage:        2 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    1
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_setup
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text4
  1579  003772                     __ptext4:
  1580                           	opt stack 0
  1581  003772                     _RF24_init:
  1582                           	opt stack 28
  1583                           
  1584                           ;incstack = 0
  1585                           ;RF24_init@_cepin stored from wreg
  1586  003772  6E04               	movwf	RF24_init@_cepin,c
  1587                           
  1588                           ;RF24_c.c: 435: rf.ce_pin=_cepin;
  1589  003774  C004  F08C         	movff	RF24_init@_cepin,_rf
  1590                           
  1591                           ;RF24_c.c: 436: rf.csn_pin=_cspin;
  1592  003778  C003  F08D         	movff	RF24_init@_cspin,_rf+1
  1593                           
  1594                           ;RF24_c.c: 437: rf.p_variant=0;
  1595  00377C  0E00               	movlw	0
  1596  00377E  0100               	movlb	0	; () banked
  1597  003780  6F90               	movwf	(_rf+4)& (0+255),b
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;RF24_c.c: 438: rf.payload_size=32;
  1601  003782  0E20               	movlw	32
  1602  003784  0100               	movlb	0	; () banked
  1603  003786  6F91               	movwf	(_rf+5)& (0+255),b
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;RF24_c.c: 439: rf.dynamic_payloads_enabled=0;
  1607  003788  0E00               	movlw	0
  1608  00378A  0100               	movlb	0	; () banked
  1609  00378C  6F92               	movwf	(_rf+6)& (0+255),b
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;RF24_c.c: 440: rf.addr_width=5;
  1613  00378E  0E05               	movlw	5
  1614  003790  0100               	movlb	0	; () banked
  1615  003792  6F98               	movwf	(_rf+12)& (0+255),b
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;RF24_c.c: 441: rf.csDelay=5;
  1619  003794  0E05               	movlw	5
  1620  003796  0100               	movlb	0	; () banked
  1621  003798  6F9D               	movwf	(_rf+17)& (0+255),b
  1622  00379A  0E00               	movlw	0
  1623  00379C  6F9E               	movwf	(_rf+18)& (0+255),b
  1624  00379E  0E00               	movlw	0
  1625  0037A0  6F9F               	movwf	(_rf+19)& (0+255),b
  1626  0037A2  0E00               	movlw	0
  1627  0037A4  6FA0               	movwf	(_rf+20)& (0+255),b
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;RF24_c.c: 442: rf.pipe0_reading_address[0]=0;
  1631  0037A6  0E00               	movlw	0
  1632  0037A8  0100               	movlb	0	; () banked
  1633  0037AA  6F93               	movwf	(_rf+7)& (0+255),b
  1634                           
  1635                           ; BSR set to: 0
  1636  0037AC  0012               	return		;funcret
  1637  0037AE                     __end_of_RF24_init:
  1638                           	opt stack 0
  1639                           tblptru	equ	0xFF8
  1640                           tblptrh	equ	0xFF7
  1641                           tblptrl	equ	0xFF6
  1642                           tablat	equ	0xFF5
  1643                           intcon	equ	0xFF2
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           postdec2	equ	0xFDD
  1647                           fsr2h	equ	0xFDA
  1648                           fsr2l	equ	0xFD9
  1649                           status	equ	0xFD8
  1650                           
  1651 ;; *************** function _RF24_begin *****************
  1652 ;; Defined at:
  1653 ;;		line 598 in file "../../../RF24_c/RF24_c.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  setup           1   21[COMRAM] unsigned char 
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      unsigned char 
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;Total ram usage:        2 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    6
  1674 ;; This function calls:
  1675 ;;		_RF24_ce_d
  1676 ;;		_RF24_csn_d
  1677 ;;		_RF24_flush_rx
  1678 ;;		_RF24_flush_tx
  1679 ;;		_RF24_powerUp
  1680 ;;		_RF24_read_register_d
  1681 ;;		_RF24_setChannel
  1682 ;;		_RF24_setDataRate
  1683 ;;		_RF24_setRetries
  1684 ;;		_RF24_toggle_features_d
  1685 ;;		_RF24_write_register_d
  1686 ;;		_SPI_begin
  1687 ;;		_delay
  1688 ;;		_pinMode
  1689 ;; This function is called by:
  1690 ;;		_setup
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text5
  1695  002A90                     __ptext5:
  1696                           	opt stack 0
  1697  002A90                     _RF24_begin:
  1698                           	opt stack 23
  1699                           
  1700                           ;RF24_c.c: 601: uint8_t setup=0;
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;incstack = 0
  1704  002A90  0E00               	movlw	0
  1705  002A92  6E16               	movwf	RF24_begin@setup,c
  1706                           
  1707                           ;RF24_c.c: 640: if (rf.ce_pin != rf.csn_pin) pinMode(rf.ce_pin,0);
  1708  002A94  0100               	movlb	0	; () banked
  1709  002A96  518C               	movf	_rf& (0+255),w,b
  1710  002A98  0100               	movlb	0	; () banked
  1711  002A9A  198D               	xorwf	(_rf+1)& (0+255),w,b
  1712  002A9C  B4D8               	btfsc	status,2,c
  1713  002A9E  D006               	goto	l4665
  1714                           
  1715                           ; BSR set to: 0
  1716  002AA0  0E00               	movlw	0
  1717  002AA2  6E03               	movwf	pinMode@mode,c
  1718  002AA4  0100               	movlb	0	; () banked
  1719  002AA6  518C               	movf	_rf& (0+255),w,b
  1720  002AA8  EC99  F010         	call	_pinMode
  1721  002AAC                     l4665:
  1722                           
  1723                           ;RF24_c.c: 643: if (rf.ce_pin != rf.csn_pin)
  1724  002AAC  0100               	movlb	0	; () banked
  1725  002AAE  518C               	movf	_rf& (0+255),w,b
  1726  002AB0  0100               	movlb	0	; () banked
  1727  002AB2  198D               	xorwf	(_rf+1)& (0+255),w,b
  1728  002AB4  B4D8               	btfsc	status,2,c
  1729  002AB6  D006               	goto	l4669
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;RF24_c.c: 645: pinMode(rf.csn_pin,0);
  1733  002AB8  0E00               	movlw	0
  1734  002ABA  6E03               	movwf	pinMode@mode,c
  1735  002ABC  0100               	movlb	0	; () banked
  1736  002ABE  518D               	movf	(_rf+1)& (0+255),w,b
  1737  002AC0  EC99  F010         	call	_pinMode
  1738  002AC4                     l4669:
  1739                           
  1740                           ;RF24_c.c: 647: SPI_begin();
  1741  002AC4  EC89  F01D         	call	_SPI_begin	;wreg free
  1742                           
  1743                           ;RF24_c.c: 648: RF24_ce_d(0);
  1744  002AC8  0E00               	movlw	0
  1745  002ACA  EC7B  F01D         	call	_RF24_ce_d
  1746                           
  1747                           ;RF24_c.c: 649: RF24_csn_d(1);
  1748  002ACE  0E01               	movlw	1
  1749  002AD0  ECA3  F01D         	call	_RF24_csn_d
  1750                           
  1751                           ;RF24_c.c: 661: delay( 5 ) ;
  1752  002AD4  0E00               	movlw	0
  1753  002AD6  6E04               	movwf	delay@val+1,c
  1754  002AD8  0E05               	movlw	5
  1755  002ADA  6E03               	movwf	delay@val,c
  1756  002ADC  ECD4  F01A         	call	_delay	;wreg free
  1757                           
  1758                           ;RF24_c.c: 664: RF24_write_register_d( 0x00, 0b00001100 ) ;
  1759  002AE0  0E0C               	movlw	12
  1760  002AE2  6E0E               	movwf	RF24_write_register_d@value,c
  1761  002AE4  0E00               	movlw	0
  1762  002AE6  EC40  F01D         	call	_RF24_write_register_d
  1763                           
  1764                           ;RF24_c.c: 669: RF24_setRetries(5,15);
  1765  002AEA  0E0F               	movlw	15
  1766  002AEC  6E11               	movwf	RF24_setRetries@count,c
  1767  002AEE  0E05               	movlw	5
  1768  002AF0  EC1E  F01D         	call	_RF24_setRetries
  1769                           
  1770                           ;RF24_c.c: 676: if( RF24_setDataRate( RF24_250KBPS ) )
  1771  002AF4  0E02               	movlw	2
  1772  002AF6  ECE9  F018         	call	_RF24_setDataRate
  1773  002AFA  0900               	iorlw	0
  1774  002AFC  B4D8               	btfsc	status,2,c
  1775  002AFE  D003               	goto	l4685
  1776                           
  1777                           ;RF24_c.c: 677: {
  1778                           ;RF24_c.c: 678: rf.p_variant = 1 ;
  1779  002B00  0E01               	movlw	1
  1780  002B02  0100               	movlb	0	; () banked
  1781  002B04  6F90               	movwf	(_rf+4)& (0+255),b
  1782  002B06                     l4685:
  1783                           
  1784                           ;RF24_c.c: 679: }
  1785                           ;RF24_c.c: 680: setup = RF24_read_register_d(0x06);
  1786  002B06  0E06               	movlw	6
  1787  002B08  EC50  F01D         	call	_RF24_read_register_d
  1788  002B0C  6E16               	movwf	RF24_begin@setup,c
  1789                           
  1790                           ;RF24_c.c: 688: RF24_setDataRate( RF24_1MBPS ) ;
  1791  002B0E  0E00               	movlw	0
  1792  002B10  ECE9  F018         	call	_RF24_setDataRate
  1793                           
  1794                           ;RF24_c.c: 694: RF24_toggle_features_d();
  1795  002B14  ECAF  F01D         	call	_RF24_toggle_features_d	;wreg free
  1796                           
  1797                           ;RF24_c.c: 695: RF24_write_register_d(0x1D,0 );
  1798  002B18  0E00               	movlw	0
  1799  002B1A  6E0E               	movwf	RF24_write_register_d@value,c
  1800  002B1C  0E1D               	movlw	29
  1801  002B1E  EC40  F01D         	call	_RF24_write_register_d
  1802                           
  1803                           ;RF24_c.c: 696: RF24_write_register_d(0x1C,0);
  1804  002B22  0E00               	movlw	0
  1805  002B24  6E0E               	movwf	RF24_write_register_d@value,c
  1806  002B26  0E1C               	movlw	28
  1807  002B28  EC40  F01D         	call	_RF24_write_register_d
  1808                           
  1809                           ;RF24_c.c: 700: RF24_write_register_d(0x07,(1<<(6)) | (1<<(5)) | (1<<(4)) );
  1810  002B2C  0E70               	movlw	112
  1811  002B2E  6E0E               	movwf	RF24_write_register_d@value,c
  1812  002B30  0E07               	movlw	7
  1813  002B32  EC40  F01D         	call	_RF24_write_register_d
  1814                           
  1815                           ;RF24_c.c: 705: RF24_setChannel(76);
  1816  002B36  0E4C               	movlw	76
  1817  002B38  ECD2  F01C         	call	_RF24_setChannel
  1818                           
  1819                           ;RF24_c.c: 708: RF24_flush_rx();
  1820  002B3C  ECE2  F01D         	call	_RF24_flush_rx	;wreg free
  1821                           
  1822                           ;RF24_c.c: 709: RF24_flush_tx();
  1823  002B40  ECF2  F01D         	call	_RF24_flush_tx	;wreg free
  1824                           
  1825                           ;RF24_c.c: 711: RF24_powerUp();
  1826  002B44  EC0B  F01D         	call	_RF24_powerUp	;wreg free
  1827                           
  1828                           ;RF24_c.c: 715: RF24_write_register_d(0x00, ( RF24_read_register_d(0x00) ) & ~(1<<(0)) )
      +                          ;
  1829  002B48  0E00               	movlw	0
  1830  002B4A  EC50  F01D         	call	_RF24_read_register_d
  1831  002B4E  0BFE               	andlw	254
  1832  002B50  6E0E               	movwf	RF24_write_register_d@value,c
  1833  002B52  0E00               	movlw	0
  1834  002B54  EC40  F01D         	call	_RF24_write_register_d
  1835                           
  1836                           ;RF24_c.c: 718: return ( setup != 0 && setup != 0xff );
  1837  002B58  0E00               	movlw	0
  1838  002B5A  6E15               	movwf	_RF24_begin$2356,c
  1839  002B5C  5016               	movf	RF24_begin@setup,w,c
  1840  002B5E  B4D8               	btfsc	status,2,c
  1841  002B60  0012               	return	
  1842  002B62  2816               	incf	RF24_begin@setup,w,c
  1843  002B64  B4D8               	btfsc	status,2,c
  1844  002B66  0012               	return	
  1845  002B68  0E01               	movlw	1
  1846  002B6A  6E15               	movwf	_RF24_begin$2356,c
  1847  002B6C  0012               	return	
  1848  002B6E                     __end_of_RF24_begin:
  1849                           	opt stack 0
  1850                           tblptru	equ	0xFF8
  1851                           tblptrh	equ	0xFF7
  1852                           tblptrl	equ	0xFF6
  1853                           tablat	equ	0xFF5
  1854                           intcon	equ	0xFF2
  1855                           postinc0	equ	0xFEE
  1856                           wreg	equ	0xFE8
  1857                           postdec2	equ	0xFDD
  1858                           fsr2h	equ	0xFDA
  1859                           fsr2l	equ	0xFD9
  1860                           status	equ	0xFD8
  1861                           
  1862 ;; *************** function _pinMode *****************
  1863 ;; Defined at:
  1864 ;;		line 8 in file "../../../RF24_c/utility/XC8/spi.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  pin             1    wreg     unsigned char 
  1867 ;;  mode            1    2[COMRAM] unsigned char 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  pin             1    3[COMRAM] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1879 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1882 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1883 ;;Total ram usage:        2 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    1
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_RF24_begin
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text6
  1894  002132                     __ptext6:
  1895                           	opt stack 0
  1896  002132                     _pinMode:
  1897                           	opt stack 27
  1898                           
  1899                           ;incstack = 0
  1900                           ;pinMode@pin stored from wreg
  1901  002132  6E04               	movwf	pinMode@pin,c
  1902                           
  1903                           ;spi.c: 10: switch(pin)
  1904  002134  D0D2               	goto	l4365
  1905  002136                     l167:
  1906  002136  B003               	btfsc	pinMode@mode,0,c
  1907  002138  D002               	bra	u4925
  1908  00213A  9092               	bcf	3986,0,c	;volatile
  1909  00213C  D001               	bra	u4926
  1910  00213E                     u4925:
  1911  00213E  8092               	bsf	3986,0,c	;volatile
  1912  002140                     u4926:
  1913  002140  0012               	return	
  1914  002142                     l169:
  1915  002142  B003               	btfsc	pinMode@mode,0,c
  1916  002144  D002               	bra	u4935
  1917  002146  9292               	bcf	3986,1,c	;volatile
  1918  002148  D001               	bra	u4936
  1919  00214A                     u4935:
  1920  00214A  8292               	bsf	3986,1,c	;volatile
  1921  00214C                     u4936:
  1922  00214C  0012               	return	
  1923  00214E                     l170:
  1924  00214E  B003               	btfsc	pinMode@mode,0,c
  1925  002150  D002               	bra	u4945
  1926  002152  9492               	bcf	3986,2,c	;volatile
  1927  002154  D001               	bra	u4946
  1928  002156                     u4945:
  1929  002156  8492               	bsf	3986,2,c	;volatile
  1930  002158                     u4946:
  1931  002158  0012               	return	
  1932  00215A                     l171:
  1933  00215A  B003               	btfsc	pinMode@mode,0,c
  1934  00215C  D002               	bra	u4955
  1935  00215E  9692               	bcf	3986,3,c	;volatile
  1936  002160  D001               	bra	u4956
  1937  002162                     u4955:
  1938  002162  8692               	bsf	3986,3,c	;volatile
  1939  002164                     u4956:
  1940  002164  0012               	return	
  1941  002166                     l172:
  1942  002166  B003               	btfsc	pinMode@mode,0,c
  1943  002168  D002               	bra	u4965
  1944  00216A  9892               	bcf	3986,4,c	;volatile
  1945  00216C  D001               	bra	u4966
  1946  00216E                     u4965:
  1947  00216E  8892               	bsf	3986,4,c	;volatile
  1948  002170                     u4966:
  1949  002170  0012               	return	
  1950  002172                     l173:
  1951  002172  B003               	btfsc	pinMode@mode,0,c
  1952  002174  D002               	bra	u4975
  1953  002176  9A92               	bcf	3986,5,c	;volatile
  1954  002178  D001               	bra	u4976
  1955  00217A                     u4975:
  1956  00217A  8A92               	bsf	3986,5,c	;volatile
  1957  00217C                     u4976:
  1958  00217C  0012               	return	
  1959  00217E                     l174:
  1960  00217E  B003               	btfsc	pinMode@mode,0,c
  1961  002180  D002               	bra	u4985
  1962  002182  9096               	bcf	3990,0,c	;volatile
  1963  002184  D001               	bra	u4986
  1964  002186                     u4985:
  1965  002186  8096               	bsf	3990,0,c	;volatile
  1966  002188                     u4986:
  1967  002188  0012               	return	
  1968  00218A                     l175:
  1969  00218A  B003               	btfsc	pinMode@mode,0,c
  1970  00218C  D002               	bra	u4995
  1971  00218E  9296               	bcf	3990,1,c	;volatile
  1972  002190  D001               	bra	u4996
  1973  002192                     u4995:
  1974  002192  8296               	bsf	3990,1,c	;volatile
  1975  002194                     u4996:
  1976  002194  0012               	return	
  1977  002196                     l176:
  1978  002196  B003               	btfsc	pinMode@mode,0,c
  1979  002198  D002               	bra	u5005
  1980  00219A  9496               	bcf	3990,2,c	;volatile
  1981  00219C  D001               	bra	u5006
  1982  00219E                     u5005:
  1983  00219E  8496               	bsf	3990,2,c	;volatile
  1984  0021A0                     u5006:
  1985  0021A0  0012               	return	
  1986  0021A2                     l177:
  1987  0021A2  B003               	btfsc	pinMode@mode,0,c
  1988  0021A4  D002               	bra	u5015
  1989  0021A6  9E92               	bcf	3986,7,c	;volatile
  1990  0021A8  D001               	bra	u5016
  1991  0021AA                     u5015:
  1992  0021AA  8E92               	bsf	3986,7,c	;volatile
  1993  0021AC                     u5016:
  1994  0021AC  0012               	return	
  1995  0021AE                     l178:
  1996  0021AE  B003               	btfsc	pinMode@mode,0,c
  1997  0021B0  D002               	bra	u5025
  1998  0021B2  9C92               	bcf	3986,6,c	;volatile
  1999  0021B4  D001               	bra	u5026
  2000  0021B6                     u5025:
  2001  0021B6  8C92               	bsf	3986,6,c	;volatile
  2002  0021B8                     u5026:
  2003  0021B8  0012               	return	
  2004  0021BA                     l179:
  2005  0021BA  B003               	btfsc	pinMode@mode,0,c
  2006  0021BC  D002               	bra	u5035
  2007  0021BE  9094               	bcf	3988,0,c	;volatile
  2008  0021C0  D001               	bra	u5036
  2009  0021C2                     u5035:
  2010  0021C2  8094               	bsf	3988,0,c	;volatile
  2011  0021C4                     u5036:
  2012  0021C4  0012               	return	
  2013  0021C6                     l180:
  2014  0021C6  B003               	btfsc	pinMode@mode,0,c
  2015  0021C8  D002               	bra	u5045
  2016  0021CA  9294               	bcf	3988,1,c	;volatile
  2017  0021CC  D001               	bra	u5046
  2018  0021CE                     u5045:
  2019  0021CE  8294               	bsf	3988,1,c	;volatile
  2020  0021D0                     u5046:
  2021  0021D0  0012               	return	
  2022  0021D2                     l181:
  2023  0021D2  B003               	btfsc	pinMode@mode,0,c
  2024  0021D4  D002               	bra	u5055
  2025  0021D6  9494               	bcf	3988,2,c	;volatile
  2026  0021D8  D001               	bra	u5056
  2027  0021DA                     u5055:
  2028  0021DA  8494               	bsf	3988,2,c	;volatile
  2029  0021DC                     u5056:
  2030  0021DC  0012               	return	
  2031  0021DE                     l182:
  2032  0021DE  B003               	btfsc	pinMode@mode,0,c
  2033  0021E0  D002               	bra	u5065
  2034  0021E2  9694               	bcf	3988,3,c	;volatile
  2035  0021E4  D001               	bra	u5066
  2036  0021E6                     u5065:
  2037  0021E6  8694               	bsf	3988,3,c	;volatile
  2038  0021E8                     u5066:
  2039  0021E8  0012               	return	
  2040  0021EA                     l183:
  2041  0021EA  B003               	btfsc	pinMode@mode,0,c
  2042  0021EC  D002               	bra	u5075
  2043  0021EE  9095               	bcf	3989,0,c	;volatile
  2044  0021F0  D001               	bra	u5076
  2045  0021F2                     u5075:
  2046  0021F2  8095               	bsf	3989,0,c	;volatile
  2047  0021F4                     u5076:
  2048  0021F4  0012               	return	
  2049  0021F6                     l184:
  2050  0021F6  B003               	btfsc	pinMode@mode,0,c
  2051  0021F8  D002               	bra	u5085
  2052  0021FA  9295               	bcf	3989,1,c	;volatile
  2053  0021FC  D001               	bra	u5086
  2054  0021FE                     u5085:
  2055  0021FE  8295               	bsf	3989,1,c	;volatile
  2056  002200                     u5086:
  2057  002200  0012               	return	
  2058  002202                     l185:
  2059  002202  B003               	btfsc	pinMode@mode,0,c
  2060  002204  D002               	bra	u5095
  2061  002206  9495               	bcf	3989,2,c	;volatile
  2062  002208  D001               	bra	u5096
  2063  00220A                     u5095:
  2064  00220A  8495               	bsf	3989,2,c	;volatile
  2065  00220C                     u5096:
  2066  00220C  0012               	return	
  2067  00220E                     l186:
  2068  00220E  B003               	btfsc	pinMode@mode,0,c
  2069  002210  D002               	bra	u5105
  2070  002212  9695               	bcf	3989,3,c	;volatile
  2071  002214  D001               	bra	u5106
  2072  002216                     u5105:
  2073  002216  8695               	bsf	3989,3,c	;volatile
  2074  002218                     u5106:
  2075  002218  0012               	return	
  2076  00221A                     l187:
  2077  00221A  B003               	btfsc	pinMode@mode,0,c
  2078  00221C  D002               	bra	u5115
  2079  00221E  9894               	bcf	3988,4,c	;volatile
  2080  002220  D001               	bra	u5116
  2081  002222                     u5115:
  2082  002222  8894               	bsf	3988,4,c	;volatile
  2083  002224                     u5116:
  2084  002224  0012               	return	
  2085  002226                     l188:
  2086  002226  B003               	btfsc	pinMode@mode,0,c
  2087  002228  D002               	bra	u5125
  2088  00222A  9A94               	bcf	3988,5,c	;volatile
  2089  00222C  D001               	bra	u5126
  2090  00222E                     u5125:
  2091  00222E  8A94               	bsf	3988,5,c	;volatile
  2092  002230                     u5126:
  2093  002230  0012               	return	
  2094  002232                     l189:
  2095  002232  B003               	btfsc	pinMode@mode,0,c
  2096  002234  D002               	bra	u5135
  2097  002236  9C94               	bcf	3988,6,c	;volatile
  2098  002238  D001               	bra	u5136
  2099  00223A                     u5135:
  2100  00223A  8C94               	bsf	3988,6,c	;volatile
  2101  00223C                     u5136:
  2102  00223C  0012               	return	
  2103  00223E                     l190:
  2104  00223E  B003               	btfsc	pinMode@mode,0,c
  2105  002240  D002               	bra	u5145
  2106  002242  9E94               	bcf	3988,7,c	;volatile
  2107  002244  D001               	bra	u5146
  2108  002246                     u5145:
  2109  002246  8E94               	bsf	3988,7,c	;volatile
  2110  002248                     u5146:
  2111  002248  0012               	return	
  2112  00224A                     l191:
  2113  00224A  B003               	btfsc	pinMode@mode,0,c
  2114  00224C  D002               	bra	u5155
  2115  00224E  9895               	bcf	3989,4,c	;volatile
  2116  002250  D001               	bra	u5156
  2117  002252                     u5155:
  2118  002252  8895               	bsf	3989,4,c	;volatile
  2119  002254                     u5156:
  2120  002254  0012               	return	
  2121  002256                     l192:
  2122  002256  B003               	btfsc	pinMode@mode,0,c
  2123  002258  D002               	bra	u5165
  2124  00225A  9A95               	bcf	3989,5,c	;volatile
  2125  00225C  D001               	bra	u5166
  2126  00225E                     u5165:
  2127  00225E  8A95               	bsf	3989,5,c	;volatile
  2128  002260                     u5166:
  2129  002260  0012               	return	
  2130  002262                     l193:
  2131  002262  B003               	btfsc	pinMode@mode,0,c
  2132  002264  D002               	bra	u5175
  2133  002266  9C95               	bcf	3989,6,c	;volatile
  2134  002268  D001               	bra	u5176
  2135  00226A                     u5175:
  2136  00226A  8C95               	bsf	3989,6,c	;volatile
  2137  00226C                     u5176:
  2138  00226C  0012               	return	
  2139  00226E                     l194:
  2140  00226E  B003               	btfsc	pinMode@mode,0,c
  2141  002270  D002               	bra	u5185
  2142  002272  9E95               	bcf	3989,7,c	;volatile
  2143  002274  D001               	bra	u5186
  2144  002276                     u5185:
  2145  002276  8E95               	bsf	3989,7,c	;volatile
  2146  002278                     u5186:
  2147  002278  0012               	return	
  2148  00227A                     l195:
  2149  00227A  B003               	btfsc	pinMode@mode,0,c
  2150  00227C  D002               	bra	u5195
  2151  00227E  9093               	bcf	3987,0,c	;volatile
  2152  002280  D001               	bra	u5196
  2153  002282                     u5195:
  2154  002282  8093               	bsf	3987,0,c	;volatile
  2155  002284                     u5196:
  2156  002284  0012               	return	
  2157  002286                     l196:
  2158  002286  B003               	btfsc	pinMode@mode,0,c
  2159  002288  D002               	bra	u5205
  2160  00228A  9293               	bcf	3987,1,c	;volatile
  2161  00228C  D001               	bra	u5206
  2162  00228E                     u5205:
  2163  00228E  8293               	bsf	3987,1,c	;volatile
  2164  002290                     u5206:
  2165  002290  0012               	return	
  2166  002292                     l197:
  2167  002292  B003               	btfsc	pinMode@mode,0,c
  2168  002294  D002               	bra	u5215
  2169  002296  9493               	bcf	3987,2,c	;volatile
  2170  002298  D001               	bra	u5216
  2171  00229A                     u5215:
  2172  00229A  8493               	bsf	3987,2,c	;volatile
  2173  00229C                     u5216:
  2174  00229C  0012               	return	
  2175  00229E                     l198:
  2176  00229E  B003               	btfsc	pinMode@mode,0,c
  2177  0022A0  D002               	bra	u5225
  2178  0022A2  9693               	bcf	3987,3,c	;volatile
  2179  0022A4  D001               	bra	u5226
  2180  0022A6                     u5225:
  2181  0022A6  8693               	bsf	3987,3,c	;volatile
  2182  0022A8                     u5226:
  2183  0022A8  0012               	return	
  2184  0022AA                     l199:
  2185  0022AA  B003               	btfsc	pinMode@mode,0,c
  2186  0022AC  D002               	bra	u5235
  2187  0022AE  9893               	bcf	3987,4,c	;volatile
  2188  0022B0  D001               	bra	u5236
  2189  0022B2                     u5235:
  2190  0022B2  8893               	bsf	3987,4,c	;volatile
  2191  0022B4                     u5236:
  2192  0022B4  0012               	return	
  2193  0022B6                     l200:
  2194  0022B6  B003               	btfsc	pinMode@mode,0,c
  2195  0022B8  D002               	bra	u5245
  2196  0022BA  9A93               	bcf	3987,5,c	;volatile
  2197  0022BC  D001               	bra	u5246
  2198  0022BE                     u5245:
  2199  0022BE  8A93               	bsf	3987,5,c	;volatile
  2200  0022C0                     u5246:
  2201  0022C0  0012               	return	
  2202  0022C2                     l201:
  2203  0022C2  B003               	btfsc	pinMode@mode,0,c
  2204  0022C4  D002               	bra	u5255
  2205  0022C6  9C93               	bcf	3987,6,c	;volatile
  2206  0022C8  D001               	bra	u5256
  2207  0022CA                     u5255:
  2208  0022CA  8C93               	bsf	3987,6,c	;volatile
  2209  0022CC                     u5256:
  2210  0022CC  0012               	return	
  2211  0022CE                     l202:
  2212  0022CE  B003               	btfsc	pinMode@mode,0,c
  2213  0022D0  D002               	bra	u5265
  2214  0022D2  9E93               	bcf	3987,7,c	;volatile
  2215  0022D4  D001               	bra	u5266
  2216  0022D6                     u5265:
  2217  0022D6  8E93               	bsf	3987,7,c	;volatile
  2218  0022D8                     u5266:
  2219                           
  2220                           ;spi.c: 59: }
  2221                           
  2222                           ;spi.c: 58: default: break;
  2223  0022D8  0012               	return	
  2224  0022DA                     l4365:
  2225  0022DA  5004               	movf	pinMode@pin,w,c
  2226                           
  2227                           ; Switch size 1, requested type "space"
  2228                           ; Number of cases is 35, Range of values is 2 to 40
  2229                           ; switch strategies available:
  2230                           ; Name         Instructions Cycles
  2231                           ; simple_byte          106    54 (average)
  2232                           ;	Chosen strategy is simple_byte
  2233  0022DC  0A02               	xorlw	2	; case 2
  2234  0022DE  B4D8               	btfsc	status,2,c
  2235  0022E0  D72A               	goto	l167
  2236  0022E2  0A01               	xorlw	1	; case 3
  2237  0022E4  B4D8               	btfsc	status,2,c
  2238  0022E6  D72D               	goto	l169
  2239  0022E8  0A07               	xorlw	7	; case 4
  2240  0022EA  B4D8               	btfsc	status,2,c
  2241  0022EC  D730               	goto	l170
  2242  0022EE  0A01               	xorlw	1	; case 5
  2243  0022F0  B4D8               	btfsc	status,2,c
  2244  0022F2  D733               	goto	l171
  2245  0022F4  0A03               	xorlw	3	; case 6
  2246  0022F6  B4D8               	btfsc	status,2,c
  2247  0022F8  D736               	goto	l172
  2248  0022FA  0A01               	xorlw	1	; case 7
  2249  0022FC  B4D8               	btfsc	status,2,c
  2250  0022FE  D739               	goto	l173
  2251  002300  0A0F               	xorlw	15	; case 8
  2252  002302  B4D8               	btfsc	status,2,c
  2253  002304  D73C               	goto	l174
  2254  002306  0A01               	xorlw	1	; case 9
  2255  002308  B4D8               	btfsc	status,2,c
  2256  00230A  D73F               	goto	l175
  2257  00230C  0A03               	xorlw	3	; case 10
  2258  00230E  B4D8               	btfsc	status,2,c
  2259  002310  D742               	goto	l176
  2260  002312  0A07               	xorlw	7	; case 13
  2261  002314  B4D8               	btfsc	status,2,c
  2262  002316  D745               	goto	l177
  2263  002318  0A03               	xorlw	3	; case 14
  2264  00231A  B4D8               	btfsc	status,2,c
  2265  00231C  D748               	goto	l178
  2266  00231E  0A01               	xorlw	1	; case 15
  2267  002320  B4D8               	btfsc	status,2,c
  2268  002322  D74B               	goto	l179
  2269  002324  0A1F               	xorlw	31	; case 16
  2270  002326  B4D8               	btfsc	status,2,c
  2271  002328  D74E               	goto	l180
  2272  00232A  0A01               	xorlw	1	; case 17
  2273  00232C  B4D8               	btfsc	status,2,c
  2274  00232E  D751               	goto	l181
  2275  002330  0A03               	xorlw	3	; case 18
  2276  002332  B4D8               	btfsc	status,2,c
  2277  002334  D754               	goto	l182
  2278  002336  0A01               	xorlw	1	; case 19
  2279  002338  B4D8               	btfsc	status,2,c
  2280  00233A  D757               	goto	l183
  2281  00233C  0A07               	xorlw	7	; case 20
  2282  00233E  B4D8               	btfsc	status,2,c
  2283  002340  D75A               	goto	l184
  2284  002342  0A01               	xorlw	1	; case 21
  2285  002344  B4D8               	btfsc	status,2,c
  2286  002346  D75D               	goto	l185
  2287  002348  0A03               	xorlw	3	; case 22
  2288  00234A  B4D8               	btfsc	status,2,c
  2289  00234C  D760               	goto	l186
  2290  00234E  0A01               	xorlw	1	; case 23
  2291  002350  B4D8               	btfsc	status,2,c
  2292  002352  D763               	goto	l187
  2293  002354  0A0F               	xorlw	15	; case 24
  2294  002356  B4D8               	btfsc	status,2,c
  2295  002358  D766               	goto	l188
  2296  00235A  0A01               	xorlw	1	; case 25
  2297  00235C  B4D8               	btfsc	status,2,c
  2298  00235E  D769               	goto	l189
  2299  002360  0A03               	xorlw	3	; case 26
  2300  002362  B4D8               	btfsc	status,2,c
  2301  002364  D76C               	goto	l190
  2302  002366  0A01               	xorlw	1	; case 27
  2303  002368  B4D8               	btfsc	status,2,c
  2304  00236A  D76F               	goto	l191
  2305  00236C  0A07               	xorlw	7	; case 28
  2306  00236E  B4D8               	btfsc	status,2,c
  2307  002370  D772               	goto	l192
  2308  002372  0A01               	xorlw	1	; case 29
  2309  002374  B4D8               	btfsc	status,2,c
  2310  002376  D775               	goto	l193
  2311  002378  0A03               	xorlw	3	; case 30
  2312  00237A  B4D8               	btfsc	status,2,c
  2313  00237C  D778               	goto	l194
  2314  00237E  0A3F               	xorlw	63	; case 33
  2315  002380  B4D8               	btfsc	status,2,c
  2316  002382  D77B               	goto	l195
  2317  002384  0A03               	xorlw	3	; case 34
  2318  002386  B4D8               	btfsc	status,2,c
  2319  002388  D77E               	goto	l196
  2320  00238A  0A01               	xorlw	1	; case 35
  2321  00238C  B4D8               	btfsc	status,2,c
  2322  00238E  D781               	goto	l197
  2323  002390  0A07               	xorlw	7	; case 36
  2324  002392  B4D8               	btfsc	status,2,c
  2325  002394  D784               	goto	l198
  2326  002396  0A01               	xorlw	1	; case 37
  2327  002398  B4D8               	btfsc	status,2,c
  2328  00239A  D787               	goto	l199
  2329  00239C  0A03               	xorlw	3	; case 38
  2330  00239E  B4D8               	btfsc	status,2,c
  2331  0023A0  D78A               	goto	l200
  2332  0023A2  0A01               	xorlw	1	; case 39
  2333  0023A4  B4D8               	btfsc	status,2,c
  2334  0023A6  D78D               	goto	l201
  2335  0023A8  0A0F               	xorlw	15	; case 40
  2336  0023AA  A4D8               	btfss	status,2,c
  2337  0023AC  0012               	return	
  2338  0023AE  D78F               	goto	l202
  2339  0023B0                     __end_of_pinMode:
  2340                           	opt stack 0
  2341                           tblptru	equ	0xFF8
  2342                           tblptrh	equ	0xFF7
  2343                           tblptrl	equ	0xFF6
  2344                           tablat	equ	0xFF5
  2345                           intcon	equ	0xFF2
  2346                           postinc0	equ	0xFEE
  2347                           wreg	equ	0xFE8
  2348                           postdec2	equ	0xFDD
  2349                           fsr2h	equ	0xFDA
  2350                           fsr2l	equ	0xFD9
  2351                           status	equ	0xFD8
  2352                           
  2353 ;; *************** function _SPI_begin *****************
  2354 ;; Defined at:
  2355 ;;		line 224 in file "../../../RF24_c/utility/XC8/spi.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, status,2
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;Total ram usage:        0 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    1
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_RF24_begin
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text7
  2384  003B12                     __ptext7:
  2385                           	opt stack 0
  2386  003B12                     _SPI_begin:
  2387                           	opt stack 27
  2388                           
  2389                           ;spi.c: 235: TRISCbits.TRISC4=1;
  2390                           
  2391                           ;incstack = 0
  2392  003B12  8894               	bsf	3988,4,c	;volatile
  2393                           
  2394                           ;spi.c: 237: TRISCbits.TRISC3=0;
  2395  003B14  9694               	bcf	3988,3,c	;volatile
  2396                           
  2397                           ;spi.c: 239: TRISCbits.TRISC5=0;
  2398  003B16  9A94               	bcf	3988,5,c	;volatile
  2399                           
  2400                           ;spi.c: 242: SSPCON1bits.SSPEN=0;
  2401  003B18  9AC6               	bcf	4038,5,c	;volatile
  2402                           
  2403                           ;spi.c: 243: SSPSTATbits.CKE=1;
  2404  003B1A  8CC7               	bsf	4039,6,c	;volatile
  2405                           
  2406                           ;spi.c: 244: SSPCON1bits.CKP=0;
  2407  003B1C  98C6               	bcf	4038,4,c	;volatile
  2408                           
  2409                           ;spi.c: 245: SSPSTATbits.SMP=0;
  2410  003B1E  9EC7               	bcf	4039,7,c	;volatile
  2411                           
  2412                           ;spi.c: 246: SSPCON1bits.SSPM=1;
  2413  003B20  50C6               	movf	4038,w,c	;volatile
  2414  003B22  0BF0               	andlw	-16
  2415  003B24  0901               	iorlw	1
  2416  003B26  6EC6               	movwf	4038,c	;volatile
  2417                           
  2418                           ;spi.c: 247: SSPCON1bits.SSPEN=1;
  2419  003B28  8AC6               	bsf	4038,5,c	;volatile
  2420  003B2A  0012               	return		;funcret
  2421  003B2C                     __end_of_SPI_begin:
  2422                           	opt stack 0
  2423                           tblptru	equ	0xFF8
  2424                           tblptrh	equ	0xFF7
  2425                           tblptrl	equ	0xFF6
  2426                           tablat	equ	0xFF5
  2427                           intcon	equ	0xFF2
  2428                           postinc0	equ	0xFEE
  2429                           wreg	equ	0xFE8
  2430                           postdec2	equ	0xFDD
  2431                           fsr2h	equ	0xFDA
  2432                           fsr2l	equ	0xFD9
  2433                           status	equ	0xFD8
  2434                           
  2435 ;; *************** function _RF24_toggle_features_d *****************
  2436 ;; Defined at:
  2437 ;;		line 1266 in file "../../../RF24_c/RF24_c.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;Total ram usage:        0 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    4
  2458 ;; This function calls:
  2459 ;;		_RF24_beginTransaction
  2460 ;;		_RF24_endTransaction
  2461 ;;		_SPI_transfer
  2462 ;; This function is called by:
  2463 ;;		_RF24_begin
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text8
  2468  003B5E                     __ptext8:
  2469                           	opt stack 0
  2470  003B5E                     _RF24_toggle_features_d:
  2471                           	opt stack 24
  2472                           
  2473                           ;RF24_c.c: 1268: RF24_beginTransaction();
  2474                           
  2475                           ;incstack = 0
  2476  003B5E  ECEE  F01D         	call	_RF24_beginTransaction	;wreg free
  2477                           
  2478                           ;RF24_c.c: 1269: SPI_transfer( 0x50 );
  2479  003B62  0E50               	movlw	80
  2480  003B64  ECCE  F01D         	call	_SPI_transfer
  2481                           
  2482                           ;RF24_c.c: 1270: SPI_transfer( 0x73 );
  2483  003B68  0E73               	movlw	115
  2484  003B6A  ECCE  F01D         	call	_SPI_transfer
  2485                           
  2486                           ;RF24_c.c: 1271: RF24_endTransaction();
  2487  003B6E  ECEA  F01D         	call	_RF24_endTransaction	;wreg free
  2488  003B72  0012               	return		;funcret
  2489  003B74                     __end_of_RF24_toggle_features_d:
  2490                           	opt stack 0
  2491                           tblptru	equ	0xFF8
  2492                           tblptrh	equ	0xFF7
  2493                           tblptrl	equ	0xFF6
  2494                           tablat	equ	0xFF5
  2495                           intcon	equ	0xFF2
  2496                           postinc0	equ	0xFEE
  2497                           wreg	equ	0xFE8
  2498                           postdec2	equ	0xFDD
  2499                           fsr2h	equ	0xFDA
  2500                           fsr2l	equ	0xFD9
  2501                           status	equ	0xFD8
  2502                           
  2503 ;; *************** function _RF24_setDataRate *****************
  2504 ;; Defined at:
  2505 ;;		line 1453 in file "../../../RF24_c/RF24_c.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  speed           1    wreg     enum E3388
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  speed           1   17[COMRAM] enum E3388
  2510 ;;  setup           1   18[COMRAM] unsigned char 
  2511 ;;  result          1   16[COMRAM] unsigned char 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      unsigned char 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2, status,0, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;Total ram usage:        3 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    5
  2528 ;; This function calls:
  2529 ;;		_RF24_read_register_d
  2530 ;;		_RF24_write_register_d
  2531 ;; This function is called by:
  2532 ;;		_RF24_begin
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text9
  2537  0031D2                     __ptext9:
  2538                           	opt stack 0
  2539  0031D2                     _RF24_setDataRate:
  2540                           	opt stack 23
  2541                           
  2542                           ;incstack = 0
  2543                           ;RF24_setDataRate@speed stored from wreg
  2544  0031D2  6E12               	movwf	RF24_setDataRate@speed,c
  2545                           
  2546                           ;RF24_c.c: 1455: uint8_t result = 0;
  2547  0031D4  0E00               	movlw	0
  2548  0031D6  6E11               	movwf	RF24_setDataRate@result,c
  2549                           
  2550                           ;RF24_c.c: 1456: uint8_t setup = RF24_read_register_d(0x06) ;
  2551  0031D8  0E06               	movlw	6
  2552  0031DA  EC50  F01D         	call	_RF24_read_register_d
  2553  0031DE  6E13               	movwf	RF24_setDataRate@setup,c
  2554                           
  2555                           ;RF24_c.c: 1459: setup &= ~((1<<(5)) | (1<<(3))) ;
  2556  0031E0  0ED7               	movlw	215
  2557  0031E2  1613               	andwf	RF24_setDataRate@setup,f,c
  2558                           
  2559                           ;RF24_c.c: 1464: rf.txDelay=85;
  2560  0031E4  0E55               	movlw	85
  2561  0031E6  0100               	movlb	0	; () banked
  2562  0031E8  6F99               	movwf	(_rf+13)& (0+255),b
  2563  0031EA  0E00               	movlw	0
  2564  0031EC  6F9A               	movwf	(_rf+14)& (0+255),b
  2565  0031EE  0E00               	movlw	0
  2566  0031F0  6F9B               	movwf	(_rf+15)& (0+255),b
  2567  0031F2  0E00               	movlw	0
  2568  0031F4  6F9C               	movwf	(_rf+16)& (0+255),b
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;RF24_c.c: 1466: if( speed == RF24_250KBPS )
  2572  0031F6  0E02               	movlw	2
  2573  0031F8  1812               	xorwf	RF24_setDataRate@speed,w,c
  2574  0031FA  A4D8               	btfss	status,2,c
  2575  0031FC  D003               	goto	l4573
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;RF24_c.c: 1467: {
  2579                           ;RF24_c.c: 1470: setup |= (1<<(5)) ;
  2580  0031FE  8A13               	bsf	RF24_setDataRate@setup,5,c
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;RF24_c.c: 1474: rf.txDelay=155;
  2584  003200  0E9B               	movlw	155
  2585  003202  D005               	goto	L1
  2586  003204                     l4573:
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;RF24_c.c: 1477: else
  2590                           ;RF24_c.c: 1478: {
  2591                           ;RF24_c.c: 1481: if ( speed == RF24_2MBPS )
  2592  003204  0412               	decf	RF24_setDataRate@speed,w,c
  2593  003206  A4D8               	btfss	status,2,c
  2594  003208  D00A               	goto	l4579
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;RF24_c.c: 1482: {
  2598                           ;RF24_c.c: 1483: setup |= (1<<(3));
  2599  00320A  8613               	bsf	RF24_setDataRate@setup,3,c
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;RF24_c.c: 1487: rf.txDelay=65;
  2603  00320C  0E41               	movlw	65
  2604  00320E                     L1:
  2605  00320E  0100               	movlb	0	; () banked
  2606  003210  6F99               	movwf	(_rf+13)& (0+255),b
  2607  003212  0E00               	movlw	0
  2608  003214  6F9A               	movwf	(_rf+14)& (0+255),b
  2609  003216  0E00               	movlw	0
  2610  003218  6F9B               	movwf	(_rf+15)& (0+255),b
  2611  00321A  0E00               	movlw	0
  2612  00321C  6F9C               	movwf	(_rf+16)& (0+255),b
  2613  00321E                     l4579:
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;RF24_c.c: 1489: }
  2617                           ;RF24_c.c: 1490: }
  2618                           ;RF24_c.c: 1491: RF24_write_register_d(0x06,setup);
  2619  00321E  C013  F00E         	movff	RF24_setDataRate@setup,RF24_write_register_d@value
  2620  003222  0E06               	movlw	6
  2621  003224  EC40  F01D         	call	_RF24_write_register_d
  2622                           
  2623                           ;RF24_c.c: 1494: if ( RF24_read_register_d(0x06) == setup )
  2624  003228  0E06               	movlw	6
  2625  00322A  EC50  F01D         	call	_RF24_read_register_d
  2626  00322E  1813               	xorwf	RF24_setDataRate@setup,w,c
  2627  003230  A4D8               	btfss	status,2,c
  2628  003232  D002               	goto	l986
  2629                           
  2630                           ;RF24_c.c: 1495: {
  2631                           ;RF24_c.c: 1496: result = 1;
  2632  003234  0E01               	movlw	1
  2633  003236  6E11               	movwf	RF24_setDataRate@result,c
  2634  003238                     l986:
  2635                           
  2636                           ;RF24_c.c: 1497: }
  2637                           ;RF24_c.c: 1498: return result;
  2638  003238  5011               	movf	RF24_setDataRate@result,w,c
  2639  00323A  0012               	return	
  2640  00323C                     __end_of_RF24_setDataRate:
  2641                           	opt stack 0
  2642                           tblptru	equ	0xFF8
  2643                           tblptrh	equ	0xFF7
  2644                           tblptrl	equ	0xFF6
  2645                           tablat	equ	0xFF5
  2646                           intcon	equ	0xFF2
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           postdec2	equ	0xFDD
  2650                           fsr2h	equ	0xFDA
  2651                           fsr2l	equ	0xFD9
  2652                           status	equ	0xFD8
  2653                           
  2654 ;; *************** function _RF24N_init *****************
  2655 ;; Defined at:
  2656 ;;		line 84 in file "../../RF24Network_c.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		None
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;Total ram usage:        0 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    1
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_setup
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text10
  2685  003368                     __ptext10:
  2686                           	opt stack 0
  2687  003368                     _RF24N_init:
  2688                           	opt stack 28
  2689                           
  2690                           ;RF24Network_c.c: 86: rn.next_frame= rn.frame_queue;
  2691                           
  2692                           ;incstack = 0
  2693  003368  0E0F               	movlw	low (_rn+58)
  2694  00336A  CFE8 F1A9          	movff	wreg,_rn+212
  2695  00336E  0E01               	movlw	high (_rn+58)
  2696  003370  CFE8 F1AA          	movff	wreg,_rn+213
  2697                           
  2698                           ;RF24Network_c.c: 88: rn.frag_queue.message_buffer=&rn.frag_queue_message_buffer[0];
  2699  003374  0EB7               	movlw	low (_rn+226)
  2700  003376  CFE8 F1B5          	movff	wreg,_rn+224
  2701  00337A  0E01               	movlw	high (_rn+226)
  2702  00337C  CFE8 F1B6          	movff	wreg,_rn+225
  2703                           
  2704                           ;RF24Network_c.c: 89: rn.frag_ptr = &rn.frag_queue;
  2705  003380  0EAB               	movlw	low (_rn+214)
  2706  003382  CFE8 F0FC          	movff	wreg,_rn+39
  2707  003386  0E01               	movlw	high (_rn+214)
  2708  003388  CFE8 F0FD          	movff	wreg,_rn+40
  2709                           
  2710                           ;RF24Network_c.c: 91: rn.txTime=0;
  2711  00338C  0E00               	movlw	0
  2712  00338E  CFE8 F100          	movff	wreg,_rn+43
  2713  003392  0E00               	movlw	0
  2714  003394  CFE8 F101          	movff	wreg,_rn+44
  2715  003398  0E00               	movlw	0
  2716  00339A  CFE8 F102          	movff	wreg,_rn+45
  2717  00339E  0E00               	movlw	0
  2718  0033A0  CFE8 F103          	movff	wreg,_rn+46
  2719                           
  2720                           ;RF24Network_c.c: 92: rn.networkFlags=0;
  2721  0033A4  0E00               	movlw	0
  2722  0033A6  CFE8 F0FF          	movff	wreg,_rn+42
  2723                           
  2724                           ;RF24Network_c.c: 93: rn.returnSysMsgs=0;
  2725  0033AA  0E00               	movlw	0
  2726  0033AC  CFE8 F0FE          	movff	wreg,_rn+41
  2727                           
  2728                           ;RF24Network_c.c: 94: rn.multicastRelay=0;
  2729  0033B0  0E00               	movlw	0
  2730  0033B2  CFE8 F0D5          	movff	wreg,_rn
  2731                           
  2732                           ;RF24Network_c.c: 99: rn.max_frame_payload_size = 32-sizeof(RF24NetworkHeader);
  2733  0033B6  0E18               	movlw	24
  2734  0033B8  CFE8 F108          	movff	wreg,_rn+51
  2735  0033BC  0E00               	movlw	0
  2736  0033BE  CFE8 F109          	movff	wreg,_rn+52
  2737  0033C2  0012               	return		;funcret
  2738  0033C4                     __end_of_RF24N_init:
  2739                           	opt stack 0
  2740                           tblptru	equ	0xFF8
  2741                           tblptrh	equ	0xFF7
  2742                           tblptrl	equ	0xFF6
  2743                           tablat	equ	0xFF5
  2744                           intcon	equ	0xFF2
  2745                           postinc0	equ	0xFEE
  2746                           wreg	equ	0xFE8
  2747                           postdec2	equ	0xFDD
  2748                           fsr2h	equ	0xFDA
  2749                           fsr2l	equ	0xFD9
  2750                           status	equ	0xFD8
  2751                           
  2752 ;; *************** function _RF24N_begin_d *****************
  2753 ;; Defined at:
  2754 ;;		line 163 in file "../../RF24Network_c.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  _channel        1    wreg     unsigned char 
  2757 ;;  _node_addres    2   33[COMRAM] unsigned int 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  _channel        1   41[COMRAM] unsigned char 
  2760 ;;  addr            5   35[COMRAM] unsigned char [5]
  2761 ;;  i               1   42[COMRAM] unsigned char 
  2762 ;;  retryVar        1   40[COMRAM] unsigned char 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;Total ram usage:       10 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    7
  2779 ;; This function calls:
  2780 ;;		_RF24N_is_valid_address
  2781 ;;		_RF24N_pipe_address
  2782 ;;		_RF24N_setup_address
  2783 ;;		_RF24_enableDynamicPayloads
  2784 ;;		_RF24_isValid
  2785 ;;		_RF24_openReadingPipe_d
  2786 ;;		_RF24_setAutoAck_p
  2787 ;;		_RF24_setChannel
  2788 ;;		_RF24_setRetries
  2789 ;;		_RF24_startListening
  2790 ;;		___lwmod
  2791 ;;		___wmul
  2792 ;; This function is called by:
  2793 ;;		_setup
  2794 ;;		_RF24N_begin
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text11
  2799  002C4A                     __ptext11:
  2800                           	opt stack 0
  2801  002C4A                     _RF24N_begin_d:
  2802                           	opt stack 22
  2803                           
  2804                           ;incstack = 0
  2805                           ;RF24N_begin_d@_channel stored from wreg
  2806  002C4A  6E2A               	movwf	RF24N_begin_d@_channel,c
  2807                           
  2808                           ;RF24Network_c.c: 165: uint8_t i;
  2809                           ;RF24Network_c.c: 166: uint8_t retryVar;
  2810                           ;RF24Network_c.c: 168: if (! RF24N_is_valid_address(_node_address) )
  2811  002C4C  C022  F003         	movff	RF24N_begin_d@_node_address,RF24N_is_valid_address@node
  2812  002C50  C023  F004         	movff	RF24N_begin_d@_node_address+1,RF24N_is_valid_address@node+1
  2813  002C54  EC2A  F01C         	call	_RF24N_is_valid_address	;wreg free
  2814  002C58  0900               	iorlw	0
  2815  002C5A  B4D8               	btfsc	status,2,c
  2816  002C5C  0012               	return	
  2817                           
  2818                           ;RF24Network_c.c: 171: rn.node_address = _node_address;
  2819                           
  2820                           ;RF24Network_c.c: 169: return;
  2821  002C5E  C022  F105         	movff	RF24N_begin_d@_node_address,_rn+48
  2822  002C62  C023  F106         	movff	RF24N_begin_d@_node_address+1,_rn+49
  2823                           
  2824                           ;RF24Network_c.c: 173: if ( ! RF24_isValid() ){
  2825  002C66  EC6D  F01D         	call	_RF24_isValid	;wreg free
  2826  002C6A  0900               	iorlw	0
  2827  002C6C  B4D8               	btfsc	status,2,c
  2828  002C6E  0012               	return	
  2829                           
  2830                           ;RF24Network_c.c: 175: }
  2831                           ;RF24Network_c.c: 178: if(_channel != 255){
  2832                           
  2833                           ;RF24Network_c.c: 174: return;
  2834  002C70  282A               	incf	RF24N_begin_d@_channel,w,c
  2835  002C72  B4D8               	btfsc	status,2,c
  2836  002C74  D003               	goto	l397
  2837                           
  2838                           ;RF24Network_c.c: 179: RF24_setChannel(_channel);
  2839  002C76  502A               	movf	RF24N_begin_d@_channel,w,c
  2840  002C78  ECD2  F01C         	call	_RF24_setChannel
  2841  002C7C                     l397:
  2842                           
  2843                           ;RF24Network_c.c: 180: }
  2844                           ;RF24Network_c.c: 182: RF24_setAutoAck_p(0,0);
  2845  002C7C  0E00               	movlw	0
  2846  002C7E  6E11               	movwf	RF24_setAutoAck_p@enable,c
  2847  002C80  0E00               	movlw	0
  2848  002C82  EC0E  F01A         	call	_RF24_setAutoAck_p
  2849                           
  2850                           ;RF24Network_c.c: 185: RF24_enableDynamicPayloads();
  2851  002C86  ECBE  F01C         	call	_RF24_enableDynamicPayloads	;wreg free
  2852                           
  2853                           ;RF24Network_c.c: 189: retryVar = (((rn.node_address % 6)+1) *2) + 3;
  2854  002C8A  C105  F003         	movff	_rn+48,___lwmod@dividend
  2855  002C8E  C106  F004         	movff	_rn+49,___lwmod@dividend+1
  2856  002C92  0E00               	movlw	0
  2857  002C94  6E06               	movwf	___lwmod@divisor+1,c
  2858  002C96  0E06               	movlw	6
  2859  002C98  6E05               	movwf	___lwmod@divisor,c
  2860  002C9A  ECF9  F01A         	call	___lwmod	;wreg free
  2861  002C9E  90D8               	bcf	status,0,c
  2862  002CA0  3403               	rlcf	?___lwmod,w,c
  2863  002CA2  0F05               	addlw	5
  2864  002CA4  6E29               	movwf	RF24N_begin_d@retryVar,c
  2865                           
  2866                           ;RF24Network_c.c: 190: RF24_setRetries(retryVar, 5);
  2867  002CA6  0E05               	movlw	5
  2868  002CA8  6E11               	movwf	RF24_setRetries@count,c
  2869  002CAA  5029               	movf	RF24N_begin_d@retryVar,w,c
  2870  002CAC  EC1E  F01D         	call	_RF24_setRetries
  2871                           
  2872                           ;RF24Network_c.c: 191: rn.txTimeout = 25;
  2873  002CB0  0E19               	movlw	25
  2874  002CB2  CFE8 F0D6          	movff	wreg,_rn+1
  2875  002CB6  0E00               	movlw	0
  2876  002CB8  CFE8 F0D7          	movff	wreg,_rn+2
  2877  002CBC  0E00               	movlw	0
  2878  002CBE  CFE8 F0D8          	movff	wreg,_rn+3
  2879  002CC2  0E00               	movlw	0
  2880  002CC4  CFE8 F0D9          	movff	wreg,_rn+4
  2881                           
  2882                           ;RF24Network_c.c: 192: rn.routeTimeout = rn.txTimeout*3;
  2883  002CC8  C0D6  F003         	movff	_rn+1,___wmul@multiplier
  2884  002CCC  C0D7  F004         	movff	_rn+2,___wmul@multiplier+1
  2885  002CD0  0E00               	movlw	0
  2886  002CD2  6E06               	movwf	___wmul@multiplicand+1,c
  2887  002CD4  0E03               	movlw	3
  2888  002CD6  6E05               	movwf	___wmul@multiplicand,c
  2889  002CD8  ECF8  F01C         	call	___wmul	;wreg free
  2890  002CDC  C003  F0DA         	movff	?___wmul,_rn+5
  2891  002CE0  C004  F0DB         	movff	?___wmul+1,_rn+6
  2892                           
  2893                           ;RF24Network_c.c: 202: RF24N_setup_address();
  2894  002CE4  ECB7  F015         	call	_RF24N_setup_address	;wreg free
  2895                           
  2896                           ;RF24Network_c.c: 205: i = 6;
  2897  002CE8  0E06               	movlw	6
  2898  002CEA  6E2B               	movwf	RF24N_begin_d@i,c
  2899                           
  2900                           ;RF24Network_c.c: 206: while (i--){
  2901  002CEC  D013               	goto	l4741
  2902  002CEE                     l4737:
  2903                           
  2904                           ;RF24Network_c.c: 207: raddr_t addr[5];
  2905                           ;RF24Network_c.c: 208: RF24N_pipe_address(_node_address,i,addr);
  2906  002CEE  C022  F003         	movff	RF24N_begin_d@_node_address,RF24N_pipe_address@node
  2907  002CF2  C023  F004         	movff	RF24N_begin_d@_node_address+1,RF24N_pipe_address@node+1
  2908  002CF6  C02B  F005         	movff	RF24N_begin_d@i,RF24N_pipe_address@pipe
  2909  002CFA  0E24               	movlw	low RF24N_begin_d@addr
  2910  002CFC  6E06               	movwf	RF24N_pipe_address@address,c
  2911  002CFE  0E00               	movlw	high RF24N_begin_d@addr
  2912  002D00  6E07               	movwf	RF24N_pipe_address@address+1,c
  2913  002D02  ECBF  F013         	call	_RF24N_pipe_address	;wreg free
  2914                           
  2915                           ;RF24Network_c.c: 209: RF24_openReadingPipe_d(i,addr);
  2916  002D06  0E24               	movlw	low RF24N_begin_d@addr
  2917  002D08  6E11               	movwf	RF24_openReadingPipe_d@address_,c
  2918  002D0A  0E00               	movlw	high RF24N_begin_d@addr
  2919  002D0C  6E12               	movwf	RF24_openReadingPipe_d@address_+1,c
  2920  002D0E  502B               	movf	RF24N_begin_d@i,w,c
  2921  002D10  EC4E  F014         	call	_RF24_openReadingPipe_d
  2922  002D14                     l4741:
  2923  002D14  062B               	decf	RF24N_begin_d@i,f,c
  2924  002D16  282B               	incf	RF24N_begin_d@i,w,c
  2925  002D18  A4D8               	btfss	status,2,c
  2926  002D1A  D7E9               	goto	l4737
  2927                           
  2928                           ;RF24Network_c.c: 210: }
  2929                           ;RF24Network_c.c: 211: RF24_startListening();
  2930  002D1C  ECE2  F019         	call	_RF24_startListening	;wreg free
  2931  002D20  0012               	return		;funcret
  2932  002D22                     __end_of_RF24N_begin_d:
  2933                           	opt stack 0
  2934                           tblptru	equ	0xFF8
  2935                           tblptrh	equ	0xFF7
  2936                           tblptrl	equ	0xFF6
  2937                           tablat	equ	0xFF5
  2938                           intcon	equ	0xFF2
  2939                           postinc0	equ	0xFEE
  2940                           wreg	equ	0xFE8
  2941                           postdec2	equ	0xFDD
  2942                           fsr2h	equ	0xFDA
  2943                           fsr2l	equ	0xFD9
  2944                           status	equ	0xFD8
  2945                           
  2946 ;; *************** function _RF24_setRetries *****************
  2947 ;; Defined at:
  2948 ;;		line 1580 in file "../../../RF24_c/RF24_c.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  delay           1    wreg     unsigned char 
  2951 ;;  count           1   16[COMRAM] unsigned char 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  delay           1   19[COMRAM] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2963 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;Total ram usage:        4 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    5
  2970 ;; This function calls:
  2971 ;;		_RF24_write_register_d
  2972 ;; This function is called by:
  2973 ;;		_RF24N_begin_d
  2974 ;;		_RF24_begin
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text12
  2979  003A3C                     __ptext12:
  2980                           	opt stack 0
  2981  003A3C                     _RF24_setRetries:
  2982                           	opt stack 23
  2983                           
  2984                           ;incstack = 0
  2985                           ;RF24_setRetries@delay stored from wreg
  2986  003A3C  6E14               	movwf	RF24_setRetries@delay,c
  2987                           
  2988                           ;RF24_c.c: 1582: RF24_write_register_d(0x04,(delay&0xf)<<4 | (count&0xf)<<0);
  2989  003A3E  C011  F012         	movff	RF24_setRetries@count,??_RF24_setRetries
  2990  003A42  0E0F               	movlw	15
  2991  003A44  1612               	andwf	??_RF24_setRetries,f,c
  2992  003A46  C014  F013         	movff	RF24_setRetries@delay,??_RF24_setRetries+1
  2993  003A4A  0E0F               	movlw	15
  2994  003A4C  1613               	andwf	??_RF24_setRetries+1,f,c
  2995  003A4E  3813               	swapf	??_RF24_setRetries+1,w,c
  2996  003A50  0BF0               	andlw	240
  2997  003A52  1012               	iorwf	??_RF24_setRetries,w,c
  2998  003A54  6E0E               	movwf	RF24_write_register_d@value,c
  2999  003A56  0E04               	movlw	4
  3000  003A58  EC40  F01D         	call	_RF24_write_register_d
  3001  003A5C  0012               	return		;funcret
  3002  003A5E                     __end_of_RF24_setRetries:
  3003                           	opt stack 0
  3004                           tblptru	equ	0xFF8
  3005                           tblptrh	equ	0xFF7
  3006                           tblptrl	equ	0xFF6
  3007                           tablat	equ	0xFF5
  3008                           intcon	equ	0xFF2
  3009                           postinc0	equ	0xFEE
  3010                           wreg	equ	0xFE8
  3011                           postdec2	equ	0xFDD
  3012                           fsr2h	equ	0xFDA
  3013                           fsr2l	equ	0xFD9
  3014                           status	equ	0xFD8
  3015                           
  3016 ;; *************** function _RF24_setChannel *****************
  3017 ;; Defined at:
  3018 ;;		line 464 in file "../../../RF24_c/RF24_c.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  channel         1    wreg     unsigned char 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  channel         1   18[COMRAM] unsigned char 
  3023 ;;  max_channel     1   19[COMRAM] const unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      void 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2, status,0, cstack
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;Total ram usage:        4 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    5
  3040 ;; This function calls:
  3041 ;;		_RF24_write_register_d
  3042 ;; This function is called by:
  3043 ;;		_RF24N_begin_d
  3044 ;;		_RF24_begin
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text13
  3049  0039A4                     __ptext13:
  3050                           	opt stack 0
  3051  0039A4                     _RF24_setChannel:
  3052                           	opt stack 23
  3053                           
  3054                           ;incstack = 0
  3055                           ;RF24_setChannel@channel stored from wreg
  3056  0039A4  6E13               	movwf	RF24_setChannel@channel,c
  3057                           
  3058                           ;RF24_c.c: 466: const uint8_t max_channel = 125;
  3059  0039A6  0E7D               	movlw	125
  3060  0039A8  6E14               	movwf	RF24_setChannel@max_channel,c
  3061                           
  3062                           ;RF24_c.c: 467: RF24_write_register_d(0x05,(channel<max_channel?channel:max_channel));
  3063  0039AA  5014               	movf	RF24_setChannel@max_channel,w,c
  3064  0039AC  5C13               	subwf	RF24_setChannel@channel,w,c
  3065  0039AE  A0D8               	btfss	status,0,c
  3066  0039B0  D003               	goto	l758
  3067  0039B2  C014  F011         	movff	RF24_setChannel@max_channel,_RF24_setChannel$2342
  3068  0039B6  D002               	goto	L2
  3069  0039B8                     l758:
  3070  0039B8  C013  F011         	movff	RF24_setChannel@channel,_RF24_setChannel$2342
  3071  0039BC                     L2:
  3072  0039BC  6A12               	clrf	_RF24_setChannel$2342+1,c
  3073  0039BE  C011  F00E         	movff	_RF24_setChannel$2342,RF24_write_register_d@value
  3074  0039C2  0E05               	movlw	5
  3075  0039C4  EC40  F01D         	call	_RF24_write_register_d
  3076  0039C8  0012               	return		;funcret
  3077  0039CA                     __end_of_RF24_setChannel:
  3078                           	opt stack 0
  3079                           tblptru	equ	0xFF8
  3080                           tblptrh	equ	0xFF7
  3081                           tblptrl	equ	0xFF6
  3082                           tablat	equ	0xFF5
  3083                           intcon	equ	0xFF2
  3084                           postinc0	equ	0xFEE
  3085                           wreg	equ	0xFE8
  3086                           postdec2	equ	0xFDD
  3087                           fsr2h	equ	0xFDA
  3088                           fsr2l	equ	0xFD9
  3089                           status	equ	0xFD8
  3090                           
  3091 ;; *************** function _RF24_openReadingPipe_d *****************
  3092 ;; Defined at:
  3093 ;;		line 1187 in file "../../../RF24_c/RF24_c.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  child           1    wreg     unsigned char 
  3096 ;;  address_        2   16[COMRAM] PTR const unsigned char 
  3097 ;;		 -> RF24N_multicastLevel@addr(5), RF24N_begin_d@addr(5), 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  child           1   26[COMRAM] unsigned char 
  3100 ;;  address         5   20[COMRAM] unsigned char [5]
  3101 ;;  i               1   25[COMRAM] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;Total ram usage:       11 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    5
  3118 ;; This function calls:
  3119 ;;		_RF24_read_register_d
  3120 ;;		_RF24_write_register_c_d
  3121 ;;		_RF24_write_register_d
  3122 ;;		_memcpy
  3123 ;; This function is called by:
  3124 ;;		_RF24N_begin_d
  3125 ;;		_RF24N_multicastLevel
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text14
  3130  00289C                     __ptext14:
  3131                           	opt stack 0
  3132  00289C                     _RF24_openReadingPipe_d:
  3133                           	opt stack 23
  3134                           
  3135                           ;incstack = 0
  3136                           ;RF24_openReadingPipe_d@child stored from wreg
  3137  00289C  6E1B               	movwf	RF24_openReadingPipe_d@child,c
  3138                           
  3139                           ;RF24_c.c: 1189: uint8_t i;
  3140                           ;RF24_c.c: 1190: raddr_t address[5];
  3141                           ;RF24_c.c: 1191: for(i=0;i<5;i++)
  3142  00289E  0E00               	movlw	0
  3143  0028A0  6E1A               	movwf	RF24_openReadingPipe_d@i,c
  3144  0028A2                     l4415:
  3145  0028A2  0E04               	movlw	4
  3146  0028A4  641A               	cpfsgt	RF24_openReadingPipe_d@i,c
  3147  0028A6  D001               	goto	l4419
  3148  0028A8  D01D               	goto	l4425
  3149  0028AA                     l4419:
  3150                           
  3151                           ;RF24_c.c: 1192: {
  3152                           ;RF24_c.c: 1193: address[i]=address_[4-i];
  3153  0028AA  501A               	movf	RF24_openReadingPipe_d@i,w,c
  3154  0028AC  6E13               	movwf	??_RF24_openReadingPipe_d& (0+255),c
  3155  0028AE  6A14               	clrf	(??_RF24_openReadingPipe_d+1)& (0+255),c
  3156  0028B0  1E13               	comf	??_RF24_openReadingPipe_d,f,c
  3157  0028B2  1E14               	comf	??_RF24_openReadingPipe_d+1,f,c
  3158  0028B4  4A13               	infsnz	??_RF24_openReadingPipe_d,f,c
  3159  0028B6  2A14               	incf	??_RF24_openReadingPipe_d+1,f,c
  3160  0028B8  0E04               	movlw	4
  3161  0028BA  2613               	addwf	??_RF24_openReadingPipe_d,f,c
  3162  0028BC  0E00               	movlw	0
  3163  0028BE  2214               	addwfc	??_RF24_openReadingPipe_d+1,f,c
  3164  0028C0  5013               	movf	??_RF24_openReadingPipe_d,w,c
  3165  0028C2  2411               	addwf	RF24_openReadingPipe_d@address_,w,c
  3166  0028C4  6ED9               	movwf	fsr2l,c
  3167  0028C6  5014               	movf	??_RF24_openReadingPipe_d+1,w,c
  3168  0028C8  2012               	addwfc	RF24_openReadingPipe_d@address_+1,w,c
  3169  0028CA  6EDA               	movwf	fsr2h,c
  3170  0028CC  501A               	movf	RF24_openReadingPipe_d@i,w,c
  3171  0028CE  0D01               	mullw	1
  3172  0028D0  0E15               	movlw	low RF24_openReadingPipe_d@address
  3173  0028D2  24F3               	addwf	prodl,w,c
  3174  0028D4  6EE9               	movwf	fsr0l,c
  3175  0028D6  0E00               	movlw	high RF24_openReadingPipe_d@address
  3176  0028D8  20F4               	addwfc	prodh,w,c
  3177  0028DA  6EEA               	movwf	fsr0h,c
  3178  0028DC  CFDF FFEF          	movff	indf2,indf0
  3179  0028E0  2A1A               	incf	RF24_openReadingPipe_d@i,f,c
  3180  0028E2  D7DF               	goto	l4415
  3181  0028E4                     l4425:
  3182                           
  3183                           ;RF24_c.c: 1194: }
  3184                           ;RF24_c.c: 1198: if (child == 0){
  3185  0028E4  501B               	movf	RF24_openReadingPipe_d@child,w,c
  3186  0028E6  A4D8               	btfss	status,2,c
  3187  0028E8  D00D               	goto	l4429
  3188                           
  3189                           ;RF24_c.c: 1199: memcpy(rf.pipe0_reading_address,address,rf.addr_width);
  3190  0028EA  0E93               	movlw	low (_rf+7)
  3191  0028EC  6E03               	movwf	memcpy@d1,c
  3192  0028EE  0E00               	movlw	high (_rf+7)
  3193  0028F0  6E04               	movwf	memcpy@d1+1,c
  3194  0028F2  0E15               	movlw	low RF24_openReadingPipe_d@address
  3195  0028F4  6E05               	movwf	memcpy@s1,c
  3196  0028F6  0E00               	movlw	high RF24_openReadingPipe_d@address
  3197  0028F8  6E06               	movwf	memcpy@s1+1,c
  3198  0028FA  C098  F007         	movff	_rf+12,memcpy@n
  3199  0028FE  6A08               	clrf	memcpy@n+1,c
  3200  002900  EC1A  F01B         	call	_memcpy	;wreg free
  3201  002904                     l4429:
  3202                           
  3203                           ;RF24_c.c: 1200: }
  3204                           ;RF24_c.c: 1202: if (child <= 6)
  3205  002904  0E07               	movlw	7
  3206  002906  601B               	cpfslt	RF24_openReadingPipe_d@child,c
  3207  002908  0012               	return	
  3208                           
  3209                           ;RF24_c.c: 1203: {
  3210                           ;RF24_c.c: 1205: if ( child < 2 )
  3211  00290A  0E02               	movlw	2
  3212  00290C  601B               	cpfslt	RF24_openReadingPipe_d@child,c
  3213  00290E  D013               	goto	l4435
  3214                           
  3215                           ;RF24_c.c: 1206: RF24_write_register_c_d((*(&child_pipe[child])), (const uint8_t*)(addre
      +                          ss), rf.addr_width);
  3216  002910  0E15               	movlw	low RF24_openReadingPipe_d@address
  3217  002912  6E0C               	movwf	RF24_write_register_c_d@buf,c
  3218  002914  0E00               	movlw	high RF24_openReadingPipe_d@address
  3219  002916  6E0D               	movwf	RF24_write_register_c_d@buf+1,c
  3220  002918  C098  F00E         	movff	_rf+12,RF24_write_register_c_d@len
  3221  00291C  501B               	movf	RF24_openReadingPipe_d@child,w,c
  3222  00291E  0D01               	mullw	1
  3223  002920  0E07               	movlw	low _child_pipe
  3224  002922  24F3               	addwf	prodl,w,c
  3225  002924  6EF6               	movwf	tblptrl,c
  3226  002926  0E10               	movlw	high _child_pipe
  3227  002928  20F4               	addwfc	prodh,w,c
  3228  00292A  6EF7               	movwf	tblptrh,c
  3229  00292C                     	if	0	;There are less than 3 active tblptr bytes
  3230  00292C                     	endif
  3231  00292C  0008               	tblrd		*
  3232  00292E  50F5               	movf	tablat,w,c
  3233  002930  EC45  F01C         	call	_RF24_write_register_c_d
  3234  002934  D012               	goto	l4437
  3235  002936                     l4435:
  3236                           
  3237                           ;RF24_c.c: 1207: else
  3238                           ;RF24_c.c: 1208: RF24_write_register_c_d((*(&child_pipe[child])), (const uint8_t*)(addre
      +                          ss), 1);
  3239  002936  0E15               	movlw	low RF24_openReadingPipe_d@address
  3240  002938  6E0C               	movwf	RF24_write_register_c_d@buf,c
  3241  00293A  0E00               	movlw	high RF24_openReadingPipe_d@address
  3242  00293C  6E0D               	movwf	RF24_write_register_c_d@buf+1,c
  3243  00293E  0E01               	movlw	1
  3244  002940  6E0E               	movwf	RF24_write_register_c_d@len,c
  3245  002942  501B               	movf	RF24_openReadingPipe_d@child,w,c
  3246  002944  0D01               	mullw	1
  3247  002946  0E07               	movlw	low _child_pipe
  3248  002948  24F3               	addwf	prodl,w,c
  3249  00294A  6EF6               	movwf	tblptrl,c
  3250  00294C  0E10               	movlw	high _child_pipe
  3251  00294E  20F4               	addwfc	prodh,w,c
  3252  002950  6EF7               	movwf	tblptrh,c
  3253  002952                     	if	0	;There are less than 3 active tblptr bytes
  3254  002952                     	endif
  3255  002952  0008               	tblrd		*
  3256  002954  50F5               	movf	tablat,w,c
  3257  002956  EC45  F01C         	call	_RF24_write_register_c_d
  3258  00295A                     l4437:
  3259                           
  3260                           ;RF24_c.c: 1210: RF24_write_register_d((*(&child_payload_size[child])),rf.payload_size);
  3261  00295A  C091  F00E         	movff	_rf+5,RF24_write_register_d@value
  3262  00295E  501B               	movf	RF24_openReadingPipe_d@child,w,c
  3263  002960  0D01               	mullw	1
  3264  002962  0E01               	movlw	low _child_payload_size
  3265  002964  24F3               	addwf	prodl,w,c
  3266  002966  6EF6               	movwf	tblptrl,c
  3267  002968  0E10               	movlw	high _child_payload_size
  3268  00296A  20F4               	addwfc	prodh,w,c
  3269  00296C  6EF7               	movwf	tblptrh,c
  3270  00296E                     	if	0	;There are less than 3 active tblptr bytes
  3271  00296E                     	endif
  3272  00296E  0008               	tblrd		*
  3273  002970  50F5               	movf	tablat,w,c
  3274  002972  EC40  F01D         	call	_RF24_write_register_d
  3275                           
  3276                           ;RF24_c.c: 1215: RF24_write_register_d(0x02,RF24_read_register_d(0x02) | (1<<((*(&child_
      +                          pipe_enable[child])))));
  3277  002976  501B               	movf	RF24_openReadingPipe_d@child,w,c
  3278  002978  0D01               	mullw	1
  3279  00297A  0E0D               	movlw	low _child_pipe_enable
  3280  00297C  24F3               	addwf	prodl,w,c
  3281  00297E  6EF6               	movwf	tblptrl,c
  3282  002980  0E10               	movlw	high _child_pipe_enable
  3283  002982  20F4               	addwfc	prodh,w,c
  3284  002984  6EF7               	movwf	tblptrh,c
  3285  002986                     	if	0	;There are less than 3 active tblptr bytes
  3286  002986                     	endif
  3287  002986  0008               	tblrd		*
  3288  002988  CFF5 F013          	movff	tablat,??_RF24_openReadingPipe_d
  3289  00298C  0E01               	movlw	1
  3290  00298E  6E14               	movwf	(??_RF24_openReadingPipe_d+1)& (0+255),c
  3291  002990  2A13               	incf	??_RF24_openReadingPipe_d,f,c
  3292  002992  D002               	goto	u5354
  3293  002994                     u5355:
  3294  002994  90D8               	bcf	status,0,c
  3295  002996  3614               	rlcf	??_RF24_openReadingPipe_d+1,f,c
  3296  002998                     u5354:
  3297  002998  2E13               	decfsz	??_RF24_openReadingPipe_d,f,c
  3298  00299A  D7FC               	goto	u5355
  3299  00299C  0E02               	movlw	2
  3300  00299E  EC50  F01D         	call	_RF24_read_register_d
  3301  0029A2  1014               	iorwf	??_RF24_openReadingPipe_d+1,w,c
  3302  0029A4  6E0E               	movwf	RF24_write_register_d@value,c
  3303  0029A6  0E02               	movlw	2
  3304  0029A8  EC40  F01D         	call	_RF24_write_register_d
  3305  0029AC  0012               	return	
  3306  0029AE                     __end_of_RF24_openReadingPipe_d:
  3307                           	opt stack 0
  3308                           tblptru	equ	0xFF8
  3309                           tblptrh	equ	0xFF7
  3310                           tblptrl	equ	0xFF6
  3311                           tablat	equ	0xFF5
  3312                           prodh	equ	0xFF4
  3313                           prodl	equ	0xFF3
  3314                           intcon	equ	0xFF2
  3315                           indf0	equ	0xFEF
  3316                           postinc0	equ	0xFEE
  3317                           fsr0h	equ	0xFEA
  3318                           fsr0l	equ	0xFE9
  3319                           wreg	equ	0xFE8
  3320                           indf2	equ	0xFDF
  3321                           postdec2	equ	0xFDD
  3322                           fsr2h	equ	0xFDA
  3323                           fsr2l	equ	0xFD9
  3324                           status	equ	0xFD8
  3325                           
  3326 ;; *************** function _RF24_enableDynamicPayloads *****************
  3327 ;; Defined at:
  3328 ;;		line 1276 in file "../../../RF24_c/RF24_c.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;		None
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3346 ;;Total ram usage:        0 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    5
  3349 ;; This function calls:
  3350 ;;		_RF24_read_register_d
  3351 ;;		_RF24_write_register_d
  3352 ;; This function is called by:
  3353 ;;		_RF24N_begin_d
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text15
  3358  00397C                     __ptext15:
  3359                           	opt stack 0
  3360  00397C                     _RF24_enableDynamicPayloads:
  3361                           	opt stack 23
  3362                           
  3363                           ;RF24_c.c: 1281: RF24_write_register_d(0x1D,RF24_read_register_d(0x1D) | (1<<(2)) );
  3364                           
  3365                           ;incstack = 0
  3366  00397C  0E1D               	movlw	29
  3367  00397E  EC50  F01D         	call	_RF24_read_register_d
  3368  003982  0904               	iorlw	4
  3369  003984  6E0E               	movwf	RF24_write_register_d@value,c
  3370  003986  0E1D               	movlw	29
  3371  003988  EC40  F01D         	call	_RF24_write_register_d
  3372                           
  3373                           ;RF24_c.c: 1284: ;
  3374                           ;RF24_c.c: 1290: RF24_write_register_d(0x1C,RF24_read_register_d(0x1C) | (1<<(5)) | (1<<
      +                          (4)) | (1<<(3)) | (1<<(2)) | (1<<(1)) | (1<<(0)));
  3375  00398C  0E1C               	movlw	28
  3376  00398E  EC50  F01D         	call	_RF24_read_register_d
  3377  003992  093F               	iorlw	63
  3378  003994  6E0E               	movwf	RF24_write_register_d@value,c
  3379  003996  0E1C               	movlw	28
  3380  003998  EC40  F01D         	call	_RF24_write_register_d
  3381                           
  3382                           ;RF24_c.c: 1292: rf.dynamic_payloads_enabled = 1;
  3383  00399C  0E01               	movlw	1
  3384  00399E  0100               	movlb	0	; () banked
  3385  0039A0  6F92               	movwf	(_rf+6)& (0+255),b
  3386                           
  3387                           ; BSR set to: 0
  3388  0039A2  0012               	return		;funcret
  3389  0039A4                     __end_of_RF24_enableDynamicPayloads:
  3390                           	opt stack 0
  3391                           tblptru	equ	0xFF8
  3392                           tblptrh	equ	0xFF7
  3393                           tblptrl	equ	0xFF6
  3394                           tablat	equ	0xFF5
  3395                           prodh	equ	0xFF4
  3396                           prodl	equ	0xFF3
  3397                           intcon	equ	0xFF2
  3398                           indf0	equ	0xFEF
  3399                           postinc0	equ	0xFEE
  3400                           fsr0h	equ	0xFEA
  3401                           fsr0l	equ	0xFE9
  3402                           wreg	equ	0xFE8
  3403                           indf2	equ	0xFDF
  3404                           postdec2	equ	0xFDD
  3405                           fsr2h	equ	0xFDA
  3406                           fsr2l	equ	0xFD9
  3407                           status	equ	0xFD8
  3408                           
  3409 ;; *************** function _RF24N_setup_address *****************
  3410 ;; Defined at:
  3411 ;;		line 1225 in file "../../RF24Network_c.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;		None
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  node_mask_ch    2   11[COMRAM] unsigned int 
  3416 ;;  parent_mask     2    9[COMRAM] unsigned int 
  3417 ;;  m               2    6[COMRAM] unsigned int 
  3418 ;;  i               2    4[COMRAM] unsigned int 
  3419 ;;  count           1    8[COMRAM] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3432 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;Total ram usage:       11 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    1
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_RF24N_begin_d
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text16
  3444  002B6E                     __ptext16:
  3445                           	opt stack 0
  3446  002B6E                     _RF24N_setup_address:
  3447                           	opt stack 27
  3448                           
  3449                           ;RF24Network_c.c: 1228: uint16_t node_mask_check = 0xFFFF;
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;incstack = 0
  3453  002B6E  680C               	setf	RF24N_setup_address@node_mask_check,c
  3454  002B70  680D               	setf	RF24N_setup_address@node_mask_check+1,c
  3455                           
  3456                           ;RF24Network_c.c: 1230: uint8_t count = 0;
  3457  002B72  0E00               	movlw	0
  3458  002B74  6E09               	movwf	RF24N_setup_address@count,c
  3459                           
  3460                           ;RF24Network_c.c: 1232: uint16_t i;
  3461                           ;RF24Network_c.c: 1233: uint16_t m;
  3462                           ;RF24Network_c.c: 1234: uint16_t parent_mask;
  3463                           ;RF24Network_c.c: 1236: while ( rn.node_address & node_mask_check ){
  3464  002B76  D00A               	goto	l4393
  3465  002B78                     l4391:
  3466                           
  3467                           ;RF24Network_c.c: 1237: node_mask_check <<= 3;
  3468  002B78  90D8               	bcf	status,0,c
  3469  002B7A  360C               	rlcf	RF24N_setup_address@node_mask_check,f,c
  3470  002B7C  360D               	rlcf	RF24N_setup_address@node_mask_check+1,f,c
  3471  002B7E  90D8               	bcf	status,0,c
  3472  002B80  360C               	rlcf	RF24N_setup_address@node_mask_check,f,c
  3473  002B82  360D               	rlcf	RF24N_setup_address@node_mask_check+1,f,c
  3474  002B84  90D8               	bcf	status,0,c
  3475  002B86  360C               	rlcf	RF24N_setup_address@node_mask_check,f,c
  3476  002B88  360D               	rlcf	RF24N_setup_address@node_mask_check+1,f,c
  3477                           
  3478                           ;RF24Network_c.c: 1239: count++;
  3479  002B8A  2A09               	incf	RF24N_setup_address@count,f,c
  3480  002B8C                     l4393:
  3481  002B8C  EE21  F005         	lfsr	2,_rn+48
  3482  002B90  CFDE F003          	movff	postinc2,??_RF24N_setup_address
  3483  002B94  CFDD F004          	movff	postdec2,??_RF24N_setup_address+1
  3484  002B98  500C               	movf	RF24N_setup_address@node_mask_check,w,c
  3485  002B9A  1603               	andwf	??_RF24N_setup_address,f,c
  3486  002B9C  500D               	movf	RF24N_setup_address@node_mask_check+1,w,c
  3487  002B9E  1604               	andwf	??_RF24N_setup_address+1,f,c
  3488  002BA0  5003               	movf	??_RF24N_setup_address,w,c
  3489  002BA2  1004               	iorwf	??_RF24N_setup_address+1,w,c
  3490  002BA4  A4D8               	btfss	status,2,c
  3491  002BA6  D7E8               	goto	l4391
  3492                           
  3493                           ;RF24Network_c.c: 1240: }
  3494                           ;RF24Network_c.c: 1241: rn.multicast_level = count;
  3495  002BA8  EE21  F004         	lfsr	2,_rn+47
  3496  002BAC  C009  FFDF         	movff	RF24N_setup_address@count,indf2
  3497                           
  3498                           ;RF24Network_c.c: 1246: rn.node_mask = ~ node_mask_check;
  3499  002BB0  1C0C               	comf	RF24N_setup_address@node_mask_check,w,c
  3500  002BB2  6E03               	movwf	??_RF24N_setup_address& (0+255),c
  3501  002BB4  1C0D               	comf	RF24N_setup_address@node_mask_check+1,w,c
  3502  002BB6  6E04               	movwf	(??_RF24N_setup_address+1)& (0+255),c
  3503  002BB8  C003  F10D         	movff	??_RF24N_setup_address,_rn+56
  3504  002BBC  C004  F10E         	movff	??_RF24N_setup_address+1,_rn+57
  3505                           
  3506                           ;RF24Network_c.c: 1249: parent_mask = rn.node_mask >> 3;
  3507  002BC0  EE21  F00D         	lfsr	2,_rn+56
  3508  002BC4  CFDE F003          	movff	postinc2,??_RF24N_setup_address
  3509  002BC8  CFDD F004          	movff	postdec2,??_RF24N_setup_address+1
  3510  002BCC  90D8               	bcf	status,0,c
  3511  002BCE  3204               	rrcf	??_RF24N_setup_address+1,f,c
  3512  002BD0  3203               	rrcf	??_RF24N_setup_address,f,c
  3513  002BD2  90D8               	bcf	status,0,c
  3514  002BD4  3204               	rrcf	??_RF24N_setup_address+1,f,c
  3515  002BD6  3203               	rrcf	??_RF24N_setup_address,f,c
  3516  002BD8  90D8               	bcf	status,0,c
  3517  002BDA  3204               	rrcf	??_RF24N_setup_address+1,f,c
  3518  002BDC  3203               	rrcf	??_RF24N_setup_address,f,c
  3519  002BDE  C003  F00A         	movff	??_RF24N_setup_address,RF24N_setup_address@parent_mask
  3520  002BE2  C004  F00B         	movff	??_RF24N_setup_address+1,RF24N_setup_address@parent_mask+1
  3521                           
  3522                           ;RF24Network_c.c: 1252: rn.parent_node = rn.node_address & parent_mask;
  3523  002BE6  EE21  F005         	lfsr	2,_rn+48
  3524  002BEA  CFDE F003          	movff	postinc2,??_RF24N_setup_address
  3525  002BEE  CFDD F004          	movff	postdec2,??_RF24N_setup_address+1
  3526  002BF2  500A               	movf	RF24N_setup_address@parent_mask,w,c
  3527  002BF4  1603               	andwf	??_RF24N_setup_address,f,c
  3528  002BF6  500B               	movf	RF24N_setup_address@parent_mask+1,w,c
  3529  002BF8  1604               	andwf	??_RF24N_setup_address+1,f,c
  3530  002BFA  C003  F10A         	movff	??_RF24N_setup_address,_rn+53
  3531  002BFE  C004  F10B         	movff	??_RF24N_setup_address+1,_rn+54
  3532                           
  3533                           ;RF24Network_c.c: 1255: i = rn.node_address;
  3534  002C02  C105  F005         	movff	_rn+48,RF24N_setup_address@i
  3535  002C06  C106  F006         	movff	_rn+49,RF24N_setup_address@i+1
  3536                           
  3537                           ;RF24Network_c.c: 1256: m = parent_mask;
  3538  002C0A  C00A  F007         	movff	RF24N_setup_address@parent_mask,RF24N_setup_address@m
  3539  002C0E  C00B  F008         	movff	RF24N_setup_address@parent_mask+1,RF24N_setup_address@m+1
  3540                           
  3541                           ;RF24Network_c.c: 1257: while (m)
  3542  002C12  D012               	goto	l4409
  3543  002C14                     l4407:
  3544                           
  3545                           ;RF24Network_c.c: 1258: {
  3546                           ;RF24Network_c.c: 1259: i >>= 3;
  3547  002C14  90D8               	bcf	status,0,c
  3548  002C16  3206               	rrcf	RF24N_setup_address@i+1,f,c
  3549  002C18  3205               	rrcf	RF24N_setup_address@i,f,c
  3550  002C1A  90D8               	bcf	status,0,c
  3551  002C1C  3206               	rrcf	RF24N_setup_address@i+1,f,c
  3552  002C1E  3205               	rrcf	RF24N_setup_address@i,f,c
  3553  002C20  90D8               	bcf	status,0,c
  3554  002C22  3206               	rrcf	RF24N_setup_address@i+1,f,c
  3555  002C24  3205               	rrcf	RF24N_setup_address@i,f,c
  3556                           
  3557                           ;RF24Network_c.c: 1260: m >>= 3;
  3558  002C26  90D8               	bcf	status,0,c
  3559  002C28  3208               	rrcf	RF24N_setup_address@m+1,f,c
  3560  002C2A  3207               	rrcf	RF24N_setup_address@m,f,c
  3561  002C2C  90D8               	bcf	status,0,c
  3562  002C2E  3208               	rrcf	RF24N_setup_address@m+1,f,c
  3563  002C30  3207               	rrcf	RF24N_setup_address@m,f,c
  3564  002C32  90D8               	bcf	status,0,c
  3565  002C34  3208               	rrcf	RF24N_setup_address@m+1,f,c
  3566  002C36  3207               	rrcf	RF24N_setup_address@m,f,c
  3567  002C38                     l4409:
  3568  002C38  5007               	movf	RF24N_setup_address@m,w,c
  3569  002C3A  1008               	iorwf	RF24N_setup_address@m+1,w,c
  3570  002C3C  A4D8               	btfss	status,2,c
  3571  002C3E  D7EA               	goto	l4407
  3572                           
  3573                           ;RF24Network_c.c: 1261: }
  3574                           ;RF24Network_c.c: 1262: rn.parent_pipe = i;
  3575  002C40  EE21  F00C         	lfsr	2,_rn+55
  3576  002C44  C005  FFDF         	movff	RF24N_setup_address@i,indf2
  3577  002C48  0012               	return		;funcret
  3578  002C4A                     __end_of_RF24N_setup_address:
  3579                           	opt stack 0
  3580                           tblptru	equ	0xFF8
  3581                           tblptrh	equ	0xFF7
  3582                           tblptrl	equ	0xFF6
  3583                           tablat	equ	0xFF5
  3584                           prodh	equ	0xFF4
  3585                           prodl	equ	0xFF3
  3586                           intcon	equ	0xFF2
  3587                           indf0	equ	0xFEF
  3588                           postinc0	equ	0xFEE
  3589                           fsr0h	equ	0xFEA
  3590                           fsr0l	equ	0xFE9
  3591                           wreg	equ	0xFE8
  3592                           indf2	equ	0xFDF
  3593                           postinc2	equ	0xFDE
  3594                           postdec2	equ	0xFDD
  3595                           fsr2h	equ	0xFDA
  3596                           fsr2l	equ	0xFD9
  3597                           status	equ	0xFD8
  3598                           
  3599 ;; *************** function _loop *****************
  3600 ;; Defined at:
  3601 ;;		line 52 in file "helloworld_tx.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;		None
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  header          8   21[BANK0 ] struct .
  3606 ;;  payload         8   13[BANK0 ] struct .
  3607 ;;  ok              1    8[BANK0 ] unsigned char 
  3608 ;;  now             4    9[BANK0 ] unsigned long 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;Total ram usage:       29 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:   13
  3625 ;; This function calls:
  3626 ;;		_RF24NH_init
  3627 ;;		_RF24N_update
  3628 ;;		_RF24N_write_m
  3629 ;;		_Serial_print
  3630 ;;		_Serial_println
  3631 ;;		_millis
  3632 ;; This function is called by:
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text17
  3638  00262E                     __ptext17:
  3639                           	opt stack 0
  3640  00262E                     _loop:
  3641                           	opt stack 17
  3642                           
  3643                           ;helloworld_tx.c: 53: unsigned long now ;
  3644                           ;helloworld_tx.c: 54: RF24N_update();
  3645                           
  3646                           ;incstack = 0
  3647  00262E  ECE7  F00A         	call	_RF24N_update	;wreg free
  3648                           
  3649                           ;helloworld_tx.c: 57: now = millis();
  3650  002632  ECC5  F01D         	call	_millis	;wreg free
  3651  002636  C003  F0B5         	movff	?_millis,loop@now
  3652  00263A  C004  F0B6         	movff	?_millis+1,loop@now+1
  3653  00263E  C005  F0B7         	movff	?_millis+2,loop@now+2
  3654  002642  C006  F0B8         	movff	?_millis+3,loop@now+3
  3655                           
  3656                           ;helloworld_tx.c: 58: if ( now - last_sent >= interval )
  3657  002646  0E13               	movlw	low _interval
  3658  002648  6EF6               	movwf	tblptrl,c
  3659  00264A                     	if	1	;There is more than 1 active tblptr byte
  3660  00264A  0E10               	movlw	high _interval
  3661  00264C  6EF7               	movwf	tblptrh,c
  3662  00264E                     	endif
  3663  00264E                     	if	0	;There are less than 3 active tblptr bytes
  3664  00264E                     	endif
  3665  00264E  C080  F0AC         	movff	_last_sent,??_loop
  3666  002652  C081  F0AD         	movff	_last_sent+1,??_loop+1
  3667  002656  C082  F0AE         	movff	_last_sent+2,??_loop+2
  3668  00265A  C083  F0AF         	movff	_last_sent+3,??_loop+3
  3669  00265E  0100               	movlb	0	; () banked
  3670  002660  1FAC               	comf	??_loop& (0+255),f,b
  3671  002662  1FAD               	comf	(??_loop+1)& (0+255),f,b
  3672  002664  1FAE               	comf	(??_loop+2)& (0+255),f,b
  3673  002666  1FAF               	comf	(??_loop+3)& (0+255),f,b
  3674  002668  2BAC               	incf	??_loop& (0+255),f,b
  3675  00266A  0E00               	movlw	0
  3676  00266C  23AD               	addwfc	(??_loop+1)& (0+255),f,b
  3677  00266E  23AE               	addwfc	(??_loop+2)& (0+255),f,b
  3678  002670  23AF               	addwfc	(??_loop+3)& (0+255),f,b
  3679  002672  0100               	movlb	0	; () banked
  3680  002674  51B5               	movf	loop@now& (0+255),w,b
  3681  002676  0100               	movlb	0	; () banked
  3682  002678  25AC               	addwf	??_loop& (0+255),w,b
  3683  00267A  0100               	movlb	0	; () banked
  3684  00267C  6FB0               	movwf	(??_loop+4)& (0+255),b
  3685  00267E  0100               	movlb	0	; () banked
  3686  002680  51B6               	movf	(loop@now+1)& (0+255),w,b
  3687  002682  0100               	movlb	0	; () banked
  3688  002684  21AD               	addwfc	(??_loop+1)& (0+255),w,b
  3689  002686  0100               	movlb	0	; () banked
  3690  002688  6FB1               	movwf	(??_loop+5)& (0+255),b
  3691  00268A  0100               	movlb	0	; () banked
  3692  00268C  51B7               	movf	(loop@now+2)& (0+255),w,b
  3693  00268E  0100               	movlb	0	; () banked
  3694  002690  21AE               	addwfc	(??_loop+2)& (0+255),w,b
  3695  002692  0100               	movlb	0	; () banked
  3696  002694  6FB2               	movwf	(??_loop+6)& (0+255),b
  3697  002696  0100               	movlb	0	; () banked
  3698  002698  51B8               	movf	(loop@now+3)& (0+255),w,b
  3699  00269A  0100               	movlb	0	; () banked
  3700  00269C  21AF               	addwfc	(??_loop+3)& (0+255),w,b
  3701  00269E  0100               	movlb	0	; () banked
  3702  0026A0  6FB3               	movwf	(??_loop+7)& (0+255),b
  3703  0026A2  0009               	tblrd		*+
  3704  0026A4  50F5               	movf	tablat,w,c
  3705  0026A6  0100               	movlb	0	; () banked
  3706  0026A8  5DB0               	subwf	(??_loop+4)& (0+255),w,b
  3707  0026AA  0009               	tblrd		*+
  3708  0026AC  50F5               	movf	tablat,w,c
  3709  0026AE  0100               	movlb	0	; () banked
  3710  0026B0  59B1               	subwfb	(??_loop+5)& (0+255),w,b
  3711  0026B2  0009               	tblrd		*+
  3712  0026B4  50F5               	movf	tablat,w,c
  3713  0026B6  0100               	movlb	0	; () banked
  3714  0026B8  59B2               	subwfb	(??_loop+6)& (0+255),w,b
  3715  0026BA  0009               	tblrd		*+
  3716  0026BC  50F5               	movf	tablat,w,c
  3717  0026BE  0100               	movlb	0	; () banked
  3718  0026C0  59B3               	subwfb	(??_loop+7)& (0+255),w,b
  3719  0026C2  A0D8               	btfss	status,0,c
  3720  0026C4  0012               	return	
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;helloworld_tx.c: 59: {
  3724                           ;helloworld_tx.c: 60: payload_t payload;
  3725                           ;helloworld_tx.c: 61: uint8_t ok;
  3726                           ;helloworld_tx.c: 62: RF24NetworkHeader header;
  3727                           ;helloworld_tx.c: 64: last_sent = now;
  3728  0026C6  C0B5  F080         	movff	loop@now,_last_sent
  3729  0026CA  C0B6  F081         	movff	loop@now+1,_last_sent+1
  3730  0026CE  C0B7  F082         	movff	loop@now+2,_last_sent+2
  3731  0026D2  C0B8  F083         	movff	loop@now+3,_last_sent+3
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;helloworld_tx.c: 66: Serial_print("Sending...");
  3735  0026D6  0E3F               	movlw	low STR_2
  3736  0026D8  6E04               	movwf	Serial_print@val,c
  3737  0026DA  0E10               	movlw	high STR_2
  3738  0026DC  6E05               	movwf	Serial_print@val+1,c
  3739  0026DE  ECAF  F01A         	call	_Serial_print	;wreg free
  3740                           
  3741                           ;helloworld_tx.c: 68: payload.ms= millis();
  3742  0026E2  ECC5  F01D         	call	_millis	;wreg free
  3743  0026E6  C003  F0B9         	movff	?_millis,loop@payload
  3744  0026EA  C004  F0BA         	movff	?_millis+1,loop@payload+1
  3745  0026EE  C005  F0BB         	movff	?_millis+2,loop@payload+2
  3746  0026F2  C006  F0BC         	movff	?_millis+3,loop@payload+3
  3747                           
  3748                           ;helloworld_tx.c: 69: payload.counter=packets_sent++;
  3749  0026F6  C088  F0BD         	movff	_packets_sent,loop@payload+4
  3750  0026FA  C089  F0BE         	movff	_packets_sent+1,loop@payload+5
  3751  0026FE  C08A  F0BF         	movff	_packets_sent+2,loop@payload+6
  3752  002702  C08B  F0C0         	movff	_packets_sent+3,loop@payload+7
  3753  002706  0E01               	movlw	1
  3754  002708  0100               	movlb	0	; () banked
  3755  00270A  2788               	addwf	_packets_sent& (0+255),f,b
  3756  00270C  0E00               	movlw	0
  3757  00270E  2389               	addwfc	(_packets_sent+1)& (0+255),f,b
  3758  002710  238A               	addwfc	(_packets_sent+2)& (0+255),f,b
  3759  002712  238B               	addwfc	(_packets_sent+3)& (0+255),f,b
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;helloworld_tx.c: 71: RF24NH_init(&header, other_node,0);
  3763  002714  0EC1               	movlw	low loop@header
  3764  002716  6E03               	movwf	RF24NH_init@rnh,c
  3765  002718  0E00               	movlw	high loop@header
  3766  00271A  6E04               	movwf	RF24NH_init@rnh+1,c
  3767  00271C  0E17               	movlw	low _other_node
  3768  00271E  6EF6               	movwf	tblptrl,c
  3769  002720                     	if	1	;There is more than 1 active tblptr byte
  3770  002720  0E10               	movlw	high _other_node
  3771  002722  6EF7               	movwf	tblptrh,c
  3772  002724                     	endif
  3773  002724                     	if	0	;There are less than 3 active tblptr bytes
  3774  002724                     	endif
  3775  002724  0009               	tblrd		*+
  3776  002726  CFF5 F005          	movff	tablat,RF24NH_init@_to
  3777  00272A  000A               	tblrd		*-
  3778  00272C  CFF5 F006          	movff	tablat,RF24NH_init@_to+1
  3779  002730  0E00               	movlw	0
  3780  002732  6E07               	movwf	RF24NH_init@_type,c
  3781  002734  EC9A  F01B         	call	_RF24NH_init	;wreg free
  3782                           
  3783                           ;helloworld_tx.c: 72: ok = RF24N_write_m(&header,&payload,sizeof(payload));
  3784  002738  0EC1               	movlw	low loop@header
  3785  00273A  6E64               	movwf	RF24N_write_m@header,c
  3786  00273C  0E00               	movlw	high loop@header
  3787  00273E  6E65               	movwf	RF24N_write_m@header+1,c
  3788  002740  0EB9               	movlw	low loop@payload
  3789  002742  6E66               	movwf	RF24N_write_m@message,c
  3790  002744  0E00               	movlw	high loop@payload
  3791  002746  6E67               	movwf	RF24N_write_m@message+1,c
  3792  002748  0E00               	movlw	0
  3793  00274A  6E69               	movwf	RF24N_write_m@len+1,c
  3794  00274C  0E08               	movlw	8
  3795  00274E  6E68               	movwf	RF24N_write_m@len,c
  3796  002750  ECE5  F01C         	call	_RF24N_write_m	;wreg free
  3797  002754  0100               	movlb	0	; () banked
  3798  002756  6FB4               	movwf	loop@ok& (0+255),b
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;helloworld_tx.c: 73: if (ok)
  3802  002758  0100               	movlb	0	; () banked
  3803  00275A  51B4               	movf	loop@ok& (0+255),w,b
  3804  00275C  0100               	movlb	0	; () banked
  3805  00275E  B4D8               	btfsc	status,2,c
  3806  002760  D007               	goto	l5205
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;helloworld_tx.c: 74: Serial_println("ok.");
  3810  002762  0E52               	movlw	low STR_3
  3811  002764  6E0A               	movwf	Serial_println@val,c
  3812  002766  0E10               	movlw	high STR_3
  3813  002768  6E0B               	movwf	Serial_println@val+1,c
  3814  00276A  EC96  F01D         	call	_Serial_println	;wreg free
  3815  00276E  0012               	return	
  3816  002770                     l5205:
  3817                           
  3818                           ;helloworld_tx.c: 75: else
  3819                           ;helloworld_tx.c: 76: Serial_println("failed.");
  3820  002770  0E4A               	movlw	low STR_4
  3821  002772  6E0A               	movwf	Serial_println@val,c
  3822  002774  0E10               	movlw	high STR_4
  3823  002776  6E0B               	movwf	Serial_println@val+1,c
  3824  002778  EC96  F01D         	call	_Serial_println	;wreg free
  3825  00277C  0012               	return	
  3826  00277E                     __end_of_loop:
  3827                           	opt stack 0
  3828                           tblptru	equ	0xFF8
  3829                           tblptrh	equ	0xFF7
  3830                           tblptrl	equ	0xFF6
  3831                           tablat	equ	0xFF5
  3832                           prodh	equ	0xFF4
  3833                           prodl	equ	0xFF3
  3834                           intcon	equ	0xFF2
  3835                           indf0	equ	0xFEF
  3836                           postinc0	equ	0xFEE
  3837                           fsr0h	equ	0xFEA
  3838                           fsr0l	equ	0xFE9
  3839                           wreg	equ	0xFE8
  3840                           indf2	equ	0xFDF
  3841                           postinc2	equ	0xFDE
  3842                           postdec2	equ	0xFDD
  3843                           fsr2h	equ	0xFDA
  3844                           fsr2l	equ	0xFD9
  3845                           status	equ	0xFD8
  3846                           
  3847 ;; *************** function _Serial_println *****************
  3848 ;; Defined at:
  3849 ;;		line 76 in file "serial.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  val             2    9[COMRAM] PTR const unsigned char 
  3852 ;;		 -> STR_4(8), STR_3(4), STR_1(36), 
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;		None
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  1    wreg      void 
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3867 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;Total ram usage:        2 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; Hardware stack levels required when called:    3
  3871 ;; This function calls:
  3872 ;;		_Serial_print
  3873 ;; This function is called by:
  3874 ;;		_setup
  3875 ;;		_loop
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text18
  3880  003B2C                     __ptext18:
  3881                           	opt stack 0
  3882  003B2C                     _Serial_println:
  3883                           	opt stack 26
  3884                           
  3885                           ;serial.c: 78: Serial_print(val);
  3886                           
  3887                           ;incstack = 0
  3888  003B2C  C00A  F004         	movff	Serial_println@val,Serial_print@val
  3889  003B30  C00B  F005         	movff	Serial_println@val+1,Serial_print@val+1
  3890  003B34  ECAF  F01A         	call	_Serial_print	;wreg free
  3891                           
  3892                           ;serial.c: 79: Serial_print("\r\n");
  3893  003B38  0E56               	movlw	low STR_5
  3894  003B3A  6E04               	movwf	Serial_print@val,c
  3895  003B3C  0E10               	movlw	high STR_5
  3896  003B3E  6E05               	movwf	Serial_print@val+1,c
  3897  003B40  ECAF  F01A         	call	_Serial_print	;wreg free
  3898  003B44  0012               	return		;funcret
  3899  003B46                     __end_of_Serial_println:
  3900                           	opt stack 0
  3901                           tblptru	equ	0xFF8
  3902                           tblptrh	equ	0xFF7
  3903                           tblptrl	equ	0xFF6
  3904                           tablat	equ	0xFF5
  3905                           prodh	equ	0xFF4
  3906                           prodl	equ	0xFF3
  3907                           intcon	equ	0xFF2
  3908                           indf0	equ	0xFEF
  3909                           postinc0	equ	0xFEE
  3910                           fsr0h	equ	0xFEA
  3911                           fsr0l	equ	0xFE9
  3912                           wreg	equ	0xFE8
  3913                           indf2	equ	0xFDF
  3914                           postinc2	equ	0xFDE
  3915                           postdec2	equ	0xFDD
  3916                           fsr2h	equ	0xFDA
  3917                           fsr2l	equ	0xFD9
  3918                           status	equ	0xFD8
  3919                           
  3920 ;; *************** function _Serial_print *****************
  3921 ;; Defined at:
  3922 ;;		line 65 in file "serial.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;  val             2    3[COMRAM] PTR const unsigned char 
  3925 ;;		 -> STR_5(3), STR_4(8), STR_3(4), STR_2(11), 
  3926 ;;		 -> STR_1(36), 
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;  i               2    7[COMRAM] unsigned int 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3941 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;Total ram usage:        6 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    2
  3945 ;; This function calls:
  3946 ;;		_Serial_tx
  3947 ;; This function is called by:
  3948 ;;		_loop
  3949 ;;		_Serial_println
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text19
  3954  00355E                     __ptext19:
  3955                           	opt stack 0
  3956  00355E                     _Serial_print:
  3957                           	opt stack 26
  3958                           
  3959                           ;serial.c: 67: unsigned int i=0;
  3960                           
  3961                           ;incstack = 0
  3962  00355E  0E00               	movlw	0
  3963  003560  6E09               	movwf	Serial_print@i+1,c
  3964  003562  0E00               	movlw	0
  3965  003564  6E08               	movwf	Serial_print@i,c
  3966                           
  3967                           ;serial.c: 69: while(val[i])
  3968  003566  D010               	goto	l4359
  3969  003568                     l4355:
  3970                           
  3971                           ;serial.c: 70: {
  3972                           ;serial.c: 71: Serial_tx(val[i]);
  3973  003568  5008               	movf	Serial_print@i,w,c
  3974  00356A  2404               	addwf	Serial_print@val,w,c
  3975  00356C  6E06               	movwf	??_Serial_print& (0+255),c
  3976  00356E  5009               	movf	Serial_print@i+1,w,c
  3977  003570  2005               	addwfc	Serial_print@val+1,w,c
  3978  003572  6E07               	movwf	(??_Serial_print+1)& (0+255),c
  3979  003574  C006  FFF6         	movff	??_Serial_print,tblptrl
  3980  003578  C007  FFF7         	movff	??_Serial_print+1,tblptrh
  3981  00357C                     	if	0	;tblptru may be non-zero
  3982  00357C                     	endif
  3983  00357C                     	if	0	;tblptru may be non-zero
  3984  00357C                     	endif
  3985  00357C  0008               	tblrd		*
  3986  00357E  50F5               	movf	tablat,w,c
  3987  003580  ECDC  F01D         	call	_Serial_tx
  3988                           
  3989                           ;serial.c: 72: i++;
  3990  003584  4A08               	infsnz	Serial_print@i,f,c
  3991  003586  2A09               	incf	Serial_print@i+1,f,c
  3992  003588                     l4359:
  3993  003588  5008               	movf	Serial_print@i,w,c
  3994  00358A  2404               	addwf	Serial_print@val,w,c
  3995  00358C  6E06               	movwf	??_Serial_print& (0+255),c
  3996  00358E  5009               	movf	Serial_print@i+1,w,c
  3997  003590  2005               	addwfc	Serial_print@val+1,w,c
  3998  003592  6E07               	movwf	(??_Serial_print+1)& (0+255),c
  3999  003594  C006  FFF6         	movff	??_Serial_print,tblptrl
  4000  003598  C007  FFF7         	movff	??_Serial_print+1,tblptrh
  4001  00359C                     	if	0	;tblptru may be non-zero
  4002  00359C                     	endif
  4003  00359C                     	if	0	;tblptru may be non-zero
  4004  00359C                     	endif
  4005  00359C  0008               	tblrd		*
  4006  00359E  50F5               	movf	tablat,w,c
  4007  0035A0  0900               	iorlw	0
  4008  0035A2  B4D8               	btfsc	status,2,c
  4009  0035A4  0012               	return	
  4010  0035A6  D7E0               	goto	l4355
  4011  0035A8                     __end_of_Serial_print:
  4012                           	opt stack 0
  4013                           tblptru	equ	0xFF8
  4014                           tblptrh	equ	0xFF7
  4015                           tblptrl	equ	0xFF6
  4016                           tablat	equ	0xFF5
  4017                           prodh	equ	0xFF4
  4018                           prodl	equ	0xFF3
  4019                           intcon	equ	0xFF2
  4020                           indf0	equ	0xFEF
  4021                           postinc0	equ	0xFEE
  4022                           fsr0h	equ	0xFEA
  4023                           fsr0l	equ	0xFE9
  4024                           wreg	equ	0xFE8
  4025                           indf2	equ	0xFDF
  4026                           postinc2	equ	0xFDE
  4027                           postdec2	equ	0xFDD
  4028                           fsr2h	equ	0xFDA
  4029                           fsr2l	equ	0xFD9
  4030                           status	equ	0xFD8
  4031                           
  4032 ;; *************** function _Serial_tx *****************
  4033 ;; Defined at:
  4034 ;;		line 59 in file "serial.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  val             1    wreg     const unsigned char 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  val             1    2[COMRAM] const unsigned char 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      void 
  4041 ;; Registers used:
  4042 ;;		wreg
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4052 ;;Total ram usage:        1 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; Hardware stack levels required when called:    1
  4055 ;; This function calls:
  4056 ;;		Nothing
  4057 ;; This function is called by:
  4058 ;;		_Serial_print
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           	psect	text20
  4063  003BB8                     __ptext20:
  4064                           	opt stack 0
  4065  003BB8                     _Serial_tx:
  4066                           	opt stack 26
  4067                           
  4068                           ;incstack = 0
  4069                           ;Serial_tx@val stored from wreg
  4070  003BB8  6E03               	movwf	Serial_tx@val,c
  4071                           
  4072                           ;serial.c: 61: TXREG=val;
  4073  003BBA  C003  FFAD         	movff	Serial_tx@val,4013	;volatile
  4074  003BBE                     l93:
  4075  003BBE  B2AC               	btfsc	4012,1,c	;volatile
  4076  003BC0  0012               	return	
  4077  003BC2  D7FD               	goto	l93
  4078  003BC4                     __end_of_Serial_tx:
  4079                           	opt stack 0
  4080                           tblptru	equ	0xFF8
  4081                           tblptrh	equ	0xFF7
  4082                           tblptrl	equ	0xFF6
  4083                           tablat	equ	0xFF5
  4084                           prodh	equ	0xFF4
  4085                           prodl	equ	0xFF3
  4086                           intcon	equ	0xFF2
  4087                           indf0	equ	0xFEF
  4088                           postinc0	equ	0xFEE
  4089                           fsr0h	equ	0xFEA
  4090                           fsr0l	equ	0xFE9
  4091                           wreg	equ	0xFE8
  4092                           indf2	equ	0xFDF
  4093                           postinc2	equ	0xFDE
  4094                           postdec2	equ	0xFDD
  4095                           fsr2h	equ	0xFDA
  4096                           fsr2l	equ	0xFD9
  4097                           status	equ	0xFD8
  4098                           
  4099 ;; *************** function _RF24N_write_m *****************
  4100 ;; Defined at:
  4101 ;;		line 791 in file "../../RF24Network_c.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  header          2   99[COMRAM] PTR struct .
  4104 ;;		 -> loop@header(8), 
  4105 ;;  message         2  101[COMRAM] PTR const void 
  4106 ;;		 -> loop@payload(8), 
  4107 ;;  len             2  103[COMRAM] unsigned int 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      unsigned char 
  4112 ;; Registers used:
  4113 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4119 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;Total ram usage:        6 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:   12
  4126 ;; This function calls:
  4127 ;;		_RF24N_write_
  4128 ;; This function is called by:
  4129 ;;		_loop
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           	psect	text21
  4134  0039CA                     __ptext21:
  4135                           	opt stack 0
  4136  0039CA                     _RF24N_write_m:
  4137                           	opt stack 17
  4138                           
  4139                           ;RF24Network_c.c: 792: return RF24N_write_(header,message,len,070);
  4140                           
  4141                           ;incstack = 0
  4142  0039CA  C064  F04B         	movff	RF24N_write_m@header,RF24N_write_@header
  4143  0039CE  C065  F04C         	movff	RF24N_write_m@header+1,RF24N_write_@header+1
  4144  0039D2  C066  F04D         	movff	RF24N_write_m@message,RF24N_write_@message
  4145  0039D6  C067  F04E         	movff	RF24N_write_m@message+1,RF24N_write_@message+1
  4146  0039DA  C068  F04F         	movff	RF24N_write_m@len,RF24N_write_@len
  4147  0039DE  C069  F050         	movff	RF24N_write_m@len+1,RF24N_write_@len+1
  4148  0039E2  0E00               	movlw	0
  4149  0039E4  6E52               	movwf	RF24N_write_@writeDirect+1,c
  4150  0039E6  0E38               	movlw	56
  4151  0039E8  6E51               	movwf	RF24N_write_@writeDirect,c
  4152  0039EA  EC1B  F00F         	call	_RF24N_write_	;wreg free
  4153  0039EE  0012               	return	
  4154  0039F0                     __end_of_RF24N_write_m:
  4155                           	opt stack 0
  4156                           tblptru	equ	0xFF8
  4157                           tblptrh	equ	0xFF7
  4158                           tblptrl	equ	0xFF6
  4159                           tablat	equ	0xFF5
  4160                           prodh	equ	0xFF4
  4161                           prodl	equ	0xFF3
  4162                           intcon	equ	0xFF2
  4163                           indf0	equ	0xFEF
  4164                           postinc0	equ	0xFEE
  4165                           fsr0h	equ	0xFEA
  4166                           fsr0l	equ	0xFE9
  4167                           wreg	equ	0xFE8
  4168                           indf2	equ	0xFDF
  4169                           postinc2	equ	0xFDE
  4170                           postdec2	equ	0xFDD
  4171                           fsr2h	equ	0xFDA
  4172                           fsr2l	equ	0xFD9
  4173                           status	equ	0xFD8
  4174                           
  4175 ;; *************** function _RF24N_write_ *****************
  4176 ;; Defined at:
  4177 ;;		line 795 in file "../../RF24Network_c.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  header          2   74[COMRAM] PTR struct .
  4180 ;;		 -> loop@header(8), 
  4181 ;;  message         2   76[COMRAM] PTR const void 
  4182 ;;		 -> loop@payload(8), 
  4183 ;;  len             2   78[COMRAM] unsigned int 
  4184 ;;  writeDirect     2   80[COMRAM] unsigned int 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  offset          2   95[COMRAM] unsigned int 
  4187 ;;  fragmentLen     2   91[COMRAM] unsigned int 
  4188 ;;  fragment_id     1   98[COMRAM] unsigned char 
  4189 ;;  ok              1   97[COMRAM] unsigned char 
  4190 ;;  msgCount        1   94[COMRAM] unsigned char 
  4191 ;;  type            1   93[COMRAM] unsigned char 
  4192 ;;  retriesPerFr    1   90[COMRAM] unsigned char 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      unsigned char 
  4195 ;; Registers used:
  4196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4202 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;Total ram usage:       25 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:   11
  4209 ;; This function calls:
  4210 ;;		_RF24N__write
  4211 ;;		_RF24N_update
  4212 ;;		_RF24_setAutoAck_p
  4213 ;;		_RF24_startListening
  4214 ;;		_RF24_stopListening
  4215 ;;		_RF24_txStandBy_t
  4216 ;;		___lwdiv
  4217 ;;		___lwmod
  4218 ;;		___wmul
  4219 ;;		_delay
  4220 ;;		_delayMicroseconds
  4221 ;;		_millis
  4222 ;; This function is called by:
  4223 ;;		_RF24N_write_m
  4224 ;;		_RF24N_multicast
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text22
  4229  001E36                     __ptext22:
  4230                           	opt stack 0
  4231  001E36                     _RF24N_write_:
  4232                           	opt stack 17
  4233                           
  4234                           ;RF24Network_c.c: 796: uint8_t fragment_id;
  4235                           ;RF24Network_c.c: 797: uint8_t msgCount;
  4236                           ;RF24Network_c.c: 798: uint8_t retriesPerFrag;
  4237                           ;RF24Network_c.c: 799: uint8_t type;
  4238                           ;RF24Network_c.c: 800: uint8_t ok;
  4239                           ;RF24Network_c.c: 803: while(millis()-rn.txTime < 25){ if(RF24N_update() > 127){break;} 
      +                          }
  4240                           
  4241                           ;incstack = 0
  4242  001E36  D006               	goto	l4447
  4243  001E38                     l4443:
  4244  001E38  ECE7  F00A         	call	_RF24N_update	;wreg free
  4245  001E3C  0E7F               	movlw	127
  4246  001E3E  646A               	cpfsgt	btemp,c
  4247  001E40  D001               	goto	l4447
  4248  001E42  D027               	goto	l4449
  4249  001E44                     l4447:
  4250  001E44  C100  F053         	movff	_rn+43,??_RF24N_write_
  4251  001E48  C101  F054         	movff	_rn+44,??_RF24N_write_+1
  4252  001E4C  C102  F055         	movff	_rn+45,??_RF24N_write_+2
  4253  001E50  C103  F056         	movff	_rn+46,??_RF24N_write_+3
  4254  001E54  1E53               	comf	??_RF24N_write_,f,c
  4255  001E56  1E54               	comf	??_RF24N_write_+1,f,c
  4256  001E58  1E55               	comf	??_RF24N_write_+2,f,c
  4257  001E5A  1E56               	comf	??_RF24N_write_+3,f,c
  4258  001E5C  2A53               	incf	??_RF24N_write_,f,c
  4259  001E5E  0E00               	movlw	0
  4260  001E60  2254               	addwfc	??_RF24N_write_+1,f,c
  4261  001E62  2255               	addwfc	??_RF24N_write_+2,f,c
  4262  001E64  2256               	addwfc	??_RF24N_write_+3,f,c
  4263  001E66  ECC5  F01D         	call	_millis	;wreg free
  4264  001E6A  5053               	movf	??_RF24N_write_,w,c
  4265  001E6C  2403               	addwf	?_millis,w,c
  4266  001E6E  6E57               	movwf	(??_RF24N_write_+4)& (0+255),c
  4267  001E70  5054               	movf	??_RF24N_write_+1,w,c
  4268  001E72  2004               	addwfc	?_millis+1,w,c
  4269  001E74  6E58               	movwf	(??_RF24N_write_+5)& (0+255),c
  4270  001E76  5055               	movf	??_RF24N_write_+2,w,c
  4271  001E78  2005               	addwfc	?_millis+2,w,c
  4272  001E7A  6E59               	movwf	(??_RF24N_write_+6)& (0+255),c
  4273  001E7C  5056               	movf	??_RF24N_write_+3,w,c
  4274  001E7E  2006               	addwfc	?_millis+3,w,c
  4275  001E80  6E5A               	movwf	(??_RF24N_write_+7)& (0+255),c
  4276  001E82  505A               	movf	??_RF24N_write_+7,w,c
  4277  001E84  1059               	iorwf	??_RF24N_write_+6,w,c
  4278  001E86  1058               	iorwf	??_RF24N_write_+5,w,c
  4279  001E88  E104               	bnz	l4449
  4280  001E8A  0E19               	movlw	25
  4281  001E8C  5C57               	subwf	??_RF24N_write_+4,w,c
  4282  001E8E  A0D8               	btfss	status,0,c
  4283  001E90  D7D3               	goto	l4443
  4284  001E92                     l4449:
  4285                           
  4286                           ;RF24Network_c.c: 804: delayMicroseconds(200);
  4287  001E92  0EC8               	movlw	200
  4288  001E94  EC7A  F01B         	call	_delayMicroseconds
  4289                           
  4290                           ;RF24Network_c.c: 812: if(len <= rn.max_frame_payload_size){
  4291  001E98  EE21  F008         	lfsr	2,_rn+51
  4292  001E9C  504F               	movf	RF24N_write_@len,w,c
  4293  001E9E  5CDE               	subwf	postinc2,w,c
  4294  001EA0  5050               	movf	RF24N_write_@len+1,w,c
  4295  001EA2  58DE               	subwfb	postinc2,w,c
  4296  001EA4  A0D8               	btfss	status,0,c
  4297  001EA6  D029               	goto	l4467
  4298                           
  4299                           ;RF24Network_c.c: 814: rn.frame_size = len + sizeof(RF24NetworkHeader);
  4300  001EA8  C04F  F053         	movff	RF24N_write_@len,??_RF24N_write_
  4301  001EAC  0E08               	movlw	8
  4302  001EAE  2653               	addwf	??_RF24N_write_,f,c
  4303  001EB0  C053  F107         	movff	??_RF24N_write_,_rn+50
  4304                           
  4305                           ;RF24Network_c.c: 815: if(RF24N__write(header,message,len,writeDirect)){
  4306  001EB4  C04B  F040         	movff	RF24N_write_@header,RF24N__write@header
  4307  001EB8  C04C  F041         	movff	RF24N_write_@header+1,RF24N__write@header+1
  4308  001EBC  C04D  F042         	movff	RF24N_write_@message,RF24N__write@message
  4309  001EC0  C04E  F043         	movff	RF24N_write_@message+1,RF24N__write@message+1
  4310  001EC4  C04F  F044         	movff	RF24N_write_@len,RF24N__write@len
  4311  001EC8  C050  F045         	movff	RF24N_write_@len+1,RF24N__write@len+1
  4312  001ECC  C051  F046         	movff	RF24N_write_@writeDirect,RF24N__write@writeDirect
  4313  001ED0  C052  F047         	movff	RF24N_write_@writeDirect+1,RF24N__write@writeDirect+1
  4314  001ED4  EC91  F016         	call	_RF24N__write	;wreg free
  4315  001ED8  0900               	iorlw	0
  4316  001EDA  B4D8               	btfsc	status,2,c
  4317  001EDC  D002               	goto	l4461
  4318                           
  4319                           ;RF24Network_c.c: 816: return 1;
  4320  001EDE  0E01               	movlw	1
  4321  001EE0  0012               	return	
  4322  001EE2                     l4461:
  4323                           
  4324                           ;RF24Network_c.c: 817: }
  4325                           ;RF24Network_c.c: 818: rn.txTime = millis();
  4326  001EE2  ECC5  F01D         	call	_millis	;wreg free
  4327  001EE6  C003  F100         	movff	?_millis,_rn+43
  4328  001EEA  C004  F101         	movff	?_millis+1,_rn+44
  4329  001EEE  C005  F102         	movff	?_millis+2,_rn+45
  4330  001EF2  C006  F103         	movff	?_millis+3,_rn+46
  4331                           
  4332                           ;RF24Network_c.c: 819: return 0;
  4333  001EF6  0E00               	movlw	0
  4334  001EF8  0012               	return	
  4335  001EFA                     l4467:
  4336                           
  4337                           ;RF24Network_c.c: 820: }
  4338                           ;RF24Network_c.c: 822: if (len > 144 + 10-10) {
  4339  001EFA  5050               	movf	RF24N_write_@len+1,w,c
  4340  001EFC  E104               	bnz	u5400
  4341  001EFE  0E91               	movlw	145
  4342  001F00  5C4F               	subwf	RF24N_write_@len,w,c
  4343  001F02  A0D8               	btfss	status,0,c
  4344  001F04  D002               	goto	l4473
  4345  001F06                     u5400:
  4346                           
  4347                           ;RF24Network_c.c: 823: ;
  4348                           ;RF24Network_c.c: 824: return 0;
  4349  001F06  0E00               	movlw	0
  4350  001F08  0012               	return	
  4351  001F0A                     l4473:
  4352                           
  4353                           ;RF24Network_c.c: 825: }
  4354                           ;RF24Network_c.c: 828: fragment_id = (len % rn.max_frame_payload_size != 0) + ((len ) / 
      +                          rn.max_frame_payload_size);
  4355  001F0A  C04F  F003         	movff	RF24N_write_@len,___lwdiv@dividend
  4356  001F0E  C050  F004         	movff	RF24N_write_@len+1,___lwdiv@dividend+1
  4357  001F12  C108  F005         	movff	_rn+51,___lwdiv@divisor
  4358  001F16  C109  F006         	movff	_rn+52,___lwdiv@divisor+1
  4359  001F1A  EC39  F01A         	call	___lwdiv	;wreg free
  4360  001F1E  C003  F053         	movff	?___lwdiv,??_RF24N_write_
  4361  001F22  C004  F054         	movff	?___lwdiv+1,??_RF24N_write_+1
  4362  001F26  C04F  F003         	movff	RF24N_write_@len,___lwmod@dividend
  4363  001F2A  C050  F004         	movff	RF24N_write_@len+1,___lwmod@dividend+1
  4364  001F2E  C108  F005         	movff	_rn+51,___lwmod@divisor
  4365  001F32  C109  F006         	movff	_rn+52,___lwmod@divisor+1
  4366  001F36  ECF9  F01A         	call	___lwmod	;wreg free
  4367  001F3A  5003               	movf	?___lwmod,w,c
  4368  001F3C  1004               	iorwf	?___lwmod+1,w,c
  4369  001F3E  B4D8               	btfsc	status,2,c
  4370  001F40  D002               	goto	u5410
  4371  001F42  0E01               	movlw	1
  4372  001F44  D001               	goto	u5420
  4373  001F46                     u5410:
  4374  001F46  0E00               	movlw	0
  4375  001F48                     u5420:
  4376  001F48  2453               	addwf	??_RF24N_write_,w,c
  4377  001F4A  6E63               	movwf	RF24N_write_@fragment_id,c
  4378                           
  4379                           ;RF24Network_c.c: 830: msgCount = 0;
  4380  001F4C  0E00               	movlw	0
  4381  001F4E  6E5F               	movwf	RF24N_write_@msgCount,c
  4382                           
  4383                           ;RF24Network_c.c: 832: ;
  4384                           ;RF24Network_c.c: 834: if(header->to_node != 0100){
  4385  001F50  EE20 F002          	lfsr	2,2
  4386  001F54  504B               	movf	RF24N_write_@header,w,c
  4387  001F56  26D9               	addwf	fsr2l,f,c
  4388  001F58  504C               	movf	RF24N_write_@header+1,w,c
  4389  001F5A  22DA               	addwfc	fsr2h,f,c
  4390  001F5C  0E40               	movlw	64
  4391  001F5E  18DE               	xorwf	postinc2,w,c
  4392  001F60  10DE               	iorwf	postinc2,w,c
  4393  001F62  B4D8               	btfsc	status,2,c
  4394  001F64  D007               	goto	l4483
  4395                           
  4396                           ;RF24Network_c.c: 835: rn.networkFlags |= 4;
  4397  001F66  C0FF  FFE8         	movff	_rn+42,wreg
  4398  001F6A  0904               	iorlw	4
  4399  001F6C  CFE8 F0FF          	movff	wreg,_rn+42
  4400                           
  4401                           ;RF24Network_c.c: 837: RF24_stopListening();
  4402  001F70  EC1E  F019         	call	_RF24_stopListening	;wreg free
  4403  001F74                     l4483:
  4404                           
  4405                           ;RF24Network_c.c: 839: }
  4406                           ;RF24Network_c.c: 841: retriesPerFrag = 0;
  4407  001F74  0E00               	movlw	0
  4408  001F76  6E5B               	movwf	RF24N_write_@retriesPerFrag,c
  4409                           
  4410                           ;RF24Network_c.c: 842: type = header->type;
  4411  001F78  EE20 F006          	lfsr	2,6
  4412  001F7C  504B               	movf	RF24N_write_@header,w,c
  4413  001F7E  26D9               	addwf	fsr2l,f,c
  4414  001F80  504C               	movf	RF24N_write_@header+1,w,c
  4415  001F82  22DA               	addwfc	fsr2h,f,c
  4416  001F84  50DF               	movf	indf2,w,c
  4417  001F86  6E5E               	movwf	RF24N_write_@type,c
  4418                           
  4419                           ;RF24Network_c.c: 843: ok = 0;
  4420  001F88  0E00               	movlw	0
  4421  001F8A  6E62               	movwf	RF24N_write_@ok,c
  4422                           
  4423                           ;RF24Network_c.c: 845: while (fragment_id > 0) {
  4424  001F8C  D094               	goto	l4527
  4425  001F8E                     l4489:
  4426                           
  4427                           ;RF24Network_c.c: 846: uint16_t offset;
  4428                           ;RF24Network_c.c: 847: uint16_t fragmentLen;
  4429                           ;RF24Network_c.c: 851: header->reserved = fragment_id;
  4430  001F8E  EE20 F007          	lfsr	2,7
  4431  001F92  504B               	movf	RF24N_write_@header,w,c
  4432  001F94  26D9               	addwf	fsr2l,f,c
  4433  001F96  504C               	movf	RF24N_write_@header+1,w,c
  4434  001F98  22DA               	addwfc	fsr2h,f,c
  4435  001F9A  C063  FFDF         	movff	RF24N_write_@fragment_id,indf2
  4436                           
  4437                           ;RF24Network_c.c: 853: if (fragment_id == 1) {
  4438  001F9E  0463               	decf	RF24N_write_@fragment_id,w,c
  4439  001FA0  A4D8               	btfss	status,2,c
  4440  001FA2  D011               	goto	l4495
  4441                           
  4442                           ;RF24Network_c.c: 854: header->type = 150;
  4443  001FA4  EE20 F006          	lfsr	2,6
  4444  001FA8  504B               	movf	RF24N_write_@header,w,c
  4445  001FAA  26D9               	addwf	fsr2l,f,c
  4446  001FAC  504C               	movf	RF24N_write_@header+1,w,c
  4447  001FAE  22DA               	addwfc	fsr2h,f,c
  4448  001FB0  0E96               	movlw	150
  4449  001FB2  6EDF               	movwf	indf2,c
  4450                           
  4451                           ;RF24Network_c.c: 855: header->reserved = type;
  4452  001FB4  EE20 F007          	lfsr	2,7
  4453  001FB8  504B               	movf	RF24N_write_@header,w,c
  4454  001FBA  26D9               	addwf	fsr2l,f,c
  4455  001FBC  504C               	movf	RF24N_write_@header+1,w,c
  4456  001FBE  22DA               	addwfc	fsr2h,f,c
  4457  001FC0  C05E  FFDF         	movff	RF24N_write_@type,indf2
  4458                           
  4459                           ;RF24Network_c.c: 856: } else {
  4460  001FC4  D013               	goto	l4501
  4461  001FC6                     l4495:
  4462                           
  4463                           ;RF24Network_c.c: 857: if (msgCount == 0) {
  4464  001FC6  505F               	movf	RF24N_write_@msgCount,w,c
  4465  001FC8  A4D8               	btfss	status,2,c
  4466  001FCA  D008               	goto	l4499
  4467                           
  4468                           ;RF24Network_c.c: 858: header->type = 148;
  4469  001FCC  EE20 F006          	lfsr	2,6
  4470  001FD0  504B               	movf	RF24N_write_@header,w,c
  4471  001FD2  26D9               	addwf	fsr2l,f,c
  4472  001FD4  504C               	movf	RF24N_write_@header+1,w,c
  4473  001FD6  22DA               	addwfc	fsr2h,f,c
  4474  001FD8  0E94               	movlw	148
  4475  001FDA  D007               	goto	L3
  4476  001FDC                     l4499:
  4477                           
  4478                           ;RF24Network_c.c: 860: header->type = 149;
  4479  001FDC  EE20 F006          	lfsr	2,6
  4480  001FE0  504B               	movf	RF24N_write_@header,w,c
  4481  001FE2  26D9               	addwf	fsr2l,f,c
  4482  001FE4  504C               	movf	RF24N_write_@header+1,w,c
  4483  001FE6  22DA               	addwfc	fsr2h,f,c
  4484  001FE8  0E95               	movlw	149
  4485  001FEA                     L3:
  4486  001FEA  6EDF               	movwf	indf2,c
  4487  001FEC                     l4501:
  4488                           
  4489                           ;RF24Network_c.c: 861: }
  4490                           ;RF24Network_c.c: 862: }
  4491                           ;RF24Network_c.c: 864: offset = msgCount*rn.max_frame_payload_size;
  4492  001FEC  C05F  F003         	movff	RF24N_write_@msgCount,___wmul@multiplier
  4493  001FF0  6A04               	clrf	___wmul@multiplier+1,c
  4494  001FF2  C108  F005         	movff	_rn+51,___wmul@multiplicand
  4495  001FF6  C109  F006         	movff	_rn+52,___wmul@multiplicand+1
  4496  001FFA  ECF8  F01C         	call	___wmul	;wreg free
  4497  001FFE  C003  F060         	movff	?___wmul,RF24N_write_@offset
  4498  002002  C004  F061         	movff	?___wmul+1,RF24N_write_@offset+1
  4499                           
  4500                           ;RF24Network_c.c: 865: fragmentLen = ((uint16_t)(len-offset)<rn.max_frame_payload_size?(
      +                          uint16_t)(len-offset):rn.max_frame_payload_size);
  4501  002006  EE21  F008         	lfsr	2,_rn+51
  4502  00200A  C060  F055         	movff	RF24N_write_@offset,??_RF24N_write_+2
  4503  00200E  C061  F056         	movff	RF24N_write_@offset+1,??_RF24N_write_+3
  4504  002012  1E55               	comf	??_RF24N_write_+2,f,c
  4505  002014  1E56               	comf	??_RF24N_write_+3,f,c
  4506  002016  4A55               	infsnz	??_RF24N_write_+2,f,c
  4507  002018  2A56               	incf	??_RF24N_write_+3,f,c
  4508  00201A  504F               	movf	RF24N_write_@len,w,c
  4509  00201C  2655               	addwf	??_RF24N_write_+2,f,c
  4510  00201E  5050               	movf	RF24N_write_@len+1,w,c
  4511  002020  2256               	addwfc	??_RF24N_write_+3,f,c
  4512  002022  50DE               	movf	postinc2,w,c
  4513  002024  5C55               	subwf	??_RF24N_write_+2,w,c
  4514  002026  50DE               	movf	postinc2,w,c
  4515  002028  5856               	subwfb	??_RF24N_write_+3,w,c
  4516  00202A  A0D8               	btfss	status,0,c
  4517  00202C  D005               	goto	l4507
  4518  00202E  C108  F05C         	movff	_rn+51,RF24N_write_@fragmentLen
  4519  002032  C109  F05D         	movff	_rn+52,RF24N_write_@fragmentLen+1
  4520  002036  D00E               	goto	l515
  4521  002038                     l4507:
  4522  002038  C060  F053         	movff	RF24N_write_@offset,??_RF24N_write_
  4523  00203C  C061  F054         	movff	RF24N_write_@offset+1,??_RF24N_write_+1
  4524  002040  1E53               	comf	??_RF24N_write_,f,c
  4525  002042  1E54               	comf	??_RF24N_write_+1,f,c
  4526  002044  4A53               	infsnz	??_RF24N_write_,f,c
  4527  002046  2A54               	incf	??_RF24N_write_+1,f,c
  4528  002048  504F               	movf	RF24N_write_@len,w,c
  4529  00204A  2453               	addwf	??_RF24N_write_,w,c
  4530  00204C  6E5C               	movwf	RF24N_write_@fragmentLen,c
  4531  00204E  5050               	movf	RF24N_write_@len+1,w,c
  4532  002050  2054               	addwfc	??_RF24N_write_+1,w,c
  4533  002052  6E5D               	movwf	RF24N_write_@fragmentLen+1,c
  4534  002054                     l515:
  4535                           
  4536                           ;RF24Network_c.c: 868: rn.frame_size = sizeof(RF24NetworkHeader)+fragmentLen;
  4537  002054  C05C  F053         	movff	RF24N_write_@fragmentLen,??_RF24N_write_
  4538  002058  0E08               	movlw	8
  4539  00205A  2653               	addwf	??_RF24N_write_,f,c
  4540  00205C  C053  F107         	movff	??_RF24N_write_,_rn+50
  4541                           
  4542                           ;RF24Network_c.c: 869: ok = RF24N__write(header,((char *)message)+offset,fragmentLen,wri
      +                          teDirect);
  4543  002060  C04B  F040         	movff	RF24N_write_@header,RF24N__write@header
  4544  002064  C04C  F041         	movff	RF24N_write_@header+1,RF24N__write@header+1
  4545  002068  5060               	movf	RF24N_write_@offset,w,c
  4546  00206A  244D               	addwf	RF24N_write_@message,w,c
  4547  00206C  6E42               	movwf	RF24N__write@message,c
  4548  00206E  5061               	movf	RF24N_write_@offset+1,w,c
  4549  002070  204E               	addwfc	RF24N_write_@message+1,w,c
  4550  002072  6E43               	movwf	RF24N__write@message+1,c
  4551  002074  C05C  F044         	movff	RF24N_write_@fragmentLen,RF24N__write@len
  4552  002078  C05D  F045         	movff	RF24N_write_@fragmentLen+1,RF24N__write@len+1
  4553  00207C  C051  F046         	movff	RF24N_write_@writeDirect,RF24N__write@writeDirect
  4554  002080  C052  F047         	movff	RF24N_write_@writeDirect+1,RF24N__write@writeDirect+1
  4555  002084  EC91  F016         	call	_RF24N__write	;wreg free
  4556  002088  6E62               	movwf	RF24N_write_@ok,c
  4557                           
  4558                           ;RF24Network_c.c: 871: if (!ok) {
  4559  00208A  5062               	movf	RF24N_write_@ok,w,c
  4560  00208C  A4D8               	btfss	status,2,c
  4561  00208E  D008               	goto	l4517
  4562                           
  4563                           ;RF24Network_c.c: 872: delay(2);
  4564  002090  0E00               	movlw	0
  4565  002092  6E04               	movwf	delay@val+1,c
  4566  002094  0E02               	movlw	2
  4567  002096  6E03               	movwf	delay@val,c
  4568  002098  ECD4  F01A         	call	_delay	;wreg free
  4569                           
  4570                           ;RF24Network_c.c: 873: ++retriesPerFrag;
  4571  00209C  2A5B               	incf	RF24N_write_@retriesPerFrag,f,c
  4572                           
  4573                           ;RF24Network_c.c: 875: }else{
  4574  00209E  D004               	goto	l517
  4575  0020A0                     l4517:
  4576                           
  4577                           ;RF24Network_c.c: 876: retriesPerFrag = 0;
  4578  0020A0  0E00               	movlw	0
  4579  0020A2  6E5B               	movwf	RF24N_write_@retriesPerFrag,c
  4580                           
  4581                           ;RF24Network_c.c: 877: fragment_id--;
  4582  0020A4  0663               	decf	RF24N_write_@fragment_id,f,c
  4583                           
  4584                           ;RF24Network_c.c: 878: msgCount++;
  4585  0020A6  2A5F               	incf	RF24N_write_@msgCount,f,c
  4586  0020A8                     l517:
  4587                           
  4588                           ;RF24Network_c.c: 879: }
  4589                           ;RF24Network_c.c: 883: if (!ok && retriesPerFrag >= 3) {
  4590  0020A8  5062               	movf	RF24N_write_@ok,w,c
  4591  0020AA  A4D8               	btfss	status,2,c
  4592  0020AC  D004               	goto	l4527
  4593  0020AE  0E02               	movlw	2
  4594  0020B0  645B               	cpfsgt	RF24N_write_@retriesPerFrag,c
  4595  0020B2  D001               	goto	l4527
  4596  0020B4  D003               	goto	l4529
  4597  0020B6                     l4527:
  4598  0020B6  5063               	movf	RF24N_write_@fragment_id,w,c
  4599  0020B8  A4D8               	btfss	status,2,c
  4600  0020BA  D769               	goto	l4489
  4601  0020BC                     l4529:
  4602                           
  4603                           ;RF24Network_c.c: 886: }
  4604                           ;RF24Network_c.c: 895: }
  4605                           ;RF24Network_c.c: 896: header->type = type;
  4606  0020BC  EE20 F006          	lfsr	2,6
  4607  0020C0  504B               	movf	RF24N_write_@header,w,c
  4608  0020C2  26D9               	addwf	fsr2l,f,c
  4609  0020C4  504C               	movf	RF24N_write_@header+1,w,c
  4610  0020C6  22DA               	addwfc	fsr2h,f,c
  4611  0020C8  C05E  FFDF         	movff	RF24N_write_@type,indf2
  4612                           
  4613                           ;RF24Network_c.c: 898: if(rn.networkFlags & 4){
  4614  0020CC  EE20  F0FF         	lfsr	2,_rn+42
  4615  0020D0  A4DF               	btfss	indf2,2,c
  4616  0020D2  D014               	goto	l4539
  4617                           
  4618                           ;RF24Network_c.c: 899: ok = RF24_txStandBy_t(rn.txTimeout,0);
  4619  0020D4  C0D6  F013         	movff	_rn+1,RF24_txStandBy_t@timeout
  4620  0020D8  C0D7  F014         	movff	_rn+2,RF24_txStandBy_t@timeout+1
  4621  0020DC  C0D8  F015         	movff	_rn+3,RF24_txStandBy_t@timeout+2
  4622  0020E0  C0D9  F016         	movff	_rn+4,RF24_txStandBy_t@timeout+3
  4623  0020E4  0E00               	movlw	0
  4624  0020E6  6E17               	movwf	RF24_txStandBy_t@startTx,c
  4625  0020E8  ECFC  F016         	call	_RF24_txStandBy_t	;wreg free
  4626  0020EC  6E62               	movwf	RF24N_write_@ok,c
  4627                           
  4628                           ;RF24Network_c.c: 900: RF24_startListening();
  4629  0020EE  ECE2  F019         	call	_RF24_startListening	;wreg free
  4630                           
  4631                           ;RF24Network_c.c: 901: RF24_setAutoAck_p(0,0);
  4632  0020F2  0E00               	movlw	0
  4633  0020F4  6E11               	movwf	RF24_setAutoAck_p@enable,c
  4634  0020F6  0E00               	movlw	0
  4635  0020F8  EC0E  F01A         	call	_RF24_setAutoAck_p
  4636  0020FC                     l4539:
  4637                           
  4638                           ;RF24Network_c.c: 902: }
  4639                           ;RF24Network_c.c: 903: rn.networkFlags &= ~4;
  4640  0020FC  C0FF  FFE8         	movff	_rn+42,wreg
  4641  002100  0BFB               	andlw	251
  4642  002102  CFE8 F0FF          	movff	wreg,_rn+42
  4643                           
  4644                           ;RF24Network_c.c: 905: if(!ok){
  4645  002106  5062               	movf	RF24N_write_@ok,w,c
  4646  002108  A4D8               	btfss	status,2,c
  4647  00210A  D002               	goto	l4547
  4648                           
  4649                           ;RF24Network_c.c: 906: return 0;
  4650  00210C  0E00               	movlw	0
  4651  00210E  0012               	return	
  4652  002110                     l4547:
  4653                           
  4654                           ;RF24Network_c.c: 907: }
  4655                           ;RF24Network_c.c: 914: ;
  4656                           ;RF24Network_c.c: 915: if(fragment_id > 0){
  4657  002110  5063               	movf	RF24N_write_@fragment_id,w,c
  4658  002112  B4D8               	btfsc	status,2,c
  4659  002114  D00C               	goto	l4555
  4660                           
  4661                           ;RF24Network_c.c: 916: rn.txTime = millis();
  4662  002116  ECC5  F01D         	call	_millis	;wreg free
  4663  00211A  C003  F100         	movff	?_millis,_rn+43
  4664  00211E  C004  F101         	movff	?_millis+1,_rn+44
  4665  002122  C005  F102         	movff	?_millis+2,_rn+45
  4666  002126  C006  F103         	movff	?_millis+3,_rn+46
  4667                           
  4668                           ;RF24Network_c.c: 917: return 0;
  4669  00212A  0E00               	movlw	0
  4670  00212C  0012               	return	
  4671  00212E                     l4555:
  4672                           
  4673                           ;RF24Network_c.c: 918: }
  4674                           ;RF24Network_c.c: 919: return 1;
  4675  00212E  0E01               	movlw	1
  4676  002130  0012               	return	
  4677  002132                     __end_of_RF24N_write_:
  4678                           	opt stack 0
  4679                           tblptru	equ	0xFF8
  4680                           tblptrh	equ	0xFF7
  4681                           tblptrl	equ	0xFF6
  4682                           tablat	equ	0xFF5
  4683                           prodh	equ	0xFF4
  4684                           prodl	equ	0xFF3
  4685                           intcon	equ	0xFF2
  4686                           indf0	equ	0xFEF
  4687                           postinc0	equ	0xFEE
  4688                           fsr0h	equ	0xFEA
  4689                           fsr0l	equ	0xFE9
  4690                           wreg	equ	0xFE8
  4691                           indf2	equ	0xFDF
  4692                           postinc2	equ	0xFDE
  4693                           postdec2	equ	0xFDD
  4694                           fsr2h	equ	0xFDA
  4695                           fsr2l	equ	0xFD9
  4696                           status	equ	0xFD8
  4697                           
  4698 ;; *************** function ___wmul *****************
  4699 ;; Defined at:
  4700 ;;		line 15 in file "/opt/microchip/xc8/v1.36/sources/common/Umul16.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  multiplier      2    2[COMRAM] unsigned int 
  4703 ;;  multiplicand    2    4[COMRAM] unsigned int 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  product         2    6[COMRAM] unsigned int 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  2    2[COMRAM] unsigned int 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0, prodl, prodh
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4716 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;Total ram usage:        6 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    1
  4722 ;; This function calls:
  4723 ;;		Nothing
  4724 ;; This function is called by:
  4725 ;;		_RF24N_begin_d
  4726 ;;		_RF24N_write_
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           	psect	text23
  4731  0039F0                     __ptext23:
  4732                           	opt stack 0
  4733  0039F0                     ___wmul:
  4734                           	opt stack 27
  4735                           
  4736                           ;incstack = 0
  4737  0039F0  5003               	movf	___wmul@multiplier,w,c
  4738  0039F2  0205               	mulwf	___wmul@multiplicand,c
  4739  0039F4  CFF3 F007          	movff	prodl,___wmul@product
  4740  0039F8  CFF4 F008          	movff	prodh,___wmul@product+1
  4741  0039FC  5003               	movf	___wmul@multiplier,w,c
  4742  0039FE  0206               	mulwf	___wmul@multiplicand+1,c
  4743  003A00  50F3               	movf	prodl,w,c
  4744  003A02  2608               	addwf	___wmul@product+1,f,c
  4745  003A04  5004               	movf	___wmul@multiplier+1,w,c
  4746  003A06  0205               	mulwf	___wmul@multiplicand,c
  4747  003A08  50F3               	movf	prodl,w,c
  4748  003A0A  2608               	addwf	___wmul@product+1,f,c
  4749  003A0C  C007  F003         	movff	___wmul@product,?___wmul
  4750  003A10  C008  F004         	movff	___wmul@product+1,?___wmul+1
  4751  003A14  0012               	return	
  4752  003A16                     __end_of___wmul:
  4753                           	opt stack 0
  4754                           tblptru	equ	0xFF8
  4755                           tblptrh	equ	0xFF7
  4756                           tblptrl	equ	0xFF6
  4757                           tablat	equ	0xFF5
  4758                           prodh	equ	0xFF4
  4759                           prodl	equ	0xFF3
  4760                           intcon	equ	0xFF2
  4761                           indf0	equ	0xFEF
  4762                           postinc0	equ	0xFEE
  4763                           fsr0h	equ	0xFEA
  4764                           fsr0l	equ	0xFE9
  4765                           wreg	equ	0xFE8
  4766                           indf2	equ	0xFDF
  4767                           postinc2	equ	0xFDE
  4768                           postdec2	equ	0xFDD
  4769                           fsr2h	equ	0xFDA
  4770                           fsr2l	equ	0xFD9
  4771                           status	equ	0xFD8
  4772                           
  4773 ;; *************** function ___lwmod *****************
  4774 ;; Defined at:
  4775 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwmod.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;  dividend        2    2[COMRAM] unsigned int 
  4778 ;;  divisor         2    4[COMRAM] unsigned int 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  counter         1    6[COMRAM] unsigned char 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  2    2[COMRAM] unsigned int 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2, status,0
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;Total ram usage:        5 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    1
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_RF24N_begin_d
  4801 ;;		_RF24N_write_
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           	psect	text24
  4806  0035F2                     __ptext24:
  4807                           	opt stack 0
  4808  0035F2                     ___lwmod:
  4809                           	opt stack 27
  4810                           
  4811                           ;incstack = 0
  4812  0035F2  5005               	movf	___lwmod@divisor,w,c
  4813  0035F4  1006               	iorwf	___lwmod@divisor+1,w,c
  4814  0035F6  B4D8               	btfsc	status,2,c
  4815  0035F8  D018               	goto	l1442
  4816  0035FA  0E01               	movlw	1
  4817  0035FC  6E07               	movwf	___lwmod@counter,c
  4818  0035FE  D004               	goto	l4343
  4819  003600                     l4341:
  4820  003600  90D8               	bcf	status,0,c
  4821  003602  3605               	rlcf	___lwmod@divisor,f,c
  4822  003604  3606               	rlcf	___lwmod@divisor+1,f,c
  4823  003606  2A07               	incf	___lwmod@counter,f,c
  4824  003608                     l4343:
  4825  003608  AE06               	btfss	___lwmod@divisor+1,7,c
  4826  00360A  D7FA               	goto	l4341
  4827  00360C                     l4345:
  4828  00360C  5005               	movf	___lwmod@divisor,w,c
  4829  00360E  5C03               	subwf	___lwmod@dividend,w,c
  4830  003610  5006               	movf	___lwmod@divisor+1,w,c
  4831  003612  5804               	subwfb	___lwmod@dividend+1,w,c
  4832  003614  A0D8               	btfss	status,0,c
  4833  003616  D004               	goto	l4349
  4834  003618  5005               	movf	___lwmod@divisor,w,c
  4835  00361A  5E03               	subwf	___lwmod@dividend,f,c
  4836  00361C  5006               	movf	___lwmod@divisor+1,w,c
  4837  00361E  5A04               	subwfb	___lwmod@dividend+1,f,c
  4838  003620                     l4349:
  4839  003620  90D8               	bcf	status,0,c
  4840  003622  3206               	rrcf	___lwmod@divisor+1,f,c
  4841  003624  3205               	rrcf	___lwmod@divisor,f,c
  4842  003626  2E07               	decfsz	___lwmod@counter,f,c
  4843  003628  D7F1               	goto	l4345
  4844  00362A                     l1442:
  4845  00362A  C003  F003         	movff	___lwmod@dividend,?___lwmod
  4846  00362E  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  4847  003632  0012               	return		;funcret
  4848  003634                     __end_of___lwmod:
  4849                           	opt stack 0
  4850                           tblptru	equ	0xFF8
  4851                           tblptrh	equ	0xFF7
  4852                           tblptrl	equ	0xFF6
  4853                           tablat	equ	0xFF5
  4854                           prodh	equ	0xFF4
  4855                           prodl	equ	0xFF3
  4856                           intcon	equ	0xFF2
  4857                           indf0	equ	0xFEF
  4858                           postinc0	equ	0xFEE
  4859                           fsr0h	equ	0xFEA
  4860                           fsr0l	equ	0xFE9
  4861                           wreg	equ	0xFE8
  4862                           indf2	equ	0xFDF
  4863                           postinc2	equ	0xFDE
  4864                           postdec2	equ	0xFDD
  4865                           fsr2h	equ	0xFDA
  4866                           fsr2l	equ	0xFD9
  4867                           status	equ	0xFD8
  4868                           
  4869 ;; *************** function _RF24N__write *****************
  4870 ;; Defined at:
  4871 ;;		line 925 in file "../../RF24Network_c.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  header          2   63[COMRAM] PTR struct .
  4874 ;;		 -> loop@header(8), 
  4875 ;;  message         2   65[COMRAM] PTR const void 
  4876 ;;		 -> loop@payload(8), 
  4877 ;;  len             2   67[COMRAM] unsigned int 
  4878 ;;  writeDirect     2   69[COMRAM] unsigned int 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  sendType        1   73[COMRAM] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      unsigned char 
  4883 ;; Registers used:
  4884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4890 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4894 ;;Total ram usage:       11 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; Hardware stack levels required when called:   10
  4897 ;; This function calls:
  4898 ;;		_RF24N_write
  4899 ;;		_memcpy
  4900 ;; This function is called by:
  4901 ;;		_RF24N_write_
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text25
  4906  002D22                     __ptext25:
  4907                           	opt stack 0
  4908  002D22                     _RF24N__write:
  4909                           	opt stack 17
  4910                           
  4911                           ;RF24Network_c.c: 928: header->from_node = rn.node_address;
  4912                           
  4913                           ;incstack = 0
  4914  002D22  EE21  F005         	lfsr	2,_rn+48
  4915  002D26  C040  FFE9         	movff	RF24N__write@header,fsr0l
  4916  002D2A  C041  FFEA         	movff	RF24N__write@header+1,fsr0h
  4917  002D2E  CFDE FFEE          	movff	postinc2,postinc0
  4918  002D32  CFDD FFED          	movff	postdec2,postdec0
  4919                           
  4920                           ;RF24Network_c.c: 931: memcpy(rn.frame_buffer,header,sizeof(RF24NetworkHeader));
  4921  002D36  0EDC               	movlw	low (_rn+7)
  4922  002D38  6E03               	movwf	memcpy@d1,c
  4923  002D3A  0E00               	movlw	high (_rn+7)
  4924  002D3C  6E04               	movwf	memcpy@d1+1,c
  4925  002D3E  C040  F005         	movff	RF24N__write@header,memcpy@s1
  4926  002D42  C041  F006         	movff	RF24N__write@header+1,memcpy@s1+1
  4927  002D46  0E00               	movlw	0
  4928  002D48  6E08               	movwf	memcpy@n+1,c
  4929  002D4A  0E08               	movlw	8
  4930  002D4C  6E07               	movwf	memcpy@n,c
  4931  002D4E  EC1A  F01B         	call	_memcpy	;wreg free
  4932                           
  4933                           ;RF24Network_c.c: 936: ;
  4934                           ;RF24Network_c.c: 938: if (len){
  4935  002D52  5044               	movf	RF24N__write@len,w,c
  4936  002D54  1045               	iorwf	RF24N__write@len+1,w,c
  4937  002D56  B4D8               	btfsc	status,2,c
  4938  002D58  D00E               	goto	l4311
  4939                           
  4940                           ;RF24Network_c.c: 945: memcpy(rn.frame_buffer + sizeof(RF24NetworkHeader),message,len);
  4941  002D5A  0EE4               	movlw	low (_rn+15)
  4942  002D5C  6E03               	movwf	memcpy@d1,c
  4943  002D5E  0E00               	movlw	high (_rn+15)
  4944  002D60  6E04               	movwf	memcpy@d1+1,c
  4945  002D62  C042  F005         	movff	RF24N__write@message,memcpy@s1
  4946  002D66  C043  F006         	movff	RF24N__write@message+1,memcpy@s1+1
  4947  002D6A  C044  F007         	movff	RF24N__write@len,memcpy@n
  4948  002D6E  C045  F008         	movff	RF24N__write@len+1,memcpy@n+1
  4949  002D72  EC1A  F01B         	call	_memcpy	;wreg free
  4950  002D76                     l4311:
  4951                           
  4952                           ;RF24Network_c.c: 949: }
  4953                           ;RF24Network_c.c: 964: if(writeDirect != 070){
  4954  002D76  0E38               	movlw	56
  4955  002D78  1846               	xorwf	RF24N__write@writeDirect,w,c
  4956  002D7A  1047               	iorwf	RF24N__write@writeDirect+1,w,c
  4957  002D7C  B4D8               	btfsc	status,2,c
  4958  002D7E  D028               	goto	l4327
  4959                           
  4960                           ;RF24Network_c.c: 965: uint8_t sendType = 3;
  4961  002D80  0E03               	movlw	3
  4962  002D82  6E4A               	movwf	RF24N__write@sendType,c
  4963                           
  4964                           ;RF24Network_c.c: 967: if(header->to_node == 0100){
  4965  002D84  EE20 F002          	lfsr	2,2
  4966  002D88  5040               	movf	RF24N__write@header,w,c
  4967  002D8A  26D9               	addwf	fsr2l,f,c
  4968  002D8C  5041               	movf	RF24N__write@header+1,w,c
  4969  002D8E  22DA               	addwfc	fsr2h,f,c
  4970  002D90  0E40               	movlw	64
  4971  002D92  18DE               	xorwf	postinc2,w,c
  4972  002D94  10DE               	iorwf	postinc2,w,c
  4973  002D96  A4D8               	btfss	status,2,c
  4974  002D98  D002               	goto	l4319
  4975                           
  4976                           ;RF24Network_c.c: 968: sendType = 4;
  4977  002D9A  0E04               	movlw	4
  4978  002D9C  6E4A               	movwf	RF24N__write@sendType,c
  4979  002D9E                     l4319:
  4980                           
  4981                           ;RF24Network_c.c: 969: }
  4982                           ;RF24Network_c.c: 970: if(header->to_node == writeDirect){
  4983  002D9E  EE20 F002          	lfsr	2,2
  4984  002DA2  5040               	movf	RF24N__write@header,w,c
  4985  002DA4  26D9               	addwf	fsr2l,f,c
  4986  002DA6  5041               	movf	RF24N__write@header+1,w,c
  4987  002DA8  22DA               	addwfc	fsr2h,f,c
  4988  002DAA  5046               	movf	RF24N__write@writeDirect,w,c
  4989  002DAC  18DE               	xorwf	postinc2,w,c
  4990  002DAE  E106               	bnz	l4323
  4991  002DB0  5047               	movf	RF24N__write@writeDirect+1,w,c
  4992  002DB2  18DE               	xorwf	postinc2,w,c
  4993  002DB4  A4D8               	btfss	status,2,c
  4994  002DB6  D002               	goto	l4323
  4995                           
  4996                           ;RF24Network_c.c: 971: sendType = 2;
  4997  002DB8  0E02               	movlw	2
  4998  002DBA  6E4A               	movwf	RF24N__write@sendType,c
  4999  002DBC                     l4323:
  5000                           
  5001                           ;RF24Network_c.c: 972: }
  5002                           ;RF24Network_c.c: 973: return RF24N_write(writeDirect,sendType);
  5003  002DBC  504A               	movf	RF24N__write@sendType,w,c
  5004  002DBE  6EE6               	movwf	postinc1,c
  5005  002DC0  C046  FFE6         	movff	RF24N__write@writeDirect,postinc1
  5006  002DC4  C047  FFE6         	movff	RF24N__write@writeDirect+1,postinc1
  5007  002DC8  EC90  F00D         	call	_RF24N_write	;wreg free
  5008  002DCC  506A               	movf	btemp,w,c
  5009  002DCE  0012               	return	
  5010  002DD0                     l4327:
  5011                           
  5012                           ;RF24Network_c.c: 974: }
  5013                           ;RF24Network_c.c: 975: return RF24N_write(header->to_node,0);
  5014  002DD0  0E00               	movlw	0
  5015  002DD2  6EE6               	movwf	postinc1,c
  5016  002DD4  EE20 F002          	lfsr	2,2
  5017  002DD8  5040               	movf	RF24N__write@header,w,c
  5018  002DDA  26D9               	addwf	fsr2l,f,c
  5019  002DDC  5041               	movf	RF24N__write@header+1,w,c
  5020  002DDE  22DA               	addwfc	fsr2h,f,c
  5021  002DE0  CFDE F048          	movff	postinc2,??_RF24N__write
  5022  002DE4  CFDD F049          	movff	postdec2,??_RF24N__write+1
  5023  002DE8  C048  FFE6         	movff	??_RF24N__write,postinc1
  5024  002DEC  C049  FFE6         	movff	??_RF24N__write+1,postinc1
  5025  002DF0  EC90  F00D         	call	_RF24N_write	;wreg free
  5026  002DF4  506A               	movf	btemp,w,c
  5027  002DF6  0012               	return	
  5028  002DF8                     __end_of_RF24N__write:
  5029                           	opt stack 0
  5030                           tblptru	equ	0xFF8
  5031                           tblptrh	equ	0xFF7
  5032                           tblptrl	equ	0xFF6
  5033                           tablat	equ	0xFF5
  5034                           prodh	equ	0xFF4
  5035                           prodl	equ	0xFF3
  5036                           intcon	equ	0xFF2
  5037                           indf0	equ	0xFEF
  5038                           postinc0	equ	0xFEE
  5039                           postdec0	equ	0xFED
  5040                           fsr0h	equ	0xFEA
  5041                           fsr0l	equ	0xFE9
  5042                           wreg	equ	0xFE8
  5043                           postinc1	equ	0xFE6
  5044                           indf2	equ	0xFDF
  5045                           postinc2	equ	0xFDE
  5046                           postdec2	equ	0xFDD
  5047                           fsr2h	equ	0xFDA
  5048                           fsr2l	equ	0xFD9
  5049                           status	equ	0xFD8
  5050                           
  5051 ;; *************** function _RF24NH_init *****************
  5052 ;; Defined at:
  5053 ;;		line 47 in file "../../RF24Network_c.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  rnh             2    2[COMRAM] PTR struct .
  5056 ;;		 -> loop@header(8), 
  5057 ;;  _to             2    4[COMRAM] unsigned int 
  5058 ;;  _type           1    6[COMRAM] unsigned char 
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;		None
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      void 
  5063 ;; Registers used:
  5064 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5070 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;Total ram usage:        5 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    1
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		_loop
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text26
  5085  003734                     __ptext26:
  5086                           	opt stack 0
  5087  003734                     _RF24NH_init:
  5088                           	opt stack 28
  5089                           
  5090                           ;RF24Network_c.c: 49: rnh->to_node=_to;
  5091                           
  5092                           ;incstack = 0
  5093  003734  EE20 F002          	lfsr	2,2
  5094  003738  5003               	movf	RF24NH_init@rnh,w,c
  5095  00373A  26D9               	addwf	fsr2l,f,c
  5096  00373C  5004               	movf	RF24NH_init@rnh+1,w,c
  5097  00373E  22DA               	addwfc	fsr2h,f,c
  5098  003740  C005  FFDE         	movff	RF24NH_init@_to,postinc2
  5099  003744  C006  FFDD         	movff	RF24NH_init@_to+1,postdec2
  5100                           
  5101                           ;RF24Network_c.c: 50: rnh->id=next_id++;
  5102  003748  EE20 F004          	lfsr	2,4
  5103  00374C  5003               	movf	RF24NH_init@rnh,w,c
  5104  00374E  26D9               	addwf	fsr2l,f,c
  5105  003750  5004               	movf	RF24NH_init@rnh+1,w,c
  5106  003752  22DA               	addwfc	fsr2h,f,c
  5107  003754  C076  FFDE         	movff	_next_id,postinc2
  5108  003758  C077  FFDD         	movff	_next_id+1,postdec2
  5109  00375C  4A76               	infsnz	_next_id,f,c
  5110  00375E  2A77               	incf	_next_id+1,f,c
  5111                           
  5112                           ;RF24Network_c.c: 51: rnh->type=_type;
  5113  003760  EE20 F006          	lfsr	2,6
  5114  003764  5003               	movf	RF24NH_init@rnh,w,c
  5115  003766  26D9               	addwf	fsr2l,f,c
  5116  003768  5004               	movf	RF24NH_init@rnh+1,w,c
  5117  00376A  22DA               	addwfc	fsr2h,f,c
  5118  00376C  C007  FFDF         	movff	RF24NH_init@_type,indf2
  5119  003770  0012               	return		;funcret
  5120  003772                     __end_of_RF24NH_init:
  5121                           	opt stack 0
  5122                           tblptru	equ	0xFF8
  5123                           tblptrh	equ	0xFF7
  5124                           tblptrl	equ	0xFF6
  5125                           tablat	equ	0xFF5
  5126                           prodh	equ	0xFF4
  5127                           prodl	equ	0xFF3
  5128                           intcon	equ	0xFF2
  5129                           indf0	equ	0xFEF
  5130                           postinc0	equ	0xFEE
  5131                           postdec0	equ	0xFED
  5132                           fsr0h	equ	0xFEA
  5133                           fsr0l	equ	0xFE9
  5134                           wreg	equ	0xFE8
  5135                           postinc1	equ	0xFE6
  5136                           indf2	equ	0xFDF
  5137                           postinc2	equ	0xFDE
  5138                           postdec2	equ	0xFDD
  5139                           fsr2h	equ	0xFDA
  5140                           fsr2l	equ	0xFD9
  5141                           status	equ	0xFD8
  5142                           
  5143 ;; *************** function _digitalWrite *****************
  5144 ;; Defined at:
  5145 ;;		line 62 in file "../../../RF24_c/utility/XC8/spi.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;  pin             1    wreg     unsigned char 
  5148 ;;  mode            1    2[COMRAM] unsigned char 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  pin             1    4[COMRAM] unsigned char 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      void 
  5153 ;; Registers used:
  5154 ;;		wreg, status,2, status,0
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5160 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;Total ram usage:        3 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    1
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_RF24_csn_d
  5171 ;;		_RF24_ce_d
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           	psect	text27
  5176  0023B0                     __ptext27:
  5177                           	opt stack 0
  5178  0023B0                     _digitalWrite:
  5179                           	opt stack 24
  5180                           
  5181                           ;incstack = 0
  5182                           ;digitalWrite@pin stored from wreg
  5183  0023B0  6E05               	movwf	digitalWrite@pin,c
  5184                           
  5185                           ;spi.c: 64: switch(pin)
  5186  0023B2  D0D2               	goto	l3427
  5187  0023B4                     l208:
  5188  0023B4  B003               	btfsc	digitalWrite@mode,0,c
  5189  0023B6  D002               	bra	u3075
  5190  0023B8  9089               	bcf	3977,0,c	;volatile
  5191  0023BA  D001               	bra	u3076
  5192  0023BC                     u3075:
  5193  0023BC  8089               	bsf	3977,0,c	;volatile
  5194  0023BE                     u3076:
  5195  0023BE  0012               	return	
  5196  0023C0                     l210:
  5197  0023C0  B003               	btfsc	digitalWrite@mode,0,c
  5198  0023C2  D002               	bra	u3085
  5199  0023C4  9289               	bcf	3977,1,c	;volatile
  5200  0023C6  D001               	bra	u3086
  5201  0023C8                     u3085:
  5202  0023C8  8289               	bsf	3977,1,c	;volatile
  5203  0023CA                     u3086:
  5204  0023CA  0012               	return	
  5205  0023CC                     l211:
  5206  0023CC  B003               	btfsc	digitalWrite@mode,0,c
  5207  0023CE  D002               	bra	u3095
  5208  0023D0  9489               	bcf	3977,2,c	;volatile
  5209  0023D2  D001               	bra	u3096
  5210  0023D4                     u3095:
  5211  0023D4  8489               	bsf	3977,2,c	;volatile
  5212  0023D6                     u3096:
  5213  0023D6  0012               	return	
  5214  0023D8                     l212:
  5215  0023D8  B003               	btfsc	digitalWrite@mode,0,c
  5216  0023DA  D002               	bra	u3105
  5217  0023DC  9689               	bcf	3977,3,c	;volatile
  5218  0023DE  D001               	bra	u3106
  5219  0023E0                     u3105:
  5220  0023E0  8689               	bsf	3977,3,c	;volatile
  5221  0023E2                     u3106:
  5222  0023E2  0012               	return	
  5223  0023E4                     l213:
  5224  0023E4  B003               	btfsc	digitalWrite@mode,0,c
  5225  0023E6  D002               	bra	u3115
  5226  0023E8  9889               	bcf	3977,4,c	;volatile
  5227  0023EA  D001               	bra	u3116
  5228  0023EC                     u3115:
  5229  0023EC  8889               	bsf	3977,4,c	;volatile
  5230  0023EE                     u3116:
  5231  0023EE  0012               	return	
  5232  0023F0                     l214:
  5233  0023F0  B003               	btfsc	digitalWrite@mode,0,c
  5234  0023F2  D002               	bra	u3125
  5235  0023F4  9A89               	bcf	3977,5,c	;volatile
  5236  0023F6  D001               	bra	u3126
  5237  0023F8                     u3125:
  5238  0023F8  8A89               	bsf	3977,5,c	;volatile
  5239  0023FA                     u3126:
  5240  0023FA  0012               	return	
  5241  0023FC                     l215:
  5242  0023FC  B003               	btfsc	digitalWrite@mode,0,c
  5243  0023FE  D002               	bra	u3135
  5244  002400  908D               	bcf	3981,0,c	;volatile
  5245  002402  D001               	bra	u3136
  5246  002404                     u3135:
  5247  002404  808D               	bsf	3981,0,c	;volatile
  5248  002406                     u3136:
  5249  002406  0012               	return	
  5250  002408                     l216:
  5251  002408  B003               	btfsc	digitalWrite@mode,0,c
  5252  00240A  D002               	bra	u3145
  5253  00240C  928D               	bcf	3981,1,c	;volatile
  5254  00240E  D001               	bra	u3146
  5255  002410                     u3145:
  5256  002410  828D               	bsf	3981,1,c	;volatile
  5257  002412                     u3146:
  5258  002412  0012               	return	
  5259  002414                     l217:
  5260  002414  B003               	btfsc	digitalWrite@mode,0,c
  5261  002416  D002               	bra	u3155
  5262  002418  948D               	bcf	3981,2,c	;volatile
  5263  00241A  D001               	bra	u3156
  5264  00241C                     u3155:
  5265  00241C  848D               	bsf	3981,2,c	;volatile
  5266  00241E                     u3156:
  5267  00241E  0012               	return	
  5268  002420                     l218:
  5269  002420  B003               	btfsc	digitalWrite@mode,0,c
  5270  002422  D002               	bra	u3165
  5271  002424  9E89               	bcf	3977,7,c	;volatile
  5272  002426  D001               	bra	u3166
  5273  002428                     u3165:
  5274  002428  8E89               	bsf	3977,7,c	;volatile
  5275  00242A                     u3166:
  5276  00242A  0012               	return	
  5277  00242C                     l219:
  5278  00242C  B003               	btfsc	digitalWrite@mode,0,c
  5279  00242E  D002               	bra	u3175
  5280  002430  9C89               	bcf	3977,6,c	;volatile
  5281  002432  D001               	bra	u3176
  5282  002434                     u3175:
  5283  002434  8C89               	bsf	3977,6,c	;volatile
  5284  002436                     u3176:
  5285  002436  0012               	return	
  5286  002438                     l220:
  5287  002438  B003               	btfsc	digitalWrite@mode,0,c
  5288  00243A  D002               	bra	u3185
  5289  00243C  908B               	bcf	3979,0,c	;volatile
  5290  00243E  D001               	bra	u3186
  5291  002440                     u3185:
  5292  002440  808B               	bsf	3979,0,c	;volatile
  5293  002442                     u3186:
  5294  002442  0012               	return	
  5295  002444                     l221:
  5296  002444  B003               	btfsc	digitalWrite@mode,0,c
  5297  002446  D002               	bra	u3195
  5298  002448  928B               	bcf	3979,1,c	;volatile
  5299  00244A  D001               	bra	u3196
  5300  00244C                     u3195:
  5301  00244C  828B               	bsf	3979,1,c	;volatile
  5302  00244E                     u3196:
  5303  00244E  0012               	return	
  5304  002450                     l222:
  5305  002450  B003               	btfsc	digitalWrite@mode,0,c
  5306  002452  D002               	bra	u3205
  5307  002454  948B               	bcf	3979,2,c	;volatile
  5308  002456  D001               	bra	u3206
  5309  002458                     u3205:
  5310  002458  848B               	bsf	3979,2,c	;volatile
  5311  00245A                     u3206:
  5312  00245A  0012               	return	
  5313  00245C                     l223:
  5314  00245C  B003               	btfsc	digitalWrite@mode,0,c
  5315  00245E  D002               	bra	u3215
  5316  002460  968B               	bcf	3979,3,c	;volatile
  5317  002462  D001               	bra	u3216
  5318  002464                     u3215:
  5319  002464  868B               	bsf	3979,3,c	;volatile
  5320  002466                     u3216:
  5321  002466  0012               	return	
  5322  002468                     l224:
  5323  002468  B003               	btfsc	digitalWrite@mode,0,c
  5324  00246A  D002               	bra	u3225
  5325  00246C  908C               	bcf	3980,0,c	;volatile
  5326  00246E  D001               	bra	u3226
  5327  002470                     u3225:
  5328  002470  808C               	bsf	3980,0,c	;volatile
  5329  002472                     u3226:
  5330  002472  0012               	return	
  5331  002474                     l225:
  5332  002474  B003               	btfsc	digitalWrite@mode,0,c
  5333  002476  D002               	bra	u3235
  5334  002478  928C               	bcf	3980,1,c	;volatile
  5335  00247A  D001               	bra	u3236
  5336  00247C                     u3235:
  5337  00247C  828C               	bsf	3980,1,c	;volatile
  5338  00247E                     u3236:
  5339  00247E  0012               	return	
  5340  002480                     l226:
  5341  002480  B003               	btfsc	digitalWrite@mode,0,c
  5342  002482  D002               	bra	u3245
  5343  002484  948C               	bcf	3980,2,c	;volatile
  5344  002486  D001               	bra	u3246
  5345  002488                     u3245:
  5346  002488  848C               	bsf	3980,2,c	;volatile
  5347  00248A                     u3246:
  5348  00248A  0012               	return	
  5349  00248C                     l227:
  5350  00248C  B003               	btfsc	digitalWrite@mode,0,c
  5351  00248E  D002               	bra	u3255
  5352  002490  968C               	bcf	3980,3,c	;volatile
  5353  002492  D001               	bra	u3256
  5354  002494                     u3255:
  5355  002494  868C               	bsf	3980,3,c	;volatile
  5356  002496                     u3256:
  5357  002496  0012               	return	
  5358  002498                     l228:
  5359  002498  B003               	btfsc	digitalWrite@mode,0,c
  5360  00249A  D002               	bra	u3265
  5361  00249C  988B               	bcf	3979,4,c	;volatile
  5362  00249E  D001               	bra	u3266
  5363  0024A0                     u3265:
  5364  0024A0  888B               	bsf	3979,4,c	;volatile
  5365  0024A2                     u3266:
  5366  0024A2  0012               	return	
  5367  0024A4                     l229:
  5368  0024A4  B003               	btfsc	digitalWrite@mode,0,c
  5369  0024A6  D002               	bra	u3275
  5370  0024A8  9A8B               	bcf	3979,5,c	;volatile
  5371  0024AA  D001               	bra	u3276
  5372  0024AC                     u3275:
  5373  0024AC  8A8B               	bsf	3979,5,c	;volatile
  5374  0024AE                     u3276:
  5375  0024AE  0012               	return	
  5376  0024B0                     l230:
  5377  0024B0  B003               	btfsc	digitalWrite@mode,0,c
  5378  0024B2  D002               	bra	u3285
  5379  0024B4  9C8B               	bcf	3979,6,c	;volatile
  5380  0024B6  D001               	bra	u3286
  5381  0024B8                     u3285:
  5382  0024B8  8C8B               	bsf	3979,6,c	;volatile
  5383  0024BA                     u3286:
  5384  0024BA  0012               	return	
  5385  0024BC                     l231:
  5386  0024BC  B003               	btfsc	digitalWrite@mode,0,c
  5387  0024BE  D002               	bra	u3295
  5388  0024C0  9E8B               	bcf	3979,7,c	;volatile
  5389  0024C2  D001               	bra	u3296
  5390  0024C4                     u3295:
  5391  0024C4  8E8B               	bsf	3979,7,c	;volatile
  5392  0024C6                     u3296:
  5393  0024C6  0012               	return	
  5394  0024C8                     l232:
  5395  0024C8  B003               	btfsc	digitalWrite@mode,0,c
  5396  0024CA  D002               	bra	u3305
  5397  0024CC  988C               	bcf	3980,4,c	;volatile
  5398  0024CE  D001               	bra	u3306
  5399  0024D0                     u3305:
  5400  0024D0  888C               	bsf	3980,4,c	;volatile
  5401  0024D2                     u3306:
  5402  0024D2  0012               	return	
  5403  0024D4                     l233:
  5404  0024D4  B003               	btfsc	digitalWrite@mode,0,c
  5405  0024D6  D002               	bra	u3315
  5406  0024D8  9A8C               	bcf	3980,5,c	;volatile
  5407  0024DA  D001               	bra	u3316
  5408  0024DC                     u3315:
  5409  0024DC  8A8C               	bsf	3980,5,c	;volatile
  5410  0024DE                     u3316:
  5411  0024DE  0012               	return	
  5412  0024E0                     l234:
  5413  0024E0  B003               	btfsc	digitalWrite@mode,0,c
  5414  0024E2  D002               	bra	u3325
  5415  0024E4  9C8C               	bcf	3980,6,c	;volatile
  5416  0024E6  D001               	bra	u3326
  5417  0024E8                     u3325:
  5418  0024E8  8C8C               	bsf	3980,6,c	;volatile
  5419  0024EA                     u3326:
  5420  0024EA  0012               	return	
  5421  0024EC                     l235:
  5422  0024EC  B003               	btfsc	digitalWrite@mode,0,c
  5423  0024EE  D002               	bra	u3335
  5424  0024F0  9E8C               	bcf	3980,7,c	;volatile
  5425  0024F2  D001               	bra	u3336
  5426  0024F4                     u3335:
  5427  0024F4  8E8C               	bsf	3980,7,c	;volatile
  5428  0024F6                     u3336:
  5429  0024F6  0012               	return	
  5430  0024F8                     l236:
  5431  0024F8  B003               	btfsc	digitalWrite@mode,0,c
  5432  0024FA  D002               	bra	u3345
  5433  0024FC  908A               	bcf	3978,0,c	;volatile
  5434  0024FE  D001               	bra	u3346
  5435  002500                     u3345:
  5436  002500  808A               	bsf	3978,0,c	;volatile
  5437  002502                     u3346:
  5438  002502  0012               	return	
  5439  002504                     l237:
  5440  002504  B003               	btfsc	digitalWrite@mode,0,c
  5441  002506  D002               	bra	u3355
  5442  002508  928A               	bcf	3978,1,c	;volatile
  5443  00250A  D001               	bra	u3356
  5444  00250C                     u3355:
  5445  00250C  828A               	bsf	3978,1,c	;volatile
  5446  00250E                     u3356:
  5447  00250E  0012               	return	
  5448  002510                     l238:
  5449  002510  B003               	btfsc	digitalWrite@mode,0,c
  5450  002512  D002               	bra	u3365
  5451  002514  948A               	bcf	3978,2,c	;volatile
  5452  002516  D001               	bra	u3366
  5453  002518                     u3365:
  5454  002518  848A               	bsf	3978,2,c	;volatile
  5455  00251A                     u3366:
  5456  00251A  0012               	return	
  5457  00251C                     l239:
  5458  00251C  B003               	btfsc	digitalWrite@mode,0,c
  5459  00251E  D002               	bra	u3375
  5460  002520  968A               	bcf	3978,3,c	;volatile
  5461  002522  D001               	bra	u3376
  5462  002524                     u3375:
  5463  002524  868A               	bsf	3978,3,c	;volatile
  5464  002526                     u3376:
  5465  002526  0012               	return	
  5466  002528                     l240:
  5467  002528  B003               	btfsc	digitalWrite@mode,0,c
  5468  00252A  D002               	bra	u3385
  5469  00252C  988A               	bcf	3978,4,c	;volatile
  5470  00252E  D001               	bra	u3386
  5471  002530                     u3385:
  5472  002530  888A               	bsf	3978,4,c	;volatile
  5473  002532                     u3386:
  5474  002532  0012               	return	
  5475  002534                     l241:
  5476  002534  B003               	btfsc	digitalWrite@mode,0,c
  5477  002536  D002               	bra	u3395
  5478  002538  9A8A               	bcf	3978,5,c	;volatile
  5479  00253A  D001               	bra	u3396
  5480  00253C                     u3395:
  5481  00253C  8A8A               	bsf	3978,5,c	;volatile
  5482  00253E                     u3396:
  5483  00253E  0012               	return	
  5484  002540                     l242:
  5485  002540  B003               	btfsc	digitalWrite@mode,0,c
  5486  002542  D002               	bra	u3405
  5487  002544  9C8A               	bcf	3978,6,c	;volatile
  5488  002546  D001               	bra	u3406
  5489  002548                     u3405:
  5490  002548  8C8A               	bsf	3978,6,c	;volatile
  5491  00254A                     u3406:
  5492  00254A  0012               	return	
  5493  00254C                     l243:
  5494  00254C  B003               	btfsc	digitalWrite@mode,0,c
  5495  00254E  D002               	bra	u3415
  5496  002550  9E8A               	bcf	3978,7,c	;volatile
  5497  002552  D001               	bra	u3416
  5498  002554                     u3415:
  5499  002554  8E8A               	bsf	3978,7,c	;volatile
  5500  002556                     u3416:
  5501                           
  5502                           ;spi.c: 113: }
  5503                           
  5504                           ;spi.c: 112: default: break;
  5505  002556  0012               	return	
  5506  002558                     l3427:
  5507  002558  5005               	movf	digitalWrite@pin,w,c
  5508                           
  5509                           ; Switch size 1, requested type "space"
  5510                           ; Number of cases is 35, Range of values is 2 to 40
  5511                           ; switch strategies available:
  5512                           ; Name         Instructions Cycles
  5513                           ; simple_byte          106    54 (average)
  5514                           ;	Chosen strategy is simple_byte
  5515  00255A  0A02               	xorlw	2	; case 2
  5516  00255C  B4D8               	btfsc	status,2,c
  5517  00255E  D72A               	goto	l208
  5518  002560  0A01               	xorlw	1	; case 3
  5519  002562  B4D8               	btfsc	status,2,c
  5520  002564  D72D               	goto	l210
  5521  002566  0A07               	xorlw	7	; case 4
  5522  002568  B4D8               	btfsc	status,2,c
  5523  00256A  D730               	goto	l211
  5524  00256C  0A01               	xorlw	1	; case 5
  5525  00256E  B4D8               	btfsc	status,2,c
  5526  002570  D733               	goto	l212
  5527  002572  0A03               	xorlw	3	; case 6
  5528  002574  B4D8               	btfsc	status,2,c
  5529  002576  D736               	goto	l213
  5530  002578  0A01               	xorlw	1	; case 7
  5531  00257A  B4D8               	btfsc	status,2,c
  5532  00257C  D739               	goto	l214
  5533  00257E  0A0F               	xorlw	15	; case 8
  5534  002580  B4D8               	btfsc	status,2,c
  5535  002582  D73C               	goto	l215
  5536  002584  0A01               	xorlw	1	; case 9
  5537  002586  B4D8               	btfsc	status,2,c
  5538  002588  D73F               	goto	l216
  5539  00258A  0A03               	xorlw	3	; case 10
  5540  00258C  B4D8               	btfsc	status,2,c
  5541  00258E  D742               	goto	l217
  5542  002590  0A07               	xorlw	7	; case 13
  5543  002592  B4D8               	btfsc	status,2,c
  5544  002594  D745               	goto	l218
  5545  002596  0A03               	xorlw	3	; case 14
  5546  002598  B4D8               	btfsc	status,2,c
  5547  00259A  D748               	goto	l219
  5548  00259C  0A01               	xorlw	1	; case 15
  5549  00259E  B4D8               	btfsc	status,2,c
  5550  0025A0  D74B               	goto	l220
  5551  0025A2  0A1F               	xorlw	31	; case 16
  5552  0025A4  B4D8               	btfsc	status,2,c
  5553  0025A6  D74E               	goto	l221
  5554  0025A8  0A01               	xorlw	1	; case 17
  5555  0025AA  B4D8               	btfsc	status,2,c
  5556  0025AC  D751               	goto	l222
  5557  0025AE  0A03               	xorlw	3	; case 18
  5558  0025B0  B4D8               	btfsc	status,2,c
  5559  0025B2  D754               	goto	l223
  5560  0025B4  0A01               	xorlw	1	; case 19
  5561  0025B6  B4D8               	btfsc	status,2,c
  5562  0025B8  D757               	goto	l224
  5563  0025BA  0A07               	xorlw	7	; case 20
  5564  0025BC  B4D8               	btfsc	status,2,c
  5565  0025BE  D75A               	goto	l225
  5566  0025C0  0A01               	xorlw	1	; case 21
  5567  0025C2  B4D8               	btfsc	status,2,c
  5568  0025C4  D75D               	goto	l226
  5569  0025C6  0A03               	xorlw	3	; case 22
  5570  0025C8  B4D8               	btfsc	status,2,c
  5571  0025CA  D760               	goto	l227
  5572  0025CC  0A01               	xorlw	1	; case 23
  5573  0025CE  B4D8               	btfsc	status,2,c
  5574  0025D0  D763               	goto	l228
  5575  0025D2  0A0F               	xorlw	15	; case 24
  5576  0025D4  B4D8               	btfsc	status,2,c
  5577  0025D6  D766               	goto	l229
  5578  0025D8  0A01               	xorlw	1	; case 25
  5579  0025DA  B4D8               	btfsc	status,2,c
  5580  0025DC  D769               	goto	l230
  5581  0025DE  0A03               	xorlw	3	; case 26
  5582  0025E0  B4D8               	btfsc	status,2,c
  5583  0025E2  D76C               	goto	l231
  5584  0025E4  0A01               	xorlw	1	; case 27
  5585  0025E6  B4D8               	btfsc	status,2,c
  5586  0025E8  D76F               	goto	l232
  5587  0025EA  0A07               	xorlw	7	; case 28
  5588  0025EC  B4D8               	btfsc	status,2,c
  5589  0025EE  D772               	goto	l233
  5590  0025F0  0A01               	xorlw	1	; case 29
  5591  0025F2  B4D8               	btfsc	status,2,c
  5592  0025F4  D775               	goto	l234
  5593  0025F6  0A03               	xorlw	3	; case 30
  5594  0025F8  B4D8               	btfsc	status,2,c
  5595  0025FA  D778               	goto	l235
  5596  0025FC  0A3F               	xorlw	63	; case 33
  5597  0025FE  B4D8               	btfsc	status,2,c
  5598  002600  D77B               	goto	l236
  5599  002602  0A03               	xorlw	3	; case 34
  5600  002604  B4D8               	btfsc	status,2,c
  5601  002606  D77E               	goto	l237
  5602  002608  0A01               	xorlw	1	; case 35
  5603  00260A  B4D8               	btfsc	status,2,c
  5604  00260C  D781               	goto	l238
  5605  00260E  0A07               	xorlw	7	; case 36
  5606  002610  B4D8               	btfsc	status,2,c
  5607  002612  D784               	goto	l239
  5608  002614  0A01               	xorlw	1	; case 37
  5609  002616  B4D8               	btfsc	status,2,c
  5610  002618  D787               	goto	l240
  5611  00261A  0A03               	xorlw	3	; case 38
  5612  00261C  B4D8               	btfsc	status,2,c
  5613  00261E  D78A               	goto	l241
  5614  002620  0A01               	xorlw	1	; case 39
  5615  002622  B4D8               	btfsc	status,2,c
  5616  002624  D78D               	goto	l242
  5617  002626  0A0F               	xorlw	15	; case 40
  5618  002628  A4D8               	btfss	status,2,c
  5619  00262A  0012               	return	
  5620  00262C  D78F               	goto	l243
  5621  00262E                     __end_of_digitalWrite:
  5622                           	opt stack 0
  5623                           tblptru	equ	0xFF8
  5624                           tblptrh	equ	0xFF7
  5625                           tblptrl	equ	0xFF6
  5626                           tablat	equ	0xFF5
  5627                           prodh	equ	0xFF4
  5628                           prodl	equ	0xFF3
  5629                           intcon	equ	0xFF2
  5630                           indf0	equ	0xFEF
  5631                           postinc0	equ	0xFEE
  5632                           postdec0	equ	0xFED
  5633                           fsr0h	equ	0xFEA
  5634                           fsr0l	equ	0xFE9
  5635                           wreg	equ	0xFE8
  5636                           postinc1	equ	0xFE6
  5637                           indf2	equ	0xFDF
  5638                           postinc2	equ	0xFDE
  5639                           postdec2	equ	0xFDD
  5640                           fsr2h	equ	0xFDA
  5641                           fsr2l	equ	0xFD9
  5642                           status	equ	0xFD8
  5643                           
  5644 ;; *************** function _RF24N_available *****************
  5645 ;; Defined at:
  5646 ;;		line 679 in file "../../RF24Network_c.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;		None
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;		None
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  1    wreg      unsigned char 
  5653 ;; Registers used:
  5654 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;Total ram usage:        2 bytes
  5665 ;; Hardware stack levels used:    1
  5666 ;; Hardware stack levels required when called:    1
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_RF24N_update
  5671 ;;		_RF24N_peek
  5672 ;;		_RF24N_read
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           	psect	text28
  5677  003A5E                     __ptext28:
  5678                           	opt stack 0
  5679  003A5E                     _RF24N_available:
  5680                           	opt stack 25
  5681                           
  5682                           ;RF24Network_c.c: 685: return (rn.next_frame > rn.frame_queue);
  5683                           
  5684                           ;incstack = 0
  5685  003A5E  EE21  F0A9         	lfsr	2,_rn+212
  5686  003A62  CFDE F003          	movff	postinc2,??_RF24N_available
  5687  003A66  CFDD F004          	movff	postdec2,??_RF24N_available+1
  5688  003A6A  5004               	movf	??_RF24N_available+1,w,c
  5689  003A6C  0801               	sublw	high (_rn+58)
  5690  003A6E  E102               	bnz	u4005
  5691  003A70  5003               	movf	??_RF24N_available,w,c
  5692  003A72  080F               	sublw	low (_rn+58)
  5693  003A74                     u4005:
  5694  003A74  B0D8               	btfsc	status,0,c
  5695  003A76  D002               	goto	u4000
  5696  003A78  0E01               	movlw	1
  5697  003A7A  0012               	return	
  5698  003A7C                     u4000:
  5699  003A7C  0E00               	movlw	0
  5700  003A7E  0012               	return	
  5701  003A80                     __end_of_RF24N_available:
  5702                           	opt stack 0
  5703                           tblptru	equ	0xFF8
  5704                           tblptrh	equ	0xFF7
  5705                           tblptrl	equ	0xFF6
  5706                           tablat	equ	0xFF5
  5707                           prodh	equ	0xFF4
  5708                           prodl	equ	0xFF3
  5709                           intcon	equ	0xFF2
  5710                           indf0	equ	0xFEF
  5711                           postinc0	equ	0xFEE
  5712                           postdec0	equ	0xFED
  5713                           fsr0h	equ	0xFEA
  5714                           fsr0l	equ	0xFE9
  5715                           wreg	equ	0xFE8
  5716                           postinc1	equ	0xFE6
  5717                           indf2	equ	0xFDF
  5718                           postinc2	equ	0xFDE
  5719                           postdec2	equ	0xFDD
  5720                           fsr2h	equ	0xFDA
  5721                           fsr2l	equ	0xFD9
  5722                           status	equ	0xFD8
  5723                           
  5724 ;; *************** function _RF24_getDynamicPayloadSize *****************
  5725 ;; Defined at:
  5726 ;;		line 1067 in file "../../../RF24_c/RF24_c.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;		None
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;  result          1   16[COMRAM] unsigned char 
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  1    wreg      unsigned char 
  5733 ;; Registers used:
  5734 ;;		wreg, status,2, status,0, cstack
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5741 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5743 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;Total ram usage:        2 bytes
  5745 ;; Hardware stack levels used:    1
  5746 ;; Hardware stack levels required when called:    6
  5747 ;; This function calls:
  5748 ;;		_RF24_beginTransaction
  5749 ;;		_RF24_endTransaction
  5750 ;;		_RF24_flush_rx
  5751 ;;		_SPI_transfer
  5752 ;;		_delay
  5753 ;; This function is called by:
  5754 ;;		_RF24N_update
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           	psect	text29
  5759  0037AE                     __ptext29:
  5760                           	opt stack 0
  5761  0037AE                     _RF24_getDynamicPayloadSize:
  5762                           	opt stack 20
  5763                           
  5764                           ;RF24_c.c: 1069: uint8_t result = 0;
  5765                           
  5766                           ;incstack = 0
  5767  0037AE  0E00               	movlw	0
  5768  0037B0  6E11               	movwf	RF24_getDynamicPayloadSize@result,c
  5769                           
  5770                           ;RF24_c.c: 1079: RF24_beginTransaction();
  5771  0037B2  ECEE  F01D         	call	_RF24_beginTransaction	;wreg free
  5772                           
  5773                           ;RF24_c.c: 1080: SPI_transfer( 0x60 );
  5774  0037B6  0E60               	movlw	96
  5775  0037B8  ECCE  F01D         	call	_SPI_transfer
  5776                           
  5777                           ;RF24_c.c: 1081: result = SPI_transfer(0xff);
  5778  0037BC  0EFF               	movlw	255
  5779  0037BE  ECCE  F01D         	call	_SPI_transfer
  5780  0037C2  6E11               	movwf	RF24_getDynamicPayloadSize@result,c
  5781                           
  5782                           ;RF24_c.c: 1082: RF24_endTransaction();
  5783  0037C4  ECEA  F01D         	call	_RF24_endTransaction	;wreg free
  5784                           
  5785                           ;RF24_c.c: 1085: if(result > 32) { RF24_flush_rx();; delay(2); return 0; }
  5786  0037C8  0E20               	movlw	32
  5787  0037CA  6411               	cpfsgt	RF24_getDynamicPayloadSize@result,c
  5788  0037CC  D00A               	goto	l3851
  5789  0037CE  ECE2  F01D         	call	_RF24_flush_rx	;wreg free
  5790  0037D2  0E00               	movlw	0
  5791  0037D4  6E04               	movwf	delay@val+1,c
  5792  0037D6  0E02               	movlw	2
  5793  0037D8  6E03               	movwf	delay@val,c
  5794  0037DA  ECD4  F01A         	call	_delay	;wreg free
  5795  0037DE  0E00               	movlw	0
  5796  0037E0  0012               	return	
  5797  0037E2                     l3851:
  5798                           
  5799                           ;RF24_c.c: 1086: return result;
  5800  0037E2  5011               	movf	RF24_getDynamicPayloadSize@result,w,c
  5801  0037E4  0012               	return	
  5802  0037E6                     __end_of_RF24_getDynamicPayloadSize:
  5803                           	opt stack 0
  5804                           tblptru	equ	0xFF8
  5805                           tblptrh	equ	0xFF7
  5806                           tblptrl	equ	0xFF6
  5807                           tablat	equ	0xFF5
  5808                           prodh	equ	0xFF4
  5809                           prodl	equ	0xFF3
  5810                           intcon	equ	0xFF2
  5811                           indf0	equ	0xFEF
  5812                           postinc0	equ	0xFEE
  5813                           postdec0	equ	0xFED
  5814                           fsr0h	equ	0xFEA
  5815                           fsr0l	equ	0xFE9
  5816                           wreg	equ	0xFE8
  5817                           postinc1	equ	0xFE6
  5818                           indf2	equ	0xFDF
  5819                           postinc2	equ	0xFDE
  5820                           postdec2	equ	0xFDD
  5821                           fsr2h	equ	0xFDA
  5822                           fsr2l	equ	0xFD9
  5823                           status	equ	0xFD8
  5824                           
  5825 ;; *************** function _RF24_flush_rx *****************
  5826 ;; Defined at:
  5827 ;;		line 341 in file "../../../RF24_c/RF24_c.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;		None
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;		None
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  1    wreg      unsigned char 
  5834 ;; Registers used:
  5835 ;;		wreg, status,2, status,0, cstack
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5845 ;;Total ram usage:        0 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; Hardware stack levels required when called:    5
  5848 ;; This function calls:
  5849 ;;		_RF24_spiTrans
  5850 ;; This function is called by:
  5851 ;;		_RF24_begin
  5852 ;;		_RF24_getDynamicPayloadSize
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text30
  5857  003BC4                     __ptext30:
  5858                           	opt stack 0
  5859  003BC4                     _RF24_flush_rx:
  5860                           	opt stack 23
  5861                           
  5862                           ;RF24_c.c: 343: return RF24_spiTrans( 0xE2 );
  5863                           ;	Return value of _RF24_flush_rx is never used
  5864                           
  5865                           ;incstack = 0
  5866  003BC4  0EE2               	movlw	226
  5867  003BC6  ECBA  F01D         	call	_RF24_spiTrans
  5868  003BCA  0012               	return	
  5869  003BCC                     __end_of_RF24_flush_rx:
  5870                           	opt stack 0
  5871                           tblptru	equ	0xFF8
  5872                           tblptrh	equ	0xFF7
  5873                           tblptrl	equ	0xFF6
  5874                           tablat	equ	0xFF5
  5875                           prodh	equ	0xFF4
  5876                           prodl	equ	0xFF3
  5877                           intcon	equ	0xFF2
  5878                           indf0	equ	0xFEF
  5879                           postinc0	equ	0xFEE
  5880                           postdec0	equ	0xFED
  5881                           fsr0h	equ	0xFEA
  5882                           fsr0l	equ	0xFE9
  5883                           wreg	equ	0xFE8
  5884                           postinc1	equ	0xFE6
  5885                           indf2	equ	0xFDF
  5886                           postinc2	equ	0xFDE
  5887                           postdec2	equ	0xFDD
  5888                           fsr2h	equ	0xFDA
  5889                           fsr2l	equ	0xFD9
  5890                           status	equ	0xFD8
  5891                           
  5892 ;; *************** function _RF24_read *****************
  5893 ;; Defined at:
  5894 ;;		line 1118 in file "../../../RF24_c/RF24_c.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  buf             2   28[COMRAM] PTR void 
  5897 ;;		 -> rn(370), 
  5898 ;;  len             1   30[COMRAM] unsigned char 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      void 
  5903 ;; Registers used:
  5904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5910 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;Total ram usage:        3 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; Hardware stack levels required when called:    5
  5917 ;; This function calls:
  5918 ;;		_RF24_read_payload
  5919 ;;		_RF24_write_register_d
  5920 ;; This function is called by:
  5921 ;;		_RF24N_update
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text31
  5926  003ABE                     __ptext31:
  5927                           	opt stack 0
  5928  003ABE                     _RF24_read:
  5929                           	opt stack 21
  5930                           
  5931                           ;RF24_c.c: 1121: RF24_read_payload( buf, len );
  5932                           
  5933                           ;incstack = 0
  5934  003ABE  C01D  F00C         	movff	RF24_read@buf,RF24_read_payload@buf
  5935  003AC2  C01E  F00D         	movff	RF24_read@buf+1,RF24_read_payload@buf+1
  5936  003AC6  C01F  F00E         	movff	RF24_read@len,RF24_read_payload@data_len
  5937  003ACA  ECED  F017         	call	_RF24_read_payload	;wreg free
  5938                           
  5939                           ;RF24_c.c: 1124: RF24_write_register_d(0x07,(1<<(6)) | (1<<(4)) | (1<<(5)) );
  5940  003ACE  0E70               	movlw	112
  5941  003AD0  6E0E               	movwf	RF24_write_register_d@value,c
  5942  003AD2  0E07               	movlw	7
  5943  003AD4  EC40  F01D         	call	_RF24_write_register_d
  5944  003AD8  0012               	return		;funcret
  5945  003ADA                     __end_of_RF24_read:
  5946                           	opt stack 0
  5947                           tblptru	equ	0xFF8
  5948                           tblptrh	equ	0xFF7
  5949                           tblptrl	equ	0xFF6
  5950                           tablat	equ	0xFF5
  5951                           prodh	equ	0xFF4
  5952                           prodl	equ	0xFF3
  5953                           intcon	equ	0xFF2
  5954                           indf0	equ	0xFEF
  5955                           postinc0	equ	0xFEE
  5956                           postdec0	equ	0xFED
  5957                           fsr0h	equ	0xFEA
  5958                           fsr0l	equ	0xFE9
  5959                           wreg	equ	0xFE8
  5960                           postinc1	equ	0xFE6
  5961                           indf2	equ	0xFDF
  5962                           postinc2	equ	0xFDE
  5963                           postdec2	equ	0xFDD
  5964                           fsr2h	equ	0xFDA
  5965                           fsr2l	equ	0xFD9
  5966                           status	equ	0xFD8
  5967                           
  5968 ;; *************** function _RF24_read_payload *****************
  5969 ;; Defined at:
  5970 ;;		line 272 in file "../../../RF24_c/RF24_c.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  buf             2   11[COMRAM] PTR void 
  5973 ;;		 -> rn(370), 
  5974 ;;  data_len        1   13[COMRAM] unsigned char 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;  current         2   23[COMRAM] PTR unsigned char 
  5977 ;;		 -> rn(370), 
  5978 ;;  blank_len       1   27[COMRAM] unsigned char 
  5979 ;;  status          1   22[COMRAM] unsigned char 
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  1    wreg      unsigned char 
  5982 ;; Registers used:
  5983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5989 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;Total ram usage:       17 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; Hardware stack levels required when called:    4
  5996 ;; This function calls:
  5997 ;;		_RF24_beginTransaction
  5998 ;;		_RF24_endTransaction
  5999 ;;		_SPI_transfer
  6000 ;; This function is called by:
  6001 ;;		_RF24_read
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text32
  6006  002FDA                     __ptext32:
  6007                           	opt stack 0
  6008  002FDA                     _RF24_read_payload:
  6009                           	opt stack 21
  6010                           
  6011                           ;RF24_c.c: 274: uint8_t status;
  6012                           ;RF24_c.c: 275: uint8_t* current = (uint8_t*)(buf);
  6013                           
  6014                           ;incstack = 0
  6015  002FDA  C00C  F018         	movff	RF24_read_payload@buf,RF24_read_payload@current
  6016  002FDE  C00D  F019         	movff	RF24_read_payload@buf+1,RF24_read_payload@current+1
  6017                           
  6018                           ;RF24_c.c: 276: uint8_t blank_len;
  6019                           ;RF24_c.c: 278: if(data_len > rf.payload_size) data_len = rf.payload_size;
  6020  002FE2  500E               	movf	RF24_read_payload@data_len,w,c
  6021  002FE4  0100               	movlb	0	; () banked
  6022  002FE6  5D91               	subwf	(_rf+5)& (0+255),w,b
  6023  002FE8  A0D8               	btfss	status,0,c
  6024                           
  6025                           ; BSR set to: 0
  6026  002FEA  C091  F00E         	movff	_rf+5,RF24_read_payload@data_len
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;RF24_c.c: 279: blank_len = rf.dynamic_payloads_enabled ? 0 : rf.payload_size - data_len
      +                          ;
  6030                           
  6031                           ; BSR set to: 0
  6032  002FEE  0100               	movlb	0	; () banked
  6033  002FF0  5192               	movf	(_rf+6)& (0+255),w,b
  6034  002FF2  A4D8               	btfss	status,2,c
  6035  002FF4  D00F               	goto	l3757
  6036                           
  6037                           ; BSR set to: 0
  6038  002FF6  500E               	movf	RF24_read_payload@data_len,w,c
  6039  002FF8  6E0F               	movwf	??_RF24_read_payload& (0+255),c
  6040  002FFA  6A10               	clrf	(??_RF24_read_payload+1)& (0+255),c
  6041  002FFC  1E0F               	comf	??_RF24_read_payload,f,c
  6042  002FFE  1E10               	comf	??_RF24_read_payload+1,f,c
  6043  003000  4A0F               	infsnz	??_RF24_read_payload,f,c
  6044  003002  2A10               	incf	??_RF24_read_payload+1,f,c
  6045  003004  0100               	movlb	0	; () banked
  6046  003006  5191               	movf	(_rf+5)& (0+255),w,b
  6047  003008  240F               	addwf	??_RF24_read_payload,w,c
  6048  00300A  6E1A               	movwf	_RF24_read_payload$2327,c
  6049  00300C  0E00               	movlw	0
  6050  00300E  2010               	addwfc	??_RF24_read_payload+1,w,c
  6051  003010  6E1B               	movwf	_RF24_read_payload$2327+1,c
  6052  003012  D004               	goto	l3759
  6053  003014                     l3757:
  6054                           
  6055                           ; BSR set to: 0
  6056  003014  0E00               	movlw	0
  6057  003016  6E1B               	movwf	_RF24_read_payload$2327+1,c
  6058  003018  0E00               	movlw	0
  6059  00301A  6E1A               	movwf	_RF24_read_payload$2327,c
  6060  00301C                     l3759:
  6061                           
  6062                           ; BSR set to: 0
  6063  00301C  C01A  F01C         	movff	_RF24_read_payload$2327,RF24_read_payload@blank_len
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;RF24_c.c: 283: ;
  6067                           ;RF24_c.c: 311: RF24_beginTransaction();
  6068  003020  ECEE  F01D         	call	_RF24_beginTransaction	;wreg free
  6069                           
  6070                           ;RF24_c.c: 312: status = SPI_transfer( 0x61 );
  6071  003024  0E61               	movlw	97
  6072  003026  ECCE  F01D         	call	_SPI_transfer
  6073  00302A  6E17               	movwf	RF24_read_payload@status,c
  6074                           
  6075                           ;RF24_c.c: 313: while ( data_len-- ) {
  6076  00302C  D00A               	goto	l3769
  6077  00302E                     l3765:
  6078                           
  6079                           ;RF24_c.c: 314: *current++ = SPI_transfer(0xFF);
  6080  00302E  0EFF               	movlw	255
  6081  003030  ECCE  F01D         	call	_SPI_transfer
  6082  003034  C018  FFD9         	movff	RF24_read_payload@current,fsr2l
  6083  003038  C019  FFDA         	movff	RF24_read_payload@current+1,fsr2h
  6084  00303C  6EDF               	movwf	indf2,c
  6085  00303E  4A18               	infsnz	RF24_read_payload@current,f,c
  6086  003040  2A19               	incf	RF24_read_payload@current+1,f,c
  6087  003042                     l3769:
  6088  003042  060E               	decf	RF24_read_payload@data_len,f,c
  6089  003044  280E               	incf	RF24_read_payload@data_len,w,c
  6090  003046  B4D8               	btfsc	status,2,c
  6091  003048  D004               	goto	l3773
  6092  00304A  D7F1               	goto	l3765
  6093  00304C                     l3771:
  6094                           
  6095                           ;RF24_c.c: 317: SPI_transfer(0xff);
  6096  00304C  0EFF               	movlw	255
  6097  00304E  ECCE  F01D         	call	_SPI_transfer
  6098  003052                     l3773:
  6099  003052  061C               	decf	RF24_read_payload@blank_len,f,c
  6100  003054  281C               	incf	RF24_read_payload@blank_len,w,c
  6101  003056  A4D8               	btfss	status,2,c
  6102  003058  D7F9               	goto	l3771
  6103                           
  6104                           ;RF24_c.c: 318: }
  6105                           ;RF24_c.c: 319: RF24_endTransaction();
  6106  00305A  ECEA  F01D         	call	_RF24_endTransaction	;wreg free
  6107  00305E  0012               	return	
  6108  003060                     __end_of_RF24_read_payload:
  6109                           	opt stack 0
  6110                           tblptru	equ	0xFF8
  6111                           tblptrh	equ	0xFF7
  6112                           tblptrl	equ	0xFF6
  6113                           tablat	equ	0xFF5
  6114                           prodh	equ	0xFF4
  6115                           prodl	equ	0xFF3
  6116                           intcon	equ	0xFF2
  6117                           indf0	equ	0xFEF
  6118                           postinc0	equ	0xFEE
  6119                           postdec0	equ	0xFED
  6120                           fsr0h	equ	0xFEA
  6121                           fsr0l	equ	0xFE9
  6122                           wreg	equ	0xFE8
  6123                           postinc1	equ	0xFE6
  6124                           indf2	equ	0xFDF
  6125                           postinc2	equ	0xFDE
  6126                           postdec2	equ	0xFDD
  6127                           fsr2h	equ	0xFDA
  6128                           fsr2l	equ	0xFD9
  6129                           status	equ	0xFD8
  6130                           
  6131 ;; *************** function _RF24N_enqueue *****************
  6132 ;; Defined at:
  6133 ;;		line 527 in file "../../RF24Network_c.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;  header          2   18[COMRAM] PTR struct .
  6136 ;;		 -> rn.frame_buffer(32), rn(370), 
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;  padding         1   35[COMRAM] unsigned char 
  6139 ;;  padding         1   36[COMRAM] unsigned char 
  6140 ;;  message_size    2   39[COMRAM] unsigned int 
  6141 ;;  result          1   38[COMRAM] unsigned char 
  6142 ;;  isFragment      1   34[COMRAM] unsigned char 
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      unsigned char 
  6145 ;; Registers used:
  6146 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6152 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6153 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6154 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6155 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6156 ;;Total ram usage:       23 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    7
  6159 ;; This function calls:
  6160 ;;		_RF24_stopListening
  6161 ;;		___lwdiv
  6162 ;;		_memcpy
  6163 ;; This function is called by:
  6164 ;;		_RF24N_update
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           	psect	text33
  6169  00105A                     __ptext33:
  6170                           	opt stack 0
  6171  00105A                     _RF24N_enqueue:
  6172                           	opt stack 19
  6173                           
  6174                           ;RF24Network_c.c: 529: uint8_t result = 0;
  6175                           
  6176                           ;incstack = 0
  6177  00105A  0E00               	movlw	0
  6178  00105C  6E27               	movwf	RF24N_enqueue@result,c
  6179                           
  6180                           ;RF24Network_c.c: 530: uint16_t message_size = rn.frame_size - sizeof(RF24NetworkHeader)
      +                          ;
  6181  00105E  C107  F015         	movff	_rn+50,??_RF24N_enqueue
  6182  001062  0EF8               	movlw	248
  6183  001064  2415               	addwf	??_RF24N_enqueue,w,c
  6184  001066  6E28               	movwf	RF24N_enqueue@message_size,c
  6185  001068  6A29               	clrf	RF24N_enqueue@message_size+1,c
  6186  00106A  0EFF               	movlw	255
  6187  00106C  2229               	addwfc	RF24N_enqueue@message_size+1,f,c
  6188                           
  6189                           ;RF24Network_c.c: 531: uint8_t isFragment;
  6190                           ;RF24Network_c.c: 533: ;
  6191                           ;RF24Network_c.c: 537: isFragment = header->type == 148 || header->type == 149 || header
      +                          ->type == 150 || header->type == 200 ;
  6192  00106E  0E01               	movlw	1
  6193  001070  6E26               	movwf	_RF24N_enqueue$2047,c
  6194  001072  EE20 F006          	lfsr	2,6
  6195  001076  5013               	movf	RF24N_enqueue@header,w,c
  6196  001078  26D9               	addwf	fsr2l,f,c
  6197  00107A  5014               	movf	RF24N_enqueue@header+1,w,c
  6198  00107C  22DA               	addwfc	fsr2h,f,c
  6199  00107E  0E94               	movlw	148
  6200  001080  18DE               	xorwf	postinc2,w,c
  6201  001082  B4D8               	btfsc	status,2,c
  6202  001084  D020               	goto	l3963
  6203  001086  EE20 F006          	lfsr	2,6
  6204  00108A  5013               	movf	RF24N_enqueue@header,w,c
  6205  00108C  26D9               	addwf	fsr2l,f,c
  6206  00108E  5014               	movf	RF24N_enqueue@header+1,w,c
  6207  001090  22DA               	addwfc	fsr2h,f,c
  6208  001092  0E95               	movlw	149
  6209  001094  18DE               	xorwf	postinc2,w,c
  6210  001096  B4D8               	btfsc	status,2,c
  6211  001098  D016               	goto	l3963
  6212  00109A  EE20 F006          	lfsr	2,6
  6213  00109E  5013               	movf	RF24N_enqueue@header,w,c
  6214  0010A0  26D9               	addwf	fsr2l,f,c
  6215  0010A2  5014               	movf	RF24N_enqueue@header+1,w,c
  6216  0010A4  22DA               	addwfc	fsr2h,f,c
  6217  0010A6  0E96               	movlw	150
  6218  0010A8  18DE               	xorwf	postinc2,w,c
  6219  0010AA  B4D8               	btfsc	status,2,c
  6220  0010AC  D00C               	goto	l3963
  6221  0010AE  EE20 F006          	lfsr	2,6
  6222  0010B2  5013               	movf	RF24N_enqueue@header,w,c
  6223  0010B4  26D9               	addwf	fsr2l,f,c
  6224  0010B6  5014               	movf	RF24N_enqueue@header+1,w,c
  6225  0010B8  22DA               	addwfc	fsr2h,f,c
  6226  0010BA  0EC8               	movlw	200
  6227  0010BC  18DE               	xorwf	postinc2,w,c
  6228  0010BE  B4D8               	btfsc	status,2,c
  6229  0010C0  D002               	goto	l3963
  6230  0010C2  0E00               	movlw	0
  6231  0010C4  6E26               	movwf	_RF24N_enqueue$2047,c
  6232  0010C6                     l3963:
  6233  0010C6  C026  F023         	movff	_RF24N_enqueue$2047,RF24N_enqueue@isFragment
  6234                           
  6235                           ;RF24Network_c.c: 539: if(isFragment){
  6236  0010CA  5023               	movf	RF24N_enqueue@isFragment,w,c
  6237  0010CC  B4D8               	btfsc	status,2,c
  6238  0010CE  D1D5               	goto	l4073
  6239                           
  6240                           ;RF24Network_c.c: 541: if(header->type == 148){
  6241  0010D0  EE20 F006          	lfsr	2,6
  6242  0010D4  5013               	movf	RF24N_enqueue@header,w,c
  6243  0010D6  26D9               	addwf	fsr2l,f,c
  6244  0010D8  5014               	movf	RF24N_enqueue@header+1,w,c
  6245  0010DA  22DA               	addwfc	fsr2h,f,c
  6246  0010DC  0E94               	movlw	148
  6247  0010DE  18DE               	xorwf	postinc2,w,c
  6248  0010E0  A4D8               	btfss	status,2,c
  6249  0010E2  D0A3               	goto	l4005
  6250                           
  6251                           ;RF24Network_c.c: 543: if(header->reserved > (144 + 10-10 / rn.max_frame_payload_size) )
      +                          {
  6252  0010E4  EE20 F007          	lfsr	2,7
  6253  0010E8  5013               	movf	RF24N_enqueue@header,w,c
  6254  0010EA  26D9               	addwf	fsr2l,f,c
  6255  0010EC  5014               	movf	RF24N_enqueue@header+1,w,c
  6256  0010EE  22DA               	addwfc	fsr2h,f,c
  6257  0010F0  50DF               	movf	indf2,w,c
  6258  0010F2  6E15               	movwf	??_RF24N_enqueue& (0+255),c
  6259  0010F4  0E00               	movlw	0
  6260  0010F6  6E04               	movwf	___lwdiv@dividend+1,c
  6261  0010F8  0E0A               	movlw	10
  6262  0010FA  6E03               	movwf	___lwdiv@dividend,c
  6263  0010FC  C108  F005         	movff	_rn+51,___lwdiv@divisor
  6264  001100  C109  F006         	movff	_rn+52,___lwdiv@divisor+1
  6265  001104  EC39  F01A         	call	___lwdiv	;wreg free
  6266  001108  1E03               	comf	?___lwdiv,f,c
  6267  00110A  1E04               	comf	?___lwdiv+1,f,c
  6268  00110C  4A03               	infsnz	?___lwdiv,f,c
  6269  00110E  2A04               	incf	?___lwdiv+1,f,c
  6270  001110  0E9A               	movlw	154
  6271  001112  2603               	addwf	?___lwdiv,f,c
  6272  001114  0E00               	movlw	0
  6273  001116  2204               	addwfc	?___lwdiv+1,f,c
  6274  001118  5015               	movf	??_RF24N_enqueue,w,c
  6275  00111A  5C03               	subwf	?___lwdiv,w,c
  6276  00111C  0E00               	movlw	0
  6277  00111E  5804               	subwfb	?___lwdiv+1,w,c
  6278  001120  B0D8               	btfsc	status,0,c
  6279  001122  D005               	goto	l3977
  6280                           
  6281                           ;RF24Network_c.c: 548: rn.frag_queue.header.reserved = 0;
  6282  001124  0E00               	movlw	0
  6283  001126  CFE8 F1B2          	movff	wreg,_rn+221
  6284                           
  6285                           ;RF24Network_c.c: 549: return 0;
  6286  00112A  0E00               	movlw	0
  6287  00112C  0012               	return	
  6288  00112E                     l3977:
  6289                           
  6290                           ;RF24Network_c.c: 551: if(rn.frag_queue.header.id == header->id && rn.frag_queue.header.
      +                          from_node == header->from_node){
  6291  00112E  EE20 F004          	lfsr	2,4
  6292  001132  5013               	movf	RF24N_enqueue@header,w,c
  6293  001134  26D9               	addwf	fsr2l,f,c
  6294  001136  5014               	movf	RF24N_enqueue@header+1,w,c
  6295  001138  22DA               	addwfc	fsr2h,f,c
  6296  00113A  EE01  F0AF         	lfsr	0,_rn+218
  6297  00113E  50DE               	movf	postinc2,w,c
  6298  001140  18EE               	xorwf	postinc0,w,c
  6299  001142  E113               	bnz	l3985
  6300  001144  50DE               	movf	postinc2,w,c
  6301  001146  18EE               	xorwf	postinc0,w,c
  6302  001148  A4D8               	btfss	status,2,c
  6303  00114A  D00F               	goto	l3985
  6304  00114C  C013  FFD9         	movff	RF24N_enqueue@header,fsr2l
  6305  001150  C014  FFDA         	movff	RF24N_enqueue@header+1,fsr2h
  6306  001154  EE01  F0AB         	lfsr	0,_rn+214
  6307  001158  50DE               	movf	postinc2,w,c
  6308  00115A  18EE               	xorwf	postinc0,w,c
  6309  00115C  E106               	bnz	l3985
  6310  00115E  50DE               	movf	postinc2,w,c
  6311  001160  18EE               	xorwf	postinc0,w,c
  6312  001162  A4D8               	btfss	status,2,c
  6313  001164  D002               	goto	l3985
  6314                           
  6315                           ;RF24Network_c.c: 552: return 1;
  6316  001166  0E01               	movlw	1
  6317  001168  0012               	return	
  6318  00116A                     l3985:
  6319                           
  6320                           ;RF24Network_c.c: 553: }
  6321                           ;RF24Network_c.c: 555: if( (header->reserved * 24) > (144 + 10-10 - (rn.next_frame-rn.fr
      +                          ame_queue)) ){
  6322  00116A  EE20 F007          	lfsr	2,7
  6323  00116E  5013               	movf	RF24N_enqueue@header,w,c
  6324  001170  26D9               	addwf	fsr2l,f,c
  6325  001172  5014               	movf	RF24N_enqueue@header+1,w,c
  6326  001174  22DA               	addwfc	fsr2h,f,c
  6327  001176  50DF               	movf	indf2,w,c
  6328  001178  6E15               	movwf	??_RF24N_enqueue& (0+255),c
  6329  00117A  5015               	movf	??_RF24N_enqueue,w,c
  6330  00117C  0D18               	mullw	24
  6331  00117E  EE21  F0A9         	lfsr	2,_rn+212
  6332  001182  CFDE F016          	movff	postinc2,??_RF24N_enqueue+1
  6333  001186  CFDD F017          	movff	postdec2,??_RF24N_enqueue+2
  6334  00118A  0ED5               	movlw	low _rn
  6335  00118C  6E18               	movwf	(??_RF24N_enqueue+3)& (0+255),c
  6336  00118E  0E00               	movlw	high _rn
  6337  001190  6E19               	movwf	(??_RF24N_enqueue+4)& (0+255),c
  6338  001192  0E3A               	movlw	58
  6339  001194  2618               	addwf	??_RF24N_enqueue+3,f,c
  6340  001196  0E00               	movlw	0
  6341  001198  2219               	addwfc	??_RF24N_enqueue+4,f,c
  6342  00119A  1E18               	comf	??_RF24N_enqueue+3,f,c
  6343  00119C  1E19               	comf	??_RF24N_enqueue+4,f,c
  6344  00119E  4A18               	infsnz	??_RF24N_enqueue+3,f,c
  6345  0011A0  2A19               	incf	??_RF24N_enqueue+4,f,c
  6346  0011A2  5016               	movf	??_RF24N_enqueue+1,w,c
  6347  0011A4  2618               	addwf	??_RF24N_enqueue+3,f,c
  6348  0011A6  5017               	movf	??_RF24N_enqueue+2,w,c
  6349  0011A8  2219               	addwfc	??_RF24N_enqueue+4,f,c
  6350  0011AA  1E18               	comf	??_RF24N_enqueue+3,f,c
  6351  0011AC  1E19               	comf	??_RF24N_enqueue+4,f,c
  6352  0011AE  4A18               	infsnz	??_RF24N_enqueue+3,f,c
  6353  0011B0  2A19               	incf	??_RF24N_enqueue+4,f,c
  6354  0011B2  0E90               	movlw	144
  6355  0011B4  2618               	addwf	??_RF24N_enqueue+3,f,c
  6356  0011B6  0E00               	movlw	0
  6357  0011B8  2219               	addwfc	??_RF24N_enqueue+4,f,c
  6358  0011BA  50F3               	movf	prodl,w,c
  6359  0011BC  5C18               	subwf	??_RF24N_enqueue+3,w,c
  6360  0011BE  5019               	movf	??_RF24N_enqueue+4,w,c
  6361  0011C0  0A80               	xorlw	128
  6362  0011C2  6E1A               	movwf	(??_RF24N_enqueue+5)& (0+255),c
  6363  0011C4  50F4               	movf	prodh,w,c
  6364  0011C6  0A80               	xorlw	128
  6365  0011C8  581A               	subwfb	(??_RF24N_enqueue+5)& (0+255),w,c
  6366  0011CA  B0D8               	btfsc	status,0,c
  6367  0011CC  D007               	goto	l3991
  6368                           
  6369                           ;RF24Network_c.c: 556: rn.networkFlags |= 1;
  6370  0011CE  C0FF  FFE8         	movff	_rn+42,wreg
  6371  0011D2  0901               	iorlw	1
  6372  0011D4  CFE8 F0FF          	movff	wreg,_rn+42
  6373                           
  6374                           ;RF24Network_c.c: 557: RF24_stopListening();
  6375  0011D8  EC1E  F019         	call	_RF24_stopListening	;wreg free
  6376  0011DC                     l3991:
  6377                           
  6378                           ;RF24Network_c.c: 558: }
  6379                           ;RF24Network_c.c: 560: memcpy(&rn.frag_queue,rn.frame_buffer,8);
  6380  0011DC  0EAB               	movlw	low (_rn+214)
  6381  0011DE  6E03               	movwf	memcpy@d1,c
  6382  0011E0  0E01               	movlw	high (_rn+214)
  6383  0011E2  6E04               	movwf	memcpy@d1+1,c
  6384  0011E4  0EDC               	movlw	low (_rn+7)
  6385  0011E6  6E05               	movwf	memcpy@s1,c
  6386  0011E8  0E00               	movlw	high (_rn+7)
  6387  0011EA  6E06               	movwf	memcpy@s1+1,c
  6388  0011EC  0E00               	movlw	0
  6389  0011EE  6E08               	movwf	memcpy@n+1,c
  6390  0011F0  0E08               	movlw	8
  6391  0011F2  6E07               	movwf	memcpy@n,c
  6392  0011F4  EC1A  F01B         	call	_memcpy	;wreg free
  6393                           
  6394                           ;RF24Network_c.c: 561: memcpy(rn.frag_queue.message_buffer,rn.frame_buffer+sizeof(RF24Ne
      +                          tworkHeader),message_size);
  6395  0011F8  C1B5  F003         	movff	_rn+224,memcpy@d1
  6396  0011FC  C1B6  F004         	movff	_rn+225,memcpy@d1+1
  6397  001200  0EE4               	movlw	low (_rn+15)
  6398  001202  6E05               	movwf	memcpy@s1,c
  6399  001204  0E00               	movlw	high (_rn+15)
  6400  001206  6E06               	movwf	memcpy@s1+1,c
  6401  001208  C028  F007         	movff	RF24N_enqueue@message_size,memcpy@n
  6402  00120C  C029  F008         	movff	RF24N_enqueue@message_size+1,memcpy@n+1
  6403  001210  EC1A  F01B         	call	_memcpy	;wreg free
  6404                           
  6405                           ;RF24Network_c.c: 565: rn.frag_queue.message_size = message_size;
  6406  001214  C028  F1B3         	movff	RF24N_enqueue@message_size,_rn+222
  6407  001218  C029  F1B4         	movff	RF24N_enqueue@message_size+1,_rn+223
  6408                           
  6409                           ;RF24Network_c.c: 566: --rn.frag_queue.header.reserved;
  6410  00121C  C1B2  FFE8         	movff	_rn+221,wreg
  6411  001220  0FFF               	addlw	-1
  6412  001222  CFE8 F1B2          	movff	wreg,_rn+221
  6413                           
  6414                           ;RF24Network_c.c: 568: ;
  6415                           ;RF24Network_c.c: 570: return 1;
  6416  001226  0E01               	movlw	1
  6417  001228  0012               	return	
  6418  00122A                     l4005:
  6419                           
  6420                           ;RF24Network_c.c: 573: if(header->type == 150 || header->type == 149 || header->type == 
      +                          200){
  6421  00122A  EE20 F006          	lfsr	2,6
  6422  00122E  5013               	movf	RF24N_enqueue@header,w,c
  6423  001230  26D9               	addwf	fsr2l,f,c
  6424  001232  5014               	movf	RF24N_enqueue@header+1,w,c
  6425  001234  22DA               	addwfc	fsr2h,f,c
  6426  001236  0E96               	movlw	150
  6427  001238  18DE               	xorwf	postinc2,w,c
  6428  00123A  B4D8               	btfsc	status,2,c
  6429  00123C  D014               	goto	l4011
  6430  00123E  EE20 F006          	lfsr	2,6
  6431  001242  5013               	movf	RF24N_enqueue@header,w,c
  6432  001244  26D9               	addwf	fsr2l,f,c
  6433  001246  5014               	movf	RF24N_enqueue@header+1,w,c
  6434  001248  22DA               	addwfc	fsr2h,f,c
  6435  00124A  0E95               	movlw	149
  6436  00124C  18DE               	xorwf	postinc2,w,c
  6437  00124E  B4D8               	btfsc	status,2,c
  6438  001250  D00A               	goto	l4011
  6439  001252  EE20 F006          	lfsr	2,6
  6440  001256  5013               	movf	RF24N_enqueue@header,w,c
  6441  001258  26D9               	addwf	fsr2l,f,c
  6442  00125A  5014               	movf	RF24N_enqueue@header+1,w,c
  6443  00125C  22DA               	addwfc	fsr2h,f,c
  6444  00125E  0EC8               	movlw	200
  6445  001260  18DE               	xorwf	postinc2,w,c
  6446  001262  A4D8               	btfss	status,2,c
  6447  001264  D12E               	goto	l4085
  6448  001266                     l4011:
  6449                           
  6450                           ;RF24Network_c.c: 575: if(rn.frag_queue.message_size + message_size > 144 + 10-10){
  6451  001266  EE21  F0B3         	lfsr	2,_rn+222
  6452  00126A  CFDE F015          	movff	postinc2,??_RF24N_enqueue
  6453  00126E  CFDD F016          	movff	postdec2,??_RF24N_enqueue+1
  6454  001272  5028               	movf	RF24N_enqueue@message_size,w,c
  6455  001274  2615               	addwf	??_RF24N_enqueue,f,c
  6456  001276  5029               	movf	RF24N_enqueue@message_size+1,w,c
  6457  001278  2216               	addwfc	??_RF24N_enqueue+1,f,c
  6458  00127A  5016               	movf	??_RF24N_enqueue+1,w,c
  6459  00127C  E104               	bnz	u4320
  6460  00127E  0E91               	movlw	145
  6461  001280  5C15               	subwf	??_RF24N_enqueue,w,c
  6462  001282  A0D8               	btfss	status,0,c
  6463  001284  D005               	goto	l4019
  6464  001286                     u4320:
  6465                           
  6466                           ;RF24Network_c.c: 580: rn.frag_queue.header.reserved=0;
  6467  001286  0E00               	movlw	0
  6468  001288  CFE8 F1B2          	movff	wreg,_rn+221
  6469                           
  6470                           ;RF24Network_c.c: 581: return 0;
  6471  00128C  0E00               	movlw	0
  6472  00128E  0012               	return	
  6473  001290                     l4019:
  6474                           
  6475                           ;RF24Network_c.c: 582: }
  6476                           ;RF24Network_c.c: 583: if( rn.frag_queue.header.reserved == 0 || (header->type != 150 &&
      +                           header->reserved != rn.frag_queue.header.reserved ) || rn.frag_queue.header.id != heade
      +                          r->id ){
  6477  001290  EE21  F0B2         	lfsr	2,_rn+221
  6478  001294  50DF               	movf	indf2,w,c
  6479  001296  B4D8               	btfsc	status,2,c
  6480  001298  D025               	goto	l4027
  6481  00129A  EE20 F006          	lfsr	2,6
  6482  00129E  5013               	movf	RF24N_enqueue@header,w,c
  6483  0012A0  26D9               	addwf	fsr2l,f,c
  6484  0012A2  5014               	movf	RF24N_enqueue@header+1,w,c
  6485  0012A4  22DA               	addwfc	fsr2h,f,c
  6486  0012A6  0E96               	movlw	150
  6487  0012A8  18DE               	xorwf	postinc2,w,c
  6488  0012AA  B4D8               	btfsc	status,2,c
  6489  0012AC  D00C               	goto	l4025
  6490  0012AE  EE21  F0B2         	lfsr	2,_rn+221
  6491  0012B2  EE00 F007          	lfsr	0,7
  6492  0012B6  5013               	movf	RF24N_enqueue@header,w,c
  6493  0012B8  26E9               	addwf	fsr0l,f,c
  6494  0012BA  5014               	movf	RF24N_enqueue@header+1,w,c
  6495  0012BC  22EA               	addwfc	fsr0h,f,c
  6496  0012BE  50DE               	movf	postinc2,w,c
  6497  0012C0  18EE               	xorwf	postinc0,w,c
  6498  0012C2  A4D8               	btfss	status,2,c
  6499  0012C4  D00F               	goto	l4027
  6500  0012C6                     l4025:
  6501  0012C6  EE20 F004          	lfsr	2,4
  6502  0012CA  5013               	movf	RF24N_enqueue@header,w,c
  6503  0012CC  26D9               	addwf	fsr2l,f,c
  6504  0012CE  5014               	movf	RF24N_enqueue@header+1,w,c
  6505  0012D0  22DA               	addwfc	fsr2h,f,c
  6506  0012D2  EE01  F0AF         	lfsr	0,_rn+218
  6507  0012D6  50DE               	movf	postinc2,w,c
  6508  0012D8  18EE               	xorwf	postinc0,w,c
  6509  0012DA  E104               	bnz	l4027
  6510  0012DC  50DE               	movf	postinc2,w,c
  6511  0012DE  18EE               	xorwf	postinc0,w,c
  6512  0012E0  B4D8               	btfsc	status,2,c
  6513  0012E2  D002               	goto	l4031
  6514  0012E4                     l4027:
  6515                           
  6516                           ;RF24Network_c.c: 589: return 0;
  6517  0012E4  0E00               	movlw	0
  6518  0012E6  0012               	return	
  6519  0012E8                     l4031:
  6520                           
  6521                           ;RF24Network_c.c: 590: }
  6522                           ;RF24Network_c.c: 592: memcpy(rn.frag_queue.message_buffer+rn.frag_queue.message_size,rn
      +                          .frame_buffer+sizeof(RF24NetworkHeader),message_size);
  6523  0012E8  EE21  F0B3         	lfsr	2,_rn+222
  6524  0012EC  CFDE F015          	movff	postinc2,??_RF24N_enqueue
  6525  0012F0  CFDD F016          	movff	postdec2,??_RF24N_enqueue+1
  6526  0012F4  EE21  F0B5         	lfsr	2,_rn+224
  6527  0012F8  CFDE F017          	movff	postinc2,??_RF24N_enqueue+2
  6528  0012FC  CFDD F018          	movff	postdec2,??_RF24N_enqueue+3
  6529  001300  5015               	movf	??_RF24N_enqueue,w,c
  6530  001302  2417               	addwf	??_RF24N_enqueue+2,w,c
  6531  001304  6E03               	movwf	memcpy@d1,c
  6532  001306  5016               	movf	??_RF24N_enqueue+1,w,c
  6533  001308  2018               	addwfc	??_RF24N_enqueue+3,w,c
  6534  00130A  6E04               	movwf	memcpy@d1+1,c
  6535  00130C  0EE4               	movlw	low (_rn+15)
  6536  00130E  6E05               	movwf	memcpy@s1,c
  6537  001310  0E00               	movlw	high (_rn+15)
  6538  001312  6E06               	movwf	memcpy@s1+1,c
  6539  001314  C028  F007         	movff	RF24N_enqueue@message_size,memcpy@n
  6540  001318  C029  F008         	movff	RF24N_enqueue@message_size+1,memcpy@n+1
  6541  00131C  EC1A  F01B         	call	_memcpy	;wreg free
  6542                           
  6543                           ;RF24Network_c.c: 593: rn.frag_queue.message_size += message_size;
  6544  001320  EE21  F0B3         	lfsr	2,_rn+222
  6545  001324  5028               	movf	RF24N_enqueue@message_size,w,c
  6546  001326  26DE               	addwf	postinc2,f,c
  6547  001328  5029               	movf	RF24N_enqueue@message_size+1,w,c
  6548  00132A  22DD               	addwfc	postdec2,f,c
  6549                           
  6550                           ;RF24Network_c.c: 595: if(header->type != 150){
  6551  00132C  EE20 F006          	lfsr	2,6
  6552  001330  5013               	movf	RF24N_enqueue@header,w,c
  6553  001332  26D9               	addwf	fsr2l,f,c
  6554  001334  5014               	movf	RF24N_enqueue@header+1,w,c
  6555  001336  22DA               	addwfc	fsr2h,f,c
  6556  001338  0E96               	movlw	150
  6557  00133A  18DE               	xorwf	postinc2,w,c
  6558  00133C  B4D8               	btfsc	status,2,c
  6559  00133E  D007               	goto	l457
  6560                           
  6561                           ;RF24Network_c.c: 596: --rn.frag_queue.header.reserved;
  6562  001340  C1B2  FFE8         	movff	_rn+221,wreg
  6563  001344  0FFF               	addlw	-1
  6564  001346  CFE8 F1B2          	movff	wreg,_rn+221
  6565                           
  6566                           ;RF24Network_c.c: 597: return 1;
  6567  00134A  0E01               	movlw	1
  6568  00134C  0012               	return	
  6569  00134E                     l457:
  6570                           
  6571                           ;RF24Network_c.c: 598: }
  6572                           ;RF24Network_c.c: 599: rn.frag_queue.header.reserved = 0;
  6573  00134E  0E00               	movlw	0
  6574  001350  CFE8 F1B2          	movff	wreg,_rn+221
  6575                           
  6576                           ;RF24Network_c.c: 600: rn.frag_queue.header.type = header->reserved;
  6577  001354  EE20 F007          	lfsr	2,7
  6578  001358  5013               	movf	RF24N_enqueue@header,w,c
  6579  00135A  26D9               	addwf	fsr2l,f,c
  6580  00135C  5014               	movf	RF24N_enqueue@header+1,w,c
  6581  00135E  22DA               	addwfc	fsr2h,f,c
  6582  001360  50DF               	movf	indf2,w,c
  6583  001362  6E15               	movwf	??_RF24N_enqueue& (0+255),c
  6584  001364  C015  F1B1         	movff	??_RF24N_enqueue,_rn+220
  6585                           
  6586                           ;RF24Network_c.c: 602: ;
  6587                           ;RF24Network_c.c: 603: ;
  6588                           ;RF24Network_c.c: 606: if(rn.frag_queue.header.type == 131){
  6589  001368  C1B1  FFE8         	movff	_rn+220,wreg
  6590  00136C  0A83               	xorlw	131
  6591  00136E  A4D8               	btfss	status,2,c
  6592  001370  D002               	goto	l4049
  6593                           
  6594                           ;RF24Network_c.c: 607: return 2;
  6595  001372  0E02               	movlw	2
  6596  001374  0012               	return	
  6597  001376                     l4049:
  6598                           
  6599                           ;RF24Network_c.c: 608: }
  6600                           ;RF24Network_c.c: 613: if(144 + 10-10 - (rn.next_frame-rn.frame_queue) >= rn.frag_queue.
      +                          message_size){
  6601  001376  EE21  F0B3         	lfsr	2,_rn+222
  6602  00137A  EE01  F0A9         	lfsr	0,_rn+212
  6603  00137E  CFEE F017          	movff	postinc0,??_RF24N_enqueue+2
  6604  001382  CFED F018          	movff	postdec0,??_RF24N_enqueue+3
  6605  001386  0ED5               	movlw	low _rn
  6606  001388  6E19               	movwf	(??_RF24N_enqueue+4)& (0+255),c
  6607  00138A  0E00               	movlw	high _rn
  6608  00138C  6E1A               	movwf	(??_RF24N_enqueue+5)& (0+255),c
  6609  00138E  0E3A               	movlw	58
  6610  001390  2619               	addwf	??_RF24N_enqueue+4,f,c
  6611  001392  0E00               	movlw	0
  6612  001394  221A               	addwfc	??_RF24N_enqueue+5,f,c
  6613  001396  1E19               	comf	??_RF24N_enqueue+4,f,c
  6614  001398  1E1A               	comf	??_RF24N_enqueue+5,f,c
  6615  00139A  4A19               	infsnz	??_RF24N_enqueue+4,f,c
  6616  00139C  2A1A               	incf	??_RF24N_enqueue+5,f,c
  6617  00139E  5017               	movf	??_RF24N_enqueue+2,w,c
  6618  0013A0  2619               	addwf	??_RF24N_enqueue+4,f,c
  6619  0013A2  5018               	movf	??_RF24N_enqueue+3,w,c
  6620  0013A4  221A               	addwfc	??_RF24N_enqueue+5,f,c
  6621  0013A6  1E19               	comf	??_RF24N_enqueue+4,f,c
  6622  0013A8  1E1A               	comf	??_RF24N_enqueue+5,f,c
  6623  0013AA  4A19               	infsnz	??_RF24N_enqueue+4,f,c
  6624  0013AC  2A1A               	incf	??_RF24N_enqueue+5,f,c
  6625  0013AE  0E90               	movlw	144
  6626  0013B0  2619               	addwf	??_RF24N_enqueue+4,f,c
  6627  0013B2  0E00               	movlw	0
  6628  0013B4  221A               	addwfc	??_RF24N_enqueue+5,f,c
  6629  0013B6  50DE               	movf	postinc2,w,c
  6630  0013B8  5C19               	subwf	??_RF24N_enqueue+4,w,c
  6631  0013BA  501A               	movf	??_RF24N_enqueue+5,w,c
  6632  0013BC  0A80               	xorlw	128
  6633  0013BE  6E1B               	movwf	(??_RF24N_enqueue+6)& (0+255),c
  6634  0013C0  50DE               	movf	postinc2,w,c
  6635  0013C2  0A80               	xorlw	128
  6636  0013C4  581B               	subwfb	(??_RF24N_enqueue+6)& (0+255),w,c
  6637  0013C6  A0D8               	btfss	status,0,c
  6638  0013C8  D04F               	goto	l4065
  6639                           
  6640                           ;RF24Network_c.c: 614: uint8_t padding;
  6641                           ;RF24Network_c.c: 615: memcpy(rn.next_frame,&rn.frag_queue,10);
  6642  0013CA  C1A9  F003         	movff	_rn+212,memcpy@d1
  6643  0013CE  C1AA  F004         	movff	_rn+213,memcpy@d1+1
  6644  0013D2  0EAB               	movlw	low (_rn+214)
  6645  0013D4  6E05               	movwf	memcpy@s1,c
  6646  0013D6  0E01               	movlw	high (_rn+214)
  6647  0013D8  6E06               	movwf	memcpy@s1+1,c
  6648  0013DA  0E00               	movlw	0
  6649  0013DC  6E08               	movwf	memcpy@n+1,c
  6650  0013DE  0E0A               	movlw	10
  6651  0013E0  6E07               	movwf	memcpy@n,c
  6652  0013E2  EC1A  F01B         	call	_memcpy	;wreg free
  6653                           
  6654                           ;RF24Network_c.c: 616: memcpy(rn.next_frame+10,rn.frag_queue.message_buffer,rn.frag_queu
      +                          e.message_size);
  6655  0013E6  EE21  F0A9         	lfsr	2,_rn+212
  6656  0013EA  CFDE F015          	movff	postinc2,??_RF24N_enqueue
  6657  0013EE  CFDD F016          	movff	postdec2,??_RF24N_enqueue+1
  6658  0013F2  0E0A               	movlw	10
  6659  0013F4  2415               	addwf	??_RF24N_enqueue,w,c
  6660  0013F6  6E03               	movwf	memcpy@d1,c
  6661  0013F8  0E00               	movlw	0
  6662  0013FA  2016               	addwfc	??_RF24N_enqueue+1,w,c
  6663  0013FC  6E04               	movwf	memcpy@d1+1,c
  6664  0013FE  C1B5  F005         	movff	_rn+224,memcpy@s1
  6665  001402  C1B6  F006         	movff	_rn+225,memcpy@s1+1
  6666  001406  C1B3  F007         	movff	_rn+222,memcpy@n
  6667  00140A  C1B4  F008         	movff	_rn+223,memcpy@n+1
  6668  00140E  EC1A  F01B         	call	_memcpy	;wreg free
  6669                           
  6670                           ;RF24Network_c.c: 617: rn.next_frame += (10+rn.frag_queue.message_size);
  6671  001412  EE21  F0B3         	lfsr	2,_rn+222
  6672  001416  CFDE F015          	movff	postinc2,??_RF24N_enqueue
  6673  00141A  CFDD F016          	movff	postdec2,??_RF24N_enqueue+1
  6674  00141E  0E0A               	movlw	10
  6675  001420  2615               	addwf	??_RF24N_enqueue,f,c
  6676  001422  0E00               	movlw	0
  6677  001424  2216               	addwfc	??_RF24N_enqueue+1,f,c
  6678  001426  EE21  F0A9         	lfsr	2,_rn+212
  6679  00142A  5015               	movf	??_RF24N_enqueue,w,c
  6680  00142C  26DE               	addwf	postinc2,f,c
  6681  00142E  5016               	movf	??_RF24N_enqueue+1,w,c
  6682  001430  22DD               	addwfc	postdec2,f,c
  6683                           
  6684                           ;RF24Network_c.c: 619: if((padding = (rn.frag_queue.message_size+10)%4)){
  6685                           ; multi bank
  6686  001432  0101               	movlb	(_rn+222) shr (0+8)
  6687  001434  51B3               	movf	(_rn+222)& (0+255),w,b
  6688  001436  0F0A               	addlw	10
  6689  001438  0B03               	andlw	3
  6690  00143A  6E24               	movwf	RF24N_enqueue@padding,c
  6691  00143C  5024               	movf	RF24N_enqueue@padding,w,c
  6692  00143E  B4D8               	btfsc	status,2,c
  6693  001440  D011               	goto	l4059
  6694                           
  6695                           ;RF24Network_c.c: 620: rn.next_frame += 4 - padding;
  6696  001442  5024               	movf	RF24N_enqueue@padding,w,c
  6697  001444  6E15               	movwf	??_RF24N_enqueue& (0+255),c
  6698  001446  6A16               	clrf	(??_RF24N_enqueue+1)& (0+255),c
  6699  001448  1E15               	comf	??_RF24N_enqueue,f,c
  6700  00144A  1E16               	comf	??_RF24N_enqueue+1,f,c
  6701  00144C  4A15               	infsnz	??_RF24N_enqueue,f,c
  6702  00144E  2A16               	incf	??_RF24N_enqueue+1,f,c
  6703  001450  0E04               	movlw	4
  6704  001452  2615               	addwf	??_RF24N_enqueue,f,c
  6705  001454  0E00               	movlw	0
  6706  001456  2216               	addwfc	??_RF24N_enqueue+1,f,c
  6707  001458  EE21  F0A9         	lfsr	2,_rn+212
  6708  00145C  5015               	movf	??_RF24N_enqueue,w,c
  6709  00145E  26DE               	addwf	postinc2,f,c
  6710  001460  5016               	movf	??_RF24N_enqueue+1,w,c
  6711  001462  22DD               	addwfc	postdec2,f,c
  6712  001464                     l4059:
  6713                           
  6714                           ;RF24Network_c.c: 621: }
  6715                           ;RF24Network_c.c: 623: ;
  6716                           ;RF24Network_c.c: 624: return 1;
  6717  001464  0E01               	movlw	1
  6718  001466  0012               	return	
  6719  001468                     l4065:
  6720                           
  6721                           ;RF24Network_c.c: 626: RF24_stopListening();
  6722  001468  EC1E  F019         	call	_RF24_stopListening	;wreg free
  6723                           
  6724                           ;RF24Network_c.c: 627: rn.networkFlags |= 1;
  6725  00146C  C0FF  FFE8         	movff	_rn+42,wreg
  6726  001470  0901               	iorlw	1
  6727  001472  CFE8 F0FF          	movff	wreg,_rn+42
  6728                           
  6729                           ;RF24Network_c.c: 628: }
  6730                           ;RF24Network_c.c: 629: ;
  6731                           ;RF24Network_c.c: 630: return 0;
  6732  001476  0E00               	movlw	0
  6733  001478  0012               	return	
  6734  00147A                     l4073:
  6735                           
  6736                           ;RF24Network_c.c: 640: if(header->type == 131){
  6737  00147A  EE20 F006          	lfsr	2,6
  6738  00147E  5013               	movf	RF24N_enqueue@header,w,c
  6739  001480  26D9               	addwf	fsr2l,f,c
  6740  001482  5014               	movf	RF24N_enqueue@header+1,w,c
  6741  001484  22DA               	addwfc	fsr2h,f,c
  6742  001486  0E83               	movlw	131
  6743  001488  18DE               	xorwf	postinc2,w,c
  6744  00148A  A4D8               	btfss	status,2,c
  6745  00148C  D01A               	goto	l4085
  6746                           
  6747                           ;RF24Network_c.c: 641: memcpy(&rn.frag_queue,rn.frame_buffer,8);
  6748  00148E  0EAB               	movlw	low (_rn+214)
  6749  001490  6E03               	movwf	memcpy@d1,c
  6750  001492  0E01               	movlw	high (_rn+214)
  6751  001494  6E04               	movwf	memcpy@d1+1,c
  6752  001496  0EDC               	movlw	low (_rn+7)
  6753  001498  6E05               	movwf	memcpy@s1,c
  6754  00149A  0E00               	movlw	high (_rn+7)
  6755  00149C  6E06               	movwf	memcpy@s1+1,c
  6756  00149E  0E00               	movlw	0
  6757  0014A0  6E08               	movwf	memcpy@n+1,c
  6758  0014A2  0E08               	movlw	8
  6759  0014A4  6E07               	movwf	memcpy@n,c
  6760  0014A6  EC1A  F01B         	call	_memcpy	;wreg free
  6761                           
  6762                           ;RF24Network_c.c: 642: rn.frag_queue.message_buffer = rn.frame_buffer+sizeof(RF24Network
      +                          Header);
  6763  0014AA  0EE4               	movlw	low (_rn+15)
  6764  0014AC  CFE8 F1B5          	movff	wreg,_rn+224
  6765  0014B0  0E00               	movlw	high (_rn+15)
  6766  0014B2  CFE8 F1B6          	movff	wreg,_rn+225
  6767                           
  6768                           ;RF24Network_c.c: 643: rn.frag_queue.message_size = message_size;
  6769  0014B6  C028  F1B3         	movff	RF24N_enqueue@message_size,_rn+222
  6770  0014BA  C029  F1B4         	movff	RF24N_enqueue@message_size+1,_rn+223
  6771                           
  6772                           ;RF24Network_c.c: 644: return 2;
  6773  0014BE  0E02               	movlw	2
  6774  0014C0  0012               	return	
  6775  0014C2                     l4085:
  6776                           
  6777                           ;RF24Network_c.c: 645: }
  6778                           ;RF24Network_c.c: 651: if(message_size + (rn.next_frame-rn.frame_queue) <= 144 + 10){
  6779  0014C2  EE21  F0A9         	lfsr	2,_rn+212
  6780  0014C6  CFDE F015          	movff	postinc2,??_RF24N_enqueue
  6781  0014CA  CFDD F016          	movff	postdec2,??_RF24N_enqueue+1
  6782  0014CE  0ED5               	movlw	low _rn
  6783  0014D0  6E17               	movwf	(??_RF24N_enqueue+2)& (0+255),c
  6784  0014D2  0E00               	movlw	high _rn
  6785  0014D4  6E18               	movwf	(??_RF24N_enqueue+3)& (0+255),c
  6786  0014D6  0E3A               	movlw	58
  6787  0014D8  2617               	addwf	??_RF24N_enqueue+2,f,c
  6788  0014DA  0E00               	movlw	0
  6789  0014DC  2218               	addwfc	??_RF24N_enqueue+3,f,c
  6790  0014DE  1E17               	comf	??_RF24N_enqueue+2,f,c
  6791  0014E0  1E18               	comf	??_RF24N_enqueue+3,f,c
  6792  0014E2  4A17               	infsnz	??_RF24N_enqueue+2,f,c
  6793  0014E4  2A18               	incf	??_RF24N_enqueue+3,f,c
  6794  0014E6  5015               	movf	??_RF24N_enqueue,w,c
  6795  0014E8  2617               	addwf	??_RF24N_enqueue+2,f,c
  6796  0014EA  5016               	movf	??_RF24N_enqueue+1,w,c
  6797  0014EC  2218               	addwfc	??_RF24N_enqueue+3,f,c
  6798  0014EE  5028               	movf	RF24N_enqueue@message_size,w,c
  6799  0014F0  2617               	addwf	??_RF24N_enqueue+2,f,c
  6800  0014F2  5029               	movf	RF24N_enqueue@message_size+1,w,c
  6801  0014F4  2218               	addwfc	??_RF24N_enqueue+3,f,c
  6802  0014F6  BE18               	btfsc	??_RF24N_enqueue+3,7,c
  6803  0014F8  D006               	goto	l4087
  6804  0014FA  5018               	movf	??_RF24N_enqueue+3,w,c
  6805  0014FC  E164               	bnz	l4097
  6806  0014FE  0E9B               	movlw	155
  6807  001500  5C17               	subwf	??_RF24N_enqueue+2,w,c
  6808  001502  B0D8               	btfsc	status,0,c
  6809  001504  D060               	goto	l4097
  6810  001506                     l4087:
  6811                           
  6812                           ;RF24Network_c.c: 652: uint8_t padding;
  6813                           ;RF24Network_c.c: 653: memcpy(rn.next_frame,rn.frame_buffer,8);
  6814  001506  C1A9  F003         	movff	_rn+212,memcpy@d1
  6815  00150A  C1AA  F004         	movff	_rn+213,memcpy@d1+1
  6816  00150E  0EDC               	movlw	low (_rn+7)
  6817  001510  6E05               	movwf	memcpy@s1,c
  6818  001512  0E00               	movlw	high (_rn+7)
  6819  001514  6E06               	movwf	memcpy@s1+1,c
  6820  001516  0E00               	movlw	0
  6821  001518  6E08               	movwf	memcpy@n+1,c
  6822  00151A  0E08               	movlw	8
  6823  00151C  6E07               	movwf	memcpy@n,c
  6824  00151E  EC1A  F01B         	call	_memcpy	;wreg free
  6825                           
  6826                           ;RF24Network_c.c: 654: memcpy(rn.next_frame+8,&message_size,2);
  6827  001522  EE21  F0A9         	lfsr	2,_rn+212
  6828  001526  CFDE F015          	movff	postinc2,??_RF24N_enqueue
  6829  00152A  CFDD F016          	movff	postdec2,??_RF24N_enqueue+1
  6830  00152E  0E08               	movlw	8
  6831  001530  2415               	addwf	??_RF24N_enqueue,w,c
  6832  001532  6E03               	movwf	memcpy@d1,c
  6833  001534  0E00               	movlw	0
  6834  001536  2016               	addwfc	??_RF24N_enqueue+1,w,c
  6835  001538  6E04               	movwf	memcpy@d1+1,c
  6836  00153A  0E28               	movlw	low RF24N_enqueue@message_size
  6837  00153C  6E05               	movwf	memcpy@s1,c
  6838  00153E  0E00               	movlw	high RF24N_enqueue@message_size
  6839  001540  6E06               	movwf	memcpy@s1+1,c
  6840  001542  0E00               	movlw	0
  6841  001544  6E08               	movwf	memcpy@n+1,c
  6842  001546  0E02               	movlw	2
  6843  001548  6E07               	movwf	memcpy@n,c
  6844  00154A  EC1A  F01B         	call	_memcpy	;wreg free
  6845                           
  6846                           ;RF24Network_c.c: 655: memcpy(rn.next_frame+10,rn.frame_buffer+8,message_size);
  6847  00154E  EE21  F0A9         	lfsr	2,_rn+212
  6848  001552  CFDE F015          	movff	postinc2,??_RF24N_enqueue
  6849  001556  CFDD F016          	movff	postdec2,??_RF24N_enqueue+1
  6850  00155A  0E0A               	movlw	10
  6851  00155C  2415               	addwf	??_RF24N_enqueue,w,c
  6852  00155E  6E03               	movwf	memcpy@d1,c
  6853  001560  0E00               	movlw	0
  6854  001562  2016               	addwfc	??_RF24N_enqueue+1,w,c
  6855  001564  6E04               	movwf	memcpy@d1+1,c
  6856  001566  0EE4               	movlw	low (_rn+15)
  6857  001568  6E05               	movwf	memcpy@s1,c
  6858  00156A  0E00               	movlw	high (_rn+15)
  6859  00156C  6E06               	movwf	memcpy@s1+1,c
  6860  00156E  C028  F007         	movff	RF24N_enqueue@message_size,memcpy@n
  6861  001572  C029  F008         	movff	RF24N_enqueue@message_size+1,memcpy@n+1
  6862  001576  EC1A  F01B         	call	_memcpy	;wreg free
  6863                           
  6864                           ;RF24Network_c.c: 659: rn.next_frame += (message_size + 10);
  6865  00157A  0E0A               	movlw	10
  6866  00157C  2428               	addwf	RF24N_enqueue@message_size,w,c
  6867  00157E  6E15               	movwf	??_RF24N_enqueue& (0+255),c
  6868  001580  0E00               	movlw	0
  6869  001582  2029               	addwfc	RF24N_enqueue@message_size+1,w,c
  6870  001584  6E16               	movwf	(??_RF24N_enqueue+1)& (0+255),c
  6871  001586  EE21  F0A9         	lfsr	2,_rn+212
  6872  00158A  5015               	movf	??_RF24N_enqueue,w,c
  6873  00158C  26DE               	addwf	postinc2,f,c
  6874  00158E  5016               	movf	??_RF24N_enqueue+1,w,c
  6875  001590  22DD               	addwfc	postdec2,f,c
  6876                           
  6877                           ;RF24Network_c.c: 661: if((padding = (message_size+10)%4)){
  6878  001592  5028               	movf	RF24N_enqueue@message_size,w,c
  6879  001594  0F0A               	addlw	10
  6880  001596  0B03               	andlw	3
  6881  001598  6E25               	movwf	RF24N_enqueue@padding_2049,c
  6882  00159A  5025               	movf	RF24N_enqueue@padding_2049,w,c
  6883  00159C  B4D8               	btfsc	status,2,c
  6884  00159E  D011               	goto	l4095
  6885                           
  6886                           ;RF24Network_c.c: 662: rn.next_frame += 4 - padding;
  6887  0015A0  5025               	movf	RF24N_enqueue@padding_2049,w,c
  6888  0015A2  6E15               	movwf	??_RF24N_enqueue& (0+255),c
  6889  0015A4  6A16               	clrf	(??_RF24N_enqueue+1)& (0+255),c
  6890  0015A6  1E15               	comf	??_RF24N_enqueue,f,c
  6891  0015A8  1E16               	comf	??_RF24N_enqueue+1,f,c
  6892  0015AA  4A15               	infsnz	??_RF24N_enqueue,f,c
  6893  0015AC  2A16               	incf	??_RF24N_enqueue+1,f,c
  6894  0015AE  0E04               	movlw	4
  6895  0015B0  2615               	addwf	??_RF24N_enqueue,f,c
  6896  0015B2  0E00               	movlw	0
  6897  0015B4  2216               	addwfc	??_RF24N_enqueue+1,f,c
  6898  0015B6  EE21  F0A9         	lfsr	2,_rn+212
  6899  0015BA  5015               	movf	??_RF24N_enqueue,w,c
  6900  0015BC  26DE               	addwf	postinc2,f,c
  6901  0015BE  5016               	movf	??_RF24N_enqueue+1,w,c
  6902  0015C0  22DD               	addwfc	postdec2,f,c
  6903  0015C2                     l4095:
  6904                           
  6905                           ;RF24Network_c.c: 663: }
  6906                           ;RF24Network_c.c: 667: result = 1;
  6907  0015C2  0E01               	movlw	1
  6908  0015C4  D001               	goto	L4
  6909  0015C6                     l4097:
  6910                           
  6911                           ;RF24Network_c.c: 669: result = 0;
  6912  0015C6  0E00               	movlw	0
  6913  0015C8                     L4:
  6914  0015C8  6E27               	movwf	RF24N_enqueue@result,c
  6915                           
  6916                           ;RF24Network_c.c: 671: }
  6917                           ;RF24Network_c.c: 672: return result;
  6918                           
  6919                           ;RF24Network_c.c: 670: ;
  6920  0015CA  5027               	movf	RF24N_enqueue@result,w,c
  6921  0015CC  0012               	return	
  6922  0015CE                     __end_of_RF24N_enqueue:
  6923                           	opt stack 0
  6924                           tblptru	equ	0xFF8
  6925                           tblptrh	equ	0xFF7
  6926                           tblptrl	equ	0xFF6
  6927                           tablat	equ	0xFF5
  6928                           prodh	equ	0xFF4
  6929                           prodl	equ	0xFF3
  6930                           intcon	equ	0xFF2
  6931                           indf0	equ	0xFEF
  6932                           postinc0	equ	0xFEE
  6933                           postdec0	equ	0xFED
  6934                           fsr0h	equ	0xFEA
  6935                           fsr0l	equ	0xFE9
  6936                           wreg	equ	0xFE8
  6937                           postinc1	equ	0xFE6
  6938                           indf2	equ	0xFDF
  6939                           postinc2	equ	0xFDE
  6940                           postdec2	equ	0xFDD
  6941                           fsr2h	equ	0xFDA
  6942                           fsr2l	equ	0xFD9
  6943                           status	equ	0xFD8
  6944                           
  6945 ;; *************** function _memcpy *****************
  6946 ;; Defined at:
  6947 ;;		line 11 in file "/opt/microchip/xc8/v1.36/sources/common/memcpy.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  d1              2    2[COMRAM] PTR void 
  6950 ;;		 -> rf(22), RF24N_read@bufsize(2), RF24N_peek@msg_size(2), rn.frame_buffer(32), 
  6951 ;;		 -> rn.frag_queue_message_buffer(144), rn.frame_queue(154), rn(370), 
  6952 ;;  s1              2    4[COMRAM] PTR const void 
  6953 ;;		 -> rn.header(8), rn.frame_queue.header(8), RF24_openReadingPipe_d@address(5), RF24N_enqueue@message_size(2), 
  6954 ;;		 -> rn.frame_buffer(32), rn.frag_queue_message_buffer(144), rn.frag_queue(13), rn.frame_queue(154), 
  6955 ;;		 -> rn(370), loop@header(8), loop@payload(8), 
  6956 ;;  n               2    6[COMRAM] unsigned int 
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;  s               2   10[COMRAM] PTR const unsigned char 
  6959 ;;		 -> rn.header(8), rn.frame_queue.header(8), RF24_openReadingPipe_d@address(5), RF24N_enqueue@message_size(2), 
  6960 ;;		 -> rn.frame_buffer(32), rn.frag_queue_message_buffer(144), rn.frag_queue(13), rn.frame_queue(154), 
  6961 ;;		 -> rn(370), loop@header(8), loop@payload(8), 
  6962 ;;  d               2    8[COMRAM] PTR unsigned char 
  6963 ;;		 -> rf(22), RF24N_read@bufsize(2), RF24N_peek@msg_size(2), rn.frame_buffer(32), 
  6964 ;;		 -> rn.frag_queue_message_buffer(144), rn.frame_queue(154), rn(370), 
  6965 ;; Return value:  Size  Location     Type
  6966 ;;                  2    2[COMRAM] PTR void 
  6967 ;; Registers used:
  6968 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  6969 ;; Tracked objects:
  6970 ;;		On entry : 0/0
  6971 ;;		On exit  : 0/0
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6974 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6977 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6978 ;;Total ram usage:       10 bytes
  6979 ;; Hardware stack levels used:    1
  6980 ;; Hardware stack levels required when called:    1
  6981 ;; This function calls:
  6982 ;;		Nothing
  6983 ;; This function is called by:
  6984 ;;		_RF24N_enqueue
  6985 ;;		_RF24N__write
  6986 ;;		_RF24_openReadingPipe_d
  6987 ;;		_RF24N_peek
  6988 ;;		_RF24N_read
  6989 ;;		_RF24_openReadingPipe
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           	psect	text34
  6994  003634                     __ptext34:
  6995                           	opt stack 0
  6996  003634                     _memcpy:
  6997                           	opt stack 26
  6998                           
  6999                           ;incstack = 0
  7000  003634  C005  F00B         	movff	memcpy@s1,memcpy@s
  7001  003638  C006  F00C         	movff	memcpy@s1+1,memcpy@s+1
  7002  00363C  C003  F009         	movff	memcpy@d1,memcpy@d
  7003  003640  C004  F00A         	movff	memcpy@d1+1,memcpy@d+1
  7004  003644  D00E               	goto	l3715
  7005  003646                     l3709:
  7006  003646  C00B  FFD9         	movff	memcpy@s,fsr2l
  7007  00364A  C00C  FFDA         	movff	memcpy@s+1,fsr2h
  7008  00364E  C009  FFE9         	movff	memcpy@d,fsr0l
  7009  003652  C00A  FFEA         	movff	memcpy@d+1,fsr0h
  7010  003656  CFDF FFEF          	movff	indf2,indf0
  7011  00365A  4A0B               	infsnz	memcpy@s,f,c
  7012  00365C  2A0C               	incf	memcpy@s+1,f,c
  7013  00365E  4A09               	infsnz	memcpy@d,f,c
  7014  003660  2A0A               	incf	memcpy@d+1,f,c
  7015  003662                     l3715:
  7016  003662  0607               	decf	memcpy@n,f,c
  7017  003664  A0D8               	btfss	status,0,c
  7018  003666  0608               	decf	memcpy@n+1,f,c
  7019  003668  2807               	incf	memcpy@n,w,c
  7020  00366A  E1ED               	bnz	l3709
  7021  00366C  2808               	incf	memcpy@n+1,w,c
  7022  00366E  B4D8               	btfsc	status,2,c
  7023  003670  0012               	return	
  7024  003672  D7E9               	goto	l3709
  7025  003674                     __end_of_memcpy:
  7026                           	opt stack 0
  7027                           tblptru	equ	0xFF8
  7028                           tblptrh	equ	0xFF7
  7029                           tblptrl	equ	0xFF6
  7030                           tablat	equ	0xFF5
  7031                           prodh	equ	0xFF4
  7032                           prodl	equ	0xFF3
  7033                           intcon	equ	0xFF2
  7034                           indf0	equ	0xFEF
  7035                           postinc0	equ	0xFEE
  7036                           postdec0	equ	0xFED
  7037                           fsr0h	equ	0xFEA
  7038                           fsr0l	equ	0xFE9
  7039                           wreg	equ	0xFE8
  7040                           postinc1	equ	0xFE6
  7041                           indf2	equ	0xFDF
  7042                           postinc2	equ	0xFDE
  7043                           postdec2	equ	0xFDD
  7044                           fsr2h	equ	0xFDA
  7045                           fsr2l	equ	0xFD9
  7046                           status	equ	0xFD8
  7047                           
  7048 ;; *************** function ___lwdiv *****************
  7049 ;; Defined at:
  7050 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwdiv.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  dividend        2    2[COMRAM] unsigned int 
  7053 ;;  divisor         2    4[COMRAM] unsigned int 
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;  quotient        2    6[COMRAM] unsigned int 
  7056 ;;  counter         1    8[COMRAM] unsigned char 
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  2    2[COMRAM] unsigned int 
  7059 ;; Registers used:
  7060 ;;		wreg, status,2, status,0
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7066 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7067 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7069 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7070 ;;Total ram usage:        7 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; Hardware stack levels required when called:    1
  7073 ;; This function calls:
  7074 ;;		Nothing
  7075 ;; This function is called by:
  7076 ;;		_RF24N_enqueue
  7077 ;;		_RF24N_write_
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           	psect	text35
  7082  003472                     __ptext35:
  7083                           	opt stack 0
  7084  003472                     ___lwdiv:
  7085                           	opt stack 26
  7086                           
  7087                           ;incstack = 0
  7088  003472  0E00               	movlw	0
  7089  003474  6E08               	movwf	___lwdiv@quotient+1,c
  7090  003476  0E00               	movlw	0
  7091  003478  6E07               	movwf	___lwdiv@quotient,c
  7092  00347A  5005               	movf	___lwdiv@divisor,w,c
  7093  00347C  1006               	iorwf	___lwdiv@divisor+1,w,c
  7094  00347E  B4D8               	btfsc	status,2,c
  7095  003480  D01C               	goto	l1432
  7096  003482  0E01               	movlw	1
  7097  003484  6E09               	movwf	___lwdiv@counter,c
  7098  003486  D004               	goto	l3791
  7099  003488                     l3789:
  7100  003488  90D8               	bcf	status,0,c
  7101  00348A  3605               	rlcf	___lwdiv@divisor,f,c
  7102  00348C  3606               	rlcf	___lwdiv@divisor+1,f,c
  7103  00348E  2A09               	incf	___lwdiv@counter,f,c
  7104  003490                     l3791:
  7105  003490  AE06               	btfss	___lwdiv@divisor+1,7,c
  7106  003492  D7FA               	goto	l3789
  7107  003494                     l3793:
  7108  003494  90D8               	bcf	status,0,c
  7109  003496  3607               	rlcf	___lwdiv@quotient,f,c
  7110  003498  3608               	rlcf	___lwdiv@quotient+1,f,c
  7111  00349A  5005               	movf	___lwdiv@divisor,w,c
  7112  00349C  5C03               	subwf	___lwdiv@dividend,w,c
  7113  00349E  5006               	movf	___lwdiv@divisor+1,w,c
  7114  0034A0  5804               	subwfb	___lwdiv@dividend+1,w,c
  7115  0034A2  A0D8               	btfss	status,0,c
  7116  0034A4  D005               	goto	l3801
  7117  0034A6  5005               	movf	___lwdiv@divisor,w,c
  7118  0034A8  5E03               	subwf	___lwdiv@dividend,f,c
  7119  0034AA  5006               	movf	___lwdiv@divisor+1,w,c
  7120  0034AC  5A04               	subwfb	___lwdiv@dividend+1,f,c
  7121  0034AE  8007               	bsf	___lwdiv@quotient,0,c
  7122  0034B0                     l3801:
  7123  0034B0  90D8               	bcf	status,0,c
  7124  0034B2  3206               	rrcf	___lwdiv@divisor+1,f,c
  7125  0034B4  3205               	rrcf	___lwdiv@divisor,f,c
  7126  0034B6  2E09               	decfsz	___lwdiv@counter,f,c
  7127  0034B8  D7ED               	goto	l3793
  7128  0034BA                     l1432:
  7129  0034BA  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  7130  0034BE  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7131  0034C2  0012               	return		;funcret
  7132  0034C4                     __end_of___lwdiv:
  7133                           	opt stack 0
  7134                           tblptru	equ	0xFF8
  7135                           tblptrh	equ	0xFF7
  7136                           tblptrl	equ	0xFF6
  7137                           tablat	equ	0xFF5
  7138                           prodh	equ	0xFF4
  7139                           prodl	equ	0xFF3
  7140                           intcon	equ	0xFF2
  7141                           indf0	equ	0xFEF
  7142                           postinc0	equ	0xFEE
  7143                           postdec0	equ	0xFED
  7144                           fsr0h	equ	0xFEA
  7145                           fsr0l	equ	0xFE9
  7146                           wreg	equ	0xFE8
  7147                           postinc1	equ	0xFE6
  7148                           indf2	equ	0xFDF
  7149                           postinc2	equ	0xFDE
  7150                           postdec2	equ	0xFDD
  7151                           fsr2h	equ	0xFDA
  7152                           fsr2l	equ	0xFD9
  7153                           status	equ	0xFD8
  7154                           
  7155 ;; *************** function _RF24N_levelToAddress *****************
  7156 ;; Defined at:
  7157 ;;		line 1346 in file "../../RF24Network_c.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  level           1    wreg     unsigned char 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;  level           1   10[COMRAM] unsigned char 
  7162 ;;  levelAddr       2   11[COMRAM] unsigned int 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  2    2[COMRAM] unsigned int 
  7165 ;; Registers used:
  7166 ;;		wreg, status,2, status,0, prodl, prodh
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7175 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7176 ;;Total ram usage:       11 bytes
  7177 ;; Hardware stack levels used:    1
  7178 ;; Hardware stack levels required when called:    1
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		_RF24N_update
  7183 ;;		_RF24N_multicast
  7184 ;;		_RF24N_multicastLevel
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           	psect	text36
  7189  003512                     __ptext36:
  7190                           	opt stack 0
  7191  003512                     _RF24N_levelToAddress:
  7192                           	opt stack 25
  7193                           
  7194                           ;incstack = 0
  7195                           ;RF24N_levelToAddress@level stored from wreg
  7196  003512  6E0B               	movwf	RF24N_levelToAddress@level,c
  7197                           
  7198                           ;RF24Network_c.c: 1348: uint16_t levelAddr = 1;
  7199  003514  0E00               	movlw	0
  7200  003516  6E0D               	movwf	RF24N_levelToAddress@levelAddr+1,c
  7201  003518  0E01               	movlw	1
  7202  00351A  6E0C               	movwf	RF24N_levelToAddress@levelAddr,c
  7203                           
  7204                           ;RF24Network_c.c: 1349: if(level){
  7205  00351C  500B               	movf	RF24N_levelToAddress@level,w,c
  7206  00351E  B4D8               	btfsc	status,2,c
  7207  003520  D014               	goto	l4107
  7208                           
  7209                           ;RF24Network_c.c: 1350: levelAddr = levelAddr << ((level-1) * 3);
  7210  003522  040B               	decf	RF24N_levelToAddress@level,w,c
  7211  003524  0D03               	mullw	3
  7212  003526  CFF3 F005          	movff	prodl,??_RF24N_levelToAddress
  7213  00352A  C00C  F006         	movff	RF24N_levelToAddress@levelAddr,??_RF24N_levelToAddress+1
  7214  00352E  C00D  F007         	movff	RF24N_levelToAddress@levelAddr+1,??_RF24N_levelToAddress+2
  7215  003532  2A05               	incf	??_RF24N_levelToAddress,f,c
  7216  003534  D003               	goto	u4454
  7217  003536                     u4455:
  7218  003536  90D8               	bcf	status,0,c
  7219  003538  3606               	rlcf	??_RF24N_levelToAddress+1,f,c
  7220  00353A  3607               	rlcf	??_RF24N_levelToAddress+2,f,c
  7221  00353C                     u4454:
  7222  00353C  2E05               	decfsz	??_RF24N_levelToAddress,f,c
  7223  00353E  D7FB               	goto	u4455
  7224  003540  C006  F00C         	movff	??_RF24N_levelToAddress+1,RF24N_levelToAddress@levelAddr
  7225  003544  C007  F00D         	movff	??_RF24N_levelToAddress+2,RF24N_levelToAddress@levelAddr+1
  7226                           
  7227                           ;RF24Network_c.c: 1351: }else{
  7228  003548  D005               	goto	l599
  7229  00354A                     l4107:
  7230                           
  7231                           ;RF24Network_c.c: 1352: return 0;
  7232  00354A  0E00               	movlw	0
  7233  00354C  6E04               	movwf	?_RF24N_levelToAddress+1,c
  7234  00354E  0E00               	movlw	0
  7235  003550  6E03               	movwf	?_RF24N_levelToAddress,c
  7236  003552  0012               	return	
  7237  003554                     l599:
  7238                           
  7239                           ;RF24Network_c.c: 1353: }
  7240                           ;RF24Network_c.c: 1354: return levelAddr;
  7241  003554  C00C  F003         	movff	RF24N_levelToAddress@levelAddr,?_RF24N_levelToAddress
  7242  003558  C00D  F004         	movff	RF24N_levelToAddress@levelAddr+1,?_RF24N_levelToAddress+1
  7243  00355C  0012               	return		;funcret
  7244  00355E                     __end_of_RF24N_levelToAddress:
  7245                           	opt stack 0
  7246                           tblptru	equ	0xFF8
  7247                           tblptrh	equ	0xFF7
  7248                           tblptrl	equ	0xFF6
  7249                           tablat	equ	0xFF5
  7250                           prodh	equ	0xFF4
  7251                           prodl	equ	0xFF3
  7252                           intcon	equ	0xFF2
  7253                           indf0	equ	0xFEF
  7254                           postinc0	equ	0xFEE
  7255                           postdec0	equ	0xFED
  7256                           fsr0h	equ	0xFEA
  7257                           fsr0l	equ	0xFE9
  7258                           wreg	equ	0xFE8
  7259                           postinc1	equ	0xFE6
  7260                           indf2	equ	0xFDF
  7261                           postinc2	equ	0xFDE
  7262                           postdec2	equ	0xFDD
  7263                           fsr2h	equ	0xFDA
  7264                           fsr2l	equ	0xFD9
  7265                           status	equ	0xFD8
  7266                           
  7267 ;; *************** function _RF24_available_p *****************
  7268 ;; Defined at:
  7269 ;;		line 1098 in file "../../../RF24_c/RF24_c.c"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;  pipe_num        2   15[COMRAM] PTR unsigned char 
  7272 ;;		 -> NULL(0), RF24N_update@pipe_num(1), 
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;  status          1   19[COMRAM] unsigned char 
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1    wreg      unsigned char 
  7277 ;; Registers used:
  7278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7284 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7285 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7286 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7287 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7288 ;;Total ram usage:        5 bytes
  7289 ;; Hardware stack levels used:    1
  7290 ;; Hardware stack levels required when called:    6
  7291 ;; This function calls:
  7292 ;;		_RF24_get_status
  7293 ;;		_RF24_read_register_d
  7294 ;; This function is called by:
  7295 ;;		_RF24N_update
  7296 ;;		_RF24_available
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300                           	psect	text37
  7301  0038F0                     __ptext37:
  7302                           	opt stack 0
  7303  0038F0                     _RF24_available_p:
  7304                           	opt stack 20
  7305                           
  7306                           ;RF24_c.c: 1100: if (!( RF24_read_register_d(0x17) & (1<<(0)) )){
  7307                           
  7308                           ;incstack = 0
  7309  0038F0  0E17               	movlw	23
  7310  0038F2  EC50  F01D         	call	_RF24_read_register_d
  7311  0038F6  6E12               	movwf	??_RF24_available_p& (0+255),c
  7312  0038F8  B012               	btfsc	??_RF24_available_p,0,c
  7313  0038FA  D011               	goto	l4123
  7314                           
  7315                           ;RF24_c.c: 1103: if ( pipe_num ){
  7316  0038FC  5010               	movf	RF24_available_p@pipe_num,w,c
  7317  0038FE  1011               	iorwf	RF24_available_p@pipe_num+1,w,c
  7318  003900  B4D8               	btfsc	status,2,c
  7319  003902  D00B               	goto	l4119
  7320                           
  7321                           ;RF24_c.c: 1104: uint8_t status = RF24_get_status();
  7322  003904  ECE6  F01D         	call	_RF24_get_status	;wreg free
  7323  003908  6E14               	movwf	RF24_available_p@status,c
  7324                           
  7325                           ;RF24_c.c: 1105: *pipe_num = ( status >> 1 ) & 0b111;
  7326  00390A  90D8               	bcf	status,0,c
  7327  00390C  3014               	rrcf	RF24_available_p@status,w,c
  7328  00390E  0B07               	andlw	7
  7329  003910  C010  FFD9         	movff	RF24_available_p@pipe_num,fsr2l
  7330  003914  C011  FFDA         	movff	RF24_available_p@pipe_num+1,fsr2h
  7331  003918  6EDF               	movwf	indf2,c
  7332  00391A                     l4119:
  7333                           
  7334                           ;RF24_c.c: 1106: }
  7335                           ;RF24_c.c: 1107: return 1;
  7336  00391A  0E01               	movlw	1
  7337  00391C  0012               	return	
  7338  00391E                     l4123:
  7339                           
  7340                           ;RF24_c.c: 1108: }
  7341                           ;RF24_c.c: 1111: return 0;
  7342  00391E  0E00               	movlw	0
  7343  003920  0012               	return	
  7344  003922                     __end_of_RF24_available_p:
  7345                           	opt stack 0
  7346                           tblptru	equ	0xFF8
  7347                           tblptrh	equ	0xFF7
  7348                           tblptrl	equ	0xFF6
  7349                           tablat	equ	0xFF5
  7350                           prodh	equ	0xFF4
  7351                           prodl	equ	0xFF3
  7352                           intcon	equ	0xFF2
  7353                           indf0	equ	0xFEF
  7354                           postinc0	equ	0xFEE
  7355                           postdec0	equ	0xFED
  7356                           fsr0h	equ	0xFEA
  7357                           fsr0l	equ	0xFE9
  7358                           wreg	equ	0xFE8
  7359                           postinc1	equ	0xFE6
  7360                           indf2	equ	0xFDF
  7361                           postinc2	equ	0xFDE
  7362                           postdec2	equ	0xFDD
  7363                           fsr2h	equ	0xFDA
  7364                           fsr2l	equ	0xFD9
  7365                           status	equ	0xFD8
  7366                           
  7367 ;; *************** function _RF24N_logicalToPhysicalAddress *****************
  7368 ;; Defined at:
  7369 ;;		line 1093 in file "../../RF24Network_c.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;  conversionIn    2   20[COMRAM] PTR struct .
  7372 ;;		 -> RF24N_write@conversion(4), 
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;  to_node         2   39[COMRAM] PTR unsigned int 
  7375 ;;		 -> conversion.send_node(2), RF24N_write@conversion(4), 
  7376 ;;  directTo        2   36[COMRAM] PTR unsigned char 
  7377 ;;		 -> conversion.send_pipe(1), RF24N_write@conversion(4), 
  7378 ;;  pre_conversi    2   34[COMRAM] unsigned int 
  7379 ;;  multicast       2   32[COMRAM] PTR unsigned char 
  7380 ;;		 -> conversion.multicast(1), RF24N_write@conversion(4), 
  7381 ;;  pre_conversi    1   38[COMRAM] unsigned char 
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  1    wreg      unsigned char 
  7384 ;; Registers used:
  7385 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7392 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7394 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7395 ;;Total ram usage:       21 bytes
  7396 ;; Hardware stack levels used:    1
  7397 ;; Hardware stack levels required when called:    3
  7398 ;; This function calls:
  7399 ;;		_RF24N_direct_child_route_to
  7400 ;;		_RF24N_is_descendant
  7401 ;;		_RF24N_is_direct_child
  7402 ;; This function is called by:
  7403 ;;		_RF24N_write
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           
  7407                           	psect	text38
  7408  0029AE                     __ptext38:
  7409                           	opt stack 0
  7410  0029AE                     _RF24N_logicalToPhysicalAddress:
  7411                           	opt stack 22
  7412                           
  7413                           ;RF24Network_c.c: 1098: uint16_t *to_node = &conversionInfo->send_node;
  7414                           
  7415                           ;incstack = 0
  7416  0029AE  C015  F028         	movff	RF24N_logicalToPhysicalAddress@conversionInfo,RF24N_logicalToPhysicalAddress@to_n
      +                          ode
  7417  0029B2  C016  F029         	movff	RF24N_logicalToPhysicalAddress@conversionInfo+1,RF24N_logicalToPhysicalAddress@to
      +                          _node+1
  7418                           
  7419                           ;RF24Network_c.c: 1099: uint8_t *directTo = &conversionInfo->send_pipe;
  7420  0029B6  0E02               	movlw	2
  7421  0029B8  2415               	addwf	RF24N_logicalToPhysicalAddress@conversionInfo,w,c
  7422  0029BA  6E25               	movwf	RF24N_logicalToPhysicalAddress@directTo,c
  7423  0029BC  0E00               	movlw	0
  7424  0029BE  2016               	addwfc	RF24N_logicalToPhysicalAddress@conversionInfo+1,w,c
  7425  0029C0  6E26               	movwf	RF24N_logicalToPhysicalAddress@directTo+1,c
  7426                           
  7427                           ;RF24Network_c.c: 1100: uint8_t *multicast = &conversionInfo->multicast;
  7428  0029C2  0E03               	movlw	3
  7429  0029C4  2415               	addwf	RF24N_logicalToPhysicalAddress@conversionInfo,w,c
  7430  0029C6  6E21               	movwf	RF24N_logicalToPhysicalAddress@multicast,c
  7431  0029C8  0E00               	movlw	0
  7432  0029CA  2016               	addwfc	RF24N_logicalToPhysicalAddress@conversionInfo+1,w,c
  7433  0029CC  6E22               	movwf	RF24N_logicalToPhysicalAddress@multicast+1,c
  7434                           
  7435                           ;RF24Network_c.c: 1103: uint16_t pre_conversion_send_node = rn.parent_node;
  7436  0029CE  C10A  F023         	movff	_rn+53,RF24N_logicalToPhysicalAddress@pre_conversion_send_node
  7437  0029D2  C10B  F024         	movff	_rn+54,RF24N_logicalToPhysicalAddress@pre_conversion_send_node+1
  7438                           
  7439                           ;RF24Network_c.c: 1106: uint8_t pre_conversion_send_pipe = rn.parent_pipe;
  7440  0029D6  C10C  F027         	movff	_rn+55,RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe
  7441                           
  7442                           ;RF24Network_c.c: 1108: if(*directTo > 1 ){
  7443  0029DA  C025  FFD9         	movff	RF24N_logicalToPhysicalAddress@directTo,fsr2l
  7444  0029DE  C026  FFDA         	movff	RF24N_logicalToPhysicalAddress@directTo+1,fsr2h
  7445  0029E2  0E01               	movlw	1
  7446  0029E4  64DF               	cpfsgt	indf2,c
  7447  0029E6  D010               	goto	l4283
  7448                           
  7449                           ;RF24Network_c.c: 1109: pre_conversion_send_node = *to_node;
  7450  0029E8  C028  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
  7451  0029EC  C029  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
  7452  0029F0  CFDE F023          	movff	postinc2,RF24N_logicalToPhysicalAddress@pre_conversion_send_node
  7453  0029F4  CFDD F024          	movff	postdec2,RF24N_logicalToPhysicalAddress@pre_conversion_send_node+1
  7454                           
  7455                           ;RF24Network_c.c: 1110: *multicast = 1;
  7456  0029F8  C021  FFD9         	movff	RF24N_logicalToPhysicalAddress@multicast,fsr2l
  7457  0029FC  C022  FFDA         	movff	RF24N_logicalToPhysicalAddress@multicast+1,fsr2h
  7458  002A00  0E01               	movlw	1
  7459  002A02  6EDF               	movwf	indf2,c
  7460                           
  7461                           ;RF24Network_c.c: 1112: pre_conversion_send_pipe=0;
  7462  002A04  0E00               	movlw	0
  7463  002A06  D016               	goto	L5
  7464  002A08                     l4283:
  7465                           
  7466                           ;RF24Network_c.c: 1116: else
  7467                           ;RF24Network_c.c: 1117: if ( RF24N_is_direct_child(*to_node) )
  7468  002A08  C028  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
  7469  002A0C  C029  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
  7470  002A10  CFDE F009          	movff	postinc2,RF24N_is_direct_child@node
  7471  002A14  CFDD F00A          	movff	postdec2,RF24N_is_direct_child@node+1
  7472  002A18  EC51  F019         	call	_RF24N_is_direct_child	;wreg free
  7473  002A1C  0900               	iorlw	0
  7474  002A1E  B4D8               	btfsc	status,2,c
  7475  002A20  D00B               	goto	l4289
  7476                           
  7477                           ;RF24Network_c.c: 1118: {
  7478                           ;RF24Network_c.c: 1120: pre_conversion_send_node = *to_node;
  7479  002A22  C028  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
  7480  002A26  C029  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
  7481  002A2A  CFDE F023          	movff	postinc2,RF24N_logicalToPhysicalAddress@pre_conversion_send_node
  7482  002A2E  CFDD F024          	movff	postdec2,RF24N_logicalToPhysicalAddress@pre_conversion_send_node+1
  7483  002A32  D01D               	goto	l4293
  7484  002A34                     L5:
  7485  002A34  6E27               	movwf	RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe,c
  7486                           
  7487                           ;RF24Network_c.c: 1123: }
  7488  002A36  D01D               	goto	l4295
  7489  002A38                     l4289:
  7490                           
  7491                           ;RF24Network_c.c: 1127: else if ( RF24N_is_descendant(*to_node) )
  7492  002A38  C028  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
  7493  002A3C  C029  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
  7494  002A40  CFDE F003          	movff	postinc2,RF24N_is_descendant@node
  7495  002A44  CFDD F004          	movff	postdec2,RF24N_is_descendant@node+1
  7496  002A48  EC91  F01C         	call	_RF24N_is_descendant	;wreg free
  7497  002A4C  0900               	iorlw	0
  7498  002A4E  B4D8               	btfsc	status,2,c
  7499  002A50  D010               	goto	l4295
  7500                           
  7501                           ;RF24Network_c.c: 1128: {
  7502                           ;RF24Network_c.c: 1129: pre_conversion_send_node = RF24N_direct_child_route_to(*to_node)
      +                          ;
  7503  002A52  C028  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
  7504  002A56  C029  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
  7505  002A5A  CFDE F003          	movff	postinc2,RF24N_direct_child_route_to@node
  7506  002A5E  CFDD F004          	movff	postdec2,RF24N_direct_child_route_to@node+1
  7507  002A62  EC0F  F01C         	call	_RF24N_direct_child_route_to	;wreg free
  7508  002A66  C003  F023         	movff	?_RF24N_direct_child_route_to,RF24N_logicalToPhysicalAddress@pre_conversion_send_
      +                          node
  7509  002A6A  C004  F024         	movff	?_RF24N_direct_child_route_to+1,RF24N_logicalToPhysicalAddress@pre_conversion_sen
      +                          d_node+1
  7510  002A6E                     l4293:
  7511                           
  7512                           ;RF24Network_c.c: 1130: pre_conversion_send_pipe = 5;
  7513  002A6E  0E05               	movlw	5
  7514  002A70  D7E1               	goto	L5
  7515  002A72                     l4295:
  7516                           
  7517                           ;RF24Network_c.c: 1131: }
  7518                           ;RF24Network_c.c: 1133: *to_node = pre_conversion_send_node;
  7519  002A72  C028  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
  7520  002A76  C029  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
  7521  002A7A  C023  FFDE         	movff	RF24N_logicalToPhysicalAddress@pre_conversion_send_node,postinc2
  7522  002A7E  C024  FFDD         	movff	RF24N_logicalToPhysicalAddress@pre_conversion_send_node+1,postdec2
  7523                           
  7524                           ;RF24Network_c.c: 1134: *directTo = pre_conversion_send_pipe;
  7525  002A82  C025  FFD9         	movff	RF24N_logicalToPhysicalAddress@directTo,fsr2l
  7526  002A86  C026  FFDA         	movff	RF24N_logicalToPhysicalAddress@directTo+1,fsr2h
  7527  002A8A  C027  FFDF         	movff	RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe,indf2
  7528  002A8E  0012               	return	
  7529  002A90                     __end_of_RF24N_logicalToPhysicalAddress:
  7530                           	opt stack 0
  7531                           tblptru	equ	0xFF8
  7532                           tblptrh	equ	0xFF7
  7533                           tblptrl	equ	0xFF6
  7534                           tablat	equ	0xFF5
  7535                           prodh	equ	0xFF4
  7536                           prodl	equ	0xFF3
  7537                           intcon	equ	0xFF2
  7538                           indf0	equ	0xFEF
  7539                           postinc0	equ	0xFEE
  7540                           postdec0	equ	0xFED
  7541                           fsr0h	equ	0xFEA
  7542                           fsr0l	equ	0xFE9
  7543                           wreg	equ	0xFE8
  7544                           postinc1	equ	0xFE6
  7545                           indf2	equ	0xFDF
  7546                           postinc2	equ	0xFDE
  7547                           postdec2	equ	0xFDD
  7548                           fsr2h	equ	0xFDA
  7549                           fsr2l	equ	0xFD9
  7550                           status	equ	0xFD8
  7551                           
  7552 ;; *************** function _RF24N_is_direct_child *****************
  7553 ;; Defined at:
  7554 ;;		line 1196 in file "../../RF24Network_c.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  node            2    8[COMRAM] unsigned int 
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;  child_node_m    2   17[COMRAM] unsigned int 
  7559 ;;  result          1   19[COMRAM] unsigned char 
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  1    wreg      unsigned char 
  7562 ;; Registers used:
  7563 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7570 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7572 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7573 ;;Total ram usage:       12 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; Hardware stack levels required when called:    2
  7576 ;; This function calls:
  7577 ;;		_RF24N_is_descendant
  7578 ;; This function is called by:
  7579 ;;		_RF24N_logicalToPhysicalAddress
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           	psect	text39
  7584  0032A2                     __ptext39:
  7585                           	opt stack 0
  7586  0032A2                     _RF24N_is_direct_child:
  7587                           	opt stack 22
  7588                           
  7589                           ;RF24Network_c.c: 1198: uint8_t result = 0;
  7590                           
  7591                           ;incstack = 0
  7592  0032A2  0E00               	movlw	0
  7593  0032A4  6E14               	movwf	RF24N_is_direct_child@result,c
  7594                           
  7595                           ;RF24Network_c.c: 1207: if ( RF24N_is_descendant(node) )
  7596  0032A6  C009  F003         	movff	RF24N_is_direct_child@node,RF24N_is_descendant@node
  7597  0032AA  C00A  F004         	movff	RF24N_is_direct_child@node+1,RF24N_is_descendant@node+1
  7598  0032AE  EC91  F01C         	call	_RF24N_is_descendant	;wreg free
  7599  0032B2  0900               	iorlw	0
  7600  0032B4  B4D8               	btfsc	status,2,c
  7601  0032B6  D025               	goto	l4135
  7602                           
  7603                           ;RF24Network_c.c: 1208: {
  7604                           ;RF24Network_c.c: 1210: uint16_t child_node_mask = ( ~ rn.node_mask ) << 3;
  7605  0032B8  EE21  F00D         	lfsr	2,_rn+56
  7606  0032BC  CFDE F00B          	movff	postinc2,??_RF24N_is_direct_child
  7607  0032C0  CFDD F00C          	movff	postdec2,??_RF24N_is_direct_child+1
  7608  0032C4  1C0B               	comf	??_RF24N_is_direct_child,w,c
  7609  0032C6  6E0D               	movwf	(??_RF24N_is_direct_child+2)& (0+255),c
  7610  0032C8  1C0C               	comf	??_RF24N_is_direct_child+1,w,c
  7611  0032CA  6E0E               	movwf	(??_RF24N_is_direct_child+3)& (0+255),c
  7612  0032CC  90D8               	bcf	status,0,c
  7613  0032CE  360D               	rlcf	??_RF24N_is_direct_child+2,f,c
  7614  0032D0  360E               	rlcf	??_RF24N_is_direct_child+3,f,c
  7615  0032D2  90D8               	bcf	status,0,c
  7616  0032D4  360D               	rlcf	??_RF24N_is_direct_child+2,f,c
  7617  0032D6  360E               	rlcf	??_RF24N_is_direct_child+3,f,c
  7618  0032D8  90D8               	bcf	status,0,c
  7619  0032DA  360D               	rlcf	??_RF24N_is_direct_child+2,f,c
  7620  0032DC  360E               	rlcf	??_RF24N_is_direct_child+3,f,c
  7621  0032DE  C00D  F012         	movff	??_RF24N_is_direct_child+2,RF24N_is_direct_child@child_node_mask
  7622  0032E2  C00E  F013         	movff	??_RF24N_is_direct_child+3,RF24N_is_direct_child@child_node_mask+1
  7623                           
  7624                           ;RF24Network_c.c: 1211: result = ( node & child_node_mask ) == 0 ;
  7625  0032E6  5012               	movf	RF24N_is_direct_child@child_node_mask,w,c
  7626  0032E8  1409               	andwf	RF24N_is_direct_child@node,w,c
  7627  0032EA  6E0B               	movwf	??_RF24N_is_direct_child& (0+255),c
  7628  0032EC  5013               	movf	RF24N_is_direct_child@child_node_mask+1,w,c
  7629  0032EE  140A               	andwf	RF24N_is_direct_child@node+1,w,c
  7630  0032F0  6E0C               	movwf	(??_RF24N_is_direct_child+1)& (0+255),c
  7631  0032F2  500B               	movf	??_RF24N_is_direct_child,w,c
  7632  0032F4  100C               	iorwf	??_RF24N_is_direct_child+1,w,c
  7633  0032F6  A4D8               	btfss	status,2,c
  7634  0032F8  D002               	goto	u4490
  7635  0032FA  0E01               	movlw	1
  7636  0032FC  D001               	goto	u4500
  7637  0032FE                     u4490:
  7638  0032FE  0E00               	movlw	0
  7639  003300                     u4500:
  7640  003300  6E14               	movwf	RF24N_is_direct_child@result,c
  7641  003302                     l4135:
  7642                           
  7643                           ;RF24Network_c.c: 1212: }
  7644                           ;RF24Network_c.c: 1213: return result;
  7645  003302  5014               	movf	RF24N_is_direct_child@result,w,c
  7646  003304  0012               	return	
  7647  003306                     __end_of_RF24N_is_direct_child:
  7648                           	opt stack 0
  7649                           tblptru	equ	0xFF8
  7650                           tblptrh	equ	0xFF7
  7651                           tblptrl	equ	0xFF6
  7652                           tablat	equ	0xFF5
  7653                           prodh	equ	0xFF4
  7654                           prodl	equ	0xFF3
  7655                           intcon	equ	0xFF2
  7656                           indf0	equ	0xFEF
  7657                           postinc0	equ	0xFEE
  7658                           postdec0	equ	0xFED
  7659                           fsr0h	equ	0xFEA
  7660                           fsr0l	equ	0xFE9
  7661                           wreg	equ	0xFE8
  7662                           postinc1	equ	0xFE6
  7663                           indf2	equ	0xFDF
  7664                           postinc2	equ	0xFDE
  7665                           postdec2	equ	0xFDD
  7666                           fsr2h	equ	0xFDA
  7667                           fsr2l	equ	0xFD9
  7668                           status	equ	0xFD8
  7669                           
  7670 ;; *************** function _RF24N_is_descendant *****************
  7671 ;; Defined at:
  7672 ;;		line 1218 in file "../../RF24Network_c.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  node            2    2[COMRAM] unsigned int 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  1    wreg      unsigned char 
  7679 ;; Registers used:
  7680 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7688 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7689 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7690 ;;Total ram usage:        6 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:    1
  7693 ;; This function calls:
  7694 ;;		Nothing
  7695 ;; This function is called by:
  7696 ;;		_RF24N_logicalToPhysicalAddress
  7697 ;;		_RF24N_is_direct_child
  7698 ;; This function uses a non-reentrant model
  7699 ;;
  7700                           
  7701                           	psect	text40
  7702  003922                     __ptext40:
  7703                           	opt stack 0
  7704  003922                     _RF24N_is_descendant:
  7705                           	opt stack 22
  7706                           
  7707                           ;RF24Network_c.c: 1220: return ( node & rn.node_mask ) == rn.node_address;
  7708                           
  7709                           ;incstack = 0
  7710  003922  EE21  F005         	lfsr	2,_rn+48
  7711  003926  EE01  F00D         	lfsr	0,_rn+56
  7712  00392A  CFEE F007          	movff	postinc0,??_RF24N_is_descendant+2
  7713  00392E  CFED F008          	movff	postdec0,??_RF24N_is_descendant+3
  7714  003932  5003               	movf	RF24N_is_descendant@node,w,c
  7715  003934  1607               	andwf	??_RF24N_is_descendant+2,f,c
  7716  003936  5004               	movf	RF24N_is_descendant@node+1,w,c
  7717  003938  1608               	andwf	??_RF24N_is_descendant+3,f,c
  7718  00393A  50DE               	movf	postinc2,w,c
  7719  00393C  1807               	xorwf	??_RF24N_is_descendant+2,w,c
  7720  00393E  E106               	bnz	u3870
  7721  003940  50DE               	movf	postinc2,w,c
  7722  003942  1808               	xorwf	??_RF24N_is_descendant+3,w,c
  7723  003944  A4D8               	btfss	status,2,c
  7724  003946  D002               	goto	u3870
  7725  003948  0E01               	movlw	1
  7726  00394A  0012               	return	
  7727  00394C                     u3870:
  7728  00394C  0E00               	movlw	0
  7729  00394E  0012               	return	
  7730  003950                     __end_of_RF24N_is_descendant:
  7731                           	opt stack 0
  7732                           tblptru	equ	0xFF8
  7733                           tblptrh	equ	0xFF7
  7734                           tblptrl	equ	0xFF6
  7735                           tablat	equ	0xFF5
  7736                           prodh	equ	0xFF4
  7737                           prodl	equ	0xFF3
  7738                           intcon	equ	0xFF2
  7739                           indf0	equ	0xFEF
  7740                           postinc0	equ	0xFEE
  7741                           postdec0	equ	0xFED
  7742                           fsr0h	equ	0xFEA
  7743                           fsr0l	equ	0xFE9
  7744                           wreg	equ	0xFE8
  7745                           postinc1	equ	0xFE6
  7746                           indf2	equ	0xFDF
  7747                           postinc2	equ	0xFDE
  7748                           postdec2	equ	0xFDD
  7749                           fsr2h	equ	0xFDA
  7750                           fsr2l	equ	0xFD9
  7751                           status	equ	0xFD8
  7752                           
  7753 ;; *************** function _RF24N_direct_child_route_to *****************
  7754 ;; Defined at:
  7755 ;;		line 1286 in file "../../RF24Network_c.c"
  7756 ;; Parameters:    Size  Location     Type
  7757 ;;  node            2    2[COMRAM] unsigned int 
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;  child_mask      2    8[COMRAM] unsigned int 
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  2    2[COMRAM] unsigned int 
  7762 ;; Registers used:
  7763 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7764 ;; Tracked objects:
  7765 ;;		On entry : 0/0
  7766 ;;		On exit  : 0/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7770 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7771 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7772 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7773 ;;Total ram usage:        8 bytes
  7774 ;; Hardware stack levels used:    1
  7775 ;; Hardware stack levels required when called:    1
  7776 ;; This function calls:
  7777 ;;		Nothing
  7778 ;; This function is called by:
  7779 ;;		_RF24N_logicalToPhysicalAddress
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           
  7783                           	psect	text41
  7784  00381E                     __ptext41:
  7785                           	opt stack 0
  7786  00381E                     _RF24N_direct_child_route_to:
  7787                           	opt stack 23
  7788                           
  7789                           ;RF24Network_c.c: 1289: uint16_t child_mask = ( rn.node_mask << 3 ) | 0x07;
  7790                           
  7791                           ;incstack = 0
  7792  00381E  0E07               	movlw	7
  7793  003820  EE21  F00D         	lfsr	2,_rn+56
  7794  003824  CFDE F005          	movff	postinc2,??_RF24N_direct_child_route_to
  7795  003828  CFDD F006          	movff	postdec2,??_RF24N_direct_child_route_to+1
  7796  00382C  90D8               	bcf	status,0,c
  7797  00382E  3605               	rlcf	??_RF24N_direct_child_route_to,f,c
  7798  003830  3606               	rlcf	??_RF24N_direct_child_route_to+1,f,c
  7799  003832  90D8               	bcf	status,0,c
  7800  003834  3605               	rlcf	??_RF24N_direct_child_route_to,f,c
  7801  003836  3606               	rlcf	??_RF24N_direct_child_route_to+1,f,c
  7802  003838  90D8               	bcf	status,0,c
  7803  00383A  3605               	rlcf	??_RF24N_direct_child_route_to,f,c
  7804  00383C  3606               	rlcf	??_RF24N_direct_child_route_to+1,f,c
  7805  00383E  1005               	iorwf	??_RF24N_direct_child_route_to,w,c
  7806  003840  6E09               	movwf	RF24N_direct_child_route_to@child_mask,c
  7807  003842  5006               	movf	??_RF24N_direct_child_route_to+1,w,c
  7808  003844  6E0A               	movwf	RF24N_direct_child_route_to@child_mask+1,c
  7809                           
  7810                           ;RF24Network_c.c: 1290: return node & child_mask;
  7811  003846  5009               	movf	RF24N_direct_child_route_to@child_mask,w,c
  7812  003848  1403               	andwf	RF24N_direct_child_route_to@node,w,c
  7813  00384A  6E03               	movwf	?_RF24N_direct_child_route_to,c
  7814  00384C  500A               	movf	RF24N_direct_child_route_to@child_mask+1,w,c
  7815  00384E  1404               	andwf	RF24N_direct_child_route_to@node+1,w,c
  7816  003850  6E04               	movwf	?_RF24N_direct_child_route_to+1,c
  7817  003852  0012               	return	
  7818  003854                     __end_of_RF24N_direct_child_route_to:
  7819                           	opt stack 0
  7820                           tblptru	equ	0xFF8
  7821                           tblptrh	equ	0xFF7
  7822                           tblptrl	equ	0xFF6
  7823                           tablat	equ	0xFF5
  7824                           prodh	equ	0xFF4
  7825                           prodl	equ	0xFF3
  7826                           intcon	equ	0xFF2
  7827                           indf0	equ	0xFEF
  7828                           postinc0	equ	0xFEE
  7829                           postdec0	equ	0xFED
  7830                           fsr0h	equ	0xFEA
  7831                           fsr0l	equ	0xFE9
  7832                           wreg	equ	0xFE8
  7833                           postinc1	equ	0xFE6
  7834                           indf2	equ	0xFDF
  7835                           postinc2	equ	0xFDE
  7836                           postdec2	equ	0xFDD
  7837                           fsr2h	equ	0xFDA
  7838                           fsr2l	equ	0xFD9
  7839                           status	equ	0xFD8
  7840                           
  7841 ;; *************** function _RF24N_write_to_pipe *****************
  7842 ;; Defined at:
  7843 ;;		line 1143 in file "../../RF24Network_c.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  node            2   47[COMRAM] unsigned int 
  7846 ;;  pipe            1   49[COMRAM] unsigned char 
  7847 ;;  multicast       1   50[COMRAM] unsigned char 
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;  out_pipe        5   57[COMRAM] unsigned char [5]
  7850 ;;  ok              1   62[COMRAM] unsigned char 
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  1    wreg      unsigned char 
  7853 ;; Registers used:
  7854 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7860 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7861 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7863 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7864 ;;Total ram usage:       16 bytes
  7865 ;; Hardware stack levels used:    1
  7866 ;; Hardware stack levels required when called:    8
  7867 ;; This function calls:
  7868 ;;		_RF24N_pipe_address
  7869 ;;		_RF24_openWritingPipe_d
  7870 ;;		_RF24_setAutoAck_p
  7871 ;;		_RF24_stopListening
  7872 ;;		_RF24_txStandBy_t
  7873 ;;		_RF24_writeFast_m
  7874 ;; This function is called by:
  7875 ;;		_RF24N_write
  7876 ;; This function uses a non-reentrant model
  7877 ;;
  7878                           
  7879                           	psect	text42
  7880  002EB4                     __ptext42:
  7881                           	opt stack 0
  7882  002EB4                     _RF24N_write_to_pipe:
  7883                           	opt stack 17
  7884                           
  7885                           ;RF24Network_c.c: 1145: uint8_t ok = 0;
  7886                           
  7887                           ;incstack = 0
  7888  002EB4  0E00               	movlw	0
  7889  002EB6  6E3F               	movwf	RF24N_write_to_pipe@ok,c
  7890                           
  7891                           ;RF24Network_c.c: 1146: raddr_t out_pipe[5];
  7892                           ;RF24Network_c.c: 1147: RF24N_pipe_address( node, pipe, out_pipe);
  7893  002EB8  C030  F003         	movff	RF24N_write_to_pipe@node,RF24N_pipe_address@node
  7894  002EBC  C031  F004         	movff	RF24N_write_to_pipe@node+1,RF24N_pipe_address@node+1
  7895  002EC0  C032  F005         	movff	RF24N_write_to_pipe@pipe,RF24N_pipe_address@pipe
  7896  002EC4  0E3A               	movlw	low RF24N_write_to_pipe@out_pipe
  7897  002EC6  6E06               	movwf	RF24N_pipe_address@address,c
  7898  002EC8  0E00               	movlw	high RF24N_write_to_pipe@out_pipe
  7899  002ECA  6E07               	movwf	RF24N_pipe_address@address+1,c
  7900  002ECC  ECBF  F013         	call	_RF24N_pipe_address	;wreg free
  7901                           
  7902                           ;RF24Network_c.c: 1153: if(!(rn.networkFlags & 4)){
  7903  002ED0  EE20  F0FF         	lfsr	2,_rn+42
  7904  002ED4  A4DF               	btfss	indf2,2,c
  7905                           
  7906                           ;RF24Network_c.c: 1154: RF24_stopListening();
  7907  002ED6  EC1E  F019         	call	_RF24_stopListening	;wreg free
  7908                           
  7909                           ;RF24Network_c.c: 1155: }
  7910                           ;RF24Network_c.c: 1157: if(multicast){ RF24_setAutoAck_p(0,0);}else{RF24_setAutoAck_p(0,
      +                          1);}
  7911  002EDA  5033               	movf	RF24N_write_to_pipe@multicast,w,c
  7912  002EDC  B4D8               	btfsc	status,2,c
  7913  002EDE  D006               	goto	l3729
  7914  002EE0  0E00               	movlw	0
  7915  002EE2  6E11               	movwf	RF24_setAutoAck_p@enable,c
  7916  002EE4  0E00               	movlw	0
  7917  002EE6  EC0E  F01A         	call	_RF24_setAutoAck_p
  7918  002EEA  D005               	goto	l3731
  7919  002EEC                     l3729:
  7920  002EEC  0E01               	movlw	1
  7921  002EEE  6E11               	movwf	RF24_setAutoAck_p@enable,c
  7922  002EF0  0E00               	movlw	0
  7923  002EF2  EC0E  F01A         	call	_RF24_setAutoAck_p
  7924  002EF6                     l3731:
  7925                           
  7926                           ;RF24Network_c.c: 1159: RF24_openWritingPipe_d(out_pipe);
  7927  002EF6  0E3A               	movlw	low RF24N_write_to_pipe@out_pipe
  7928  002EF8  6E11               	movwf	RF24_openWritingPipe_d@value_,c
  7929  002EFA  0E00               	movlw	high RF24N_write_to_pipe@out_pipe
  7930  002EFC  6E12               	movwf	RF24_openWritingPipe_d@value_+1,c
  7931  002EFE  ECAE  F018         	call	_RF24_openWritingPipe_d	;wreg free
  7932                           
  7933                           ;RF24Network_c.c: 1161: ok = RF24_writeFast_m(rn.frame_buffer, rn.frame_size,0);
  7934  002F02  0EDC               	movlw	low (_rn+7)
  7935  002F04  6E2B               	movwf	RF24_writeFast_m@buf,c
  7936  002F06  0E00               	movlw	high (_rn+7)
  7937  002F08  6E2C               	movwf	RF24_writeFast_m@buf+1,c
  7938  002F0A  C107  F02D         	movff	_rn+50,RF24_writeFast_m@len
  7939  002F0E  0E00               	movlw	0
  7940  002F10  6E2E               	movwf	RF24_writeFast_m@multicast,c
  7941  002F12  EC3A  F01B         	call	_RF24_writeFast_m	;wreg free
  7942  002F16  6E3F               	movwf	RF24N_write_to_pipe@ok,c
  7943                           
  7944                           ;RF24Network_c.c: 1163: if(!(rn.networkFlags & 4)){
  7945  002F18  EE20  F0FF         	lfsr	2,_rn+42
  7946  002F1C  B4DF               	btfsc	indf2,2,c
  7947  002F1E  D012               	goto	l3741
  7948                           
  7949                           ;RF24Network_c.c: 1164: ok = RF24_txStandBy_t(rn.txTimeout,0);
  7950  002F20  C0D6  F013         	movff	_rn+1,RF24_txStandBy_t@timeout
  7951  002F24  C0D7  F014         	movff	_rn+2,RF24_txStandBy_t@timeout+1
  7952  002F28  C0D8  F015         	movff	_rn+3,RF24_txStandBy_t@timeout+2
  7953  002F2C  C0D9  F016         	movff	_rn+4,RF24_txStandBy_t@timeout+3
  7954  002F30  0E00               	movlw	0
  7955  002F32  6E17               	movwf	RF24_txStandBy_t@startTx,c
  7956  002F34  ECFC  F016         	call	_RF24_txStandBy_t	;wreg free
  7957  002F38  6E3F               	movwf	RF24N_write_to_pipe@ok,c
  7958                           
  7959                           ;RF24Network_c.c: 1165: RF24_setAutoAck_p(0,0);
  7960  002F3A  0E00               	movlw	0
  7961  002F3C  6E11               	movwf	RF24_setAutoAck_p@enable,c
  7962  002F3E  0E00               	movlw	0
  7963  002F40  EC0E  F01A         	call	_RF24_setAutoAck_p
  7964  002F44                     l3741:
  7965                           
  7966                           ;RF24Network_c.c: 1166: }
  7967                           ;RF24Network_c.c: 1181: return ok;
  7968  002F44  503F               	movf	RF24N_write_to_pipe@ok,w,c
  7969  002F46  0012               	return	
  7970  002F48                     __end_of_RF24N_write_to_pipe:
  7971                           	opt stack 0
  7972                           tblptru	equ	0xFF8
  7973                           tblptrh	equ	0xFF7
  7974                           tblptrl	equ	0xFF6
  7975                           tablat	equ	0xFF5
  7976                           prodh	equ	0xFF4
  7977                           prodl	equ	0xFF3
  7978                           intcon	equ	0xFF2
  7979                           indf0	equ	0xFEF
  7980                           postinc0	equ	0xFEE
  7981                           postdec0	equ	0xFED
  7982                           fsr0h	equ	0xFEA
  7983                           fsr0l	equ	0xFE9
  7984                           wreg	equ	0xFE8
  7985                           postinc1	equ	0xFE6
  7986                           indf2	equ	0xFDF
  7987                           postinc2	equ	0xFDE
  7988                           postdec2	equ	0xFDD
  7989                           fsr2h	equ	0xFDA
  7990                           fsr2l	equ	0xFD9
  7991                           status	equ	0xFD8
  7992                           
  7993 ;; *************** function _RF24_writeFast_m *****************
  7994 ;; Defined at:
  7995 ;;		line 909 in file "../../../RF24_c/RF24_c.c"
  7996 ;; Parameters:    Size  Location     Type
  7997 ;;  buf             2   42[COMRAM] PTR const void 
  7998 ;;		 -> rn.frame_buffer(32), rn(370), 
  7999 ;;  len             1   44[COMRAM] unsigned char 
  8000 ;;  multicast       1   45[COMRAM] const unsigned char 
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;		None
  8003 ;; Return value:  Size  Location     Type
  8004 ;;                  1    wreg      unsigned char 
  8005 ;; Registers used:
  8006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8007 ;; Tracked objects:
  8008 ;;		On entry : 0/0
  8009 ;;		On exit  : 0/0
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8012 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8014 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8015 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8016 ;;Total ram usage:        5 bytes
  8017 ;; Hardware stack levels used:    1
  8018 ;; Hardware stack levels required when called:    6
  8019 ;; This function calls:
  8020 ;;		_RF24_get_status
  8021 ;;		_RF24_startFastWrite
  8022 ;;		_RF24_write_register_d
  8023 ;; This function is called by:
  8024 ;;		_RF24N_write_to_pipe
  8025 ;;		_RF24_writeFast
  8026 ;; This function uses a non-reentrant model
  8027 ;;
  8028                           
  8029                           	psect	text43
  8030  003674                     __ptext43:
  8031                           	opt stack 0
  8032  003674                     _RF24_writeFast_m:
  8033                           	opt stack 18
  8034                           
  8035                           ;RF24_c.c: 920: while( ( RF24_get_status() & ( (1<<(0)) ))) {
  8036                           
  8037                           ;incstack = 0
  8038  003674  D00C               	goto	l3679
  8039  003676                     l3671:
  8040                           
  8041                           ;RF24_c.c: 922: if( RF24_get_status() & (1<<(4))){
  8042  003676  ECE6  F01D         	call	_RF24_get_status	;wreg free
  8043  00367A  6E2F               	movwf	??_RF24_writeFast_m& (0+255),c
  8044  00367C  A82F               	btfss	??_RF24_writeFast_m,4,c
  8045  00367E  D007               	goto	l3679
  8046                           
  8047                           ;RF24_c.c: 924: RF24_write_register_d(0x07,(1<<(4)) );
  8048  003680  0E10               	movlw	16
  8049  003682  6E0E               	movwf	RF24_write_register_d@value,c
  8050  003684  0E07               	movlw	7
  8051  003686  EC40  F01D         	call	_RF24_write_register_d
  8052                           
  8053                           ;RF24_c.c: 925: return 0;
  8054  00368A  0E00               	movlw	0
  8055  00368C  0012               	return	
  8056  00368E                     l3679:
  8057  00368E  ECE6  F01D         	call	_RF24_get_status	;wreg free
  8058  003692  6E2F               	movwf	??_RF24_writeFast_m& (0+255),c
  8059  003694  B02F               	btfsc	??_RF24_writeFast_m,0,c
  8060  003696  D7EF               	goto	l3671
  8061                           
  8062                           ;RF24_c.c: 927: }
  8063                           ;RF24_c.c: 936: }
  8064                           ;RF24_c.c: 938: RF24_startFastWrite(buf,len,multicast,1);
  8065  003698  C02B  F022         	movff	RF24_writeFast_m@buf,RF24_startFastWrite@buf
  8066  00369C  C02C  F023         	movff	RF24_writeFast_m@buf+1,RF24_startFastWrite@buf+1
  8067  0036A0  C02D  F024         	movff	RF24_writeFast_m@len,RF24_startFastWrite@len
  8068  0036A4  C02E  F025         	movff	RF24_writeFast_m@multicast,RF24_startFastWrite@multicast
  8069  0036A8  0E01               	movlw	1
  8070  0036AA  6E26               	movwf	RF24_startFastWrite@startTx,c
  8071  0036AC  ECF3  F01B         	call	_RF24_startFastWrite	;wreg free
  8072                           
  8073                           ;RF24_c.c: 940: return 1;
  8074  0036B0  0E01               	movlw	1
  8075  0036B2  0012               	return	
  8076  0036B4                     __end_of_RF24_writeFast_m:
  8077                           	opt stack 0
  8078                           tblptru	equ	0xFF8
  8079                           tblptrh	equ	0xFF7
  8080                           tblptrl	equ	0xFF6
  8081                           tablat	equ	0xFF5
  8082                           prodh	equ	0xFF4
  8083                           prodl	equ	0xFF3
  8084                           intcon	equ	0xFF2
  8085                           indf0	equ	0xFEF
  8086                           postinc0	equ	0xFEE
  8087                           postdec0	equ	0xFED
  8088                           fsr0h	equ	0xFEA
  8089                           fsr0l	equ	0xFE9
  8090                           wreg	equ	0xFE8
  8091                           postinc1	equ	0xFE6
  8092                           indf2	equ	0xFDF
  8093                           postinc2	equ	0xFDE
  8094                           postdec2	equ	0xFDD
  8095                           fsr2h	equ	0xFDA
  8096                           fsr2l	equ	0xFD9
  8097                           status	equ	0xFD8
  8098                           
  8099 ;; *************** function _RF24_startFastWrite *****************
  8100 ;; Defined at:
  8101 ;;		line 954 in file "../../../RF24_c/RF24_c.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;  buf             2   33[COMRAM] PTR const void 
  8104 ;;		 -> rn.frame_buffer(32), rn(370), 
  8105 ;;  len             1   35[COMRAM] unsigned char 
  8106 ;;  multicast       1   36[COMRAM] const unsigned char 
  8107 ;;  startTx         1   37[COMRAM] unsigned char 
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;		None
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  1    wreg      void 
  8112 ;; Registers used:
  8113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8119 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8120 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8122 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8123 ;;Total ram usage:        9 bytes
  8124 ;; Hardware stack levels used:    1
  8125 ;; Hardware stack levels required when called:    5
  8126 ;; This function calls:
  8127 ;;		_RF24_ce_d
  8128 ;;		_RF24_write_payload
  8129 ;; This function is called by:
  8130 ;;		_RF24_writeFast_m
  8131 ;;		_RF24_write_m
  8132 ;;		_RF24_writeBlocking
  8133 ;; This function uses a non-reentrant model
  8134 ;;
  8135                           
  8136                           	psect	text44
  8137  0037E6                     __ptext44:
  8138                           	opt stack 0
  8139  0037E6                     _RF24_startFastWrite:
  8140                           	opt stack 18
  8141                           
  8142                           ;RF24_c.c: 957: RF24_write_payload( buf, len,multicast ? 0xB0 : 0xA0 ) ;
  8143                           
  8144                           ;incstack = 0
  8145  0037E6  5025               	movf	RF24_startFastWrite@multicast,w,c
  8146  0037E8  A4D8               	btfss	status,2,c
  8147  0037EA  D004               	goto	l3567
  8148  0037EC  0E00               	movlw	0
  8149  0037EE  6E2A               	movwf	_RF24_startFastWrite$2393+1,c
  8150  0037F0  0EA0               	movlw	160
  8151  0037F2  D003               	goto	L6
  8152  0037F4                     l3567:
  8153  0037F4  0E00               	movlw	0
  8154  0037F6  6E2A               	movwf	_RF24_startFastWrite$2393+1,c
  8155  0037F8  0EB0               	movlw	176
  8156  0037FA                     L6:
  8157  0037FA  6E29               	movwf	_RF24_startFastWrite$2393,c
  8158  0037FC  C022  F00C         	movff	RF24_startFastWrite@buf,RF24_write_payload@buf
  8159  003800  C023  F00D         	movff	RF24_startFastWrite@buf+1,RF24_write_payload@buf+1
  8160  003804  C024  F00E         	movff	RF24_startFastWrite@len,RF24_write_payload@data_len
  8161  003808  C029  F00F         	movff	_RF24_startFastWrite$2393,RF24_write_payload@writeType
  8162  00380C  ECA4  F017         	call	_RF24_write_payload	;wreg free
  8163                           
  8164                           ;RF24_c.c: 958: if(startTx){
  8165  003810  5026               	movf	RF24_startFastWrite@startTx,w,c
  8166  003812  B4D8               	btfsc	status,2,c
  8167  003814  0012               	return	
  8168                           
  8169                           ;RF24_c.c: 959: RF24_ce_d(1);
  8170  003816  0E01               	movlw	1
  8171  003818  EC7B  F01D         	call	_RF24_ce_d
  8172  00381C  0012               	return	
  8173  00381E                     __end_of_RF24_startFastWrite:
  8174                           	opt stack 0
  8175                           tblptru	equ	0xFF8
  8176                           tblptrh	equ	0xFF7
  8177                           tblptrl	equ	0xFF6
  8178                           tablat	equ	0xFF5
  8179                           prodh	equ	0xFF4
  8180                           prodl	equ	0xFF3
  8181                           intcon	equ	0xFF2
  8182                           indf0	equ	0xFEF
  8183                           postinc0	equ	0xFEE
  8184                           postdec0	equ	0xFED
  8185                           fsr0h	equ	0xFEA
  8186                           fsr0l	equ	0xFE9
  8187                           wreg	equ	0xFE8
  8188                           postinc1	equ	0xFE6
  8189                           indf2	equ	0xFDF
  8190                           postinc2	equ	0xFDE
  8191                           postdec2	equ	0xFDD
  8192                           fsr2h	equ	0xFDA
  8193                           fsr2l	equ	0xFD9
  8194                           status	equ	0xFD8
  8195                           
  8196 ;; *************** function _RF24_write_payload *****************
  8197 ;; Defined at:
  8198 ;;		line 224 in file "../../../RF24_c/RF24_c.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;  buf             2   11[COMRAM] PTR const void 
  8201 ;;		 -> rn.frame_buffer(32), rn(370), 
  8202 ;;  data_len        1   13[COMRAM] unsigned char 
  8203 ;;  writeType       1   14[COMRAM] const unsigned char 
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;  current         2   26[COMRAM] PTR const unsigned char 
  8206 ;;		 -> rn.frame_buffer(32), rn(370), 
  8207 ;;  blank_len       1   32[COMRAM] unsigned char 
  8208 ;;  status          1   25[COMRAM] unsigned char 
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  1    wreg      unsigned char 
  8211 ;; Registers used:
  8212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8218 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8219 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8220 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8221 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8222 ;;Total ram usage:       22 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:    4
  8225 ;; This function calls:
  8226 ;;		_RF24_beginTransaction
  8227 ;;		_RF24_endTransaction
  8228 ;;		_SPI_transfer
  8229 ;; This function is called by:
  8230 ;;		_RF24_startFastWrite
  8231 ;;		_RF24_startWrite
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235                           	psect	text45
  8236  002F48                     __ptext45:
  8237                           	opt stack 0
  8238  002F48                     _RF24_write_payload:
  8239                           	opt stack 18
  8240                           
  8241                           ;RF24_c.c: 226: uint8_t status;
  8242                           ;RF24_c.c: 227: const uint8_t* current = (const uint8_t*)(buf);
  8243                           
  8244                           ;incstack = 0
  8245  002F48  C00C  F01B         	movff	RF24_write_payload@buf,RF24_write_payload@current
  8246  002F4C  C00D  F01C         	movff	RF24_write_payload@buf+1,RF24_write_payload@current+1
  8247                           
  8248                           ;RF24_c.c: 228: uint8_t blank_len;
  8249                           ;RF24_c.c: 230: data_len = (data_len<rf.payload_size?data_len:rf.payload_size);
  8250  002F50  0100               	movlb	0	; () banked
  8251  002F52  5191               	movf	(_rf+5)& (0+255),w,b
  8252  002F54  5C0E               	subwf	RF24_write_payload@data_len,w,c
  8253  002F56  A0D8               	btfss	status,0,c
  8254  002F58  D003               	goto	l712
  8255                           
  8256                           ; BSR set to: 0
  8257  002F5A  C091  F01D         	movff	_rf+5,_RF24_write_payload$2319
  8258  002F5E  D002               	goto	L7
  8259  002F60                     l712:
  8260                           
  8261                           ; BSR set to: 0
  8262  002F60  C00E  F01D         	movff	RF24_write_payload@data_len,_RF24_write_payload$2319
  8263  002F64                     L7:
  8264  002F64  6A1E               	clrf	_RF24_write_payload$2319+1,c
  8265                           
  8266                           ; BSR set to: 0
  8267  002F66  C01D  F00E         	movff	_RF24_write_payload$2319,RF24_write_payload@data_len
  8268                           
  8269                           ; BSR set to: 0
  8270                           ;RF24_c.c: 231: blank_len = rf.dynamic_payloads_enabled ? 0 : rf.payload_size - data_len
      +                          ;
  8271  002F6A  0100               	movlb	0	; () banked
  8272  002F6C  5192               	movf	(_rf+6)& (0+255),w,b
  8273  002F6E  A4D8               	btfss	status,2,c
  8274  002F70  D00F               	goto	l3497
  8275                           
  8276                           ; BSR set to: 0
  8277  002F72  500E               	movf	RF24_write_payload@data_len,w,c
  8278  002F74  6E10               	movwf	??_RF24_write_payload& (0+255),c
  8279  002F76  6A11               	clrf	(??_RF24_write_payload+1)& (0+255),c
  8280  002F78  1E10               	comf	??_RF24_write_payload,f,c
  8281  002F7A  1E11               	comf	??_RF24_write_payload+1,f,c
  8282  002F7C  4A10               	infsnz	??_RF24_write_payload,f,c
  8283  002F7E  2A11               	incf	??_RF24_write_payload+1,f,c
  8284  002F80  0100               	movlb	0	; () banked
  8285  002F82  5191               	movf	(_rf+5)& (0+255),w,b
  8286  002F84  2410               	addwf	??_RF24_write_payload,w,c
  8287  002F86  6E1F               	movwf	_RF24_write_payload$2320,c
  8288  002F88  0E00               	movlw	0
  8289  002F8A  2011               	addwfc	??_RF24_write_payload+1,w,c
  8290  002F8C  6E20               	movwf	_RF24_write_payload$2320+1,c
  8291  002F8E  D004               	goto	l3499
  8292  002F90                     l3497:
  8293                           
  8294                           ; BSR set to: 0
  8295  002F90  0E00               	movlw	0
  8296  002F92  6E20               	movwf	_RF24_write_payload$2320+1,c
  8297  002F94  0E00               	movlw	0
  8298  002F96  6E1F               	movwf	_RF24_write_payload$2320,c
  8299  002F98                     l3499:
  8300                           
  8301                           ; BSR set to: 0
  8302  002F98  C01F  F021         	movff	_RF24_write_payload$2320,RF24_write_payload@blank_len
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;RF24_c.c: 234: ;
  8306                           ;RF24_c.c: 255: RF24_beginTransaction();
  8307  002F9C  ECEE  F01D         	call	_RF24_beginTransaction	;wreg free
  8308                           
  8309                           ;RF24_c.c: 256: status = SPI_transfer( writeType );
  8310  002FA0  500F               	movf	RF24_write_payload@writeType,w,c
  8311  002FA2  ECCE  F01D         	call	_SPI_transfer
  8312  002FA6  6E1A               	movwf	RF24_write_payload@status,c
  8313                           
  8314                           ;RF24_c.c: 257: while ( data_len-- ) {
  8315  002FA8  D009               	goto	l3509
  8316  002FAA                     l3505:
  8317                           
  8318                           ;RF24_c.c: 258: SPI_transfer(*current++);
  8319  002FAA  C01B  FFD9         	movff	RF24_write_payload@current,fsr2l
  8320  002FAE  C01C  FFDA         	movff	RF24_write_payload@current+1,fsr2h
  8321  002FB2  50DF               	movf	indf2,w,c
  8322  002FB4  ECCE  F01D         	call	_SPI_transfer
  8323  002FB8  4A1B               	infsnz	RF24_write_payload@current,f,c
  8324  002FBA  2A1C               	incf	RF24_write_payload@current+1,f,c
  8325  002FBC                     l3509:
  8326  002FBC  060E               	decf	RF24_write_payload@data_len,f,c
  8327  002FBE  280E               	incf	RF24_write_payload@data_len,w,c
  8328  002FC0  B4D8               	btfsc	status,2,c
  8329  002FC2  D004               	goto	l3513
  8330  002FC4  D7F2               	goto	l3505
  8331  002FC6                     l3511:
  8332                           
  8333                           ;RF24_c.c: 261: SPI_transfer(0);
  8334  002FC6  0E00               	movlw	0
  8335  002FC8  ECCE  F01D         	call	_SPI_transfer
  8336  002FCC                     l3513:
  8337  002FCC  0621               	decf	RF24_write_payload@blank_len,f,c
  8338  002FCE  2821               	incf	RF24_write_payload@blank_len,w,c
  8339  002FD0  A4D8               	btfss	status,2,c
  8340  002FD2  D7F9               	goto	l3511
  8341                           
  8342                           ;RF24_c.c: 262: }
  8343                           ;RF24_c.c: 263: RF24_endTransaction();
  8344  002FD4  ECEA  F01D         	call	_RF24_endTransaction	;wreg free
  8345  002FD8  0012               	return	
  8346  002FDA                     __end_of_RF24_write_payload:
  8347                           	opt stack 0
  8348                           tblptru	equ	0xFF8
  8349                           tblptrh	equ	0xFF7
  8350                           tblptrl	equ	0xFF6
  8351                           tablat	equ	0xFF5
  8352                           prodh	equ	0xFF4
  8353                           prodl	equ	0xFF3
  8354                           intcon	equ	0xFF2
  8355                           indf0	equ	0xFEF
  8356                           postinc0	equ	0xFEE
  8357                           postdec0	equ	0xFED
  8358                           fsr0h	equ	0xFEA
  8359                           fsr0l	equ	0xFE9
  8360                           wreg	equ	0xFE8
  8361                           postinc1	equ	0xFE6
  8362                           indf2	equ	0xFDF
  8363                           postinc2	equ	0xFDE
  8364                           postdec2	equ	0xFDD
  8365                           fsr2h	equ	0xFDA
  8366                           fsr2l	equ	0xFD9
  8367                           status	equ	0xFD8
  8368                           
  8369 ;; *************** function _RF24_openWritingPipe_d *****************
  8370 ;; Defined at:
  8371 ;;		line 1144 in file "../../../RF24_c/RF24_c.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;  value_          2   16[COMRAM] PTR const unsigned char 
  8374 ;;		 -> RF24N_write_to_pipe@out_pipe(5), 
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;  value           5   26[COMRAM] unsigned char [5]
  8377 ;;  i               1   31[COMRAM] unsigned char 
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  1    wreg      void 
  8380 ;; Registers used:
  8381 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8388 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8390 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8391 ;;Total ram usage:       16 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; Hardware stack levels required when called:    5
  8394 ;; This function calls:
  8395 ;;		_RF24_write_register_c_d
  8396 ;;		_RF24_write_register_d
  8397 ;; This function is called by:
  8398 ;;		_RF24N_write_to_pipe
  8399 ;; This function uses a non-reentrant model
  8400 ;;
  8401                           
  8402                           	psect	text46
  8403  00315C                     __ptext46:
  8404                           	opt stack 0
  8405  00315C                     _RF24_openWritingPipe_d:
  8406                           	opt stack 19
  8407                           
  8408                           ;RF24_c.c: 1146: uint8_t i;
  8409                           ;RF24_c.c: 1147: raddr_t value[5];
  8410                           ;RF24_c.c: 1148: for(i=0;i<5;i++)
  8411                           
  8412                           ;incstack = 0
  8413  00315C  0E00               	movlw	0
  8414  00315E  6E20               	movwf	RF24_openWritingPipe_d@i,c
  8415  003160                     l3655:
  8416  003160  0E04               	movlw	4
  8417  003162  6420               	cpfsgt	RF24_openWritingPipe_d@i,c
  8418  003164  D001               	goto	l3659
  8419  003166  D01D               	goto	l3665
  8420  003168                     l3659:
  8421                           
  8422                           ;RF24_c.c: 1149: {
  8423                           ;RF24_c.c: 1150: value[i]=value_[4-i];
  8424  003168  5020               	movf	RF24_openWritingPipe_d@i,w,c
  8425  00316A  6E13               	movwf	??_RF24_openWritingPipe_d& (0+255),c
  8426  00316C  6A14               	clrf	(??_RF24_openWritingPipe_d+1)& (0+255),c
  8427  00316E  1E13               	comf	??_RF24_openWritingPipe_d,f,c
  8428  003170  1E14               	comf	??_RF24_openWritingPipe_d+1,f,c
  8429  003172  4A13               	infsnz	??_RF24_openWritingPipe_d,f,c
  8430  003174  2A14               	incf	??_RF24_openWritingPipe_d+1,f,c
  8431  003176  0E04               	movlw	4
  8432  003178  2613               	addwf	??_RF24_openWritingPipe_d,f,c
  8433  00317A  0E00               	movlw	0
  8434  00317C  2214               	addwfc	??_RF24_openWritingPipe_d+1,f,c
  8435  00317E  5013               	movf	??_RF24_openWritingPipe_d,w,c
  8436  003180  2411               	addwf	RF24_openWritingPipe_d@value_,w,c
  8437  003182  6ED9               	movwf	fsr2l,c
  8438  003184  5014               	movf	??_RF24_openWritingPipe_d+1,w,c
  8439  003186  2012               	addwfc	RF24_openWritingPipe_d@value_+1,w,c
  8440  003188  6EDA               	movwf	fsr2h,c
  8441  00318A  5020               	movf	RF24_openWritingPipe_d@i,w,c
  8442  00318C  0D01               	mullw	1
  8443  00318E  0E1B               	movlw	low RF24_openWritingPipe_d@value
  8444  003190  24F3               	addwf	prodl,w,c
  8445  003192  6EE9               	movwf	fsr0l,c
  8446  003194  0E00               	movlw	high RF24_openWritingPipe_d@value
  8447  003196  20F4               	addwfc	prodh,w,c
  8448  003198  6EEA               	movwf	fsr0h,c
  8449  00319A  CFDF FFEF          	movff	indf2,indf0
  8450  00319E  2A20               	incf	RF24_openWritingPipe_d@i,f,c
  8451  0031A0  D7DF               	goto	l3655
  8452  0031A2                     l3665:
  8453                           
  8454                           ;RF24_c.c: 1151: }
  8455                           ;RF24_c.c: 1153: RF24_write_register_c_d(0x0A, ((uint8_t*)(value)), rf.addr_width);
  8456  0031A2  0E1B               	movlw	low RF24_openWritingPipe_d@value
  8457  0031A4  6E0C               	movwf	RF24_write_register_c_d@buf,c
  8458  0031A6  0E00               	movlw	high RF24_openWritingPipe_d@value
  8459  0031A8  6E0D               	movwf	RF24_write_register_c_d@buf+1,c
  8460  0031AA  C098  F00E         	movff	_rf+12,RF24_write_register_c_d@len
  8461  0031AE  0E0A               	movlw	10
  8462  0031B0  EC45  F01C         	call	_RF24_write_register_c_d
  8463                           
  8464                           ;RF24_c.c: 1154: RF24_write_register_c_d(0x10, ((uint8_t*)(value)), rf.addr_width);
  8465  0031B4  0E1B               	movlw	low RF24_openWritingPipe_d@value
  8466  0031B6  6E0C               	movwf	RF24_write_register_c_d@buf,c
  8467  0031B8  0E00               	movlw	high RF24_openWritingPipe_d@value
  8468  0031BA  6E0D               	movwf	RF24_write_register_c_d@buf+1,c
  8469  0031BC  C098  F00E         	movff	_rf+12,RF24_write_register_c_d@len
  8470  0031C0  0E10               	movlw	16
  8471  0031C2  EC45  F01C         	call	_RF24_write_register_c_d
  8472                           
  8473                           ;RF24_c.c: 1159: RF24_write_register_d(0x11,rf.payload_size);
  8474  0031C6  C091  F00E         	movff	_rf+5,RF24_write_register_d@value
  8475  0031CA  0E11               	movlw	17
  8476  0031CC  EC40  F01D         	call	_RF24_write_register_d
  8477  0031D0  0012               	return		;funcret
  8478  0031D2                     __end_of_RF24_openWritingPipe_d:
  8479                           	opt stack 0
  8480                           tblptru	equ	0xFF8
  8481                           tblptrh	equ	0xFF7
  8482                           tblptrl	equ	0xFF6
  8483                           tablat	equ	0xFF5
  8484                           prodh	equ	0xFF4
  8485                           prodl	equ	0xFF3
  8486                           intcon	equ	0xFF2
  8487                           indf0	equ	0xFEF
  8488                           postinc0	equ	0xFEE
  8489                           postdec0	equ	0xFED
  8490                           fsr0h	equ	0xFEA
  8491                           fsr0l	equ	0xFE9
  8492                           wreg	equ	0xFE8
  8493                           postinc1	equ	0xFE6
  8494                           indf2	equ	0xFDF
  8495                           postinc2	equ	0xFDE
  8496                           postdec2	equ	0xFDD
  8497                           fsr2h	equ	0xFDA
  8498                           fsr2l	equ	0xFD9
  8499                           status	equ	0xFD8
  8500                           
  8501 ;; *************** function _RF24N_pipe_address *****************
  8502 ;; Defined at:
  8503 ;;		line 1359 in file "../../RF24Network_c.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;  node            2    2[COMRAM] unsigned int 
  8506 ;;  pipe            1    4[COMRAM] unsigned char 
  8507 ;;  address         2    5[COMRAM] PTR unsigned char 
  8508 ;;		 -> RF24N_multicastLevel@addr(5), RF24N_write_to_pipe@out_pipe(5), RF24N_begin_d@addr(5), 
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;  result          5   22[COMRAM] unsigned char [5]
  8511 ;;  out             2   30[COMRAM] PTR unsigned char 
  8512 ;;		 -> RF24N_pipe_address@result(5), 
  8513 ;;  dec             2   27[COMRAM] unsigned int 
  8514 ;;  i               1   32[COMRAM] unsigned char 
  8515 ;;  count           1   29[COMRAM] unsigned char 
  8516 ;; Return value:  Size  Location     Type
  8517 ;;                  1    wreg      void 
  8518 ;; Registers used:
  8519 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8520 ;; Tracked objects:
  8521 ;;		On entry : 0/0
  8522 ;;		On exit  : 0/0
  8523 ;;		Unchanged: 0/0
  8524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8525 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8526 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8527 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8528 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8529 ;;Total ram usage:       31 bytes
  8530 ;; Hardware stack levels used:    1
  8531 ;; Hardware stack levels required when called:    1
  8532 ;; This function calls:
  8533 ;;		Nothing
  8534 ;; This function is called by:
  8535 ;;		_RF24N_begin_d
  8536 ;;		_RF24N_write_to_pipe
  8537 ;;		_RF24N_multicastLevel
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           	psect	text47
  8542  00277E                     __ptext47:
  8543                           	opt stack 0
  8544  00277E                     _RF24N_pipe_address:
  8545                           	opt stack 27
  8546                           
  8547                           ;RF24Network_c.c: 1362: static uint8_t address_translation[] = { 0xc3,0x3c,0x33,0xce,0x3
      +                          e,0xe3,0xec };
  8548                           ;RF24Network_c.c: 1363: raddr_t result[5] = {0xCC,0xCC,0xCC,0xCC,0xCC};
  8549                           
  8550                           ;incstack = 0
  8551  00277E  EE20  F0D0         	lfsr	2,RF24N_pipe_address@F3856
  8552  002782  EE00  F017         	lfsr	0,RF24N_pipe_address@result
  8553  002786  0E04               	movlw	4
  8554  002788                     u3631:
  8555  002788  CFDB FFEB          	movff	plusw2,plusw0
  8556  00278C  06E8               	decf	wreg,f,c
  8557  00278E  E2FC               	bc	u3631
  8558                           
  8559                           ;RF24Network_c.c: 1364: uint8_t* out = (uint8_t*)(result);
  8560  002790  0E17               	movlw	low RF24N_pipe_address@result
  8561  002792  6E1F               	movwf	RF24N_pipe_address@out,c
  8562  002794  0E00               	movlw	high RF24N_pipe_address@result
  8563  002796  6E20               	movwf	RF24N_pipe_address@out+1,c
  8564                           
  8565                           ;RF24Network_c.c: 1366: uint8_t i;
  8566                           ;RF24Network_c.c: 1369: uint8_t count = 1; uint16_t dec = node;
  8567  002798  0E01               	movlw	1
  8568  00279A  6E1E               	movwf	RF24N_pipe_address@count,c
  8569  00279C  C003  F01C         	movff	RF24N_pipe_address@node,RF24N_pipe_address@dec
  8570  0027A0  C004  F01D         	movff	RF24N_pipe_address@node+1,RF24N_pipe_address@dec+1
  8571                           
  8572                           ;RF24Network_c.c: 1371: while(dec){
  8573  0027A4  D027               	goto	l3605
  8574  0027A6                     l3595:
  8575                           
  8576                           ;RF24Network_c.c: 1373: if(pipe != 0 || !node)
  8577  0027A6  5005               	movf	RF24N_pipe_address@pipe,w,c
  8578  0027A8  A4D8               	btfss	status,2,c
  8579  0027AA  D004               	goto	l3599
  8580  0027AC  5003               	movf	RF24N_pipe_address@node,w,c
  8581  0027AE  1004               	iorwf	RF24N_pipe_address@node+1,w,c
  8582  0027B0  A4D8               	btfss	status,2,c
  8583  0027B2  D016               	goto	l3601
  8584  0027B4                     l3599:
  8585                           
  8586                           ;RF24Network_c.c: 1375: out[count]=address_translation[(dec % 8)];
  8587  0027B4  0E07               	movlw	7
  8588  0027B6  141C               	andwf	RF24N_pipe_address@dec,w,c
  8589  0027B8  6E08               	movwf	??_RF24N_pipe_address& (0+255),c
  8590  0027BA  0E00               	movlw	0
  8591  0027BC  141D               	andwf	RF24N_pipe_address@dec+1,w,c
  8592  0027BE  6E09               	movwf	(??_RF24N_pipe_address+1)& (0+255),c
  8593  0027C0  0EC9               	movlw	low RF24N_pipe_address@address_translation
  8594  0027C2  2408               	addwf	??_RF24N_pipe_address,w,c
  8595  0027C4  6ED9               	movwf	fsr2l,c
  8596  0027C6  0E00               	movlw	high RF24N_pipe_address@address_translation
  8597  0027C8  2009               	addwfc	??_RF24N_pipe_address+1,w,c
  8598  0027CA  6EDA               	movwf	fsr2h,c
  8599  0027CC  501E               	movf	RF24N_pipe_address@count,w,c
  8600  0027CE  0D01               	mullw	1
  8601  0027D0  50F3               	movf	prodl,w,c
  8602  0027D2  241F               	addwf	RF24N_pipe_address@out,w,c
  8603  0027D4  6EE9               	movwf	fsr0l,c
  8604  0027D6  50F4               	movf	prodh,w,c
  8605  0027D8  2020               	addwfc	RF24N_pipe_address@out+1,w,c
  8606  0027DA  6EEA               	movwf	fsr0h,c
  8607  0027DC  CFDF FFEF          	movff	indf2,indf0
  8608  0027E0                     l3601:
  8609                           
  8610                           ;RF24Network_c.c: 1377: dec /= 8;
  8611  0027E0  90D8               	bcf	status,0,c
  8612  0027E2  321D               	rrcf	RF24N_pipe_address@dec+1,f,c
  8613  0027E4  321C               	rrcf	RF24N_pipe_address@dec,f,c
  8614  0027E6  90D8               	bcf	status,0,c
  8615  0027E8  321D               	rrcf	RF24N_pipe_address@dec+1,f,c
  8616  0027EA  321C               	rrcf	RF24N_pipe_address@dec,f,c
  8617  0027EC  90D8               	bcf	status,0,c
  8618  0027EE  321D               	rrcf	RF24N_pipe_address@dec+1,f,c
  8619  0027F0  321C               	rrcf	RF24N_pipe_address@dec,f,c
  8620                           
  8621                           ;RF24Network_c.c: 1378: count++;
  8622  0027F2  2A1E               	incf	RF24N_pipe_address@count,f,c
  8623  0027F4                     l3605:
  8624  0027F4  501C               	movf	RF24N_pipe_address@dec,w,c
  8625  0027F6  101D               	iorwf	RF24N_pipe_address@dec+1,w,c
  8626  0027F8  A4D8               	btfss	status,2,c
  8627  0027FA  D7D5               	goto	l3595
  8628                           
  8629                           ;RF24Network_c.c: 1379: }
  8630                           ;RF24Network_c.c: 1382: if(pipe != 0 || !node)
  8631  0027FC  5005               	movf	RF24N_pipe_address@pipe,w,c
  8632  0027FE  A4D8               	btfss	status,2,c
  8633  002800  D004               	goto	l3611
  8634  002802  5003               	movf	RF24N_pipe_address@node,w,c
  8635  002804  1004               	iorwf	RF24N_pipe_address@node+1,w,c
  8636  002806  A4D8               	btfss	status,2,c
  8637  002808  D00D               	goto	l3613
  8638  00280A                     l3611:
  8639                           
  8640                           ;RF24Network_c.c: 1384: out[0] = address_translation[pipe];
  8641  00280A  5005               	movf	RF24N_pipe_address@pipe,w,c
  8642  00280C  0D01               	mullw	1
  8643  00280E  0EC9               	movlw	low RF24N_pipe_address@address_translation
  8644  002810  24F3               	addwf	prodl,w,c
  8645  002812  6ED9               	movwf	fsr2l,c
  8646  002814  0E00               	movlw	high RF24N_pipe_address@address_translation
  8647  002816  20F4               	addwfc	prodh,w,c
  8648  002818  6EDA               	movwf	fsr2h,c
  8649  00281A  C01F  FFE9         	movff	RF24N_pipe_address@out,fsr0l
  8650  00281E  C020  FFEA         	movff	RF24N_pipe_address@out+1,fsr0h
  8651  002822  D017               	goto	L8
  8652  002824                     l3613:
  8653                           
  8654                           ;RF24Network_c.c: 1386: else
  8655                           ;RF24Network_c.c: 1387: out[1] = address_translation[count-1];
  8656  002824  0EFF               	movlw	255
  8657  002826  6E08               	movwf	??_RF24N_pipe_address& (0+255),c
  8658  002828  0EFF               	movlw	255
  8659  00282A  6E09               	movwf	(??_RF24N_pipe_address+1)& (0+255),c
  8660  00282C  501E               	movf	RF24N_pipe_address@count,w,c
  8661  00282E  6E0A               	movwf	(??_RF24N_pipe_address+2)& (0+255),c
  8662  002830  6A0B               	clrf	(??_RF24N_pipe_address+3)& (0+255),c
  8663  002832  5008               	movf	??_RF24N_pipe_address,w,c
  8664  002834  260A               	addwf	??_RF24N_pipe_address+2,f,c
  8665  002836  5009               	movf	??_RF24N_pipe_address+1,w,c
  8666  002838  220B               	addwfc	??_RF24N_pipe_address+3,f,c
  8667  00283A  0EC9               	movlw	low RF24N_pipe_address@address_translation
  8668  00283C  240A               	addwf	??_RF24N_pipe_address+2,w,c
  8669  00283E  6ED9               	movwf	fsr2l,c
  8670  002840  0E00               	movlw	high RF24N_pipe_address@address_translation
  8671  002842  200B               	addwfc	??_RF24N_pipe_address+3,w,c
  8672  002844  6EDA               	movwf	fsr2h,c
  8673  002846  EE00 F001          	lfsr	0,1
  8674  00284A  501F               	movf	RF24N_pipe_address@out,w,c
  8675  00284C  26E9               	addwf	fsr0l,f,c
  8676  00284E  5020               	movf	RF24N_pipe_address@out+1,w,c
  8677  002850  22EA               	addwfc	fsr0h,f,c
  8678  002852                     L8:
  8679  002852  CFDF FFEF          	movff	indf2,indf0
  8680                           
  8681                           ;RF24Network_c.c: 1395: ;
  8682                           ;RF24Network_c.c: 1399: for(i=0;i<5;i++)
  8683  002856  0E00               	movlw	0
  8684  002858  6E21               	movwf	RF24N_pipe_address@i,c
  8685  00285A                     l3617:
  8686  00285A  0E04               	movlw	4
  8687  00285C  6421               	cpfsgt	RF24N_pipe_address@i,c
  8688  00285E  D001               	goto	l3621
  8689  002860  0012               	return	
  8690  002862                     l3621:
  8691                           
  8692                           ;RF24Network_c.c: 1400: {
  8693                           ;RF24Network_c.c: 1401: address[i]=result[4-i];
  8694  002862  5021               	movf	RF24N_pipe_address@i,w,c
  8695  002864  6E08               	movwf	??_RF24N_pipe_address& (0+255),c
  8696  002866  6A09               	clrf	(??_RF24N_pipe_address+1)& (0+255),c
  8697  002868  1E08               	comf	??_RF24N_pipe_address,f,c
  8698  00286A  1E09               	comf	??_RF24N_pipe_address+1,f,c
  8699  00286C  4A08               	infsnz	??_RF24N_pipe_address,f,c
  8700  00286E  2A09               	incf	??_RF24N_pipe_address+1,f,c
  8701  002870  0E04               	movlw	4
  8702  002872  2608               	addwf	??_RF24N_pipe_address,f,c
  8703  002874  0E00               	movlw	0
  8704  002876  2209               	addwfc	??_RF24N_pipe_address+1,f,c
  8705  002878  0E17               	movlw	low RF24N_pipe_address@result
  8706  00287A  2408               	addwf	??_RF24N_pipe_address,w,c
  8707  00287C  6ED9               	movwf	fsr2l,c
  8708  00287E  0E00               	movlw	high RF24N_pipe_address@result
  8709  002880  2009               	addwfc	??_RF24N_pipe_address+1,w,c
  8710  002882  6EDA               	movwf	fsr2h,c
  8711  002884  5021               	movf	RF24N_pipe_address@i,w,c
  8712  002886  0D01               	mullw	1
  8713  002888  50F3               	movf	prodl,w,c
  8714  00288A  2406               	addwf	RF24N_pipe_address@address,w,c
  8715  00288C  6EE9               	movwf	fsr0l,c
  8716  00288E  50F4               	movf	prodh,w,c
  8717  002890  2007               	addwfc	RF24N_pipe_address@address+1,w,c
  8718  002892  6EEA               	movwf	fsr0h,c
  8719  002894  CFDF FFEF          	movff	indf2,indf0
  8720  002898  2A21               	incf	RF24N_pipe_address@i,f,c
  8721  00289A  D7DF               	goto	l3617
  8722  00289C                     __end_of_RF24N_pipe_address:
  8723                           	opt stack 0
  8724                           tblptru	equ	0xFF8
  8725                           tblptrh	equ	0xFF7
  8726                           tblptrl	equ	0xFF6
  8727                           tablat	equ	0xFF5
  8728                           prodh	equ	0xFF4
  8729                           prodl	equ	0xFF3
  8730                           intcon	equ	0xFF2
  8731                           indf0	equ	0xFEF
  8732                           postinc0	equ	0xFEE
  8733                           postdec0	equ	0xFED
  8734                           plusw0	equ	0xFEB
  8735                           fsr0h	equ	0xFEA
  8736                           fsr0l	equ	0xFE9
  8737                           wreg	equ	0xFE8
  8738                           postinc1	equ	0xFE6
  8739                           indf2	equ	0xFDF
  8740                           postinc2	equ	0xFDE
  8741                           postdec2	equ	0xFDD
  8742                           plusw2	equ	0xFDB
  8743                           fsr2h	equ	0xFDA
  8744                           fsr2l	equ	0xFD9
  8745                           status	equ	0xFD8
  8746                           
  8747 ;; *************** function _RF24_write_register_c_d *****************
  8748 ;; Defined at:
  8749 ;;		line 162 in file "../../../RF24_c/RF24_c.c"
  8750 ;; Parameters:    Size  Location     Type
  8751 ;;  reg             1    wreg     unsigned char 
  8752 ;;  buf             2   11[COMRAM] PTR const unsigned char 
  8753 ;;		 -> RF24_openReadingPipe_d@address(5), RF24_openWritingPipe_d@value(5), rf.pipe0_reading_address(5), rf(22), 
  8754 ;;  len             1   13[COMRAM] unsigned char 
  8755 ;; Auto vars:     Size  Location     Type
  8756 ;;  reg             1   15[COMRAM] unsigned char 
  8757 ;;  status          1   14[COMRAM] unsigned char 
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  1    wreg      unsigned char 
  8760 ;; Registers used:
  8761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8767 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8770 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8771 ;;Total ram usage:        5 bytes
  8772 ;; Hardware stack levels used:    1
  8773 ;; Hardware stack levels required when called:    4
  8774 ;; This function calls:
  8775 ;;		_RF24_beginTransaction
  8776 ;;		_RF24_endTransaction
  8777 ;;		_SPI_transfer
  8778 ;; This function is called by:
  8779 ;;		_RF24_startListening
  8780 ;;		_RF24_openWritingPipe_d
  8781 ;;		_RF24_openReadingPipe_d
  8782 ;;		_RF24_openWritingPipe
  8783 ;;		_RF24_openReadingPipe
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           	psect	text48
  8788  00388A                     __ptext48:
  8789                           	opt stack 0
  8790  00388A                     _RF24_write_register_c_d:
  8791                           	opt stack 23
  8792                           
  8793                           ;incstack = 0
  8794                           ;RF24_write_register_c_d@reg stored from wreg
  8795  00388A  6E10               	movwf	RF24_write_register_c_d@reg,c
  8796                           
  8797                           ;RF24_c.c: 164: uint8_t status;
  8798                           ;RF24_c.c: 181: RF24_beginTransaction();
  8799  00388C  ECEE  F01D         	call	_RF24_beginTransaction	;wreg free
  8800                           
  8801                           ;RF24_c.c: 182: status = SPI_transfer( 0x20 | ( 0x1F & reg ) );
  8802  003890  5010               	movf	RF24_write_register_c_d@reg,w,c
  8803  003892  0B1F               	andlw	31
  8804  003894  0920               	iorlw	32
  8805  003896  ECCE  F01D         	call	_SPI_transfer
  8806  00389A  6E0F               	movwf	RF24_write_register_c_d@status,c
  8807                           
  8808                           ;RF24_c.c: 183: while ( len-- )
  8809  00389C  D009               	goto	l3553
  8810  00389E                     l3549:
  8811                           
  8812                           ;RF24_c.c: 184: SPI_transfer(*buf++);
  8813  00389E  C00C  FFD9         	movff	RF24_write_register_c_d@buf,fsr2l
  8814  0038A2  C00D  FFDA         	movff	RF24_write_register_c_d@buf+1,fsr2h
  8815  0038A6  50DF               	movf	indf2,w,c
  8816  0038A8  ECCE  F01D         	call	_SPI_transfer
  8817  0038AC  4A0C               	infsnz	RF24_write_register_c_d@buf,f,c
  8818  0038AE  2A0D               	incf	RF24_write_register_c_d@buf+1,f,c
  8819  0038B0                     l3553:
  8820  0038B0  060E               	decf	RF24_write_register_c_d@len,f,c
  8821  0038B2  280E               	incf	RF24_write_register_c_d@len,w,c
  8822  0038B4  A4D8               	btfss	status,2,c
  8823  0038B6  D7F3               	goto	l3549
  8824                           
  8825                           ;RF24_c.c: 185: RF24_endTransaction();
  8826  0038B8  ECEA  F01D         	call	_RF24_endTransaction	;wreg free
  8827  0038BC  0012               	return	
  8828  0038BE                     __end_of_RF24_write_register_c_d:
  8829                           	opt stack 0
  8830                           tblptru	equ	0xFF8
  8831                           tblptrh	equ	0xFF7
  8832                           tblptrl	equ	0xFF6
  8833                           tablat	equ	0xFF5
  8834                           prodh	equ	0xFF4
  8835                           prodl	equ	0xFF3
  8836                           intcon	equ	0xFF2
  8837                           indf0	equ	0xFEF
  8838                           postinc0	equ	0xFEE
  8839                           postdec0	equ	0xFED
  8840                           plusw0	equ	0xFEB
  8841                           fsr0h	equ	0xFEA
  8842                           fsr0l	equ	0xFE9
  8843                           wreg	equ	0xFE8
  8844                           postinc1	equ	0xFE6
  8845                           indf2	equ	0xFDF
  8846                           postinc2	equ	0xFDE
  8847                           postdec2	equ	0xFDD
  8848                           plusw2	equ	0xFDB
  8849                           fsr2h	equ	0xFDA
  8850                           fsr2l	equ	0xFD9
  8851                           status	equ	0xFD8
  8852                           
  8853 ;; *************** function _RF24_get_status *****************
  8854 ;; Defined at:
  8855 ;;		line 355 in file "../../../RF24_c/RF24_c.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;		None
  8858 ;; Auto vars:     Size  Location     Type
  8859 ;;		None
  8860 ;; Return value:  Size  Location     Type
  8861 ;;                  1    wreg      unsigned char 
  8862 ;; Registers used:
  8863 ;;		wreg, status,2, status,0, cstack
  8864 ;; Tracked objects:
  8865 ;;		On entry : 0/0
  8866 ;;		On exit  : 0/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8873 ;;Total ram usage:        0 bytes
  8874 ;; Hardware stack levels used:    1
  8875 ;; Hardware stack levels required when called:    5
  8876 ;; This function calls:
  8877 ;;		_RF24_spiTrans
  8878 ;; This function is called by:
  8879 ;;		_RF24_writeFast_m
  8880 ;;		_RF24_txStandBy_t
  8881 ;;		_RF24_available_p
  8882 ;;		_RF24_write_m
  8883 ;;		_RF24_writeBlocking
  8884 ;;		_RF24_txStandBy
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           	psect	text49
  8889  003BCC                     __ptext49:
  8890                           	opt stack 0
  8891  003BCC                     _RF24_get_status:
  8892                           	opt stack 21
  8893                           
  8894                           ;RF24_c.c: 357: return RF24_spiTrans( 0xFF);
  8895                           
  8896                           ;incstack = 0
  8897  003BCC  0EFF               	movlw	255
  8898  003BCE  ECBA  F01D         	call	_RF24_spiTrans
  8899  003BD2  0012               	return	
  8900  003BD4                     __end_of_RF24_get_status:
  8901                           	opt stack 0
  8902                           tblptru	equ	0xFF8
  8903                           tblptrh	equ	0xFF7
  8904                           tblptrl	equ	0xFF6
  8905                           tablat	equ	0xFF5
  8906                           prodh	equ	0xFF4
  8907                           prodl	equ	0xFF3
  8908                           intcon	equ	0xFF2
  8909                           indf0	equ	0xFEF
  8910                           postinc0	equ	0xFEE
  8911                           postdec0	equ	0xFED
  8912                           plusw0	equ	0xFEB
  8913                           fsr0h	equ	0xFEA
  8914                           fsr0l	equ	0xFE9
  8915                           wreg	equ	0xFE8
  8916                           postinc1	equ	0xFE6
  8917                           indf2	equ	0xFDF
  8918                           postinc2	equ	0xFDE
  8919                           postdec2	equ	0xFDD
  8920                           plusw2	equ	0xFDB
  8921                           fsr2h	equ	0xFDA
  8922                           fsr2l	equ	0xFD9
  8923                           status	equ	0xFD8
  8924                           
  8925 ;; *************** function _RF24_spiTrans *****************
  8926 ;; Defined at:
  8927 ;;		line 327 in file "../../../RF24_c/RF24_c.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;  cmd             1    wreg     unsigned char 
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;  cmd             1   13[COMRAM] unsigned char 
  8932 ;;  status          1   14[COMRAM] unsigned char 
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  1    wreg      unsigned char 
  8935 ;; Registers used:
  8936 ;;		wreg, status,2, status,0, cstack
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8943 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8945 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8946 ;;Total ram usage:        4 bytes
  8947 ;; Hardware stack levels used:    1
  8948 ;; Hardware stack levels required when called:    4
  8949 ;; This function calls:
  8950 ;;		_RF24_beginTransaction
  8951 ;;		_RF24_endTransaction
  8952 ;;		_SPI_transfer
  8953 ;; This function is called by:
  8954 ;;		_RF24_flush_rx
  8955 ;;		_RF24_flush_tx
  8956 ;;		_RF24_get_status
  8957 ;;		_RF24_reUseTX
  8958 ;; This function uses a non-reentrant model
  8959 ;;
  8960                           
  8961                           	psect	text50
  8962  003B74                     __ptext50:
  8963                           	opt stack 0
  8964  003B74                     _RF24_spiTrans:
  8965                           	opt stack 23
  8966                           
  8967                           ;incstack = 0
  8968                           ;RF24_spiTrans@cmd stored from wreg
  8969  003B74  6E0E               	movwf	RF24_spiTrans@cmd,c
  8970                           
  8971                           ;RF24_c.c: 329: uint8_t status;
  8972                           ;RF24_c.c: 331: RF24_beginTransaction();
  8973  003B76  ECEE  F01D         	call	_RF24_beginTransaction	;wreg free
  8974                           
  8975                           ;RF24_c.c: 332: status = SPI_transfer( cmd );
  8976  003B7A  500E               	movf	RF24_spiTrans@cmd,w,c
  8977  003B7C  ECCE  F01D         	call	_SPI_transfer
  8978  003B80  6E0F               	movwf	RF24_spiTrans@status,c
  8979                           
  8980                           ;RF24_c.c: 333: RF24_endTransaction();
  8981  003B82  ECEA  F01D         	call	_RF24_endTransaction	;wreg free
  8982                           
  8983                           ;RF24_c.c: 335: return status;
  8984  003B86  500F               	movf	RF24_spiTrans@status,w,c
  8985  003B88  0012               	return	
  8986  003B8A                     __end_of_RF24_spiTrans:
  8987                           	opt stack 0
  8988                           tblptru	equ	0xFF8
  8989                           tblptrh	equ	0xFF7
  8990                           tblptrl	equ	0xFF6
  8991                           tablat	equ	0xFF5
  8992                           prodh	equ	0xFF4
  8993                           prodl	equ	0xFF3
  8994                           intcon	equ	0xFF2
  8995                           indf0	equ	0xFEF
  8996                           postinc0	equ	0xFEE
  8997                           postdec0	equ	0xFED
  8998                           plusw0	equ	0xFEB
  8999                           fsr0h	equ	0xFEA
  9000                           fsr0l	equ	0xFE9
  9001                           wreg	equ	0xFE8
  9002                           postinc1	equ	0xFE6
  9003                           indf2	equ	0xFDF
  9004                           postinc2	equ	0xFDE
  9005                           postdec2	equ	0xFDD
  9006                           plusw2	equ	0xFDB
  9007                           fsr2h	equ	0xFDA
  9008                           fsr2l	equ	0xFD9
  9009                           status	equ	0xFD8
  9010                           
  9011 ;; *************** function _SPI_transfer *****************
  9012 ;; Defined at:
  9013 ;;		line 250 in file "../../../RF24_c/utility/XC8/spi.c"
  9014 ;; Parameters:    Size  Location     Type
  9015 ;;  data            1    wreg     unsigned char 
  9016 ;; Auto vars:     Size  Location     Type
  9017 ;;  data            1    2[COMRAM] unsigned char 
  9018 ;; Return value:  Size  Location     Type
  9019 ;;                  1    wreg      unsigned char 
  9020 ;; Registers used:
  9021 ;;		wreg, status,2
  9022 ;; Tracked objects:
  9023 ;;		On entry : 0/0
  9024 ;;		On exit  : 0/0
  9025 ;;		Unchanged: 0/0
  9026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9031 ;;Total ram usage:        1 bytes
  9032 ;; Hardware stack levels used:    1
  9033 ;; Hardware stack levels required when called:    1
  9034 ;; This function calls:
  9035 ;;		Nothing
  9036 ;; This function is called by:
  9037 ;;		_RF24_read_register_d
  9038 ;;		_RF24_write_register_c_d
  9039 ;;		_RF24_write_register_d
  9040 ;;		_RF24_write_payload
  9041 ;;		_RF24_read_payload
  9042 ;;		_RF24_spiTrans
  9043 ;;		_RF24_getDynamicPayloadSize
  9044 ;;		_RF24_toggle_features_d
  9045 ;;		_RF24_read_register_m_d
  9046 ;;		_RF24_writeAckPayload
  9047 ;; This function uses a non-reentrant model
  9048 ;;
  9049                           
  9050                           	psect	text51
  9051  003B9C                     __ptext51:
  9052                           	opt stack 0
  9053  003B9C                     _SPI_transfer:
  9054                           	opt stack 26
  9055                           
  9056                           ;incstack = 0
  9057                           ;SPI_transfer@data stored from wreg
  9058  003B9C  6E03               	movwf	SPI_transfer@data,c
  9059                           
  9060                           ;spi.c: 252: SSPSTATbits.BF = 0;
  9061  003B9E  90C7               	bcf	4039,0,c	;volatile
  9062                           
  9063                           ;spi.c: 253: SSPBUF = data;
  9064  003BA0  C003  FFC9         	movff	SPI_transfer@data,4041	;volatile
  9065  003BA4                     l312:
  9066  003BA4  A0C7               	btfss	4039,0,c	;volatile
  9067  003BA6  D7FE               	goto	l312
  9068                           
  9069                           ;spi.c: 255: return SSPBUF;
  9070  003BA8  50C9               	movf	4041,w,c	;volatile
  9071  003BAA  0012               	return		;funcret
  9072  003BAC                     __end_of_SPI_transfer:
  9073                           	opt stack 0
  9074                           tblptru	equ	0xFF8
  9075                           tblptrh	equ	0xFF7
  9076                           tblptrl	equ	0xFF6
  9077                           tablat	equ	0xFF5
  9078                           prodh	equ	0xFF4
  9079                           prodl	equ	0xFF3
  9080                           intcon	equ	0xFF2
  9081                           indf0	equ	0xFEF
  9082                           postinc0	equ	0xFEE
  9083                           postdec0	equ	0xFED
  9084                           plusw0	equ	0xFEB
  9085                           fsr0h	equ	0xFEA
  9086                           fsr0l	equ	0xFE9
  9087                           wreg	equ	0xFE8
  9088                           postinc1	equ	0xFE6
  9089                           indf2	equ	0xFDF
  9090                           postinc2	equ	0xFDE
  9091                           postdec2	equ	0xFDD
  9092                           plusw2	equ	0xFDB
  9093                           fsr2h	equ	0xFDA
  9094                           fsr2l	equ	0xFD9
  9095                           status	equ	0xFD8
  9096                           
  9097 ;; *************** function _RF24_endTransaction *****************
  9098 ;; Defined at:
  9099 ;;		line 84 in file "../../../RF24_c/RF24_c.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;		None
  9102 ;; Auto vars:     Size  Location     Type
  9103 ;;		None
  9104 ;; Return value:  Size  Location     Type
  9105 ;;                  1    wreg      void 
  9106 ;; Registers used:
  9107 ;;		wreg, status,2, status,0, cstack
  9108 ;; Tracked objects:
  9109 ;;		On entry : 0/0
  9110 ;;		On exit  : 0/0
  9111 ;;		Unchanged: 0/0
  9112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9117 ;;Total ram usage:        0 bytes
  9118 ;; Hardware stack levels used:    1
  9119 ;; Hardware stack levels required when called:    3
  9120 ;; This function calls:
  9121 ;;		_RF24_csn_d
  9122 ;; This function is called by:
  9123 ;;		_RF24_read_register_d
  9124 ;;		_RF24_write_register_c_d
  9125 ;;		_RF24_write_register_d
  9126 ;;		_RF24_write_payload
  9127 ;;		_RF24_read_payload
  9128 ;;		_RF24_spiTrans
  9129 ;;		_RF24_getDynamicPayloadSize
  9130 ;;		_RF24_toggle_features_d
  9131 ;;		_RF24_read_register_m_d
  9132 ;;		_RF24_writeAckPayload
  9133 ;; This function uses a non-reentrant model
  9134 ;;
  9135                           
  9136                           	psect	text52
  9137  003BD4                     __ptext52:
  9138                           	opt stack 0
  9139  003BD4                     _RF24_endTransaction:
  9140                           	opt stack 24
  9141                           
  9142                           ;RF24_c.c: 85: RF24_csn_d(1);
  9143                           
  9144                           ;incstack = 0
  9145  003BD4  0E01               	movlw	1
  9146  003BD6  ECA3  F01D         	call	_RF24_csn_d
  9147  003BDA  0012               	return		;funcret
  9148  003BDC                     __end_of_RF24_endTransaction:
  9149                           	opt stack 0
  9150                           tblptru	equ	0xFF8
  9151                           tblptrh	equ	0xFF7
  9152                           tblptrl	equ	0xFF6
  9153                           tablat	equ	0xFF5
  9154                           prodh	equ	0xFF4
  9155                           prodl	equ	0xFF3
  9156                           intcon	equ	0xFF2
  9157                           indf0	equ	0xFEF
  9158                           postinc0	equ	0xFEE
  9159                           postdec0	equ	0xFED
  9160                           plusw0	equ	0xFEB
  9161                           fsr0h	equ	0xFEA
  9162                           fsr0l	equ	0xFE9
  9163                           wreg	equ	0xFE8
  9164                           postinc1	equ	0xFE6
  9165                           indf2	equ	0xFDF
  9166                           postinc2	equ	0xFDE
  9167                           postdec2	equ	0xFDD
  9168                           plusw2	equ	0xFDB
  9169                           fsr2h	equ	0xFDA
  9170                           fsr2l	equ	0xFD9
  9171                           status	equ	0xFD8
  9172                           
  9173 ;; *************** function _RF24_beginTransaction *****************
  9174 ;; Defined at:
  9175 ;;		line 75 in file "../../../RF24_c/RF24_c.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;		None
  9178 ;; Auto vars:     Size  Location     Type
  9179 ;;		None
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  1    wreg      void 
  9182 ;; Registers used:
  9183 ;;		wreg, status,2, status,0, cstack
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;Total ram usage:        0 bytes
  9194 ;; Hardware stack levels used:    1
  9195 ;; Hardware stack levels required when called:    3
  9196 ;; This function calls:
  9197 ;;		_RF24_csn_d
  9198 ;; This function is called by:
  9199 ;;		_RF24_read_register_d
  9200 ;;		_RF24_write_register_c_d
  9201 ;;		_RF24_write_register_d
  9202 ;;		_RF24_write_payload
  9203 ;;		_RF24_read_payload
  9204 ;;		_RF24_spiTrans
  9205 ;;		_RF24_getDynamicPayloadSize
  9206 ;;		_RF24_toggle_features_d
  9207 ;;		_RF24_read_register_m_d
  9208 ;;		_RF24_writeAckPayload
  9209 ;; This function uses a non-reentrant model
  9210 ;;
  9211                           
  9212                           	psect	text53
  9213  003BDC                     __ptext53:
  9214                           	opt stack 0
  9215  003BDC                     _RF24_beginTransaction:
  9216                           	opt stack 24
  9217                           
  9218                           ;RF24_c.c: 79: RF24_csn_d(0);
  9219                           
  9220                           ;incstack = 0
  9221  003BDC  0E00               	movlw	0
  9222  003BDE  ECA3  F01D         	call	_RF24_csn_d
  9223  003BE2  0012               	return		;funcret
  9224  003BE4                     __end_of_RF24_beginTransaction:
  9225                           	opt stack 0
  9226                           tblptru	equ	0xFF8
  9227                           tblptrh	equ	0xFF7
  9228                           tblptrl	equ	0xFF6
  9229                           tablat	equ	0xFF5
  9230                           prodh	equ	0xFF4
  9231                           prodl	equ	0xFF3
  9232                           intcon	equ	0xFF2
  9233                           indf0	equ	0xFEF
  9234                           postinc0	equ	0xFEE
  9235                           postdec0	equ	0xFED
  9236                           plusw0	equ	0xFEB
  9237                           fsr0h	equ	0xFEA
  9238                           fsr0l	equ	0xFE9
  9239                           wreg	equ	0xFE8
  9240                           postinc1	equ	0xFE6
  9241                           indf2	equ	0xFDF
  9242                           postinc2	equ	0xFDE
  9243                           postdec2	equ	0xFDD
  9244                           plusw2	equ	0xFDB
  9245                           fsr2h	equ	0xFDA
  9246                           fsr2l	equ	0xFD9
  9247                           status	equ	0xFD8
  9248                           
  9249 ;; *************** function _RF24_csn_d *****************
  9250 ;; Defined at:
  9251 ;;		line 22 in file "../../../RF24_c/RF24_c.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;  mode            1    wreg     unsigned char 
  9254 ;; Auto vars:     Size  Location     Type
  9255 ;;  mode            1   10[COMRAM] unsigned char 
  9256 ;; Return value:  Size  Location     Type
  9257 ;;                  1    wreg      void 
  9258 ;; Registers used:
  9259 ;;		wreg, status,2, status,0, cstack
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9268 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9269 ;;Total ram usage:        2 bytes
  9270 ;; Hardware stack levels used:    1
  9271 ;; Hardware stack levels required when called:    2
  9272 ;; This function calls:
  9273 ;;		_delayMicroseconds
  9274 ;;		_digitalWrite
  9275 ;; This function is called by:
  9276 ;;		_RF24_beginTransaction
  9277 ;;		_RF24_endTransaction
  9278 ;;		_RF24_begin
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           	psect	text54
  9283  003B46                     __ptext54:
  9284                           	opt stack 0
  9285  003B46                     _RF24_csn_d:
  9286                           	opt stack 24
  9287                           
  9288                           ;incstack = 0
  9289                           ;RF24_csn_d@mode stored from wreg
  9290  003B46  6E0B               	movwf	RF24_csn_d@mode,c
  9291                           
  9292                           ;RF24_c.c: 59: digitalWrite(rf.csn_pin,mode);
  9293  003B48  C00B  F003         	movff	RF24_csn_d@mode,digitalWrite@mode
  9294  003B4C  0100               	movlb	0	; () banked
  9295  003B4E  518D               	movf	(_rf+1)& (0+255),w,b
  9296  003B50  ECD8  F011         	call	_digitalWrite
  9297                           
  9298                           ;RF24_c.c: 60: delayMicroseconds(rf.csDelay);
  9299  003B54  0100               	movlb	0	; () banked
  9300  003B56  519D               	movf	(_rf+17)& (0+255),w,b
  9301  003B58  EC7A  F01B         	call	_delayMicroseconds
  9302  003B5C  0012               	return		;funcret
  9303  003B5E                     __end_of_RF24_csn_d:
  9304                           	opt stack 0
  9305                           tblptru	equ	0xFF8
  9306                           tblptrh	equ	0xFF7
  9307                           tblptrl	equ	0xFF6
  9308                           tablat	equ	0xFF5
  9309                           prodh	equ	0xFF4
  9310                           prodl	equ	0xFF3
  9311                           intcon	equ	0xFF2
  9312                           indf0	equ	0xFEF
  9313                           postinc0	equ	0xFEE
  9314                           postdec0	equ	0xFED
  9315                           plusw0	equ	0xFEB
  9316                           fsr0h	equ	0xFEA
  9317                           fsr0l	equ	0xFE9
  9318                           wreg	equ	0xFE8
  9319                           postinc1	equ	0xFE6
  9320                           indf2	equ	0xFDF
  9321                           postinc2	equ	0xFDE
  9322                           postdec2	equ	0xFDD
  9323                           plusw2	equ	0xFDB
  9324                           fsr2h	equ	0xFDA
  9325                           fsr2l	equ	0xFD9
  9326                           status	equ	0xFD8
  9327                           
  9328 ;; *************** function _RF24_closeReadingPipe *****************
  9329 ;; Defined at:
  9330 ;;		line 1259 in file "../../../RF24_c/RF24_c.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;  pipe            1    wreg     unsigned char 
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;  pipe            1   20[COMRAM] unsigned char 
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  1    wreg      void 
  9337 ;; Registers used:
  9338 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9345 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9346 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9347 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9348 ;;Total ram usage:        5 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:    5
  9351 ;; This function calls:
  9352 ;;		_RF24_read_register_d
  9353 ;;		_RF24_write_register_d
  9354 ;; This function is called by:
  9355 ;;		_RF24_startListening
  9356 ;; This function uses a non-reentrant model
  9357 ;;
  9358                           
  9359                           	psect	text55
  9360  0036B4                     __ptext55:
  9361                           	opt stack 0
  9362  0036B4                     _RF24_closeReadingPipe:
  9363                           	opt stack 22
  9364                           
  9365                           ;incstack = 0
  9366                           ;RF24_closeReadingPipe@pipe stored from wreg
  9367  0036B4  6E15               	movwf	RF24_closeReadingPipe@pipe,c
  9368                           
  9369                           ;RF24_c.c: 1261: RF24_write_register_d(0x02,RF24_read_register_d(0x02) & ~(1<<((*(&child
      +                          _pipe_enable[pipe])))));
  9370  0036B6  5015               	movf	RF24_closeReadingPipe@pipe,w,c
  9371  0036B8  0D01               	mullw	1
  9372  0036BA  0E0D               	movlw	low _child_pipe_enable
  9373  0036BC  24F3               	addwf	prodl,w,c
  9374  0036BE  6EF6               	movwf	tblptrl,c
  9375  0036C0  0E10               	movlw	high _child_pipe_enable
  9376  0036C2  20F4               	addwfc	prodh,w,c
  9377  0036C4  6EF7               	movwf	tblptrh,c
  9378  0036C6                     	if	0	;There are less than 3 active tblptr bytes
  9379  0036C6                     	endif
  9380  0036C6  0008               	tblrd		*
  9381  0036C8  CFF5 F011          	movff	tablat,??_RF24_closeReadingPipe
  9382  0036CC  0E01               	movlw	1
  9383  0036CE  6E12               	movwf	(??_RF24_closeReadingPipe+1)& (0+255),c
  9384  0036D0  2A11               	incf	??_RF24_closeReadingPipe,f,c
  9385  0036D2  D002               	goto	u3804
  9386  0036D4                     u3805:
  9387  0036D4  90D8               	bcf	status,0,c
  9388  0036D6  3612               	rlcf	??_RF24_closeReadingPipe+1,f,c
  9389  0036D8                     u3804:
  9390  0036D8  2E11               	decfsz	??_RF24_closeReadingPipe,f,c
  9391  0036DA  D7FC               	goto	u3805
  9392  0036DC  5012               	movf	??_RF24_closeReadingPipe+1,w,c
  9393  0036DE  0AFF               	xorlw	255
  9394  0036E0  6E13               	movwf	(??_RF24_closeReadingPipe+2)& (0+255),c
  9395  0036E2  0E02               	movlw	2
  9396  0036E4  EC50  F01D         	call	_RF24_read_register_d
  9397  0036E8  1413               	andwf	??_RF24_closeReadingPipe+2,w,c
  9398  0036EA  6E0E               	movwf	RF24_write_register_d@value,c
  9399  0036EC  0E02               	movlw	2
  9400  0036EE  EC40  F01D         	call	_RF24_write_register_d
  9401  0036F2  0012               	return		;funcret
  9402  0036F4                     __end_of_RF24_closeReadingPipe:
  9403                           	opt stack 0
  9404                           tblptru	equ	0xFF8
  9405                           tblptrh	equ	0xFF7
  9406                           tblptrl	equ	0xFF6
  9407                           tablat	equ	0xFF5
  9408                           prodh	equ	0xFF4
  9409                           prodl	equ	0xFF3
  9410                           intcon	equ	0xFF2
  9411                           indf0	equ	0xFEF
  9412                           postinc0	equ	0xFEE
  9413                           postdec0	equ	0xFED
  9414                           plusw0	equ	0xFEB
  9415                           fsr0h	equ	0xFEA
  9416                           fsr0l	equ	0xFE9
  9417                           wreg	equ	0xFE8
  9418                           postinc1	equ	0xFE6
  9419                           indf2	equ	0xFDF
  9420                           postinc2	equ	0xFDE
  9421                           postdec2	equ	0xFDD
  9422                           plusw2	equ	0xFDB
  9423                           fsr2h	equ	0xFDA
  9424                           fsr2l	equ	0xFD9
  9425                           status	equ	0xFD8
  9426                           
  9427 ;; *************** function _RF24N_is_valid_address *****************
  9428 ;; Defined at:
  9429 ;;		line 1312 in file "../../RF24Network_c.c"
  9430 ;; Parameters:    Size  Location     Type
  9431 ;;  node            2    2[COMRAM] unsigned int 
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;  digit           1    6[COMRAM] unsigned char 
  9434 ;;  result          1    7[COMRAM] unsigned char 
  9435 ;; Return value:  Size  Location     Type
  9436 ;;                  1    wreg      unsigned char 
  9437 ;; Registers used:
  9438 ;;		wreg, status,2, status,0
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9445 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9447 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9448 ;;Total ram usage:        6 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; Hardware stack levels required when called:    1
  9451 ;; This function calls:
  9452 ;;		Nothing
  9453 ;; This function is called by:
  9454 ;;		_RF24N_begin_d
  9455 ;;		_RF24N_update
  9456 ;;		_RF24N_write
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460                           	psect	text56
  9461  003854                     __ptext56:
  9462                           	opt stack 0
  9463  003854                     _RF24N_is_valid_address:
  9464                           	opt stack 27
  9465                           
  9466                           ;RF24Network_c.c: 1314: uint8_t result = 1;
  9467                           
  9468                           ;incstack = 0
  9469  003854  0E01               	movlw	1
  9470  003856  6E08               	movwf	RF24N_is_valid_address@result,c
  9471                           
  9472                           ;RF24Network_c.c: 1316: while(node)
  9473  003858  D012               	goto	l3813
  9474  00385A                     l3807:
  9475                           
  9476                           ;RF24Network_c.c: 1317: {
  9477                           ;RF24Network_c.c: 1318: uint8_t digit = node & 0x07;
  9478  00385A  5003               	movf	RF24N_is_valid_address@node,w,c
  9479  00385C  0B07               	andlw	7
  9480  00385E  6E07               	movwf	RF24N_is_valid_address@digit,c
  9481                           
  9482                           ;RF24Network_c.c: 1322: if ( (digit > 5))
  9483  003860  0E05               	movlw	5
  9484  003862  6407               	cpfsgt	RF24N_is_valid_address@digit,c
  9485  003864  D003               	goto	l3811
  9486                           
  9487                           ;RF24Network_c.c: 1324: {
  9488                           ;RF24Network_c.c: 1325: result = 0;
  9489  003866  0E00               	movlw	0
  9490  003868  6E08               	movwf	RF24N_is_valid_address@result,c
  9491                           
  9492                           ;RF24Network_c.c: 1326: ;
  9493                           ;RF24Network_c.c: 1327: break;
  9494  00386A  D00D               	goto	l3815
  9495  00386C                     l3811:
  9496                           
  9497                           ;RF24Network_c.c: 1328: }
  9498                           ;RF24Network_c.c: 1329: node >>= 3;
  9499  00386C  90D8               	bcf	status,0,c
  9500  00386E  3204               	rrcf	RF24N_is_valid_address@node+1,f,c
  9501  003870  3203               	rrcf	RF24N_is_valid_address@node,f,c
  9502  003872  90D8               	bcf	status,0,c
  9503  003874  3204               	rrcf	RF24N_is_valid_address@node+1,f,c
  9504  003876  3203               	rrcf	RF24N_is_valid_address@node,f,c
  9505  003878  90D8               	bcf	status,0,c
  9506  00387A  3204               	rrcf	RF24N_is_valid_address@node+1,f,c
  9507  00387C  3203               	rrcf	RF24N_is_valid_address@node,f,c
  9508  00387E                     l3813:
  9509  00387E  5003               	movf	RF24N_is_valid_address@node,w,c
  9510  003880  1004               	iorwf	RF24N_is_valid_address@node+1,w,c
  9511  003882  A4D8               	btfss	status,2,c
  9512  003884  D7EA               	goto	l3807
  9513  003886                     l3815:
  9514                           
  9515                           ;RF24Network_c.c: 1330: }
  9516                           ;RF24Network_c.c: 1332: return result;
  9517  003886  5008               	movf	RF24N_is_valid_address@result,w,c
  9518  003888  0012               	return	
  9519  00388A                     __end_of_RF24N_is_valid_address:
  9520                           	opt stack 0
  9521                           tblptru	equ	0xFF8
  9522                           tblptrh	equ	0xFF7
  9523                           tblptrl	equ	0xFF6
  9524                           tablat	equ	0xFF5
  9525                           prodh	equ	0xFF4
  9526                           prodl	equ	0xFF3
  9527                           intcon	equ	0xFF2
  9528                           indf0	equ	0xFEF
  9529                           postinc0	equ	0xFEE
  9530                           postdec0	equ	0xFED
  9531                           plusw0	equ	0xFEB
  9532                           fsr0h	equ	0xFEA
  9533                           fsr0l	equ	0xFE9
  9534                           wreg	equ	0xFE8
  9535                           postinc1	equ	0xFE6
  9536                           indf2	equ	0xFDF
  9537                           postinc2	equ	0xFDE
  9538                           postdec2	equ	0xFDD
  9539                           plusw2	equ	0xFDB
  9540                           fsr2h	equ	0xFDA
  9541                           fsr2l	equ	0xFD9
  9542                           status	equ	0xFD8
  9543                           
  9544 ;; *************** function _RF24_isValid *****************
  9545 ;; Defined at:
  9546 ;;		line 1420 in file "../../../RF24_c/RF24_c.c"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;		None
  9549 ;; Auto vars:     Size  Location     Type
  9550 ;;		None
  9551 ;; Return value:  Size  Location     Type
  9552 ;;                  1    wreg      unsigned char 
  9553 ;; Registers used:
  9554 ;;		wreg, status,2, status,0
  9555 ;; Tracked objects:
  9556 ;;		On entry : 0/0
  9557 ;;		On exit  : 0/0
  9558 ;;		Unchanged: 0/0
  9559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9561 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9563 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9564 ;;Total ram usage:        2 bytes
  9565 ;; Hardware stack levels used:    1
  9566 ;; Hardware stack levels required when called:    1
  9567 ;; This function calls:
  9568 ;;		Nothing
  9569 ;; This function is called by:
  9570 ;;		_RF24N_begin_d
  9571 ;;		_RF24N_update
  9572 ;; This function uses a non-reentrant model
  9573 ;;
  9574                           
  9575                           	psect	text57
  9576  003ADA                     __ptext57:
  9577                           	opt stack 0
  9578  003ADA                     _RF24_isValid:
  9579                           	opt stack 27
  9580                           
  9581                           ;RF24_c.c: 1422: return rf.ce_pin != 0xff && rf.csn_pin != 0xff;
  9582                           
  9583                           ;incstack = 0
  9584  003ADA  0E00               	movlw	0
  9585  003ADC  6E04               	movwf	_RF24_isValid$2468,c
  9586  003ADE  0100               	movlb	0	; () banked
  9587  003AE0  298C               	incf	_rf& (0+255),w,b
  9588  003AE2  B4D8               	btfsc	status,2,c
  9589  003AE4  D006               	goto	l971
  9590                           
  9591                           ; BSR set to: 0
  9592  003AE6  0100               	movlb	0	; () banked
  9593  003AE8  298D               	incf	(_rf+1)& (0+255),w,b
  9594  003AEA  B4D8               	btfsc	status,2,c
  9595  003AEC  D002               	goto	l971
  9596                           
  9597                           ; BSR set to: 0
  9598  003AEE  0E01               	movlw	1
  9599  003AF0  6E04               	movwf	_RF24_isValid$2468,c
  9600  003AF2                     l971:
  9601                           
  9602                           ; BSR set to: 0
  9603  003AF2  5004               	movf	_RF24_isValid$2468,w,c
  9604  003AF4  0012               	return	
  9605  003AF6                     __end_of_RF24_isValid:
  9606                           	opt stack 0
  9607                           tblptru	equ	0xFF8
  9608                           tblptrh	equ	0xFF7
  9609                           tblptrl	equ	0xFF6
  9610                           tablat	equ	0xFF5
  9611                           prodh	equ	0xFF4
  9612                           prodl	equ	0xFF3
  9613                           intcon	equ	0xFF2
  9614                           indf0	equ	0xFEF
  9615                           postinc0	equ	0xFEE
  9616                           postdec0	equ	0xFED
  9617                           plusw0	equ	0xFEB
  9618                           fsr0h	equ	0xFEA
  9619                           fsr0l	equ	0xFE9
  9620                           wreg	equ	0xFE8
  9621                           postinc1	equ	0xFE6
  9622                           indf2	equ	0xFDF
  9623                           postinc2	equ	0xFDE
  9624                           postdec2	equ	0xFDD
  9625                           plusw2	equ	0xFDB
  9626                           fsr2h	equ	0xFDA
  9627                           fsr2l	equ	0xFD9
  9628                           status	equ	0xFD8
  9629                           
  9630 ;; *************** function _delayMicroseconds *****************
  9631 ;; Defined at:
  9632 ;;		line 210 in file "../../../RF24_c/utility/XC8/spi.c"
  9633 ;; Parameters:    Size  Location     Type
  9634 ;;  d               1    wreg     unsigned char 
  9635 ;; Auto vars:     Size  Location     Type
  9636 ;;  d               1    4[COMRAM] unsigned char 
  9637 ;;  j               2    7[COMRAM] unsigned int 
  9638 ;;  i               2    5[COMRAM] unsigned int 
  9639 ;; Return value:  Size  Location     Type
  9640 ;;                  1    wreg      void 
  9641 ;; Registers used:
  9642 ;;		wreg, status,2, status,0
  9643 ;; Tracked objects:
  9644 ;;		On entry : 0/0
  9645 ;;		On exit  : 0/0
  9646 ;;		Unchanged: 0/0
  9647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9649 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9650 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9651 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9652 ;;Total ram usage:        7 bytes
  9653 ;; Hardware stack levels used:    1
  9654 ;; Hardware stack levels required when called:    1
  9655 ;; This function calls:
  9656 ;;		Nothing
  9657 ;; This function is called by:
  9658 ;;		_RF24N_write_
  9659 ;;		_RF24_csn_d
  9660 ;;		_RF24_stopListening
  9661 ;;		_RF24_startWrite
  9662 ;; This function uses a non-reentrant model
  9663 ;;
  9664                           
  9665                           	psect	text58
  9666  0036F4                     __ptext58:
  9667                           	opt stack 0
  9668  0036F4                     _delayMicroseconds:
  9669                           	opt stack 24
  9670                           
  9671                           ; BSR set to: 0
  9672                           ;incstack = 0
  9673                           ;delayMicroseconds@d stored from wreg
  9674  0036F4  6E05               	movwf	delayMicroseconds@d,c
  9675                           
  9676                           ;spi.c: 212: unsigned int i,j;
  9677                           ;spi.c: 213: for(i=0;i<d;i++)
  9678  0036F6  0E00               	movlw	0
  9679  0036F8  6E07               	movwf	delayMicroseconds@i+1,c
  9680  0036FA  0E00               	movlw	0
  9681  0036FC  6E06               	movwf	delayMicroseconds@i,c
  9682  0036FE  D010               	goto	l3443
  9683  003700                     l3431:
  9684                           
  9685                           ;spi.c: 214: for (j =0 ; j < (32000000/(4000000l)); j++)
  9686  003700  0E00               	movlw	0
  9687  003702  6E09               	movwf	delayMicroseconds@j+1,c
  9688  003704  0E00               	movlw	0
  9689  003706  6E08               	movwf	delayMicroseconds@j,c
  9690  003708                     l3433:
  9691  003708  5009               	movf	delayMicroseconds@j+1,w,c
  9692  00370A  E108               	bnz	l3441
  9693  00370C  0E08               	movlw	8
  9694  00370E  5C08               	subwf	delayMicroseconds@j,w,c
  9695  003710  B0D8               	btfsc	status,0,c
  9696  003712  D004               	goto	l3441
  9697  003714  F000               	nop		;# 
  9698  003716  4A08               	infsnz	delayMicroseconds@j,f,c
  9699  003718  2A09               	incf	delayMicroseconds@j+1,f,c
  9700  00371A  D7F6               	goto	l3433
  9701  00371C                     l3441:
  9702  00371C  4A06               	infsnz	delayMicroseconds@i,f,c
  9703  00371E  2A07               	incf	delayMicroseconds@i+1,f,c
  9704  003720                     l3443:
  9705  003720  5005               	movf	delayMicroseconds@d,w,c
  9706  003722  6E03               	movwf	??_delayMicroseconds& (0+255),c
  9707  003724  6A04               	clrf	(??_delayMicroseconds+1)& (0+255),c
  9708  003726  5003               	movf	??_delayMicroseconds,w,c
  9709  003728  5C06               	subwf	delayMicroseconds@i,w,c
  9710  00372A  5004               	movf	??_delayMicroseconds+1,w,c
  9711  00372C  5807               	subwfb	delayMicroseconds@i+1,w,c
  9712  00372E  B0D8               	btfsc	status,0,c
  9713  003730  0012               	return	
  9714  003732  D7E6               	goto	l3431
  9715  003734                     __end_of_delayMicroseconds:
  9716                           	opt stack 0
  9717                           tblptru	equ	0xFF8
  9718                           tblptrh	equ	0xFF7
  9719                           tblptrl	equ	0xFF6
  9720                           tablat	equ	0xFF5
  9721                           prodh	equ	0xFF4
  9722                           prodl	equ	0xFF3
  9723                           intcon	equ	0xFF2
  9724                           indf0	equ	0xFEF
  9725                           postinc0	equ	0xFEE
  9726                           postdec0	equ	0xFED
  9727                           plusw0	equ	0xFEB
  9728                           fsr0h	equ	0xFEA
  9729                           fsr0l	equ	0xFE9
  9730                           wreg	equ	0xFE8
  9731                           postinc1	equ	0xFE6
  9732                           indf2	equ	0xFDF
  9733                           postinc2	equ	0xFDE
  9734                           postdec2	equ	0xFDD
  9735                           plusw2	equ	0xFDB
  9736                           fsr2h	equ	0xFDA
  9737                           fsr2l	equ	0xFD9
  9738                           status	equ	0xFD8
  9739                           
  9740 ;; *************** function _RF24_ce_d *****************
  9741 ;; Defined at:
  9742 ;;		line 67 in file "../../../RF24_c/RF24_c.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;  level           1    wreg     unsigned char 
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;  level           1    6[COMRAM] unsigned char 
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      void 
  9749 ;; Registers used:
  9750 ;;		wreg, status,2, status,0, cstack
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9757 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9760 ;;Total ram usage:        2 bytes
  9761 ;; Hardware stack levels used:    1
  9762 ;; Hardware stack levels required when called:    2
  9763 ;; This function calls:
  9764 ;;		_digitalWrite
  9765 ;; This function is called by:
  9766 ;;		_RF24_begin
  9767 ;;		_RF24_startListening
  9768 ;;		_RF24_stopListening
  9769 ;;		_RF24_startFastWrite
  9770 ;;		_RF24_txStandBy_t
  9771 ;;		_RF24_powerDown
  9772 ;;		_RF24_write_m
  9773 ;;		_RF24_reUseTX
  9774 ;;		_RF24_startWrite
  9775 ;;		_RF24_txStandBy
  9776 ;; This function uses a non-reentrant model
  9777 ;;
  9778                           
  9779                           	psect	text59
  9780  003AF6                     __ptext59:
  9781                           	opt stack 0
  9782  003AF6                     _RF24_ce_d:
  9783                           	opt stack 26
  9784                           
  9785                           ;incstack = 0
  9786                           ;RF24_ce_d@level stored from wreg
  9787  003AF6  6E07               	movwf	RF24_ce_d@level,c
  9788                           
  9789                           ;RF24_c.c: 70: if (rf.ce_pin != rf.csn_pin) digitalWrite(rf.ce_pin,level);
  9790  003AF8  0100               	movlb	0	; () banked
  9791  003AFA  518C               	movf	_rf& (0+255),w,b
  9792  003AFC  0100               	movlb	0	; () banked
  9793  003AFE  198D               	xorwf	(_rf+1)& (0+255),w,b
  9794  003B00  B4D8               	btfsc	status,2,c
  9795  003B02  0012               	return	
  9796                           
  9797                           ; BSR set to: 0
  9798  003B04  C007  F003         	movff	RF24_ce_d@level,digitalWrite@mode
  9799  003B08  0100               	movlb	0	; () banked
  9800  003B0A  518C               	movf	_rf& (0+255),w,b
  9801  003B0C  ECD8  F011         	call	_digitalWrite
  9802  003B10  0012               	return	
  9803  003B12                     __end_of_RF24_ce_d:
  9804                           	opt stack 0
  9805                           tblptru	equ	0xFF8
  9806                           tblptrh	equ	0xFF7
  9807                           tblptrl	equ	0xFF6
  9808                           tablat	equ	0xFF5
  9809                           prodh	equ	0xFF4
  9810                           prodl	equ	0xFF3
  9811                           intcon	equ	0xFF2
  9812                           indf0	equ	0xFEF
  9813                           postinc0	equ	0xFEE
  9814                           postdec0	equ	0xFED
  9815                           plusw0	equ	0xFEB
  9816                           fsr0h	equ	0xFEA
  9817                           fsr0l	equ	0xFE9
  9818                           wreg	equ	0xFE8
  9819                           postinc1	equ	0xFE6
  9820                           indf2	equ	0xFDF
  9821                           postinc2	equ	0xFDE
  9822                           postdec2	equ	0xFDD
  9823                           plusw2	equ	0xFDB
  9824                           fsr2h	equ	0xFDA
  9825                           fsr2l	equ	0xFD9
  9826                           status	equ	0xFD8
  9827                           
  9828 ;; *************** function _RF24_flush_tx *****************
  9829 ;; Defined at:
  9830 ;;		line 348 in file "../../../RF24_c/RF24_c.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;		None
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;		None
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  1    wreg      unsigned char 
  9837 ;; Registers used:
  9838 ;;		wreg, status,2, status,0, cstack
  9839 ;; Tracked objects:
  9840 ;;		On entry : 0/0
  9841 ;;		On exit  : 0/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9848 ;;Total ram usage:        0 bytes
  9849 ;; Hardware stack levels used:    1
  9850 ;; Hardware stack levels required when called:    5
  9851 ;; This function calls:
  9852 ;;		_RF24_spiTrans
  9853 ;; This function is called by:
  9854 ;;		_RF24_begin
  9855 ;;		_RF24_startListening
  9856 ;;		_RF24_stopListening
  9857 ;;		_RF24_txStandBy_t
  9858 ;;		_RF24_write_m
  9859 ;;		_RF24_txStandBy
  9860 ;; This function uses a non-reentrant model
  9861 ;;
  9862                           
  9863                           	psect	text60
  9864  003BE4                     __ptext60:
  9865                           	opt stack 0
  9866  003BE4                     _RF24_flush_tx:
  9867                           	opt stack 23
  9868                           
  9869                           ;RF24_c.c: 350: return RF24_spiTrans( 0xE1 );
  9870                           ;	Return value of _RF24_flush_tx is never used
  9871                           
  9872                           ;incstack = 0
  9873  003BE4  0EE1               	movlw	225
  9874  003BE6  ECBA  F01D         	call	_RF24_spiTrans
  9875  003BEA  0012               	return	
  9876  003BEC                     __end_of_RF24_flush_tx:
  9877                           	opt stack 0
  9878                           tblptru	equ	0xFF8
  9879                           tblptrh	equ	0xFF7
  9880                           tblptrl	equ	0xFF6
  9881                           tablat	equ	0xFF5
  9882                           prodh	equ	0xFF4
  9883                           prodl	equ	0xFF3
  9884                           intcon	equ	0xFF2
  9885                           indf0	equ	0xFEF
  9886                           postinc0	equ	0xFEE
  9887                           postdec0	equ	0xFED
  9888                           plusw0	equ	0xFEB
  9889                           fsr0h	equ	0xFEA
  9890                           fsr0l	equ	0xFE9
  9891                           wreg	equ	0xFE8
  9892                           postinc1	equ	0xFE6
  9893                           indf2	equ	0xFDF
  9894                           postinc2	equ	0xFDE
  9895                           postdec2	equ	0xFDD
  9896                           plusw2	equ	0xFDB
  9897                           fsr2h	equ	0xFDA
  9898                           fsr2l	equ	0xFD9
  9899                           status	equ	0xFD8
  9900                           
  9901 ;; *************** function _RF24_powerUp *****************
  9902 ;; Defined at:
  9903 ;;		line 791 in file "../../../RF24_c/RF24_c.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;		None
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;  cfg             1   17[COMRAM] unsigned char 
  9908 ;; Return value:  Size  Location     Type
  9909 ;;                  1    wreg      void 
  9910 ;; Registers used:
  9911 ;;		wreg, status,2, status,0, cstack
  9912 ;; Tracked objects:
  9913 ;;		On entry : 0/0
  9914 ;;		On exit  : 0/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9920 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9921 ;;Total ram usage:        2 bytes
  9922 ;; Hardware stack levels used:    1
  9923 ;; Hardware stack levels required when called:    5
  9924 ;; This function calls:
  9925 ;;		_RF24_read_register_d
  9926 ;;		_RF24_write_register_d
  9927 ;;		_delay
  9928 ;; This function is called by:
  9929 ;;		_RF24_begin
  9930 ;;		_RF24_startListening
  9931 ;; This function uses a non-reentrant model
  9932 ;;
  9933                           
  9934                           	psect	text61
  9935  003A16                     __ptext61:
  9936                           	opt stack 0
  9937  003A16                     _RF24_powerUp:
  9938                           	opt stack 23
  9939                           
  9940                           ;RF24_c.c: 793: uint8_t cfg = RF24_read_register_d(0x00);
  9941                           
  9942                           ;incstack = 0
  9943  003A16  0E00               	movlw	0
  9944  003A18  EC50  F01D         	call	_RF24_read_register_d
  9945  003A1C  6E12               	movwf	RF24_powerUp@cfg,c
  9946                           
  9947                           ;RF24_c.c: 796: if (!(cfg & (1<<(1)))){
  9948  003A1E  B212               	btfsc	RF24_powerUp@cfg,1,c
  9949  003A20  0012               	return	
  9950                           
  9951                           ;RF24_c.c: 797: RF24_write_register_d(0x00, cfg | (1<<(1)));
  9952  003A22  5012               	movf	RF24_powerUp@cfg,w,c
  9953  003A24  0902               	iorlw	2
  9954  003A26  6E0E               	movwf	RF24_write_register_d@value,c
  9955  003A28  0E00               	movlw	0
  9956  003A2A  EC40  F01D         	call	_RF24_write_register_d
  9957                           
  9958                           ;RF24_c.c: 802: delay(5);
  9959  003A2E  0E00               	movlw	0
  9960  003A30  6E04               	movwf	delay@val+1,c
  9961  003A32  0E05               	movlw	5
  9962  003A34  6E03               	movwf	delay@val,c
  9963  003A36  ECD4  F01A         	call	_delay	;wreg free
  9964  003A3A  0012               	return	
  9965  003A3C                     __end_of_RF24_powerUp:
  9966                           	opt stack 0
  9967                           tblptru	equ	0xFF8
  9968                           tblptrh	equ	0xFF7
  9969                           tblptrl	equ	0xFF6
  9970                           tablat	equ	0xFF5
  9971                           prodh	equ	0xFF4
  9972                           prodl	equ	0xFF3
  9973                           intcon	equ	0xFF2
  9974                           indf0	equ	0xFEF
  9975                           postinc0	equ	0xFEE
  9976                           postdec0	equ	0xFED
  9977                           plusw0	equ	0xFEB
  9978                           fsr0h	equ	0xFEA
  9979                           fsr0l	equ	0xFE9
  9980                           wreg	equ	0xFE8
  9981                           postinc1	equ	0xFE6
  9982                           indf2	equ	0xFDF
  9983                           postinc2	equ	0xFDE
  9984                           postdec2	equ	0xFDD
  9985                           plusw2	equ	0xFDB
  9986                           fsr2h	equ	0xFDA
  9987                           fsr2l	equ	0xFD9
  9988                           status	equ	0xFD8
  9989                           
  9990 ;; *************** function _RF24N_update *****************
  9991 ;; Defined at:
  9992 ;;		line 226 in file "../../RF24Network_c.c"
  9993 ;; Parameters:    Size  Location     Type
  9994 ;;		None
  9995 ;; Auto vars:     Size  Location     Type
  9996 ;;  val             1  [STACK] unsigned char 
  9997 ;;  requester       2    0        unsigned int 
  9998 ;;  header          2  [STACK] PTR struct .
  9999 ;;		 -> rn.frame_buffer(32), rn(370), 
 10000 ;;  returnVal       1  [STACK] unsigned char 
 10001 ;;  pipe_num        1  [STACK] unsigned char 
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  1  [STACK] unsigned char 
 10004 ;; Registers used:
 10005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/0
 10008 ;;		On exit  : 0/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10015 ;;Total ram usage:        0 bytes
 10016 ;; Hardware stack levels used:    1
 10017 ;; Hardware stack levels required when called:   10
 10018 ;; This function calls:
 10019 ;;		_RF24N_available
 10020 ;;		_RF24N_enqueue
 10021 ;;		_RF24N_is_valid_address
 10022 ;;		_RF24N_levelToAddress
 10023 ;;		_RF24N_write
 10024 ;;		_RF24_available_p
 10025 ;;		_RF24_getDynamicPayloadSize
 10026 ;;		_RF24_isValid
 10027 ;;		_RF24_read
 10028 ;;		_delay
 10029 ;; This function is called by:
 10030 ;;		_loop
 10031 ;;		_RF24N_write_
 10032 ;;		_RF24N_write
 10033 ;; This function uses a recursive model
 10034 ;;
 10035                           
 10036                           	psect	text62
 10037  0015CE                     __ptext62:
 10038                           	opt stack 0
 10039  0015CE                     _RF24N_update:
 10040                           	opt stack 17
 10041                           
 10042                           ;incstack = 0
 10043  0015CE  0E05               	movlw	5
 10044  0015D0  26E1               	addwf	fsr1l,f,c
 10045  0015D2  0E00               	movlw	0
 10046  0015D4  22E2               	addwfc	fsr1h,f,c
 10047                           
 10048                           ;RF24Network_c.c: 229: uint8_t pipe_num;
 10049                           ;RF24Network_c.c: 230: uint8_t returnVal = 0;
 10050                           ;stkvar	RF24N_update@returnVal @ sp[(-5)+3]
 10051  0015D6  0EFE               	movlw	-2
 10052  0015D8  6AE3               	clrf	plusw1,c
 10053                           
 10054                           ;RF24Network_c.c: 237: if(!(rn.networkFlags & 2)){
 10055  0015DA  EE20  F0FF         	lfsr	2,_rn+42
 10056  0015DE  B2DF               	btfsc	indf2,1,c
 10057  0015E0  D285               	goto	l4261
 10058                           
 10059                           ;RF24Network_c.c: 238: if( (rn.networkFlags & 1) || (rn.next_frame-rn.frame_queue) + 34 
      +                          > 144 + 10 ){
 10060  0015E2  EE20  F0FF         	lfsr	2,_rn+42
 10061  0015E6  B0DF               	btfsc	indf2,0,c
 10062  0015E8  D01E               	goto	l4153
 10063  0015EA  EE21  F0A9         	lfsr	2,_rn+212
 10064  0015EE  CFDE F06B          	movff	postinc2,btemp+1
 10065  0015F2  CFDD F06C          	movff	postdec2,btemp+2
 10066  0015F6  0ED5               	movlw	low _rn
 10067  0015F8  6E74               	movwf	btemp+10,c
 10068  0015FA  0E00               	movlw	high _rn
 10069  0015FC  6E75               	movwf	btemp+11,c
 10070  0015FE  0EE8               	movlw	232
 10071  001600  6E72               	movwf	btemp+8,c
 10072  001602  0EFF               	movlw	255
 10073  001604  6E73               	movwf	btemp+9,c
 10074  001606  5074               	movf	btemp+10,w,c
 10075  001608  5E72               	subwf	btemp+8,f,c
 10076  00160A  5075               	movf	btemp+11,w,c
 10077  00160C  5A73               	subwfb	btemp+9,f,c
 10078  00160E  506B               	movf	btemp+1,w,c
 10079  001610  2672               	addwf	btemp+8,f,c
 10080  001612  506C               	movf	btemp+2,w,c
 10081  001614  2273               	addwfc	btemp+9,f,c
 10082  001616  BE73               	btfsc	btemp+9,7,c
 10083  001618  D269               	goto	l4261
 10084  00161A  5073               	movf	btemp+9,w,c
 10085  00161C  E104               	bnz	u4530
 10086  00161E  0E9B               	movlw	155
 10087  001620  5C72               	subwf	btemp+8,w,c
 10088  001622  A0D8               	btfss	status,0,c
 10089  001624  D263               	goto	l4261
 10090  001626                     u4530:
 10091  001626                     l4153:
 10092                           
 10093                           ;RF24Network_c.c: 239: if(!RF24N_available()){
 10094  001626  EC2F  F01D         	call	_RF24N_available	;wreg free
 10095  00162A  0900               	iorlw	0
 10096  00162C  A4D8               	btfss	status,2,c
 10097  00162E  D006               	goto	l4157
 10098                           
 10099                           ;RF24Network_c.c: 240: rn.networkFlags &= ~1;
 10100  001630  C0FF  FFE8         	movff	_rn+42,wreg
 10101  001634  0BFE               	andlw	254
 10102  001636  CFE8 F0FF          	movff	wreg,_rn+42
 10103                           
 10104                           ;RF24Network_c.c: 241: }else{
 10105  00163A  D258               	goto	l4261
 10106  00163C                     l4157:
 10107                           
 10108                           ;RF24Network_c.c: 242: return 0;
 10109  00163C  0E00               	movlw	0
 10110  00163E  D19B               	goto	L9
 10111  001640                     l4161:
 10112                           
 10113                           ;RF24Network_c.c: 249: RF24NetworkHeader *header;
 10114                           ;RF24Network_c.c: 252: if( (rn.frame_size = RF24_getDynamicPayloadSize() ) < sizeof(RF24
      +                          NetworkHeader)){
 10115  001640  ECD7  F01B         	call	_RF24_getDynamicPayloadSize	;wreg free
 10116  001644  EE21  F007         	lfsr	2,_rn+50
 10117  001648  6EDF               	movwf	indf2,c
 10118  00164A  0E08               	movlw	8
 10119  00164C  60DF               	cpfslt	indf2,c
 10120  00164E  D007               	goto	l4165
 10121                           
 10122                           ;RF24Network_c.c: 253: delay(10);
 10123  001650  0E00               	movlw	0
 10124  001652  6E04               	movwf	delay@val+1,c
 10125  001654  0E0A               	movlw	10
 10126  001656  6E03               	movwf	delay@val,c
 10127  001658  ECD4  F01A         	call	_delay	;wreg free
 10128                           
 10129                           ;RF24Network_c.c: 254: continue;
 10130  00165C  D247               	goto	l4261
 10131  00165E                     l4165:
 10132                           
 10133                           ;RF24Network_c.c: 255: }
 10134                           ;RF24Network_c.c: 261: RF24_read(rn.frame_buffer, rn.frame_size );
 10135  00165E  0EDC               	movlw	low (_rn+7)
 10136  001660  6E1D               	movwf	RF24_read@buf,c
 10137  001662  0E00               	movlw	high (_rn+7)
 10138  001664  6E1E               	movwf	RF24_read@buf+1,c
 10139  001666  C107  F01F         	movff	_rn+50,RF24_read@len
 10140  00166A  EC5F  F01D         	call	_RF24_read	;wreg free
 10141                           
 10142                           ;RF24Network_c.c: 264: header = (RF24NetworkHeader*)(rn.frame_buffer);
 10143                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10144  00166E  0E00               	movlw	high (_rn+7)
 10145  001670  6E6A               	movwf	btemp,c
 10146  001672  0EFD               	movlw	-3
 10147  001674  C06A  FFE3         	movff	btemp,plusw1
 10148  001678  0EDC               	movlw	low (_rn+7)
 10149  00167A  6E6A               	movwf	btemp,c
 10150  00167C  0EFC               	movlw	-4
 10151  00167E  C06A  FFE3         	movff	btemp,plusw1
 10152                           
 10153                           ;RF24Network_c.c: 273: ;
 10154                           ;RF24Network_c.c: 274: ;
 10155                           ;RF24Network_c.c: 278: if ( !RF24N_is_valid_address( header->to_node) ){
 10156                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10157  001682  0EFC               	movlw	-4
 10158  001684  CFE3 F06B          	movff	plusw1,btemp+1
 10159  001688  0EFD               	movlw	-3
 10160  00168A  CFE3 F06C          	movff	plusw1,btemp+2
 10161  00168E  0E02               	movlw	2
 10162  001690  246B               	addwf	btemp+1,w,c
 10163  001692  6ED9               	movwf	fsr2l,c
 10164  001694  0E00               	movlw	0
 10165  001696  206C               	addwfc	btemp+2,w,c
 10166  001698  6EDA               	movwf	fsr2h,c
 10167  00169A  CFDE F003          	movff	postinc2,RF24N_is_valid_address@node
 10168  00169E  CFDD F004          	movff	postdec2,RF24N_is_valid_address@node+1
 10169  0016A2  EC2A  F01C         	call	_RF24N_is_valid_address	;wreg free
 10170  0016A6  0900               	iorlw	0
 10171  0016A8  B4D8               	btfsc	status,2,c
 10172  0016AA  D220               	goto	l4261
 10173                           
 10174                           ;RF24Network_c.c: 280: }
 10175                           ;RF24Network_c.c: 282: returnVal = header->type;
 10176                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10177  0016AC  0EFC               	movlw	-4
 10178  0016AE  CFE3 F06B          	movff	plusw1,btemp+1
 10179  0016B2  0EFD               	movlw	-3
 10180  0016B4  CFE3 F06C          	movff	plusw1,btemp+2
 10181  0016B8  0E06               	movlw	6
 10182  0016BA  246B               	addwf	btemp+1,w,c
 10183  0016BC  6ED9               	movwf	fsr2l,c
 10184  0016BE  0E00               	movlw	0
 10185  0016C0  206C               	addwfc	btemp+2,w,c
 10186  0016C2  6EDA               	movwf	fsr2h,c
 10187  0016C4  50DF               	movf	indf2,w,c
 10188  0016C6  6E75               	movwf	btemp+11,c
 10189                           
 10190                           ;stkvar	RF24N_update@returnVal @ sp[(-5)+3]
 10191  0016C8  0EFE               	movlw	-2
 10192  0016CA  C075  FFE3         	movff	btemp+11,plusw1
 10193                           
 10194                           ;RF24Network_c.c: 285: if ( header->to_node == rn.node_address ){
 10195  0016CE  EE21  F005         	lfsr	2,_rn+48
 10196                           
 10197                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10198  0016D2  0EFC               	movlw	-4
 10199  0016D4  CFE3 F06B          	movff	plusw1,btemp+1
 10200  0016D8  0EFD               	movlw	-3
 10201  0016DA  CFE3 F06C          	movff	plusw1,btemp+2
 10202  0016DE  0E02               	movlw	2
 10203  0016E0  246B               	addwf	btemp+1,w,c
 10204  0016E2  6EE9               	movwf	fsr0l,c
 10205  0016E4  0E00               	movlw	0
 10206  0016E6  206C               	addwfc	btemp+2,w,c
 10207  0016E8  6EEA               	movwf	fsr0h,c
 10208  0016EA  50DE               	movf	postinc2,w,c
 10209  0016EC  18EE               	xorwf	postinc0,w,c
 10210  0016EE  E103               	bnz	u4571
 10211  0016F0  50DE               	movf	postinc2,w,c
 10212  0016F2  18EE               	xorwf	postinc0,w,c
 10213  0016F4  A4D8               	btfss	status,2,c
 10214  0016F6                     u4571:
 10215  0016F6  D141               	goto	l4231
 10216                           
 10217                           ;RF24Network_c.c: 287: if(header->type == 130){
 10218                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10219  0016F8  0EFC               	movlw	-4
 10220  0016FA  CFE3 F06B          	movff	plusw1,btemp+1
 10221  0016FE  0EFD               	movlw	-3
 10222  001700  CFE3 F06C          	movff	plusw1,btemp+2
 10223  001704  0E06               	movlw	6
 10224  001706  246B               	addwf	btemp+1,w,c
 10225  001708  6ED9               	movwf	fsr2l,c
 10226  00170A  0E00               	movlw	0
 10227  00170C  206C               	addwfc	btemp+2,w,c
 10228  00170E  6EDA               	movwf	fsr2h,c
 10229  001710  0E82               	movlw	130
 10230  001712  18DE               	xorwf	postinc2,w,c
 10231  001714  B4D8               	btfsc	status,2,c
 10232  001716  D1EA               	goto	l4261
 10233                           
 10234                           ;RF24Network_c.c: 289: }
 10235                           ;RF24Network_c.c: 290: if(header->type == 128 ){
 10236                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10237  001718  0EFC               	movlw	-4
 10238  00171A  CFE3 F06B          	movff	plusw1,btemp+1
 10239  00171E  0EFD               	movlw	-3
 10240  001720  CFE3 F06C          	movff	plusw1,btemp+2
 10241  001724  0E06               	movlw	6
 10242  001726  246B               	addwf	btemp+1,w,c
 10243  001728  6ED9               	movwf	fsr2l,c
 10244  00172A  0E00               	movlw	0
 10245  00172C  206C               	addwfc	btemp+2,w,c
 10246  00172E  6EDA               	movwf	fsr2h,c
 10247  001730  0E80               	movlw	128
 10248  001732  18DE               	xorwf	postinc2,w,c
 10249  001734  A4D8               	btfss	status,2,c
 10250  001736  D050               	goto	l4195
 10251                           
 10252                           ;RF24Network_c.c: 292: if(requester != rn.node_address){
 10253  001738  EE21  F005         	lfsr	2,_rn+48
 10254  00173C  0E24               	movlw	36
 10255  00173E  18DE               	xorwf	postinc2,w,c
 10256  001740  E104               	bnz	u4600
 10257  001742  0E09               	movlw	9
 10258  001744  18DE               	xorwf	postinc2,w,c
 10259  001746  B4D8               	btfsc	status,2,c
 10260  001748  D047               	goto	l4195
 10261  00174A                     u4600:
 10262                           
 10263                           ;RF24Network_c.c: 293: header->to_node = requester;
 10264                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10265  00174A  0EFC               	movlw	-4
 10266  00174C  CFE3 F06B          	movff	plusw1,btemp+1
 10267  001750  0EFD               	movlw	-3
 10268  001752  CFE3 F06C          	movff	plusw1,btemp+2
 10269  001756  0E02               	movlw	2
 10270  001758  246B               	addwf	btemp+1,w,c
 10271  00175A  6ED9               	movwf	fsr2l,c
 10272  00175C  0E00               	movlw	0
 10273  00175E  206C               	addwfc	btemp+2,w,c
 10274  001760  6EDA               	movwf	fsr2h,c
 10275  001762  0E24               	movlw	36
 10276  001764  6EDE               	movwf	postinc2,c
 10277  001766  0E09               	movlw	9
 10278  001768  6EDD               	movwf	postdec2,c
 10279                           
 10280                           ;RF24Network_c.c: 294: RF24N_write(header->to_node,2);
 10281  00176A  0E02               	movlw	2
 10282  00176C  6EE6               	movwf	postinc1,c
 10283                           
 10284                           ;stkvar	RF24N_update@header @ sp[(-6)+1]
 10285  00176E  0EFB               	movlw	-5
 10286  001770  CFE3 F06B          	movff	plusw1,btemp+1
 10287  001774  0EFC               	movlw	-4
 10288  001776  CFE3 F06C          	movff	plusw1,btemp+2
 10289  00177A  0E02               	movlw	2
 10290  00177C  246B               	addwf	btemp+1,w,c
 10291  00177E  6ED9               	movwf	fsr2l,c
 10292  001780  0E00               	movlw	0
 10293  001782  206C               	addwfc	btemp+2,w,c
 10294  001784  6EDA               	movwf	fsr2h,c
 10295  001786  CFDE F06B          	movff	postinc2,btemp+1
 10296  00178A  CFDD F06C          	movff	postdec2,btemp+2
 10297  00178E  C06B  FFE6         	movff	btemp+1,postinc1
 10298  001792  C06C  FFE6         	movff	btemp+2,postinc1
 10299  001796  EC90  F00D         	call	_RF24N_write	;wreg free
 10300                           
 10301                           ;RF24Network_c.c: 295: delay(10);
 10302  00179A  0E00               	movlw	0
 10303  00179C  6E04               	movwf	delay@val+1,c
 10304  00179E  0E0A               	movlw	10
 10305  0017A0  6E03               	movwf	delay@val,c
 10306  0017A2  ECD4  F01A         	call	_delay	;wreg free
 10307                           
 10308                           ;RF24Network_c.c: 296: RF24N_write(header->to_node,2);
 10309  0017A6  0E02               	movlw	2
 10310  0017A8  6EE6               	movwf	postinc1,c
 10311                           
 10312                           ;stkvar	RF24N_update@header @ sp[(-6)+1]
 10313  0017AA  0EFB               	movlw	-5
 10314  0017AC  CFE3 F06B          	movff	plusw1,btemp+1
 10315  0017B0  0EFC               	movlw	-4
 10316  0017B2  CFE3 F06C          	movff	plusw1,btemp+2
 10317  0017B6  0E02               	movlw	2
 10318  0017B8  246B               	addwf	btemp+1,w,c
 10319  0017BA  6ED9               	movwf	fsr2l,c
 10320  0017BC  0E00               	movlw	0
 10321  0017BE  206C               	addwfc	btemp+2,w,c
 10322  0017C0  6EDA               	movwf	fsr2h,c
 10323  0017C2  CFDE F06B          	movff	postinc2,btemp+1
 10324  0017C6  CFDD F06C          	movff	postdec2,btemp+2
 10325  0017CA  C06B  FFE6         	movff	btemp+1,postinc1
 10326  0017CE  C06C  FFE6         	movff	btemp+2,postinc1
 10327  0017D2  EC90  F00D         	call	_RF24N_write	;wreg free
 10328                           
 10329                           ;RF24Network_c.c: 298: continue;
 10330  0017D6  D18A               	goto	l4261
 10331  0017D8                     l4195:
 10332                           
 10333                           ;RF24Network_c.c: 299: }
 10334                           ;RF24Network_c.c: 300: }
 10335                           ;RF24Network_c.c: 301: if(header->type == 195 && rn.node_address){
 10336                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10337  0017D8  0EFC               	movlw	-4
 10338  0017DA  CFE3 F06B          	movff	plusw1,btemp+1
 10339  0017DE  0EFD               	movlw	-3
 10340  0017E0  CFE3 F06C          	movff	plusw1,btemp+2
 10341  0017E4  0E06               	movlw	6
 10342  0017E6  246B               	addwf	btemp+1,w,c
 10343  0017E8  6ED9               	movwf	fsr2l,c
 10344  0017EA  0E00               	movlw	0
 10345  0017EC  206C               	addwfc	btemp+2,w,c
 10346  0017EE  6EDA               	movwf	fsr2h,c
 10347  0017F0  0EC3               	movlw	195
 10348  0017F2  18DE               	xorwf	postinc2,w,c
 10349  0017F4  A4D8               	btfss	status,2,c
 10350  0017F6  D03B               	goto	l4205
 10351  0017F8  EE21  F005         	lfsr	2,_rn+48
 10352  0017FC  50DE               	movf	postinc2,w,c
 10353  0017FE  10DE               	iorwf	postinc2,w,c
 10354  001800  B4D8               	btfsc	status,2,c
 10355  001802  D035               	goto	l4205
 10356                           
 10357                           ;RF24Network_c.c: 303: header->from_node = rn.node_address;
 10358  001804  EE21  F005         	lfsr	2,_rn+48
 10359                           
 10360                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10361  001808  0EFC               	movlw	-4
 10362  00180A  CFE3 FFE9          	movff	plusw1,fsr0l
 10363  00180E  0EFD               	movlw	-3
 10364  001810  CFE3 FFEA          	movff	plusw1,fsr0h
 10365  001814  CFDE FFEE          	movff	postinc2,postinc0
 10366  001818  CFDD FFED          	movff	postdec2,postdec0
 10367                           
 10368                           ;RF24Network_c.c: 304: header->to_node = 0;
 10369                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10370  00181C  0EFC               	movlw	-4
 10371  00181E  CFE3 F06B          	movff	plusw1,btemp+1
 10372  001822  0EFD               	movlw	-3
 10373  001824  CFE3 F06C          	movff	plusw1,btemp+2
 10374  001828  0E02               	movlw	2
 10375  00182A  246B               	addwf	btemp+1,w,c
 10376  00182C  6ED9               	movwf	fsr2l,c
 10377  00182E  0E00               	movlw	0
 10378  001830  206C               	addwfc	btemp+2,w,c
 10379  001832  6EDA               	movwf	fsr2h,c
 10380  001834  0E00               	movlw	0
 10381  001836  6EDE               	movwf	postinc2,c
 10382  001838  0E00               	movlw	0
 10383  00183A  6EDD               	movwf	postdec2,c
 10384                           
 10385                           ;RF24Network_c.c: 305: RF24N_write(header->to_node,0);
 10386  00183C  0E00               	movlw	0
 10387  00183E  6EE6               	movwf	postinc1,c
 10388                           
 10389                           ;stkvar	RF24N_update@header @ sp[(-6)+1]
 10390  001840  0EFB               	movlw	-5
 10391  001842  CFE3 F06B          	movff	plusw1,btemp+1
 10392  001846  0EFC               	movlw	-4
 10393  001848  CFE3 F06C          	movff	plusw1,btemp+2
 10394  00184C  0E02               	movlw	2
 10395  00184E  246B               	addwf	btemp+1,w,c
 10396  001850  6ED9               	movwf	fsr2l,c
 10397  001852  0E00               	movlw	0
 10398  001854  206C               	addwfc	btemp+2,w,c
 10399  001856  6EDA               	movwf	fsr2h,c
 10400  001858  CFDE F06B          	movff	postinc2,btemp+1
 10401  00185C  CFDD F06C          	movff	postdec2,btemp+2
 10402  001860  C06B  FFE6         	movff	btemp+1,postinc1
 10403  001864  C06C  FFE6         	movff	btemp+2,postinc1
 10404  001868  EC90  F00D         	call	_RF24N_write	;wreg free
 10405                           
 10406                           ;RF24Network_c.c: 306: continue;
 10407  00186C  D13F               	goto	l4261
 10408  00186E                     l4205:
 10409                           
 10410                           ;RF24Network_c.c: 307: }
 10411                           ;RF24Network_c.c: 309: if( (rn.returnSysMsgs && header->type > 127) || header->type == 1
      +                          93 ){
 10412  00186E  EE20  F0FE         	lfsr	2,_rn+41
 10413  001872  50DF               	movf	indf2,w,c
 10414  001874  B4D8               	btfsc	status,2,c
 10415  001876  D00F               	goto	l4209
 10416                           
 10417                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10418  001878  0EFC               	movlw	-4
 10419  00187A  CFE3 F06B          	movff	plusw1,btemp+1
 10420  00187E  0EFD               	movlw	-3
 10421  001880  CFE3 F06C          	movff	plusw1,btemp+2
 10422  001884  0E06               	movlw	6
 10423  001886  246B               	addwf	btemp+1,w,c
 10424  001888  6ED9               	movwf	fsr2l,c
 10425  00188A  0E00               	movlw	0
 10426  00188C  206C               	addwfc	btemp+2,w,c
 10427  00188E  6EDA               	movwf	fsr2h,c
 10428  001890  0E80               	movlw	128
 10429  001892  60DF               	cpfslt	indf2,c
 10430  001894  D010               	goto	l4211
 10431  001896                     l4209:
 10432                           
 10433                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10434  001896  0EFC               	movlw	-4
 10435  001898  CFE3 F06B          	movff	plusw1,btemp+1
 10436  00189C  0EFD               	movlw	-3
 10437  00189E  CFE3 F06C          	movff	plusw1,btemp+2
 10438  0018A2  0E06               	movlw	6
 10439  0018A4  246B               	addwf	btemp+1,w,c
 10440  0018A6  6ED9               	movwf	fsr2l,c
 10441  0018A8  0E00               	movlw	0
 10442  0018AA  206C               	addwfc	btemp+2,w,c
 10443  0018AC  6EDA               	movwf	fsr2h,c
 10444  0018AE  0EC1               	movlw	193
 10445  0018B0  18DE               	xorwf	postinc2,w,c
 10446  0018B2  A4D8               	btfss	status,2,c
 10447  0018B4  D054               	goto	l4225
 10448  0018B6                     l4211:
 10449                           
 10450                           ;RF24Network_c.c: 310: ;
 10451                           ;RF24Network_c.c: 312: if( header->type != 148 && header->type != 149 && header->type !=
      +                           200 && header->type != 131 && header->type!= 150){
 10452                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10453  0018B6  0EFC               	movlw	-4
 10454  0018B8  CFE3 F06B          	movff	plusw1,btemp+1
 10455  0018BC  0EFD               	movlw	-3
 10456  0018BE  CFE3 F06C          	movff	plusw1,btemp+2
 10457  0018C2  0E06               	movlw	6
 10458  0018C4  246B               	addwf	btemp+1,w,c
 10459  0018C6  6ED9               	movwf	fsr2l,c
 10460  0018C8  0E00               	movlw	0
 10461  0018CA  206C               	addwfc	btemp+2,w,c
 10462  0018CC  6EDA               	movwf	fsr2h,c
 10463  0018CE  0E94               	movlw	148
 10464  0018D0  18DE               	xorwf	postinc2,w,c
 10465  0018D2  B4D8               	btfsc	status,2,c
 10466  0018D4  D044               	goto	l4225
 10467                           
 10468                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10469  0018D6  0EFC               	movlw	-4
 10470  0018D8  CFE3 F06B          	movff	plusw1,btemp+1
 10471  0018DC  0EFD               	movlw	-3
 10472  0018DE  CFE3 F06C          	movff	plusw1,btemp+2
 10473  0018E2  0E06               	movlw	6
 10474  0018E4  246B               	addwf	btemp+1,w,c
 10475  0018E6  6ED9               	movwf	fsr2l,c
 10476  0018E8  0E00               	movlw	0
 10477  0018EA  206C               	addwfc	btemp+2,w,c
 10478  0018EC  6EDA               	movwf	fsr2h,c
 10479  0018EE  0E95               	movlw	149
 10480  0018F0  18DE               	xorwf	postinc2,w,c
 10481  0018F2  B4D8               	btfsc	status,2,c
 10482  0018F4  D034               	goto	l4225
 10483                           
 10484                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10485  0018F6  0EFC               	movlw	-4
 10486  0018F8  CFE3 F06B          	movff	plusw1,btemp+1
 10487  0018FC  0EFD               	movlw	-3
 10488  0018FE  CFE3 F06C          	movff	plusw1,btemp+2
 10489  001902  0E06               	movlw	6
 10490  001904  246B               	addwf	btemp+1,w,c
 10491  001906  6ED9               	movwf	fsr2l,c
 10492  001908  0E00               	movlw	0
 10493  00190A  206C               	addwfc	btemp+2,w,c
 10494  00190C  6EDA               	movwf	fsr2h,c
 10495  00190E  0EC8               	movlw	200
 10496  001910  18DE               	xorwf	postinc2,w,c
 10497  001912  B4D8               	btfsc	status,2,c
 10498  001914  D024               	goto	l4225
 10499                           
 10500                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10501  001916  0EFC               	movlw	-4
 10502  001918  CFE3 F06B          	movff	plusw1,btemp+1
 10503  00191C  0EFD               	movlw	-3
 10504  00191E  CFE3 F06C          	movff	plusw1,btemp+2
 10505  001922  0E06               	movlw	6
 10506  001924  246B               	addwf	btemp+1,w,c
 10507  001926  6ED9               	movwf	fsr2l,c
 10508  001928  0E00               	movlw	0
 10509  00192A  206C               	addwfc	btemp+2,w,c
 10510  00192C  6EDA               	movwf	fsr2h,c
 10511  00192E  0E83               	movlw	131
 10512  001930  18DE               	xorwf	postinc2,w,c
 10513  001932  B4D8               	btfsc	status,2,c
 10514  001934  D014               	goto	l4225
 10515                           
 10516                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10517  001936  0EFC               	movlw	-4
 10518  001938  CFE3 F06B          	movff	plusw1,btemp+1
 10519  00193C  0EFD               	movlw	-3
 10520  00193E  CFE3 F06C          	movff	plusw1,btemp+2
 10521  001942  0E06               	movlw	6
 10522  001944  246B               	addwf	btemp+1,w,c
 10523  001946  6ED9               	movwf	fsr2l,c
 10524  001948  0E00               	movlw	0
 10525  00194A  206C               	addwfc	btemp+2,w,c
 10526  00194C  6EDA               	movwf	fsr2h,c
 10527  00194E  0E96               	movlw	150
 10528  001950  18DE               	xorwf	postinc2,w,c
 10529  001952  B4D8               	btfsc	status,2,c
 10530  001954  D004               	goto	l4225
 10531  001956                     l4221:
 10532                           
 10533                           ;RF24Network_c.c: 313: return returnVal;
 10534                           ;stkvar	RF24N_update@returnVal @ sp[(-5)+3]
 10535  001956  0EFE               	movlw	-2
 10536  001958  CFE3 F06A          	movff	plusw1,btemp
 10537  00195C  D0DC               	goto	l409
 10538  00195E                     l4225:
 10539                           
 10540                           ;RF24Network_c.c: 314: }
 10541                           ;RF24Network_c.c: 315: }
 10542                           ;RF24Network_c.c: 317: if( RF24N_enqueue(header) == 2 ){
 10543                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10544  00195E  0EFC               	movlw	-4
 10545  001960  CFE3 F013          	movff	plusw1,RF24N_enqueue@header
 10546  001964  0EFD               	movlw	-3
 10547  001966  CFE3 F014          	movff	plusw1,RF24N_enqueue@header+1
 10548  00196A  EC2D  F008         	call	_RF24N_enqueue	;wreg free
 10549  00196E  0A02               	xorlw	2
 10550  001970  A4D8               	btfss	status,2,c
 10551  001972  D0BC               	goto	l4261
 10552                           
 10553                           ;RF24Network_c.c: 321: return 131;
 10554  001974  0E83               	movlw	131
 10555  001976                     L9:
 10556  001976  6E6A               	movwf	btemp,c
 10557  001978  D0CE               	goto	l409
 10558  00197A                     l4231:
 10559                           
 10560                           ;RF24Network_c.c: 327: if( header->to_node == 0100){
 10561                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10562  00197A  0EFC               	movlw	-4
 10563  00197C  CFE3 F06B          	movff	plusw1,btemp+1
 10564  001980  0EFD               	movlw	-3
 10565  001982  CFE3 F06C          	movff	plusw1,btemp+2
 10566  001986  0E02               	movlw	2
 10567  001988  246B               	addwf	btemp+1,w,c
 10568  00198A  6ED9               	movwf	fsr2l,c
 10569  00198C  0E00               	movlw	0
 10570  00198E  206C               	addwfc	btemp+2,w,c
 10571  001990  6EDA               	movwf	fsr2h,c
 10572  001992  0E40               	movlw	64
 10573  001994  18DE               	xorwf	postinc2,w,c
 10574  001996  10DE               	iorwf	postinc2,w,c
 10575  001998  A4D8               	btfss	status,2,c
 10576  00199A  D090               	goto	l4259
 10577                           
 10578                           ;RF24Network_c.c: 328: uint8_t val;
 10579                           ;RF24Network_c.c: 330: if(header->type == 194 ){
 10580                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10581  00199C  0EFC               	movlw	-4
 10582  00199E  CFE3 F06B          	movff	plusw1,btemp+1
 10583  0019A2  0EFD               	movlw	-3
 10584  0019A4  CFE3 F06C          	movff	plusw1,btemp+2
 10585  0019A8  0E06               	movlw	6
 10586  0019AA  246B               	addwf	btemp+1,w,c
 10587  0019AC  6ED9               	movwf	fsr2l,c
 10588  0019AE  0E00               	movlw	0
 10589  0019B0  206C               	addwfc	btemp+2,w,c
 10590  0019B2  6EDA               	movwf	fsr2h,c
 10591  0019B4  0EC2               	movlw	194
 10592  0019B6  18DE               	xorwf	postinc2,w,c
 10593  0019B8  A4D8               	btfss	status,2,c
 10594  0019BA  D04F               	goto	l4247
 10595                           
 10596                           ;RF24Network_c.c: 331: if( !(rn.networkFlags & 8) && rn.node_address != 04444 ){
 10597  0019BC  EE20  F0FF         	lfsr	2,_rn+42
 10598  0019C0  B6DF               	btfsc	indf2,3,c
 10599  0019C2  D094               	goto	l4261
 10600  0019C4  EE21  F005         	lfsr	2,_rn+48
 10601  0019C8  0E24               	movlw	36
 10602  0019CA  18DE               	xorwf	postinc2,w,c
 10603  0019CC  E104               	bnz	u4750
 10604  0019CE  0E09               	movlw	9
 10605  0019D0  18DE               	xorwf	postinc2,w,c
 10606  0019D2  B4D8               	btfsc	status,2,c
 10607  0019D4  D08B               	goto	l4261
 10608  0019D6                     u4750:
 10609                           
 10610                           ;RF24Network_c.c: 332: header->to_node = header->from_node;
 10611                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10612  0019D6  0EFC               	movlw	-4
 10613  0019D8  CFE3 FFD9          	movff	plusw1,fsr2l
 10614  0019DC  0EFD               	movlw	-3
 10615  0019DE  CFE3 FFDA          	movff	plusw1,fsr2h
 10616                           
 10617                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10618  0019E2  0EFC               	movlw	-4
 10619  0019E4  CFE3 F06B          	movff	plusw1,btemp+1
 10620  0019E8  0EFD               	movlw	-3
 10621  0019EA  CFE3 F06C          	movff	plusw1,btemp+2
 10622  0019EE  0E02               	movlw	2
 10623  0019F0  246B               	addwf	btemp+1,w,c
 10624  0019F2  6EE9               	movwf	fsr0l,c
 10625  0019F4  0E00               	movlw	0
 10626  0019F6  206C               	addwfc	btemp+2,w,c
 10627  0019F8  6EEA               	movwf	fsr0h,c
 10628  0019FA  CFDE FFEE          	movff	postinc2,postinc0
 10629  0019FE  CFDD FFED          	movff	postdec2,postdec0
 10630                           
 10631                           ;RF24Network_c.c: 333: header->from_node = rn.node_address;
 10632  001A02  EE21  F005         	lfsr	2,_rn+48
 10633                           
 10634                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10635  001A06  0EFC               	movlw	-4
 10636  001A08  CFE3 FFE9          	movff	plusw1,fsr0l
 10637  001A0C  0EFD               	movlw	-3
 10638  001A0E  CFE3 FFEA          	movff	plusw1,fsr0h
 10639  001A12  CFDE FFEE          	movff	postinc2,postinc0
 10640  001A16  CFDD FFED          	movff	postdec2,postdec0
 10641                           
 10642                           ;RF24Network_c.c: 334: delay(rn.parent_pipe);
 10643  001A1A  EE21  F00C         	lfsr	2,_rn+55
 10644  001A1E  50DF               	movf	indf2,w,c
 10645  001A20  6E03               	movwf	delay@val,c
 10646  001A22  6A04               	clrf	delay@val+1,c
 10647  001A24  ECD4  F01A         	call	_delay	;wreg free
 10648                           
 10649                           ;RF24Network_c.c: 335: RF24N_write(header->to_node,2);
 10650  001A28  0E02               	movlw	2
 10651  001A2A  6EE6               	movwf	postinc1,c
 10652                           
 10653                           ;stkvar	RF24N_update@header @ sp[(-6)+1]
 10654  001A2C  0EFB               	movlw	-5
 10655  001A2E  CFE3 F06B          	movff	plusw1,btemp+1
 10656  001A32  0EFC               	movlw	-4
 10657  001A34  CFE3 F06C          	movff	plusw1,btemp+2
 10658  001A38  0E02               	movlw	2
 10659  001A3A  246B               	addwf	btemp+1,w,c
 10660  001A3C  6ED9               	movwf	fsr2l,c
 10661  001A3E  0E00               	movlw	0
 10662  001A40  206C               	addwfc	btemp+2,w,c
 10663  001A42  6EDA               	movwf	fsr2h,c
 10664  001A44  CFDE F06B          	movff	postinc2,btemp+1
 10665  001A48  CFDD F06C          	movff	postdec2,btemp+2
 10666  001A4C  C06B  FFE6         	movff	btemp+1,postinc1
 10667  001A50  C06C  FFE6         	movff	btemp+2,postinc1
 10668  001A54  EC90  F00D         	call	_RF24N_write	;wreg free
 10669  001A58  D049               	goto	l4261
 10670  001A5A                     l4247:
 10671                           
 10672                           ;RF24Network_c.c: 338: }
 10673                           ;RF24Network_c.c: 339: val = RF24N_enqueue(header);
 10674                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10675  001A5A  0EFC               	movlw	-4
 10676  001A5C  CFE3 F013          	movff	plusw1,RF24N_enqueue@header
 10677  001A60  0EFD               	movlw	-3
 10678  001A62  CFE3 F014          	movff	plusw1,RF24N_enqueue@header+1
 10679  001A66  EC2D  F008         	call	_RF24N_enqueue	;wreg free
 10680  001A6A  6E75               	movwf	btemp+11,c
 10681                           
 10682                           ;stkvar	RF24N_update@val @ sp[(-5)+0]
 10683  001A6C  0EFB               	movlw	-5
 10684  001A6E  C075  FFE3         	movff	btemp+11,plusw1
 10685                           
 10686                           ;RF24Network_c.c: 341: if(rn.multicastRelay){
 10687  001A72  EE20  F0D5         	lfsr	2,_rn
 10688  001A76  50DF               	movf	indf2,w,c
 10689  001A78  B4D8               	btfsc	status,2,c
 10690  001A7A  D01A               	goto	l4253
 10691                           
 10692                           ;RF24Network_c.c: 342: ;
 10693                           ;RF24Network_c.c: 343: RF24N_write(RF24N_levelToAddress(rn.multicast_level)<<3,4);
 10694  001A7C  0E04               	movlw	4
 10695  001A7E  6EE6               	movwf	postinc1,c
 10696  001A80  EE21  F004         	lfsr	2,_rn+47
 10697  001A84  50DF               	movf	indf2,w,c
 10698  001A86  EC89  F01A         	call	_RF24N_levelToAddress
 10699  001A8A  C003  F06B         	movff	?_RF24N_levelToAddress,btemp+1
 10700  001A8E  C004  F06C         	movff	?_RF24N_levelToAddress+1,btemp+2
 10701  001A92  90D8               	bcf	status,0,c
 10702  001A94  366B               	rlcf	btemp+1,f,c
 10703  001A96  366C               	rlcf	btemp+2,f,c
 10704  001A98  90D8               	bcf	status,0,c
 10705  001A9A  366B               	rlcf	btemp+1,f,c
 10706  001A9C  366C               	rlcf	btemp+2,f,c
 10707  001A9E  90D8               	bcf	status,0,c
 10708  001AA0  366B               	rlcf	btemp+1,f,c
 10709  001AA2  366C               	rlcf	btemp+2,f,c
 10710  001AA4  C06B  FFE6         	movff	btemp+1,postinc1
 10711  001AA8  C06C  FFE6         	movff	btemp+2,postinc1
 10712  001AAC  EC90  F00D         	call	_RF24N_write	;wreg free
 10713  001AB0                     l4253:
 10714                           
 10715                           ;RF24Network_c.c: 344: }
 10716                           ;RF24Network_c.c: 345: if( val == 2 ){
 10717                           ;stkvar	RF24N_update@val @ sp[(-5)+0]
 10718  001AB0  0EFB               	movlw	-5
 10719  001AB2  CFE3 F06A          	movff	plusw1,btemp
 10720  001AB6  0E02               	movlw	2
 10721  001AB8  186A               	xorwf	btemp,w,c
 10722  001ABA  D75A               	goto	L10
 10723  001ABC                     l4259:
 10724                           
 10725                           ;RF24Network_c.c: 351: RF24N_write(header->to_node,1);
 10726  001ABC  0E01               	movlw	1
 10727  001ABE  6EE6               	movwf	postinc1,c
 10728                           
 10729                           ;stkvar	RF24N_update@header @ sp[(-6)+1]
 10730  001AC0  0EFB               	movlw	-5
 10731  001AC2  CFE3 F06B          	movff	plusw1,btemp+1
 10732  001AC6  0EFC               	movlw	-4
 10733  001AC8  CFE3 F06C          	movff	plusw1,btemp+2
 10734  001ACC  0E02               	movlw	2
 10735  001ACE  246B               	addwf	btemp+1,w,c
 10736  001AD0  6ED9               	movwf	fsr2l,c
 10737  001AD2  0E00               	movlw	0
 10738  001AD4  206C               	addwfc	btemp+2,w,c
 10739  001AD6  6EDA               	movwf	fsr2h,c
 10740  001AD8  CFDE F06B          	movff	postinc2,btemp+1
 10741  001ADC  CFDD F06C          	movff	postdec2,btemp+2
 10742  001AE0  C06B  FFE6         	movff	btemp+1,postinc1
 10743  001AE4  C06C  FFE6         	movff	btemp+2,postinc1
 10744  001AE8  EC90  F00D         	call	_RF24N_write	;wreg free
 10745  001AEC                     l4261:
 10746  001AEC  EC6D  F01D         	call	_RF24_isValid	;wreg free
 10747  001AF0  0900               	iorlw	0
 10748  001AF2  B4D8               	btfsc	status,2,c
 10749  001AF4  D730               	goto	l4221
 10750                           
 10751                           ;stkvar	RF24N_update@pipe_num @ sp[(-5)+4]
 10752  001AF6  0EFF               	movlw	255
 10753  001AF8  24E1               	addwf	fsr1l,w,c
 10754  001AFA  6E6B               	movwf	btemp+1,c
 10755  001AFC  0EFF               	movlw	255
 10756  001AFE  20E2               	addwfc	fsr1h,w,c
 10757  001B00  6E6C               	movwf	btemp+2,c
 10758  001B02  C06B  F010         	movff	btemp+1,RF24_available_p@pipe_num
 10759  001B06  C06C  F011         	movff	btemp+2,RF24_available_p@pipe_num+1
 10760  001B0A  EC78  F01C         	call	_RF24_available_p	;wreg free
 10761  001B0E  0900               	iorlw	0
 10762  001B10  B4D8               	btfsc	status,2,c
 10763  001B12  D721               	goto	l4221
 10764  001B14  D595               	goto	l4161
 10765  001B16                     l409:
 10766                           
 10767                           ; _RF24N_update: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10768  001B16  0EFB               	movlw	251
 10769  001B18  26E1               	addwf	fsr1l,f,c
 10770  001B1A  0EFF               	movlw	255
 10771  001B1C  22E2               	addwfc	fsr1h,f,c
 10772  001B1E  0012               	return		;funcret
 10773  001B20                     __end_of_RF24N_update:
 10774                           	opt stack 0
 10775                           tblptru	equ	0xFF8
 10776                           tblptrh	equ	0xFF7
 10777                           tblptrl	equ	0xFF6
 10778                           tablat	equ	0xFF5
 10779                           prodh	equ	0xFF4
 10780                           prodl	equ	0xFF3
 10781                           intcon	equ	0xFF2
 10782                           indf0	equ	0xFEF
 10783                           postinc0	equ	0xFEE
 10784                           postdec0	equ	0xFED
 10785                           plusw0	equ	0xFEB
 10786                           fsr0h	equ	0xFEA
 10787                           fsr0l	equ	0xFE9
 10788                           wreg	equ	0xFE8
 10789                           postinc1	equ	0xFE6
 10790                           plusw1	equ	0xFE3
 10791                           fsr1h	equ	0xFE2
 10792                           fsr1l	equ	0xFE1
 10793                           indf2	equ	0xFDF
 10794                           postinc2	equ	0xFDE
 10795                           postdec2	equ	0xFDD
 10796                           plusw2	equ	0xFDB
 10797                           fsr2h	equ	0xFDA
 10798                           fsr2l	equ	0xFD9
 10799                           status	equ	0xFD8
 10800                           
 10801 ;; *************** function _delay *****************
 10802 ;; Defined at:
 10803 ;;		line 181 in file "../../../RF24_c/utility/XC8/spi.c"
 10804 ;; Parameters:    Size  Location     Type
 10805 ;;  val             2    2[COMRAM] unsigned int 
 10806 ;; Auto vars:     Size  Location     Type
 10807 ;;  j               2    6[COMRAM] unsigned int 
 10808 ;;  i               2    4[COMRAM] unsigned int 
 10809 ;; Return value:  Size  Location     Type
 10810 ;;                  1    wreg      void 
 10811 ;; Registers used:
 10812 ;;		wreg, status,2, status,0
 10813 ;; Tracked objects:
 10814 ;;		On entry : 0/0
 10815 ;;		On exit  : 0/0
 10816 ;;		Unchanged: 0/0
 10817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10818 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10819 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10821 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10822 ;;Total ram usage:        6 bytes
 10823 ;; Hardware stack levels used:    1
 10824 ;; Hardware stack levels required when called:    1
 10825 ;; This function calls:
 10826 ;;		Nothing
 10827 ;; This function is called by:
 10828 ;;		_RF24N_update
 10829 ;;		_RF24N_write_
 10830 ;;		_RF24_begin
 10831 ;;		_RF24_powerUp
 10832 ;;		_RF24_getDynamicPayloadSize
 10833 ;;		_Serial_rx
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836                           
 10837                           	psect	text63
 10838  0035A8                     __ptext63:
 10839                           	opt stack 0
 10840  0035A8                     _delay:
 10841                           	opt stack 27
 10842                           
 10843                           ;spi.c: 183: unsigned int i;
 10844                           ;spi.c: 184: unsigned int j;
 10845                           ;spi.c: 186: for (i =0; i< val; i++)
 10846                           
 10847                           ;incstack = 0
 10848  0035A8  0E00               	movlw	0
 10849  0035AA  6E06               	movwf	delay@i+1,c
 10850  0035AC  0E00               	movlw	0
 10851  0035AE  6E05               	movwf	delay@i,c
 10852  0035B0  D019               	goto	l3539
 10853  0035B2                     l3527:
 10854                           
 10855                           ;spi.c: 187: {
 10856                           ;spi.c: 189: for (j =0 ; j < (32000000/(4000l*10)); j++)
 10857  0035B2  0E00               	movlw	0
 10858  0035B4  6E08               	movwf	delay@j+1,c
 10859  0035B6  0E00               	movlw	0
 10860  0035B8  6E07               	movwf	delay@j,c
 10861  0035BA                     l3529:
 10862  0035BA  0E20               	movlw	32
 10863  0035BC  5C07               	subwf	delay@j,w,c
 10864  0035BE  0E03               	movlw	3
 10865  0035C0  5808               	subwfb	delay@j+1,w,c
 10866  0035C2  B0D8               	btfsc	status,0,c
 10867  0035C4  D00D               	goto	l3537
 10868  0035C6  F000               	nop		;# 
 10869  0035C8  F000               	nop		;# 
 10870  0035CA  F000               	nop		;# 
 10871  0035CC  F000               	nop		;# 
 10872  0035CE  F000               	nop		;# 
 10873  0035D0  F000               	nop		;# 
 10874  0035D2  F000               	nop		;# 
 10875  0035D4  F000               	nop		;# 
 10876  0035D6  F000               	nop		;# 
 10877  0035D8  F000               	nop		;# 
 10878  0035DA  4A07               	infsnz	delay@j,f,c
 10879  0035DC  2A08               	incf	delay@j+1,f,c
 10880  0035DE  D7ED               	goto	l3529
 10881  0035E0                     l3537:
 10882  0035E0  4A05               	infsnz	delay@i,f,c
 10883  0035E2  2A06               	incf	delay@i+1,f,c
 10884  0035E4                     l3539:
 10885  0035E4  5003               	movf	delay@val,w,c
 10886  0035E6  5C05               	subwf	delay@i,w,c
 10887  0035E8  5004               	movf	delay@val+1,w,c
 10888  0035EA  5806               	subwfb	delay@i+1,w,c
 10889  0035EC  B0D8               	btfsc	status,0,c
 10890  0035EE  0012               	return	
 10891  0035F0  D7E0               	goto	l3527
 10892  0035F2                     __end_of_delay:
 10893                           	opt stack 0
 10894                           tblptru	equ	0xFF8
 10895                           tblptrh	equ	0xFF7
 10896                           tblptrl	equ	0xFF6
 10897                           tablat	equ	0xFF5
 10898                           prodh	equ	0xFF4
 10899                           prodl	equ	0xFF3
 10900                           intcon	equ	0xFF2
 10901                           indf0	equ	0xFEF
 10902                           postinc0	equ	0xFEE
 10903                           postdec0	equ	0xFED
 10904                           plusw0	equ	0xFEB
 10905                           fsr0h	equ	0xFEA
 10906                           fsr0l	equ	0xFE9
 10907                           wreg	equ	0xFE8
 10908                           postinc1	equ	0xFE6
 10909                           plusw1	equ	0xFE3
 10910                           fsr1h	equ	0xFE2
 10911                           fsr1l	equ	0xFE1
 10912                           indf2	equ	0xFDF
 10913                           postinc2	equ	0xFDE
 10914                           postdec2	equ	0xFDD
 10915                           plusw2	equ	0xFDB
 10916                           fsr2h	equ	0xFDA
 10917                           fsr2l	equ	0xFD9
 10918                           status	equ	0xFD8
 10919                           
 10920 ;; *************** function _RF24N_write *****************
 10921 ;; Defined at:
 10922 ;;		line 981 in file "../../RF24Network_c.c"
 10923 ;; Parameters:    Size  Location     Type
 10924 ;;  to_node         2  [STACK] unsigned int 
 10925 ;;  directTo        1  [STACK] unsigned char 
 10926 ;; Auto vars:     Size  Location     Type
 10927 ;;  header          2  [STACK] PTR struct .
 10928 ;;		 -> rn.frame_buffer(32), rn(370), 
 10929 ;;  conversion      4  [STACK] struct .
 10930 ;;  reply_time      4  [STACK] unsigned long 
 10931 ;;  ok              1  [STACK] unsigned char 
 10932 ;;  isAckType       1  [STACK] unsigned char 
 10933 ;; Return value:  Size  Location     Type
 10934 ;;                  1  [STACK] unsigned char 
 10935 ;; Registers used:
 10936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
 10937 ;; Tracked objects:
 10938 ;;		On entry : 0/0
 10939 ;;		On exit  : 0/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10946 ;;Total ram usage:        0 bytes
 10947 ;; Hardware stack levels used:    1
 10948 ;; Hardware stack levels required when called:    9
 10949 ;; This function calls:
 10950 ;;		_RF24N_is_valid_address
 10951 ;;		_RF24N_logicalToPhysicalAddress
 10952 ;;		_RF24N_update
 10953 ;;		_RF24N_write_to_pipe
 10954 ;;		_RF24_setAutoAck_p
 10955 ;;		_RF24_startListening
 10956 ;;		_RF24_txStandBy_t
 10957 ;;		_millis
 10958 ;; This function is called by:
 10959 ;;		_RF24N_update
 10960 ;;		_RF24N__write
 10961 ;; This function uses a recursive model
 10962 ;;
 10963                           
 10964                           	psect	text64
 10965  001B20                     __ptext64:
 10966                           	opt stack 0
 10967  001B20                     _RF24N_write:
 10968                           	opt stack 17
 10969                           
 10970                           ;incstack = 0
 10971  001B20  0E0C               	movlw	12
 10972  001B22  26E1               	addwf	fsr1l,f,c
 10973  001B24  0E00               	movlw	0
 10974  001B26  22E2               	addwfc	fsr1h,f,c
 10975                           
 10976                           ;RF24Network_c.c: 984: uint8_t isAckType = 0;
 10977                           ;stkvar	RF24N_write@isAckType @ sp[(-12)+11]
 10978  001B28  0EFF               	movlw	-1
 10979  001B2A  6AE3               	clrf	plusw1,c
 10980                           
 10981                           ;RF24Network_c.c: 985: uint32_t reply_time ;
 10982                           ;RF24Network_c.c: 986: logicalToPhysicalStruct conversion;
 10983                           ;RF24Network_c.c: 988: if(rn.frame_buffer[6] > 64 && rn.frame_buffer[6] < 192 ){ isAckTy
      +                          pe=1; }
 10984  001B2C  EE20  F0E2         	lfsr	2,_rn+13
 10985  001B30  0E40               	movlw	64
 10986  001B32  64DF               	cpfsgt	indf2,c
 10987  001B34  D008               	goto	l3867
 10988  001B36  EE20  F0E2         	lfsr	2,_rn+13
 10989  001B3A  0EC0               	movlw	192
 10990  001B3C  60DF               	cpfslt	indf2,c
 10991  001B3E  D003               	goto	l3867
 10992                           
 10993                           ;stkvar	RF24N_write@isAckType @ sp[(-12)+11]
 10994  001B40  0EFF               	movlw	-1
 10995  001B42  6AE3               	clrf	plusw1,c
 10996  001B44  2AE3               	incf	plusw1,f,c
 10997  001B46                     l3867:
 10998                           
 10999                           ;RF24Network_c.c: 995: if ( !RF24N_is_valid_address(to_node) )
 11000                           ;stkvar	RF24N_write@to_node @ sp[(-12)+-2]
 11001  001B46  0EF2               	movlw	-14
 11002  001B48  CFE3 F003          	movff	plusw1,RF24N_is_valid_address@node
 11003  001B4C  0EF3               	movlw	-13
 11004  001B4E  CFE3 F004          	movff	plusw1,RF24N_is_valid_address@node+1
 11005  001B52  EC2A  F01C         	call	_RF24N_is_valid_address	;wreg free
 11006  001B56  0900               	iorlw	0
 11007  001B58  A4D8               	btfss	status,2,c
 11008  001B5A  D003               	goto	l3873
 11009                           
 11010                           ;RF24Network_c.c: 996: return 0;
 11011  001B5C  0E00               	movlw	0
 11012  001B5E  6E6A               	movwf	btemp,c
 11013  001B60  D165               	goto	l534
 11014  001B62                     l3873:
 11015                           
 11016                           ;RF24Network_c.c: 999: conversion.send_node= to_node;
 11017                           ;stkvar	RF24N_write@to_node @ sp[(-12)+-2]
 11018                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11019  001B62  0EF2               	movlw	-14
 11020  001B64  CFE3 F06A          	movff	plusw1,btemp
 11021  001B68  0EF6               	movlw	-10
 11022  001B6A  C06A  FFE3         	movff	btemp,plusw1
 11023  001B6E  0EF3               	movlw	-13
 11024  001B70  CFE3 F06A          	movff	plusw1,btemp
 11025  001B74  0EF7               	movlw	-9
 11026  001B76  C06A  FFE3         	movff	btemp,plusw1
 11027                           
 11028                           ;RF24Network_c.c: 1000: conversion.send_pipe=directTo;
 11029                           ;stkvar	RF24N_write@directTo @ sp[(-12)+-3]
 11030                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11031  001B7A  0EF8               	movlw	248
 11032  001B7C  24E1               	addwf	fsr1l,w,c
 11033  001B7E  6ED9               	movwf	fsr2l,c
 11034  001B80  0EFF               	movlw	255
 11035  001B82  20E2               	addwfc	fsr1h,w,c
 11036  001B84  6EDA               	movwf	fsr2h,c
 11037  001B86  0EF1               	movlw	-15
 11038  001B88  CFE3 FFDF          	movff	plusw1,indf2
 11039                           
 11040                           ;RF24Network_c.c: 1001: conversion.multicast=0;
 11041                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11042  001B8C  0EF9               	movlw	249
 11043  001B8E  24E1               	addwf	fsr1l,w,c
 11044  001B90  6ED9               	movwf	fsr2l,c
 11045  001B92  0EFF               	movlw	255
 11046  001B94  20E2               	addwfc	fsr1h,w,c
 11047  001B96  6EDA               	movwf	fsr2h,c
 11048  001B98  0E00               	movlw	0
 11049  001B9A  6EDF               	movwf	indf2,c
 11050                           
 11051                           ;RF24Network_c.c: 1002: RF24N_logicalToPhysicalAddress( &conversion);
 11052                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11053  001B9C  0EF6               	movlw	246
 11054  001B9E  24E1               	addwf	fsr1l,w,c
 11055  001BA0  6E6B               	movwf	btemp+1,c
 11056  001BA2  0EFF               	movlw	255
 11057  001BA4  20E2               	addwfc	fsr1h,w,c
 11058  001BA6  6E6C               	movwf	btemp+2,c
 11059  001BA8  C06B  F015         	movff	btemp+1,RF24N_logicalToPhysicalAddress@conversionInfo
 11060  001BAC  C06C  F016         	movff	btemp+2,RF24N_logicalToPhysicalAddress@conversionInfo+1
 11061  001BB0  ECD7  F014         	call	_RF24N_logicalToPhysicalAddress	;wreg free
 11062                           
 11063                           ;RF24Network_c.c: 1007: ;
 11064                           ;RF24Network_c.c: 1010: ok=RF24N_write_to_pipe(conversion.send_node, conversion.send_pip
      +                          e, conversion.multicast);
 11065                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11066  001BB4  0EF6               	movlw	-10
 11067  001BB6  CFE3 F030          	movff	plusw1,RF24N_write_to_pipe@node
 11068  001BBA  0EF7               	movlw	-9
 11069  001BBC  CFE3 F031          	movff	plusw1,RF24N_write_to_pipe@node+1
 11070                           
 11071                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11072  001BC0  0EF8               	movlw	248
 11073  001BC2  24E1               	addwf	fsr1l,w,c
 11074  001BC4  6ED9               	movwf	fsr2l,c
 11075  001BC6  0EFF               	movlw	255
 11076  001BC8  20E2               	addwfc	fsr1h,w,c
 11077  001BCA  6EDA               	movwf	fsr2h,c
 11078  001BCC  50DF               	movf	indf2,w,c
 11079  001BCE  6E32               	movwf	RF24N_write_to_pipe@pipe,c
 11080                           
 11081                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11082  001BD0  0EF9               	movlw	249
 11083  001BD2  24E1               	addwf	fsr1l,w,c
 11084  001BD4  6ED9               	movwf	fsr2l,c
 11085  001BD6  0EFF               	movlw	255
 11086  001BD8  20E2               	addwfc	fsr1h,w,c
 11087  001BDA  6EDA               	movwf	fsr2h,c
 11088  001BDC  50DF               	movf	indf2,w,c
 11089  001BDE  6E33               	movwf	RF24N_write_to_pipe@multicast,c
 11090  001BE0  EC5A  F017         	call	_RF24N_write_to_pipe	;wreg free
 11091  001BE4  6E75               	movwf	btemp+11,c
 11092                           
 11093                           ;stkvar	RF24N_write@ok @ sp[(-12)+10]
 11094  001BE6  0EFE               	movlw	-2
 11095  001BE8  C075  FFE3         	movff	btemp+11,plusw1
 11096                           
 11097                           ;RF24Network_c.c: 1019: }
 11098                           ;RF24Network_c.c: 1022: if( directTo == 1 && ok && conversion.send_node == to_node && is
      +                          AckType){
 11099                           ;stkvar	RF24N_write@directTo @ sp[(-12)+-3]
 11100  001BEC  0EF1               	movlw	-15
 11101  001BEE  04E3               	decf	plusw1,w,c
 11102  001BF0  A4D8               	btfss	status,2,c
 11103  001BF2  D089               	goto	l3911
 11104                           
 11105                           ;stkvar	RF24N_write@ok @ sp[(-12)+10]
 11106  001BF4  0EFE               	movlw	-2
 11107  001BF6  50E3               	movf	plusw1,w,c
 11108  001BF8  B4D8               	btfsc	status,2,c
 11109  001BFA  D085               	goto	l3911
 11110                           
 11111                           ;stkvar	RF24N_write@to_node @ sp[(-12)+-2]
 11112                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11113  001BFC  50E1               	movf	fsr1l,w,c
 11114  001BFE  0FF6               	addlw	-10
 11115  001C00  6ED9               	movwf	fsr2l,c
 11116  001C02  50E2               	movf	fsr1h,w,c
 11117  001C04  6EDA               	movwf	fsr2h,c
 11118  001C06  0EFF               	movlw	255
 11119  001C08  22DA               	addwfc	fsr2h,f,c
 11120  001C0A  0EF2               	movlw	-14
 11121  001C0C  50E3               	movf	plusw1,w,c
 11122  001C0E  18DE               	xorwf	postinc2,w,c
 11123  001C10  E17A               	bnz	l3911
 11124  001C12  0EF3               	movlw	-13
 11125  001C14  50E3               	movf	plusw1,w,c
 11126  001C16  18DE               	xorwf	postinc2,w,c
 11127  001C18  A4D8               	btfss	status,2,c
 11128  001C1A  D075               	goto	l3911
 11129                           
 11130                           ;stkvar	RF24N_write@isAckType @ sp[(-12)+11]
 11131  001C1C  0EFF               	movlw	-1
 11132  001C1E  50E3               	movf	plusw1,w,c
 11133  001C20  B4D8               	btfsc	status,2,c
 11134  001C22  D071               	goto	l3911
 11135                           
 11136                           ;RF24Network_c.c: 1024: RF24NetworkHeader* header = (RF24NetworkHeader*)rn.frame_buffer;
 11137                           ;stkvar	RF24N_write@header @ sp[(-12)+0]
 11138  001C24  0E00               	movlw	high (_rn+7)
 11139  001C26  6E6A               	movwf	btemp,c
 11140  001C28  0EF5               	movlw	-11
 11141  001C2A  C06A  FFE3         	movff	btemp,plusw1
 11142  001C2E  0EDC               	movlw	low (_rn+7)
 11143  001C30  6E6A               	movwf	btemp,c
 11144  001C32  0EF4               	movlw	-12
 11145  001C34  C06A  FFE3         	movff	btemp,plusw1
 11146                           
 11147                           ;RF24Network_c.c: 1025: header->type = 193;
 11148                           ;stkvar	RF24N_write@header @ sp[(-12)+0]
 11149  001C38  0EF4               	movlw	-12
 11150  001C3A  CFE3 F06B          	movff	plusw1,btemp+1
 11151  001C3E  0EF5               	movlw	-11
 11152  001C40  CFE3 F06C          	movff	plusw1,btemp+2
 11153  001C44  0E06               	movlw	6
 11154  001C46  246B               	addwf	btemp+1,w,c
 11155  001C48  6ED9               	movwf	fsr2l,c
 11156  001C4A  0E00               	movlw	0
 11157  001C4C  206C               	addwfc	btemp+2,w,c
 11158  001C4E  6EDA               	movwf	fsr2h,c
 11159  001C50  0EC1               	movlw	193
 11160  001C52  6EDF               	movwf	indf2,c
 11161                           
 11162                           ;RF24Network_c.c: 1026: header->to_node = header->from_node;
 11163                           ;stkvar	RF24N_write@header @ sp[(-12)+0]
 11164  001C54  0EF4               	movlw	-12
 11165  001C56  CFE3 FFD9          	movff	plusw1,fsr2l
 11166  001C5A  0EF5               	movlw	-11
 11167  001C5C  CFE3 FFDA          	movff	plusw1,fsr2h
 11168                           
 11169                           ;stkvar	RF24N_write@header @ sp[(-12)+0]
 11170  001C60  0EF4               	movlw	-12
 11171  001C62  CFE3 F06B          	movff	plusw1,btemp+1
 11172  001C66  0EF5               	movlw	-11
 11173  001C68  CFE3 F06C          	movff	plusw1,btemp+2
 11174  001C6C  0E02               	movlw	2
 11175  001C6E  246B               	addwf	btemp+1,w,c
 11176  001C70  6EE9               	movwf	fsr0l,c
 11177  001C72  0E00               	movlw	0
 11178  001C74  206C               	addwfc	btemp+2,w,c
 11179  001C76  6EEA               	movwf	fsr0h,c
 11180  001C78  CFDE FFEE          	movff	postinc2,postinc0
 11181  001C7C  CFDD FFED          	movff	postdec2,postdec0
 11182                           
 11183                           ;RF24Network_c.c: 1028: conversion.send_node = header->from_node;
 11184                           ;stkvar	RF24N_write@header @ sp[(-12)+0]
 11185                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11186  001C80  0EF4               	movlw	-12
 11187  001C82  CFE3 FFE9          	movff	plusw1,fsr0l
 11188  001C86  0EF5               	movlw	-11
 11189  001C88  CFE3 FFEA          	movff	plusw1,fsr0h
 11190  001C8C  0EF6               	movlw	-10
 11191  001C8E  CFEE FFE3          	movff	postinc0,plusw1
 11192  001C92  0EF7               	movlw	-9
 11193  001C94  CFED FFE3          	movff	postdec0,plusw1
 11194                           
 11195                           ;RF24Network_c.c: 1029: conversion.send_pipe = 1;
 11196                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11197  001C98  0EF8               	movlw	248
 11198  001C9A  24E1               	addwf	fsr1l,w,c
 11199  001C9C  6ED9               	movwf	fsr2l,c
 11200  001C9E  0EFF               	movlw	255
 11201  001CA0  20E2               	addwfc	fsr1h,w,c
 11202  001CA2  6EDA               	movwf	fsr2h,c
 11203  001CA4  0E01               	movlw	1
 11204  001CA6  6EDF               	movwf	indf2,c
 11205                           
 11206                           ;RF24Network_c.c: 1030: conversion.multicast = 0;
 11207                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11208  001CA8  0EF9               	movlw	249
 11209  001CAA  24E1               	addwf	fsr1l,w,c
 11210  001CAC  6ED9               	movwf	fsr2l,c
 11211  001CAE  0EFF               	movlw	255
 11212  001CB0  20E2               	addwfc	fsr1h,w,c
 11213  001CB2  6EDA               	movwf	fsr2h,c
 11214  001CB4  0E00               	movlw	0
 11215  001CB6  6EDF               	movwf	indf2,c
 11216                           
 11217                           ;RF24Network_c.c: 1031: RF24N_logicalToPhysicalAddress(&conversion);
 11218                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11219  001CB8  0EF6               	movlw	246
 11220  001CBA  24E1               	addwf	fsr1l,w,c
 11221  001CBC  6E6B               	movwf	btemp+1,c
 11222  001CBE  0EFF               	movlw	255
 11223  001CC0  20E2               	addwfc	fsr1h,w,c
 11224  001CC2  6E6C               	movwf	btemp+2,c
 11225  001CC4  C06B  F015         	movff	btemp+1,RF24N_logicalToPhysicalAddress@conversionInfo
 11226  001CC8  C06C  F016         	movff	btemp+2,RF24N_logicalToPhysicalAddress@conversionInfo+1
 11227  001CCC  ECD7  F014         	call	_RF24N_logicalToPhysicalAddress	;wreg free
 11228                           
 11229                           ;RF24Network_c.c: 1034: rn.frame_size = sizeof(RF24NetworkHeader);
 11230  001CD0  0E08               	movlw	8
 11231  001CD2  CFE8 F107          	movff	wreg,_rn+50
 11232                           
 11233                           ;RF24Network_c.c: 1035: RF24N_write_to_pipe(conversion.send_node, conversion.send_pipe, 
      +                          conversion.multicast);
 11234                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11235  001CD6  0EF6               	movlw	-10
 11236  001CD8  CFE3 F030          	movff	plusw1,RF24N_write_to_pipe@node
 11237  001CDC  0EF7               	movlw	-9
 11238  001CDE  CFE3 F031          	movff	plusw1,RF24N_write_to_pipe@node+1
 11239                           
 11240                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11241  001CE2  0EF8               	movlw	248
 11242  001CE4  24E1               	addwf	fsr1l,w,c
 11243  001CE6  6ED9               	movwf	fsr2l,c
 11244  001CE8  0EFF               	movlw	255
 11245  001CEA  20E2               	addwfc	fsr1h,w,c
 11246  001CEC  6EDA               	movwf	fsr2h,c
 11247  001CEE  50DF               	movf	indf2,w,c
 11248  001CF0  6E32               	movwf	RF24N_write_to_pipe@pipe,c
 11249                           
 11250                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11251  001CF2  0EF9               	movlw	249
 11252  001CF4  24E1               	addwf	fsr1l,w,c
 11253  001CF6  6ED9               	movwf	fsr2l,c
 11254  001CF8  0EFF               	movlw	255
 11255  001CFA  20E2               	addwfc	fsr1h,w,c
 11256  001CFC  6EDA               	movwf	fsr2h,c
 11257  001CFE  50DF               	movf	indf2,w,c
 11258  001D00  6E33               	movwf	RF24N_write_to_pipe@multicast,c
 11259  001D02  EC5A  F017         	call	_RF24N_write_to_pipe	;wreg free
 11260  001D06                     l3911:
 11261                           
 11262                           ;RF24Network_c.c: 1043: }
 11263                           ;RF24Network_c.c: 1047: if( ok && conversion.send_node != to_node && (directTo==0 || dir
      +                          ectTo==3) && isAckType){
 11264                           ;stkvar	RF24N_write@ok @ sp[(-12)+10]
 11265  001D06  0EFE               	movlw	-2
 11266  001D08  50E3               	movf	plusw1,w,c
 11267  001D0A  B4D8               	btfsc	status,2,c
 11268  001D0C  D087               	goto	l3939
 11269                           
 11270                           ;stkvar	RF24N_write@to_node @ sp[(-12)+-2]
 11271                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11272  001D0E  50E1               	movf	fsr1l,w,c
 11273  001D10  0FF6               	addlw	-10
 11274  001D12  6ED9               	movwf	fsr2l,c
 11275  001D14  50E2               	movf	fsr1h,w,c
 11276  001D16  6EDA               	movwf	fsr2h,c
 11277  001D18  0EFF               	movlw	255
 11278  001D1A  22DA               	addwfc	fsr2h,f,c
 11279  001D1C  0EF2               	movlw	-14
 11280  001D1E  50E3               	movf	plusw1,w,c
 11281  001D20  18DE               	xorwf	postinc2,w,c
 11282  001D22  E105               	bnz	u4110
 11283  001D24  0EF3               	movlw	-13
 11284  001D26  50E3               	movf	plusw1,w,c
 11285  001D28  18DE               	xorwf	postinc2,w,c
 11286  001D2A  B4D8               	btfsc	status,2,c
 11287  001D2C  D077               	goto	l3939
 11288  001D2E                     u4110:
 11289                           
 11290                           ;stkvar	RF24N_write@directTo @ sp[(-12)+-3]
 11291  001D2E  0EF1               	movlw	-15
 11292  001D30  50E3               	movf	plusw1,w,c
 11293  001D32  B4D8               	btfsc	status,2,c
 11294  001D34  D007               	goto	l3919
 11295                           
 11296                           ;stkvar	RF24N_write@directTo @ sp[(-12)+-3]
 11297  001D36  0EF1               	movlw	-15
 11298  001D38  CFE3 F06A          	movff	plusw1,btemp
 11299  001D3C  0E03               	movlw	3
 11300  001D3E  186A               	xorwf	btemp,w,c
 11301  001D40  A4D8               	btfss	status,2,c
 11302  001D42  D06C               	goto	l3939
 11303  001D44                     l3919:
 11304                           
 11305                           ;stkvar	RF24N_write@isAckType @ sp[(-12)+11]
 11306  001D44  0EFF               	movlw	-1
 11307  001D46  50E3               	movf	plusw1,w,c
 11308  001D48  B4D8               	btfsc	status,2,c
 11309  001D4A  D068               	goto	l3939
 11310                           
 11311                           ;RF24Network_c.c: 1050: if(rn.networkFlags & 4){
 11312  001D4C  EE20  F0FF         	lfsr	2,_rn+42
 11313  001D50  A4DF               	btfss	indf2,2,c
 11314  001D52  D016               	goto	l3929
 11315                           
 11316                           ;RF24Network_c.c: 1051: RF24_txStandBy_t(rn.txTimeout,0);
 11317  001D54  C0D6  F013         	movff	_rn+1,RF24_txStandBy_t@timeout
 11318  001D58  C0D7  F014         	movff	_rn+2,RF24_txStandBy_t@timeout+1
 11319  001D5C  C0D8  F015         	movff	_rn+3,RF24_txStandBy_t@timeout+2
 11320  001D60  C0D9  F016         	movff	_rn+4,RF24_txStandBy_t@timeout+3
 11321  001D64  0E00               	movlw	0
 11322  001D66  6E17               	movwf	RF24_txStandBy_t@startTx,c
 11323  001D68  ECFC  F016         	call	_RF24_txStandBy_t	;wreg free
 11324                           
 11325                           ;RF24Network_c.c: 1052: rn.networkFlags &= ~4;
 11326  001D6C  C0FF  FFE8         	movff	_rn+42,wreg
 11327  001D70  0BFB               	andlw	251
 11328  001D72  CFE8 F0FF          	movff	wreg,_rn+42
 11329                           
 11330                           ;RF24Network_c.c: 1053: RF24_setAutoAck_p(0,0);
 11331  001D76  0E00               	movlw	0
 11332  001D78  6E11               	movwf	RF24_setAutoAck_p@enable,c
 11333  001D7A  0E00               	movlw	0
 11334  001D7C  EC0E  F01A         	call	_RF24_setAutoAck_p
 11335  001D80                     l3929:
 11336                           
 11337                           ;RF24Network_c.c: 1054: }
 11338                           ;RF24Network_c.c: 1055: RF24_startListening();
 11339  001D80  ECE2  F019         	call	_RF24_startListening	;wreg free
 11340                           
 11341                           ;RF24Network_c.c: 1057: reply_time = millis();
 11342  001D84  ECC5  F01D         	call	_millis	;wreg free
 11343  001D88  C003  F072         	movff	?_millis,btemp+8
 11344  001D8C  C004  F073         	movff	?_millis+1,btemp+9
 11345  001D90  C005  F074         	movff	?_millis+2,btemp+10
 11346  001D94  C006  F075         	movff	?_millis+3,btemp+11
 11347                           
 11348                           ;stkvar	RF24N_write@reply_time @ sp[(-12)+6]
 11349  001D98  0EFA               	movlw	-6
 11350  001D9A  C072  FFE3         	movff	btemp+8,plusw1
 11351  001D9E  0EFB               	movlw	-5
 11352  001DA0  C073  FFE3         	movff	btemp+9,plusw1
 11353  001DA4  0EFC               	movlw	-4
 11354  001DA6  C074  FFE3         	movff	btemp+10,plusw1
 11355  001DAA  0EFD               	movlw	-3
 11356  001DAC  C075  FFE3         	movff	btemp+11,plusw1
 11357                           
 11358                           ;RF24Network_c.c: 1059: while( RF24N_update() != 193){
 11359  001DB0  D02F               	goto	l3937
 11360  001DB2                     l3933:
 11361                           
 11362                           ;RF24Network_c.c: 1063: if(millis() - reply_time > rn.routeTimeout){
 11363                           ;stkvar	RF24N_write@reply_time @ sp[(-12)+6]
 11364  001DB2  ECC5  F01D         	call	_millis	;wreg free
 11365  001DB6  C003  F072         	movff	?_millis,btemp+8
 11366  001DBA  C004  F073         	movff	?_millis+1,btemp+9
 11367  001DBE  C005  F074         	movff	?_millis+2,btemp+10
 11368  001DC2  C006  F075         	movff	?_millis+3,btemp+11
 11369  001DC6  0EFA               	movlw	-6
 11370  001DC8  50E3               	movf	plusw1,w,c
 11371  001DCA  5E72               	subwf	btemp+8,f,c
 11372  001DCC  0EFB               	movlw	-5
 11373  001DCE  50E3               	movf	plusw1,w,c
 11374  001DD0  5A73               	subwfb	btemp+9,f,c
 11375  001DD2  0EFC               	movlw	-4
 11376  001DD4  50E3               	movf	plusw1,w,c
 11377  001DD6  5A74               	subwfb	btemp+10,f,c
 11378  001DD8  0EFD               	movlw	-3
 11379  001DDA  50E3               	movf	plusw1,w,c
 11380  001DDC  5A75               	subwfb	btemp+11,f,c
 11381  001DDE  EE20  F0DA         	lfsr	2,_rn+5
 11382  001DE2  CFDE F070          	movff	postinc2,btemp+6
 11383  001DE6  CFDD F071          	movff	postdec2,btemp+7
 11384  001DEA  5070               	movf	btemp+6,w,c
 11385  001DEC  6E6A               	movwf	btemp,c
 11386  001DEE  5071               	movf	btemp+7,w,c
 11387  001DF0  6E6B               	movwf	btemp+1,c
 11388  001DF2  6A6C               	clrf	btemp+2,c
 11389  001DF4  6A6D               	clrf	btemp+3,c
 11390  001DF6  5072               	movf	btemp+8,w,c
 11391  001DF8  5C6A               	subwf	btemp,w,c
 11392  001DFA  5073               	movf	btemp+9,w,c
 11393  001DFC  586B               	subwfb	btemp+1,w,c
 11394  001DFE  5074               	movf	btemp+10,w,c
 11395  001E00  586C               	subwfb	btemp+2,w,c
 11396  001E02  5075               	movf	btemp+11,w,c
 11397  001E04  586D               	subwfb	btemp+3,w,c
 11398  001E06  B0D8               	btfsc	status,0,c
 11399  001E08  D003               	goto	l3937
 11400                           
 11401                           ;RF24Network_c.c: 1067: ;
 11402                           ;RF24Network_c.c: 1069: ok=0;
 11403                           ;stkvar	RF24N_write@ok @ sp[(-12)+10]
 11404  001E0A  0EFE               	movlw	-2
 11405  001E0C  6AE3               	clrf	plusw1,c
 11406                           
 11407                           ;RF24Network_c.c: 1070: break;
 11408  001E0E  D006               	goto	l3939
 11409  001E10                     l3937:
 11410  001E10  ECE7  F00A         	call	_RF24N_update	;wreg free
 11411  001E14  0EC1               	movlw	193
 11412  001E16  186A               	xorwf	btemp,w,c
 11413  001E18  A4D8               	btfss	status,2,c
 11414  001E1A  D7CB               	goto	l3933
 11415  001E1C                     l3939:
 11416                           
 11417                           ;RF24Network_c.c: 1071: }
 11418                           ;RF24Network_c.c: 1072: }
 11419                           ;RF24Network_c.c: 1073: }
 11420                           ;RF24Network_c.c: 1074: if( !(rn.networkFlags & 4) ){
 11421  001E1C  EE20  F0FF         	lfsr	2,_rn+42
 11422  001E20  A4DF               	btfss	indf2,2,c
 11423                           
 11424                           ;RF24Network_c.c: 1077: RF24_startListening();
 11425  001E22  ECE2  F019         	call	_RF24_startListening	;wreg free
 11426                           
 11427                           ;RF24Network_c.c: 1079: }
 11428                           ;RF24Network_c.c: 1087: return ok;
 11429                           ;stkvar	RF24N_write@ok @ sp[(-12)+10]
 11430  001E26  0EFE               	movlw	-2
 11431  001E28  CFE3 F06A          	movff	plusw1,btemp
 11432  001E2C                     l534:
 11433                           
 11434                           ; _RF24N_write: autosize = 12, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, 
      +                          argsize = 3, vargsize = 0
 11435  001E2C  0EF1               	movlw	241
 11436  001E2E  26E1               	addwf	fsr1l,f,c
 11437  001E30  0EFF               	movlw	255
 11438  001E32  22E2               	addwfc	fsr1h,f,c
 11439  001E34  0012               	return		;funcret
 11440  001E36                     __end_of_RF24N_write:
 11441                           	opt stack 0
 11442                           tblptru	equ	0xFF8
 11443                           tblptrh	equ	0xFF7
 11444                           tblptrl	equ	0xFF6
 11445                           tablat	equ	0xFF5
 11446                           prodh	equ	0xFF4
 11447                           prodl	equ	0xFF3
 11448                           intcon	equ	0xFF2
 11449                           indf0	equ	0xFEF
 11450                           postinc0	equ	0xFEE
 11451                           postdec0	equ	0xFED
 11452                           plusw0	equ	0xFEB
 11453                           fsr0h	equ	0xFEA
 11454                           fsr0l	equ	0xFE9
 11455                           wreg	equ	0xFE8
 11456                           postinc1	equ	0xFE6
 11457                           plusw1	equ	0xFE3
 11458                           fsr1h	equ	0xFE2
 11459                           fsr1l	equ	0xFE1
 11460                           indf2	equ	0xFDF
 11461                           postinc2	equ	0xFDE
 11462                           postdec2	equ	0xFDD
 11463                           plusw2	equ	0xFDB
 11464                           fsr2h	equ	0xFDA
 11465                           fsr2l	equ	0xFD9
 11466                           status	equ	0xFD8
 11467                           
 11468 ;; *************** function _RF24_txStandBy_t *****************
 11469 ;; Defined at:
 11470 ;;		line 1018 in file "../../../RF24_c/RF24_c.c"
 11471 ;; Parameters:    Size  Location     Type
 11472 ;;  timeout         4   18[COMRAM] unsigned long 
 11473 ;;  startTx         1   22[COMRAM] unsigned char 
 11474 ;; Auto vars:     Size  Location     Type
 11475 ;;  start           4   31[COMRAM] unsigned long 
 11476 ;; Return value:  Size  Location     Type
 11477 ;;                  1    wreg      unsigned char 
 11478 ;; Registers used:
 11479 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11480 ;; Tracked objects:
 11481 ;;		On entry : 0/0
 11482 ;;		On exit  : 0/0
 11483 ;;		Unchanged: 0/0
 11484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11485 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11486 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11487 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11488 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11489 ;;Total ram usage:       17 bytes
 11490 ;; Hardware stack levels used:    1
 11491 ;; Hardware stack levels required when called:    7
 11492 ;; This function calls:
 11493 ;;		_RF24_ce_d
 11494 ;;		_RF24_flush_tx
 11495 ;;		_RF24_get_status
 11496 ;;		_RF24_read_register_d
 11497 ;;		_RF24_stopListening
 11498 ;;		_RF24_write_register_d
 11499 ;;		_millis
 11500 ;; This function is called by:
 11501 ;;		_RF24N_write_
 11502 ;;		_RF24N_write
 11503 ;;		_RF24N_write_to_pipe
 11504 ;; This function uses a non-reentrant model
 11505 ;;
 11506                           
 11507                           	psect	text65
 11508  002DF8                     __ptext65:
 11509                           	opt stack 0
 11510  002DF8                     _RF24_txStandBy_t:
 11511                           	opt stack 20
 11512                           
 11513                           ;RF24_c.c: 1019: uint32_t start;
 11514                           ;RF24_c.c: 1021: if(startTx){
 11515                           
 11516                           ;incstack = 0
 11517  002DF8  5017               	movf	RF24_txStandBy_t@startTx,w,c
 11518  002DFA  B4D8               	btfsc	status,2,c
 11519  002DFC  D005               	goto	l3633
 11520                           
 11521                           ;RF24_c.c: 1022: RF24_stopListening();
 11522  002DFE  EC1E  F019         	call	_RF24_stopListening	;wreg free
 11523                           
 11524                           ;RF24_c.c: 1023: RF24_ce_d(1);
 11525  002E02  0E01               	movlw	1
 11526  002E04  EC7B  F01D         	call	_RF24_ce_d
 11527  002E08                     l3633:
 11528                           
 11529                           ;RF24_c.c: 1024: }
 11530                           ;RF24_c.c: 1026: start = millis();
 11531  002E08  ECC5  F01D         	call	_millis	;wreg free
 11532  002E0C  C003  F020         	movff	?_millis,RF24_txStandBy_t@start
 11533  002E10  C004  F021         	movff	?_millis+1,RF24_txStandBy_t@start+1
 11534  002E14  C005  F022         	movff	?_millis+2,RF24_txStandBy_t@start+2
 11535  002E18  C006  F023         	movff	?_millis+3,RF24_txStandBy_t@start+3
 11536                           
 11537                           ;RF24_c.c: 1028: while( ! (RF24_read_register_d(0x17) & (1<<(4))) ){
 11538  002E1C  D040               	goto	l3645
 11539  002E1E                     l3635:
 11540                           
 11541                           ;RF24_c.c: 1029: if( RF24_get_status() & (1<<(4))){
 11542  002E1E  ECE6  F01D         	call	_RF24_get_status	;wreg free
 11543  002E22  6E18               	movwf	??_RF24_txStandBy_t& (0+255),c
 11544  002E24  A818               	btfss	??_RF24_txStandBy_t,4,c
 11545  002E26  D03B               	goto	l3645
 11546                           
 11547                           ;RF24_c.c: 1030: RF24_write_register_d(0x07,(1<<(4)) );
 11548  002E28  0E10               	movlw	16
 11549  002E2A  6E0E               	movwf	RF24_write_register_d@value,c
 11550  002E2C  0E07               	movlw	7
 11551  002E2E  EC40  F01D         	call	_RF24_write_register_d
 11552                           
 11553                           ;RF24_c.c: 1031: RF24_ce_d(0);
 11554  002E32  0E00               	movlw	0
 11555  002E34  EC7B  F01D         	call	_RF24_ce_d
 11556                           
 11557                           ;RF24_c.c: 1032: RF24_ce_d(1);
 11558  002E38  0E01               	movlw	1
 11559  002E3A  EC7B  F01D         	call	_RF24_ce_d
 11560                           
 11561                           ;RF24_c.c: 1033: if(millis() - start >= timeout){
 11562  002E3E  C020  F018         	movff	RF24_txStandBy_t@start,??_RF24_txStandBy_t
 11563  002E42  C021  F019         	movff	RF24_txStandBy_t@start+1,??_RF24_txStandBy_t+1
 11564  002E46  C022  F01A         	movff	RF24_txStandBy_t@start+2,??_RF24_txStandBy_t+2
 11565  002E4A  C023  F01B         	movff	RF24_txStandBy_t@start+3,??_RF24_txStandBy_t+3
 11566  002E4E  1E18               	comf	??_RF24_txStandBy_t,f,c
 11567  002E50  1E19               	comf	??_RF24_txStandBy_t+1,f,c
 11568  002E52  1E1A               	comf	??_RF24_txStandBy_t+2,f,c
 11569  002E54  1E1B               	comf	??_RF24_txStandBy_t+3,f,c
 11570  002E56  2A18               	incf	??_RF24_txStandBy_t,f,c
 11571  002E58  0E00               	movlw	0
 11572  002E5A  2219               	addwfc	??_RF24_txStandBy_t+1,f,c
 11573  002E5C  221A               	addwfc	??_RF24_txStandBy_t+2,f,c
 11574  002E5E  221B               	addwfc	??_RF24_txStandBy_t+3,f,c
 11575  002E60  ECC5  F01D         	call	_millis	;wreg free
 11576  002E64  5018               	movf	??_RF24_txStandBy_t,w,c
 11577  002E66  2403               	addwf	?_millis,w,c
 11578  002E68  6E1C               	movwf	(??_RF24_txStandBy_t+4)& (0+255),c
 11579  002E6A  5019               	movf	??_RF24_txStandBy_t+1,w,c
 11580  002E6C  2004               	addwfc	?_millis+1,w,c
 11581  002E6E  6E1D               	movwf	(??_RF24_txStandBy_t+5)& (0+255),c
 11582  002E70  501A               	movf	??_RF24_txStandBy_t+2,w,c
 11583  002E72  2005               	addwfc	?_millis+2,w,c
 11584  002E74  6E1E               	movwf	(??_RF24_txStandBy_t+6)& (0+255),c
 11585  002E76  501B               	movf	??_RF24_txStandBy_t+3,w,c
 11586  002E78  2006               	addwfc	?_millis+3,w,c
 11587  002E7A  6E1F               	movwf	(??_RF24_txStandBy_t+7)& (0+255),c
 11588  002E7C  5013               	movf	RF24_txStandBy_t@timeout,w,c
 11589  002E7E  5C1C               	subwf	??_RF24_txStandBy_t+4,w,c
 11590  002E80  5014               	movf	RF24_txStandBy_t@timeout+1,w,c
 11591  002E82  581D               	subwfb	??_RF24_txStandBy_t+5,w,c
 11592  002E84  5015               	movf	RF24_txStandBy_t@timeout+2,w,c
 11593  002E86  581E               	subwfb	??_RF24_txStandBy_t+6,w,c
 11594  002E88  5016               	movf	RF24_txStandBy_t@timeout+3,w,c
 11595  002E8A  581F               	subwfb	??_RF24_txStandBy_t+7,w,c
 11596  002E8C  A0D8               	btfss	status,0,c
 11597  002E8E  D007               	goto	l3645
 11598                           
 11599                           ;RF24_c.c: 1034: RF24_ce_d(0); RF24_flush_tx();; return 0;
 11600  002E90  0E00               	movlw	0
 11601  002E92  EC7B  F01D         	call	_RF24_ce_d
 11602  002E96  ECF2  F01D         	call	_RF24_flush_tx	;wreg free
 11603  002E9A  0E00               	movlw	0
 11604  002E9C  0012               	return	
 11605  002E9E                     l3645:
 11606  002E9E  0E17               	movlw	23
 11607  002EA0  EC50  F01D         	call	_RF24_read_register_d
 11608  002EA4  6E18               	movwf	??_RF24_txStandBy_t& (0+255),c
 11609  002EA6  A818               	btfss	??_RF24_txStandBy_t,4,c
 11610  002EA8  D7BA               	goto	l3635
 11611                           
 11612                           ;RF24_c.c: 1035: }
 11613                           ;RF24_c.c: 1036: }
 11614                           ;RF24_c.c: 1045: }
 11615                           ;RF24_c.c: 1048: RF24_ce_d(0);
 11616  002EAA  0E00               	movlw	0
 11617  002EAC  EC7B  F01D         	call	_RF24_ce_d
 11618                           
 11619                           ;RF24_c.c: 1049: return 1;
 11620  002EB0  0E01               	movlw	1
 11621  002EB2  0012               	return	
 11622  002EB4                     __end_of_RF24_txStandBy_t:
 11623                           	opt stack 0
 11624                           tblptru	equ	0xFF8
 11625                           tblptrh	equ	0xFF7
 11626                           tblptrl	equ	0xFF6
 11627                           tablat	equ	0xFF5
 11628                           prodh	equ	0xFF4
 11629                           prodl	equ	0xFF3
 11630                           intcon	equ	0xFF2
 11631                           indf0	equ	0xFEF
 11632                           postinc0	equ	0xFEE
 11633                           postdec0	equ	0xFED
 11634                           plusw0	equ	0xFEB
 11635                           fsr0h	equ	0xFEA
 11636                           fsr0l	equ	0xFE9
 11637                           wreg	equ	0xFE8
 11638                           postinc1	equ	0xFE6
 11639                           plusw1	equ	0xFE3
 11640                           fsr1h	equ	0xFE2
 11641                           fsr1l	equ	0xFE1
 11642                           indf2	equ	0xFDF
 11643                           postinc2	equ	0xFDE
 11644                           postdec2	equ	0xFDD
 11645                           plusw2	equ	0xFDB
 11646                           fsr2h	equ	0xFDA
 11647                           fsr2l	equ	0xFD9
 11648                           status	equ	0xFD8
 11649                           
 11650 ;; *************** function _millis *****************
 11651 ;; Defined at:
 11652 ;;		line 173 in file "../../../RF24_c/utility/XC8/spi.c"
 11653 ;; Parameters:    Size  Location     Type
 11654 ;;		None
 11655 ;; Auto vars:     Size  Location     Type
 11656 ;;		None
 11657 ;; Return value:  Size  Location     Type
 11658 ;;                  4    2[COMRAM] long 
 11659 ;; Registers used:
 11660 ;;		None
 11661 ;; Tracked objects:
 11662 ;;		On entry : 0/0
 11663 ;;		On exit  : 0/0
 11664 ;;		Unchanged: 0/0
 11665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11666 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11669 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11670 ;;Total ram usage:        4 bytes
 11671 ;; Hardware stack levels used:    1
 11672 ;; Hardware stack levels required when called:    1
 11673 ;; This function calls:
 11674 ;;		Nothing
 11675 ;; This function is called by:
 11676 ;;		_loop
 11677 ;;		_RF24N_write_
 11678 ;;		_RF24N_write
 11679 ;;		_RF24_txStandBy_t
 11680 ;;		_RF24_writeBlocking
 11681 ;; This function uses a non-reentrant model
 11682 ;;
 11683                           
 11684                           	psect	text66
 11685  003B8A                     __ptext66:
 11686                           	opt stack 0
 11687  003B8A                     _millis:
 11688                           	opt stack 28
 11689                           
 11690                           ;spi.c: 175: return mtime;
 11691                           
 11692                           ;incstack = 0
 11693  003B8A  C084  F003         	movff	_mtime,?_millis
 11694  003B8E  C085  F004         	movff	_mtime+1,?_millis+1
 11695  003B92  C086  F005         	movff	_mtime+2,?_millis+2
 11696  003B96  C087  F006         	movff	_mtime+3,?_millis+3
 11697  003B9A  0012               	return		;funcret
 11698  003B9C                     __end_of_millis:
 11699                           	opt stack 0
 11700                           tblptru	equ	0xFF8
 11701                           tblptrh	equ	0xFF7
 11702                           tblptrl	equ	0xFF6
 11703                           tablat	equ	0xFF5
 11704                           prodh	equ	0xFF4
 11705                           prodl	equ	0xFF3
 11706                           intcon	equ	0xFF2
 11707                           indf0	equ	0xFEF
 11708                           postinc0	equ	0xFEE
 11709                           postdec0	equ	0xFED
 11710                           plusw0	equ	0xFEB
 11711                           fsr0h	equ	0xFEA
 11712                           fsr0l	equ	0xFE9
 11713                           wreg	equ	0xFE8
 11714                           postinc1	equ	0xFE6
 11715                           plusw1	equ	0xFE3
 11716                           fsr1h	equ	0xFE2
 11717                           fsr1l	equ	0xFE1
 11718                           indf2	equ	0xFDF
 11719                           postinc2	equ	0xFDE
 11720                           postdec2	equ	0xFDD
 11721                           plusw2	equ	0xFDB
 11722                           fsr2h	equ	0xFDA
 11723                           fsr2l	equ	0xFD9
 11724                           status	equ	0xFD8
 11725                           
 11726 ;; *************** function _RF24_write_register_d *****************
 11727 ;; Defined at:
 11728 ;;		line 194 in file "../../../RF24_c/RF24_c.c"
 11729 ;; Parameters:    Size  Location     Type
 11730 ;;  reg             1    wreg     unsigned char 
 11731 ;;  value           1   13[COMRAM] unsigned char 
 11732 ;; Auto vars:     Size  Location     Type
 11733 ;;  reg             1   14[COMRAM] unsigned char 
 11734 ;;  status          1   15[COMRAM] unsigned char 
 11735 ;; Return value:  Size  Location     Type
 11736 ;;                  1    wreg      unsigned char 
 11737 ;; Registers used:
 11738 ;;		wreg, status,2, status,0, cstack
 11739 ;; Tracked objects:
 11740 ;;		On entry : 0/0
 11741 ;;		On exit  : 0/0
 11742 ;;		Unchanged: 0/0
 11743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11744 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11745 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11747 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11748 ;;Total ram usage:        3 bytes
 11749 ;; Hardware stack levels used:    1
 11750 ;; Hardware stack levels required when called:    4
 11751 ;; This function calls:
 11752 ;;		_RF24_beginTransaction
 11753 ;;		_RF24_endTransaction
 11754 ;;		_SPI_transfer
 11755 ;; This function is called by:
 11756 ;;		_RF24_setChannel
 11757 ;;		_RF24_begin
 11758 ;;		_RF24_startListening
 11759 ;;		_RF24_stopListening
 11760 ;;		_RF24_powerUp
 11761 ;;		_RF24_writeFast_m
 11762 ;;		_RF24_txStandBy_t
 11763 ;;		_RF24_read
 11764 ;;		_RF24_openWritingPipe_d
 11765 ;;		_RF24_openReadingPipe_d
 11766 ;;		_RF24_closeReadingPipe
 11767 ;;		_RF24_enableDynamicPayloads
 11768 ;;		_RF24_setAutoAck_p
 11769 ;;		_RF24_setDataRate
 11770 ;;		_RF24_setRetries
 11771 ;;		_RF24_powerDown
 11772 ;;		_RF24_write_m
 11773 ;;		_RF24_reUseTX
 11774 ;;		_RF24_txStandBy
 11775 ;;		_RF24_maskIRQ
 11776 ;;		_RF24_whatHappened
 11777 ;;		_RF24_openWritingPipe
 11778 ;;		_RF24_setAddressWidth
 11779 ;;		_RF24_openReadingPipe
 11780 ;;		_RF24_enableAckPayload
 11781 ;;		_RF24_enableDynamicAck
 11782 ;;		_RF24_setAutoAck
 11783 ;;		_RF24_setPALevel
 11784 ;;		_RF24_setCRCLength
 11785 ;;		_RF24_disableCRC
 11786 ;; This function uses a non-reentrant model
 11787 ;;
 11788                           
 11789                           	psect	text67
 11790  003A80                     __ptext67:
 11791                           	opt stack 0
 11792  003A80                     _RF24_write_register_d:
 11793                           	opt stack 24
 11794                           
 11795                           ;incstack = 0
 11796                           ;RF24_write_register_d@reg stored from wreg
 11797  003A80  6E0F               	movwf	RF24_write_register_d@reg,c
 11798                           
 11799                           ;RF24_c.c: 196: uint8_t status;
 11800                           ;RF24_c.c: 198: ;
 11801                           ;RF24_c.c: 212: RF24_beginTransaction();
 11802  003A82  ECEE  F01D         	call	_RF24_beginTransaction	;wreg free
 11803                           
 11804                           ;RF24_c.c: 213: status = SPI_transfer( 0x20 | ( 0x1F & reg ) );
 11805  003A86  500F               	movf	RF24_write_register_d@reg,w,c
 11806  003A88  0B1F               	andlw	31
 11807  003A8A  0920               	iorlw	32
 11808  003A8C  ECCE  F01D         	call	_SPI_transfer
 11809  003A90  6E10               	movwf	RF24_write_register_d@status,c
 11810                           
 11811                           ;RF24_c.c: 214: SPI_transfer(value);
 11812  003A92  500E               	movf	RF24_write_register_d@value,w,c
 11813  003A94  ECCE  F01D         	call	_SPI_transfer
 11814                           
 11815                           ;RF24_c.c: 215: RF24_endTransaction();
 11816  003A98  ECEA  F01D         	call	_RF24_endTransaction	;wreg free
 11817                           
 11818                           ;RF24_c.c: 219: return status;
 11819  003A9C  5010               	movf	RF24_write_register_d@status,w,c
 11820  003A9E  0012               	return	
 11821  003AA0                     __end_of_RF24_write_register_d:
 11822                           	opt stack 0
 11823                           tblptru	equ	0xFF8
 11824                           tblptrh	equ	0xFF7
 11825                           tblptrl	equ	0xFF6
 11826                           tablat	equ	0xFF5
 11827                           prodh	equ	0xFF4
 11828                           prodl	equ	0xFF3
 11829                           intcon	equ	0xFF2
 11830                           indf0	equ	0xFEF
 11831                           postinc0	equ	0xFEE
 11832                           postdec0	equ	0xFED
 11833                           plusw0	equ	0xFEB
 11834                           fsr0h	equ	0xFEA
 11835                           fsr0l	equ	0xFE9
 11836                           wreg	equ	0xFE8
 11837                           postinc1	equ	0xFE6
 11838                           plusw1	equ	0xFE3
 11839                           fsr1h	equ	0xFE2
 11840                           fsr1l	equ	0xFE1
 11841                           indf2	equ	0xFDF
 11842                           postinc2	equ	0xFDE
 11843                           postdec2	equ	0xFDD
 11844                           plusw2	equ	0xFDB
 11845                           fsr2h	equ	0xFDA
 11846                           fsr2l	equ	0xFD9
 11847                           status	equ	0xFD8
 11848                           
 11849 ;; *************** function _RF24_stopListening *****************
 11850 ;; Defined at:
 11851 ;;		line 754 in file "../../../RF24_c/RF24_c.c"
 11852 ;; Parameters:    Size  Location     Type
 11853 ;;		None
 11854 ;; Auto vars:     Size  Location     Type
 11855 ;;		None
 11856 ;; Return value:  Size  Location     Type
 11857 ;;                  1    wreg      void 
 11858 ;; Registers used:
 11859 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11860 ;; Tracked objects:
 11861 ;;		On entry : 0/0
 11862 ;;		On exit  : 0/0
 11863 ;;		Unchanged: 0/0
 11864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11867 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11868 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11869 ;;Total ram usage:        2 bytes
 11870 ;; Hardware stack levels used:    1
 11871 ;; Hardware stack levels required when called:    6
 11872 ;; This function calls:
 11873 ;;		_RF24_ce_d
 11874 ;;		_RF24_flush_tx
 11875 ;;		_RF24_read_register_d
 11876 ;;		_RF24_write_register_d
 11877 ;;		_delayMicroseconds
 11878 ;; This function is called by:
 11879 ;;		_RF24N_enqueue
 11880 ;;		_RF24N_write_
 11881 ;;		_RF24N_write_to_pipe
 11882 ;;		_RF24_txStandBy_t
 11883 ;; This function uses a non-reentrant model
 11884 ;;
 11885                           
 11886                           	psect	text68
 11887  00323C                     __ptext68:
 11888                           	opt stack 0
 11889  00323C                     _RF24_stopListening:
 11890                           	opt stack 20
 11891                           
 11892                           ;RF24_c.c: 756: RF24_ce_d(0);
 11893                           
 11894                           ;incstack = 0
 11895  00323C  0E00               	movlw	0
 11896  00323E  EC7B  F01D         	call	_RF24_ce_d
 11897                           
 11898                           ;RF24_c.c: 758: delayMicroseconds(rf.txDelay);
 11899  003242  0100               	movlb	0	; () banked
 11900  003244  5199               	movf	(_rf+13)& (0+255),w,b
 11901  003246  EC7A  F01B         	call	_delayMicroseconds
 11902                           
 11903                           ;RF24_c.c: 760: if(RF24_read_register_d(0x1D) & (1<<(1))){
 11904  00324A  0E1D               	movlw	29
 11905  00324C  EC50  F01D         	call	_RF24_read_register_d
 11906  003250  6E11               	movwf	??_RF24_stopListening& (0+255),c
 11907  003252  A211               	btfss	??_RF24_stopListening,1,c
 11908  003254  D006               	goto	l793
 11909                           
 11910                           ;RF24_c.c: 761: delayMicroseconds(rf.txDelay);
 11911  003256  0100               	movlb	0	; () banked
 11912  003258  5199               	movf	(_rf+13)& (0+255),w,b
 11913  00325A  EC7A  F01B         	call	_delayMicroseconds
 11914                           
 11915                           ;RF24_c.c: 762: RF24_flush_tx();
 11916  00325E  ECF2  F01D         	call	_RF24_flush_tx	;wreg free
 11917  003262                     l793:
 11918                           
 11919                           ;RF24_c.c: 763: }
 11920                           ;RF24_c.c: 765: RF24_write_register_d(0x00, ( RF24_read_register_d(0x00) ) & ~(1<<(0)) )
      +                          ;
 11921  003262  0E00               	movlw	0
 11922  003264  EC50  F01D         	call	_RF24_read_register_d
 11923  003268  0BFE               	andlw	254
 11924  00326A  6E0E               	movwf	RF24_write_register_d@value,c
 11925  00326C  0E00               	movlw	0
 11926  00326E  EC40  F01D         	call	_RF24_write_register_d
 11927                           
 11928                           ;RF24_c.c: 774: RF24_write_register_d(0x02,RF24_read_register_d(0x02) | (1<<((*(&child_p
      +                          ipe_enable[0])))));
 11929  003272  0E0D               	movlw	low _child_pipe_enable
 11930  003274  6EF6               	movwf	tblptrl,c
 11931  003276                     	if	1	;There is more than 1 active tblptr byte
 11932  003276  0E10               	movlw	high _child_pipe_enable
 11933  003278  6EF7               	movwf	tblptrh,c
 11934  00327A                     	endif
 11935  00327A                     	if	0	;There are less than 3 active tblptr bytes
 11936  00327A                     	endif
 11937  00327A  0008               	tblrd		*
 11938  00327C  CFF5 F011          	movff	tablat,??_RF24_stopListening
 11939  003280  0E01               	movlw	1
 11940  003282  6E12               	movwf	(??_RF24_stopListening+1)& (0+255),c
 11941  003284  2A11               	incf	??_RF24_stopListening,f,c
 11942  003286  D002               	goto	u3554
 11943  003288                     u3555:
 11944  003288  90D8               	bcf	status,0,c
 11945  00328A  3612               	rlcf	??_RF24_stopListening+1,f,c
 11946  00328C                     u3554:
 11947  00328C  2E11               	decfsz	??_RF24_stopListening,f,c
 11948  00328E  D7FC               	goto	u3555
 11949  003290  0E02               	movlw	2
 11950  003292  EC50  F01D         	call	_RF24_read_register_d
 11951  003296  1012               	iorwf	??_RF24_stopListening+1,w,c
 11952  003298  6E0E               	movwf	RF24_write_register_d@value,c
 11953  00329A  0E02               	movlw	2
 11954  00329C  EC40  F01D         	call	_RF24_write_register_d
 11955  0032A0  0012               	return		;funcret
 11956  0032A2                     __end_of_RF24_stopListening:
 11957                           	opt stack 0
 11958                           tblptru	equ	0xFF8
 11959                           tblptrh	equ	0xFF7
 11960                           tblptrl	equ	0xFF6
 11961                           tablat	equ	0xFF5
 11962                           prodh	equ	0xFF4
 11963                           prodl	equ	0xFF3
 11964                           intcon	equ	0xFF2
 11965                           indf0	equ	0xFEF
 11966                           postinc0	equ	0xFEE
 11967                           postdec0	equ	0xFED
 11968                           plusw0	equ	0xFEB
 11969                           fsr0h	equ	0xFEA
 11970                           fsr0l	equ	0xFE9
 11971                           wreg	equ	0xFE8
 11972                           postinc1	equ	0xFE6
 11973                           plusw1	equ	0xFE3
 11974                           fsr1h	equ	0xFE2
 11975                           fsr1l	equ	0xFE1
 11976                           indf2	equ	0xFDF
 11977                           postinc2	equ	0xFDE
 11978                           postdec2	equ	0xFDD
 11979                           plusw2	equ	0xFDB
 11980                           fsr2h	equ	0xFDA
 11981                           fsr2l	equ	0xFD9
 11982                           status	equ	0xFD8
 11983                           
 11984 ;; *************** function _RF24_startListening *****************
 11985 ;; Defined at:
 11986 ;;		line 723 in file "../../../RF24_c/RF24_c.c"
 11987 ;; Parameters:    Size  Location     Type
 11988 ;;		None
 11989 ;; Auto vars:     Size  Location     Type
 11990 ;;		None
 11991 ;; Return value:  Size  Location     Type
 11992 ;;                  1    wreg      void 
 11993 ;; Registers used:
 11994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11995 ;; Tracked objects:
 11996 ;;		On entry : 0/0
 11997 ;;		On exit  : 0/0
 11998 ;;		Unchanged: 0/0
 11999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12004 ;;Total ram usage:        1 bytes
 12005 ;; Hardware stack levels used:    1
 12006 ;; Hardware stack levels required when called:    6
 12007 ;; This function calls:
 12008 ;;		_RF24_ce_d
 12009 ;;		_RF24_closeReadingPipe
 12010 ;;		_RF24_flush_tx
 12011 ;;		_RF24_powerUp
 12012 ;;		_RF24_read_register_d
 12013 ;;		_RF24_write_register_c_d
 12014 ;;		_RF24_write_register_d
 12015 ;; This function is called by:
 12016 ;;		_RF24N_begin_d
 12017 ;;		_RF24N_write_
 12018 ;;		_RF24N_write
 12019 ;; This function uses a non-reentrant model
 12020 ;;
 12021                           
 12022                           	psect	text69
 12023  0033C4                     __ptext69:
 12024                           	opt stack 0
 12025  0033C4                     _RF24_startListening:
 12026                           	opt stack 22
 12027                           
 12028                           ;RF24_c.c: 726: RF24_powerUp();
 12029                           
 12030                           ;incstack = 0
 12031  0033C4  EC0B  F01D         	call	_RF24_powerUp	;wreg free
 12032                           
 12033                           ;RF24_c.c: 728: RF24_write_register_d(0x00, RF24_read_register_d(0x00) | (1<<(0)));
 12034  0033C8  0E00               	movlw	0
 12035  0033CA  EC50  F01D         	call	_RF24_read_register_d
 12036  0033CE  0901               	iorlw	1
 12037  0033D0  6E0E               	movwf	RF24_write_register_d@value,c
 12038  0033D2  0E00               	movlw	0
 12039  0033D4  EC40  F01D         	call	_RF24_write_register_d
 12040                           
 12041                           ;RF24_c.c: 729: RF24_write_register_d(0x07, (1<<(6)) | (1<<(5)) | (1<<(4)) );
 12042  0033D8  0E70               	movlw	112
 12043  0033DA  6E0E               	movwf	RF24_write_register_d@value,c
 12044  0033DC  0E07               	movlw	7
 12045  0033DE  EC40  F01D         	call	_RF24_write_register_d
 12046                           
 12047                           ;RF24_c.c: 730: RF24_ce_d(1);
 12048  0033E2  0E01               	movlw	1
 12049  0033E4  EC7B  F01D         	call	_RF24_ce_d
 12050                           
 12051                           ;RF24_c.c: 732: if (rf.pipe0_reading_address[0] > 0){
 12052  0033E8  0100               	movlb	0	; () banked
 12053  0033EA  5193               	movf	(_rf+7)& (0+255),w,b
 12054  0033EC  B4D8               	btfsc	status,2,c
 12055  0033EE  D00A               	goto	l3701
 12056                           
 12057                           ; BSR set to: 0
 12058                           ;RF24_c.c: 733: RF24_write_register_c_d(0x0A, rf.pipe0_reading_address, rf.addr_width);
 12059  0033F0  0E93               	movlw	low (_rf+7)
 12060  0033F2  6E0C               	movwf	RF24_write_register_c_d@buf,c
 12061  0033F4  0E00               	movlw	high (_rf+7)
 12062  0033F6  6E0D               	movwf	RF24_write_register_c_d@buf+1,c
 12063  0033F8  C098  F00E         	movff	_rf+12,RF24_write_register_c_d@len
 12064  0033FC  0E0A               	movlw	10
 12065  0033FE  EC45  F01C         	call	_RF24_write_register_c_d
 12066                           
 12067                           ;RF24_c.c: 734: }else{
 12068  003402  D003               	goto	l3703
 12069  003404                     l3701:
 12070                           
 12071                           ;RF24_c.c: 735: RF24_closeReadingPipe(0);
 12072  003404  0E00               	movlw	0
 12073  003406  EC5A  F01B         	call	_RF24_closeReadingPipe
 12074  00340A                     l3703:
 12075                           
 12076                           ;RF24_c.c: 736: }
 12077                           ;RF24_c.c: 740: if(RF24_read_register_d(0x1D) & (1<<(1))){
 12078  00340A  0E1D               	movlw	29
 12079  00340C  EC50  F01D         	call	_RF24_read_register_d
 12080  003410  6E16               	movwf	??_RF24_startListening& (0+255),c
 12081  003412  A216               	btfss	??_RF24_startListening,1,c
 12082  003414  0012               	return	
 12083                           
 12084                           ;RF24_c.c: 741: RF24_flush_tx();
 12085  003416  ECF2  F01D         	call	_RF24_flush_tx	;wreg free
 12086  00341A  0012               	return	
 12087  00341C                     __end_of_RF24_startListening:
 12088                           	opt stack 0
 12089                           tblptru	equ	0xFF8
 12090                           tblptrh	equ	0xFF7
 12091                           tblptrl	equ	0xFF6
 12092                           tablat	equ	0xFF5
 12093                           prodh	equ	0xFF4
 12094                           prodl	equ	0xFF3
 12095                           intcon	equ	0xFF2
 12096                           indf0	equ	0xFEF
 12097                           postinc0	equ	0xFEE
 12098                           postdec0	equ	0xFED
 12099                           plusw0	equ	0xFEB
 12100                           fsr0h	equ	0xFEA
 12101                           fsr0l	equ	0xFE9
 12102                           wreg	equ	0xFE8
 12103                           postinc1	equ	0xFE6
 12104                           plusw1	equ	0xFE3
 12105                           fsr1h	equ	0xFE2
 12106                           fsr1l	equ	0xFE1
 12107                           indf2	equ	0xFDF
 12108                           postinc2	equ	0xFDE
 12109                           postdec2	equ	0xFDD
 12110                           plusw2	equ	0xFDB
 12111                           fsr2h	equ	0xFDA
 12112                           fsr2l	equ	0xFD9
 12113                           status	equ	0xFD8
 12114                           
 12115 ;; *************** function _RF24_read_register_d *****************
 12116 ;; Defined at:
 12117 ;;		line 131 in file "../../../RF24_c/RF24_c.c"
 12118 ;; Parameters:    Size  Location     Type
 12119 ;;  reg             1    wreg     unsigned char 
 12120 ;; Auto vars:     Size  Location     Type
 12121 ;;  reg             1   11[COMRAM] unsigned char 
 12122 ;;  result          1   12[COMRAM] unsigned char 
 12123 ;; Return value:  Size  Location     Type
 12124 ;;                  1    wreg      unsigned char 
 12125 ;; Registers used:
 12126 ;;		wreg, status,2, status,0, cstack
 12127 ;; Tracked objects:
 12128 ;;		On entry : 0/0
 12129 ;;		On exit  : 0/0
 12130 ;;		Unchanged: 0/0
 12131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12133 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12135 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12136 ;;Total ram usage:        2 bytes
 12137 ;; Hardware stack levels used:    1
 12138 ;; Hardware stack levels required when called:    4
 12139 ;; This function calls:
 12140 ;;		_RF24_beginTransaction
 12141 ;;		_RF24_endTransaction
 12142 ;;		_SPI_transfer
 12143 ;; This function is called by:
 12144 ;;		_RF24_begin
 12145 ;;		_RF24_startListening
 12146 ;;		_RF24_stopListening
 12147 ;;		_RF24_powerUp
 12148 ;;		_RF24_txStandBy_t
 12149 ;;		_RF24_available_p
 12150 ;;		_RF24_openReadingPipe_d
 12151 ;;		_RF24_closeReadingPipe
 12152 ;;		_RF24_enableDynamicPayloads
 12153 ;;		_RF24_setAutoAck_p
 12154 ;;		_RF24_setDataRate
 12155 ;;		_RF24_getChannel
 12156 ;;		_RF24_powerDown
 12157 ;;		_RF24_rxFifoFull
 12158 ;;		_RF24_txStandBy
 12159 ;;		_RF24_maskIRQ
 12160 ;;		_RF24_openReadingPipe
 12161 ;;		_RF24_enableAckPayload
 12162 ;;		_RF24_enableDynamicAck
 12163 ;;		_RF24_isAckPayloadAvailable
 12164 ;;		_RF24_testCarrier
 12165 ;;		_RF24_testRPD
 12166 ;;		_RF24_setPALevel
 12167 ;;		_RF24_getPALevel
 12168 ;;		_RF24_getDataRate
 12169 ;;		_RF24_setCRCLength
 12170 ;;		_RF24_getCRCLength
 12171 ;;		_RF24_disableCRC
 12172 ;; This function uses a non-reentrant model
 12173 ;;
 12174                           
 12175                           	psect	text70
 12176  003AA0                     __ptext70:
 12177                           	opt stack 0
 12178  003AA0                     _RF24_read_register_d:
 12179                           	opt stack 23
 12180                           
 12181                           ;incstack = 0
 12182                           ;RF24_read_register_d@reg stored from wreg
 12183  003AA0  6E0C               	movwf	RF24_read_register_d@reg,c
 12184                           
 12185                           ;RF24_c.c: 133: uint8_t result;
 12186                           ;RF24_c.c: 150: RF24_beginTransaction();
 12187  003AA2  ECEE  F01D         	call	_RF24_beginTransaction	;wreg free
 12188                           
 12189                           ;RF24_c.c: 151: SPI_transfer( 0x00 | ( 0x1F & reg ) );
 12190  003AA6  500C               	movf	RF24_read_register_d@reg,w,c
 12191  003AA8  0B1F               	andlw	31
 12192  003AAA  ECCE  F01D         	call	_SPI_transfer
 12193                           
 12194                           ;RF24_c.c: 152: result = SPI_transfer(0xff);
 12195  003AAE  0EFF               	movlw	255
 12196  003AB0  ECCE  F01D         	call	_SPI_transfer
 12197  003AB4  6E0D               	movwf	RF24_read_register_d@result,c
 12198                           
 12199                           ;RF24_c.c: 153: RF24_endTransaction();
 12200  003AB6  ECEA  F01D         	call	_RF24_endTransaction	;wreg free
 12201                           
 12202                           ;RF24_c.c: 157: return result;
 12203  003ABA  500D               	movf	RF24_read_register_d@result,w,c
 12204  003ABC  0012               	return	
 12205  003ABE                     __end_of_RF24_read_register_d:
 12206                           	opt stack 0
 12207                           tblptru	equ	0xFF8
 12208                           tblptrh	equ	0xFF7
 12209                           tblptrl	equ	0xFF6
 12210                           tablat	equ	0xFF5
 12211                           prodh	equ	0xFF4
 12212                           prodl	equ	0xFF3
 12213                           intcon	equ	0xFF2
 12214                           indf0	equ	0xFEF
 12215                           postinc0	equ	0xFEE
 12216                           postdec0	equ	0xFED
 12217                           plusw0	equ	0xFEB
 12218                           fsr0h	equ	0xFEA
 12219                           fsr0l	equ	0xFE9
 12220                           wreg	equ	0xFE8
 12221                           postinc1	equ	0xFE6
 12222                           plusw1	equ	0xFE3
 12223                           fsr1h	equ	0xFE2
 12224                           fsr1l	equ	0xFE1
 12225                           indf2	equ	0xFDF
 12226                           postinc2	equ	0xFDE
 12227                           postdec2	equ	0xFDD
 12228                           plusw2	equ	0xFDB
 12229                           fsr2h	equ	0xFDA
 12230                           fsr2l	equ	0xFD9
 12231                           status	equ	0xFD8
 12232                           
 12233 ;; *************** function _RF24_setAutoAck_p *****************
 12234 ;; Defined at:
 12235 ;;		line 1387 in file "../../../RF24_c/RF24_c.c"
 12236 ;; Parameters:    Size  Location     Type
 12237 ;;  pipe            1    wreg     unsigned char 
 12238 ;;  enable          1   16[COMRAM] unsigned char 
 12239 ;; Auto vars:     Size  Location     Type
 12240 ;;  pipe            1   20[COMRAM] unsigned char 
 12241 ;;  en_aa           1   19[COMRAM] unsigned char 
 12242 ;; Return value:  Size  Location     Type
 12243 ;;                  1    wreg      void 
 12244 ;; Registers used:
 12245 ;;		wreg, status,2, status,0, cstack
 12246 ;; Tracked objects:
 12247 ;;		On entry : 0/0
 12248 ;;		On exit  : 0/0
 12249 ;;		Unchanged: 0/0
 12250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12251 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12252 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12253 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12254 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12255 ;;Total ram usage:        5 bytes
 12256 ;; Hardware stack levels used:    1
 12257 ;; Hardware stack levels required when called:    5
 12258 ;; This function calls:
 12259 ;;		_RF24_read_register_d
 12260 ;;		_RF24_write_register_d
 12261 ;; This function is called by:
 12262 ;;		_RF24N_begin_d
 12263 ;;		_RF24N_write_
 12264 ;;		_RF24N_write
 12265 ;;		_RF24N_write_to_pipe
 12266 ;; This function uses a non-reentrant model
 12267 ;;
 12268                           
 12269                           	psect	text71
 12270  00341C                     __ptext71:
 12271                           	opt stack 0
 12272  00341C                     _RF24_setAutoAck_p:
 12273                           	opt stack 23
 12274                           
 12275                           ;incstack = 0
 12276                           ;RF24_setAutoAck_p@pipe stored from wreg
 12277  00341C  6E15               	movwf	RF24_setAutoAck_p@pipe,c
 12278                           
 12279                           ;RF24_c.c: 1389: if ( pipe <= 6 )
 12280  00341E  0E07               	movlw	7
 12281  003420  6015               	cpfslt	RF24_setAutoAck_p@pipe,c
 12282  003422  0012               	return	
 12283                           
 12284                           ;RF24_c.c: 1390: {
 12285                           ;RF24_c.c: 1391: uint8_t en_aa = RF24_read_register_d( 0x01 ) ;
 12286  003424  0E01               	movlw	1
 12287  003426  EC50  F01D         	call	_RF24_read_register_d
 12288  00342A  6E14               	movwf	RF24_setAutoAck_p@en_aa,c
 12289                           
 12290                           ;RF24_c.c: 1392: if( enable )
 12291  00342C  5011               	movf	RF24_setAutoAck_p@enable,w,c
 12292  00342E  B4D8               	btfsc	status,2,c
 12293  003430  D00D               	goto	l3583
 12294                           
 12295                           ;RF24_c.c: 1393: {
 12296                           ;RF24_c.c: 1394: en_aa |= (1<<(pipe)) ;
 12297  003432  C015  F012         	movff	RF24_setAutoAck_p@pipe,??_RF24_setAutoAck_p
 12298  003436  0E01               	movlw	1
 12299  003438  6E13               	movwf	(??_RF24_setAutoAck_p+1)& (0+255),c
 12300  00343A  2A12               	incf	??_RF24_setAutoAck_p,f,c
 12301  00343C  D002               	goto	u3614
 12302  00343E                     u3615:
 12303  00343E  90D8               	bcf	status,0,c
 12304  003440  3613               	rlcf	??_RF24_setAutoAck_p+1,f,c
 12305  003442                     u3614:
 12306  003442  2E12               	decfsz	??_RF24_setAutoAck_p,f,c
 12307  003444  D7FC               	goto	u3615
 12308  003446  5013               	movf	??_RF24_setAutoAck_p+1,w,c
 12309  003448  1214               	iorwf	RF24_setAutoAck_p@en_aa,f,c
 12310                           
 12311                           ;RF24_c.c: 1395: }
 12312  00344A  D00D               	goto	l3585
 12313  00344C                     l3583:
 12314                           
 12315                           ;RF24_c.c: 1396: else
 12316                           ;RF24_c.c: 1397: {
 12317                           ;RF24_c.c: 1398: en_aa &= ~(1<<(pipe)) ;
 12318  00344C  C015  F012         	movff	RF24_setAutoAck_p@pipe,??_RF24_setAutoAck_p
 12319  003450  0E01               	movlw	1
 12320  003452  6E13               	movwf	(??_RF24_setAutoAck_p+1)& (0+255),c
 12321  003454  2A12               	incf	??_RF24_setAutoAck_p,f,c
 12322  003456  D002               	goto	u3624
 12323  003458                     u3625:
 12324  003458  90D8               	bcf	status,0,c
 12325  00345A  3613               	rlcf	??_RF24_setAutoAck_p+1,f,c
 12326  00345C                     u3624:
 12327  00345C  2E12               	decfsz	??_RF24_setAutoAck_p,f,c
 12328  00345E  D7FC               	goto	u3625
 12329  003460  5013               	movf	??_RF24_setAutoAck_p+1,w,c
 12330  003462  0AFF               	xorlw	255
 12331  003464  1614               	andwf	RF24_setAutoAck_p@en_aa,f,c
 12332  003466                     l3585:
 12333                           
 12334                           ;RF24_c.c: 1399: }
 12335                           ;RF24_c.c: 1400: RF24_write_register_d( 0x01, en_aa ) ;
 12336  003466  C014  F00E         	movff	RF24_setAutoAck_p@en_aa,RF24_write_register_d@value
 12337  00346A  0E01               	movlw	1
 12338  00346C  EC40  F01D         	call	_RF24_write_register_d
 12339  003470  0012               	return	
 12340  003472                     __end_of_RF24_setAutoAck_p:
 12341                           	opt stack 0
 12342                           tblptru	equ	0xFF8
 12343                           tblptrh	equ	0xFF7
 12344                           tblptrl	equ	0xFF6
 12345                           tablat	equ	0xFF5
 12346                           prodh	equ	0xFF4
 12347                           prodl	equ	0xFF3
 12348                           intcon	equ	0xFF2
 12349                           indf0	equ	0xFEF
 12350                           postinc0	equ	0xFEE
 12351                           postdec0	equ	0xFED
 12352                           plusw0	equ	0xFEB
 12353                           fsr0h	equ	0xFEA
 12354                           fsr0l	equ	0xFE9
 12355                           wreg	equ	0xFE8
 12356                           postinc1	equ	0xFE6
 12357                           plusw1	equ	0xFE3
 12358                           fsr1h	equ	0xFE2
 12359                           fsr1l	equ	0xFE1
 12360                           indf2	equ	0xFDF
 12361                           postinc2	equ	0xFDE
 12362                           postdec2	equ	0xFDD
 12363                           plusw2	equ	0xFDB
 12364                           fsr2h	equ	0xFDA
 12365                           fsr2l	equ	0xFD9
 12366                           status	equ	0xFD8
 12367                           
 12368 ;; *************** function _isr *****************
 12369 ;; Defined at:
 12370 ;;		line 13 in file "pic_main.c"
 12371 ;; Parameters:    Size  Location     Type
 12372 ;;		None
 12373 ;; Auto vars:     Size  Location     Type
 12374 ;;		None
 12375 ;; Return value:  Size  Location     Type
 12376 ;;                  1    wreg      void 
 12377 ;; Registers used:
 12378 ;;		wreg, status,2, status,0
 12379 ;; Tracked objects:
 12380 ;;		On entry : 0/0
 12381 ;;		On exit  : 0/0
 12382 ;;		Unchanged: 0/0
 12383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12386 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12387 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12388 ;;Total ram usage:        2 bytes
 12389 ;; Hardware stack levels used:    1
 12390 ;; This function calls:
 12391 ;;		Nothing
 12392 ;; This function is called by:
 12393 ;;		Interrupt level 2
 12394 ;; This function uses a non-reentrant model
 12395 ;;
 12396                           
 12397                           	psect	intcode
 12398  000008                     __pintcode:
 12399                           	opt stack 0
 12400  000008                     _isr:
 12401                           	opt stack 15
 12402                           
 12403                           ;incstack = 0
 12404  000008  CFE1 F001          	movff	fsr1l,??_isr
 12405  00000C  CFE2 F002          	movff	fsr1h,??_isr+1
 12406  000010  EDA8  F01C         	call	int_func,f	;refresh shadow registers
 12407                           tblptru	equ	0xFF8
 12408                           tblptrh	equ	0xFF7
 12409                           tblptrl	equ	0xFF6
 12410                           tablat	equ	0xFF5
 12411                           prodh	equ	0xFF4
 12412                           prodl	equ	0xFF3
 12413                           intcon	equ	0xFF2
 12414                           indf0	equ	0xFEF
 12415                           postinc0	equ	0xFEE
 12416                           postdec0	equ	0xFED
 12417                           plusw0	equ	0xFEB
 12418                           fsr0h	equ	0xFEA
 12419                           fsr0l	equ	0xFE9
 12420                           wreg	equ	0xFE8
 12421                           postinc1	equ	0xFE6
 12422                           plusw1	equ	0xFE3
 12423                           fsr1h	equ	0xFE2
 12424                           fsr1l	equ	0xFE1
 12425                           indf2	equ	0xFDF
 12426                           postinc2	equ	0xFDE
 12427                           postdec2	equ	0xFDD
 12428                           plusw2	equ	0xFDB
 12429                           fsr2h	equ	0xFDA
 12430                           fsr2l	equ	0xFD9
 12431                           status	equ	0xFD8
 12432                           
 12433                           	psect	intcode_body
 12434  003950                     __pintcode_body:
 12435                           	opt stack 15
 12436  003950                     int_func:
 12437                           	opt stack 15
 12438  003950  0006               	pop		; remove dummy address from shadow register refresh
 12439  003952  EE16  F0B0         	lfsr	1,___inthi_sp
 12440                           
 12441                           ;pic_main.c: 18: if(INTCONbits.TMR0IF)
 12442  003956  A4F2               	btfss	intcon,2,c	;volatile
 12443  003958  D00C               	goto	i2l59
 12444                           
 12445                           ;pic_main.c: 19: {
 12446                           ;pic_main.c: 20: TMR0H=(65536l-(32000000/4000l)&0xFF00)>>8;
 12447  00395A  0EE0               	movlw	224
 12448  00395C  6ED7               	movwf	4055,c	;volatile
 12449                           
 12450                           ;pic_main.c: 21: TMR0L=(65536l-(32000000/4000l)&0x00FF);
 12451  00395E  0EC0               	movlw	192
 12452  003960  6ED6               	movwf	4054,c	;volatile
 12453                           
 12454                           ;pic_main.c: 22: mtime++;
 12455  003962  0E01               	movlw	1
 12456  003964  0100               	movlb	0	; () banked
 12457  003966  2784               	addwf	_mtime& (0+255),f,b
 12458  003968  0E00               	movlw	0
 12459  00396A  2385               	addwfc	(_mtime+1)& (0+255),f,b
 12460  00396C  2386               	addwfc	(_mtime+2)& (0+255),f,b
 12461  00396E  2387               	addwfc	(_mtime+3)& (0+255),f,b
 12462                           
 12463                           ; BSR set to: 0
 12464                           ;pic_main.c: 23: INTCONbits.TMR0IF=0;
 12465  003970  94F2               	bcf	intcon,2,c	;volatile
 12466  003972                     i2l59:
 12467  003972  C002  FFE2         	movff	??_isr+1,fsr1h
 12468  003976  C001  FFE1         	movff	??_isr,fsr1l
 12469  00397A  0011               	retfie		f
 12470  00397C                     __end_of_isr:
 12471                           	opt stack 0
 12472                           tblptru	equ	0xFF8
 12473                           tblptrh	equ	0xFF7
 12474                           tblptrl	equ	0xFF6
 12475                           tablat	equ	0xFF5
 12476                           prodh	equ	0xFF4
 12477                           prodl	equ	0xFF3
 12478                           intcon	equ	0xFF2
 12479                           indf0	equ	0xFEF
 12480                           postinc0	equ	0xFEE
 12481                           postdec0	equ	0xFED
 12482                           plusw0	equ	0xFEB
 12483                           fsr0h	equ	0xFEA
 12484                           fsr0l	equ	0xFE9
 12485                           wreg	equ	0xFE8
 12486                           postinc1	equ	0xFE6
 12487                           plusw1	equ	0xFE3
 12488                           fsr1h	equ	0xFE2
 12489                           fsr1l	equ	0xFE1
 12490                           indf2	equ	0xFDF
 12491                           postinc2	equ	0xFDE
 12492                           postdec2	equ	0xFDD
 12493                           plusw2	equ	0xFDB
 12494                           fsr2h	equ	0xFDA
 12495                           fsr2l	equ	0xFD9
 12496                           status	equ	0xFD8
 12497                           tblptru	equ	0xFF8
 12498                           tblptrh	equ	0xFF7
 12499                           tblptrl	equ	0xFF6
 12500                           tablat	equ	0xFF5
 12501                           prodh	equ	0xFF4
 12502                           prodl	equ	0xFF3
 12503                           intcon	equ	0xFF2
 12504                           indf0	equ	0xFEF
 12505                           postinc0	equ	0xFEE
 12506                           postdec0	equ	0xFED
 12507                           plusw0	equ	0xFEB
 12508                           fsr0h	equ	0xFEA
 12509                           fsr0l	equ	0xFE9
 12510                           wreg	equ	0xFE8
 12511                           postinc1	equ	0xFE6
 12512                           plusw1	equ	0xFE3
 12513                           fsr1h	equ	0xFE2
 12514                           fsr1l	equ	0xFE1
 12515                           indf2	equ	0xFDF
 12516                           postinc2	equ	0xFDE
 12517                           postdec2	equ	0xFDD
 12518                           plusw2	equ	0xFDB
 12519                           fsr2h	equ	0xFDA
 12520                           fsr2l	equ	0xFD9
 12521                           status	equ	0xFD8
 12522                           
 12523                           	psect	rparam
 12524  0000                     tblptru	equ	0xFF8
 12525                           tblptrh	equ	0xFF7
 12526                           tblptrl	equ	0xFF6
 12527                           tablat	equ	0xFF5
 12528                           prodh	equ	0xFF4
 12529                           prodl	equ	0xFF3
 12530                           intcon	equ	0xFF2
 12531                           indf0	equ	0xFEF
 12532                           postinc0	equ	0xFEE
 12533                           postdec0	equ	0xFED
 12534                           plusw0	equ	0xFEB
 12535                           fsr0h	equ	0xFEA
 12536                           fsr0l	equ	0xFE9
 12537                           wreg	equ	0xFE8
 12538                           postinc1	equ	0xFE6
 12539                           plusw1	equ	0xFE3
 12540                           fsr1h	equ	0xFE2
 12541                           fsr1l	equ	0xFE1
 12542                           indf2	equ	0xFDF
 12543                           postinc2	equ	0xFDE
 12544                           postdec2	equ	0xFDD
 12545                           plusw2	equ	0xFDB
 12546                           fsr2h	equ	0xFDA
 12547                           fsr2l	equ	0xFD9
 12548                           status	equ	0xFD8
 12549                           
 12550                           	psect	temp
 12551  00006A                     btemp:
 12552                           	opt stack 0
 12553  00006A                     	ds	12
 12554                           tblptru	equ	0xFF8
 12555                           tblptrh	equ	0xFF7
 12556                           tblptrl	equ	0xFF6
 12557                           tablat	equ	0xFF5
 12558                           prodh	equ	0xFF4
 12559                           prodl	equ	0xFF3
 12560                           intcon	equ	0xFF2
 12561                           indf0	equ	0xFEF
 12562                           postinc0	equ	0xFEE
 12563                           postdec0	equ	0xFED
 12564                           plusw0	equ	0xFEB
 12565                           fsr0h	equ	0xFEA
 12566                           fsr0l	equ	0xFE9
 12567                           wreg	equ	0xFE8
 12568                           postinc1	equ	0xFE6
 12569                           plusw1	equ	0xFE3
 12570                           fsr1h	equ	0xFE2
 12571                           fsr1l	equ	0xFE1
 12572                           indf2	equ	0xFDF
 12573                           postinc2	equ	0xFDE
 12574                           postdec2	equ	0xFDD
 12575                           plusw2	equ	0xFDB
 12576                           fsr2h	equ	0xFDA
 12577                           fsr2l	equ	0xFD9
 12578                           status	equ	0xFD8


Data Sizes:
    Strings     62
    Constant    26
    Data        14
    BSS         414
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          115    105     107
    BANK0           128     29      85
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    rn.message_buffer	PTR unsigned char  size(2) Largest target is 0
		 -> rn(BIGRAM[370]), 

    rn.frame_queue.message_buffer	PTR unsigned char  size(2) Largest target is 0
		 -> rn(BIGRAM[370]), 

    ?_RF24N_getFrag_ptr.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    ?_RF24N_getFrame_buffer.frag_queue.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    ?_RF24N_getFrame_buffer.next_frame	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    ?_RF24N_getFrame_buffer.frag_ptr	PTR struct . size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    memcpy@d1	PTR void  size(2) Largest target is 373
		 -> rf(BANK0[22]), RF24N_read@bufsize(COMRAM[2]), RF24N_peek@msg_size(COMRAM[2]), rn.frame_buffer(BIGRAM[32]), 
		 -> rn.frag_queue_message_buffer(BIGRAM[144]), rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 373
		 -> rf(BANK0[22]), RF24N_read@bufsize(COMRAM[2]), RF24N_peek@msg_size(COMRAM[2]), rn.frame_buffer(BIGRAM[32]), 
		 -> rn.frag_queue_message_buffer(BIGRAM[144]), rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), 

    memcpy@s1	PTR const void  size(2) Largest target is 373
		 -> rn.header(BIGRAM[8]), rn.frame_queue.header(BIGRAM[8]), RF24_openReadingPipe_d@address(COMRAM[5]), RF24N_enqueue@message_size(COMRAM[2]), 
		 -> rn.frame_buffer(BIGRAM[32]), rn.frag_queue_message_buffer(BIGRAM[144]), rn.frag_queue(BIGRAM[13]), rn.frame_queue(BIGRAM[154]), 
		 -> rn(BIGRAM[370]), loop@header(BANK0[8]), loop@payload(BANK0[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 373
		 -> rn.header(BIGRAM[8]), rn.frame_queue.header(BIGRAM[8]), RF24_openReadingPipe_d@address(COMRAM[5]), RF24N_enqueue@message_size(COMRAM[2]), 
		 -> rn.frame_buffer(BIGRAM[32]), rn.frag_queue_message_buffer(BIGRAM[144]), rn.frag_queue(BIGRAM[13]), rn.frame_queue(BIGRAM[154]), 
		 -> rn(BIGRAM[370]), loop@header(BANK0[8]), loop@payload(BANK0[8]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    RF24_openReadingPipe_d@address_	PTR const unsigned char  size(2) Largest target is 5
		 -> RF24N_multicastLevel@addr(COMRAM[5]), RF24N_begin_d@addr(COMRAM[5]), 

    RF24_openWritingPipe_d@value_	PTR const unsigned char  size(2) Largest target is 5
		 -> RF24N_write_to_pipe@out_pipe(COMRAM[5]), 

    RF24_read@buf	PTR void  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24_available_p@pipe_num	PTR unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), RF24N_update@pipe_num(UNKNOWN), 

    RF24_startFastWrite@buf	PTR const void  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24_writeFast_m@buf	PTR const void  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24_read_payload@buf	PTR void  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24_read_payload@current	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24_write_payload@buf	PTR const void  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24_write_payload@current	PTR const unsigned char  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24_write_register_c_d@buf	PTR const unsigned char  size(2) Largest target is 22
		 -> RF24_openReadingPipe_d@address(COMRAM[5]), RF24_openWritingPipe_d@value(COMRAM[5]), rf.pipe0_reading_address(BANK0[5]), rf(BANK0[22]), 

    sp__RF24N_getFrag_ptr.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    sp__RF24N_getFrag_ptr	PTR struct . size(2) Largest target is 373
		 -> rn.frag_queue(BIGRAM[13]), rn(BIGRAM[370]), 

    sp__RF24N_getFrame_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24N_pipe_address@address	PTR unsigned char  size(2) Largest target is 5
		 -> RF24N_multicastLevel@addr(COMRAM[5]), RF24N_write_to_pipe@out_pipe(COMRAM[5]), RF24N_begin_d@addr(COMRAM[5]), 

    RF24N_pipe_address@out	PTR unsigned char  size(2) Largest target is 5
		 -> RF24N_pipe_address@result(COMRAM[5]), 

    RF24N_logicalToPhysicalAddress@multicast	PTR unsigned char  size(2) Largest target is 4
		 -> conversion.multicast(COMRAM[1]), RF24N_write@conversion(UNKNOWN), 

    RF24N_logicalToPhysicalAddress@directTo	PTR unsigned char  size(2) Largest target is 4
		 -> conversion.send_pipe(COMRAM[1]), RF24N_write@conversion(UNKNOWN), 

    RF24N_logicalToPhysicalAddress@conversionInfo	PTR struct . size(2) Largest target is 4
		 -> RF24N_write@conversion(UNKNOWN), 

    RF24N_logicalToPhysicalAddress@to_node	PTR unsigned int  size(2) Largest target is 4
		 -> conversion.send_node(COMRAM[2]), RF24N_write@conversion(UNKNOWN), 

    RF24N_write@header	PTR struct . size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24N__write@message	PTR const void  size(2) Largest target is 8
		 -> loop@payload(BANK0[8]), 

    RF24N__write@header	PTR struct . size(2) Largest target is 8
		 -> loop@header(BANK0[8]), 

    RF24N_write_@message	PTR const void  size(2) Largest target is 8
		 -> loop@payload(BANK0[8]), 

    RF24N_write_@header	PTR struct . size(2) Largest target is 8
		 -> loop@header(BANK0[8]), 

    RF24N_write_m@message	PTR const void  size(2) Largest target is 8
		 -> loop@payload(BANK0[8]), 

    RF24N_write_m@header	PTR struct . size(2) Largest target is 8
		 -> loop@header(BANK0[8]), 

    sp__memmove	PTR void  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24N_peek@frame.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    sp__memcpy	PTR void  size(2) Largest target is 373
		 -> rf(BANK0[22]), RF24N_read@bufsize(COMRAM[2]), RF24N_peek@msg_size(COMRAM[2]), rn.frame_buffer(BIGRAM[32]), 
		 -> rn.frag_queue_message_buffer(BIGRAM[144]), rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), 

    RF24N_enqueue@header	PTR struct . size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24N_update@header	PTR struct . size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    rn.frag_ptr.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24NH_init@rnh	PTR struct . size(2) Largest target is 8
		 -> loop@header(BANK0[8]), 

    S1777$message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    rn.frag_queue.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn.frag_queue_message_buffer(BIGRAM[144]), rn(BIGRAM[370]), 

    S1781$next_frame	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    rn.next_frame	PTR unsigned char  size(2) Largest target is 373
		 -> rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), 

    S1781$frag_ptr	PTR struct . size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    rn.frag_ptr	PTR struct . size(2) Largest target is 373
		 -> rn.frag_queue(BIGRAM[13]), rn(BIGRAM[370]), 

    sp__itoa_	PTR const unsigned char  size(2) Largest target is 10
		 -> buff(BANK0[10]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 10
		 -> buff(BANK0[10]), 

    Serial_println@val	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_4(CODE[8]), STR_3(CODE[4]), STR_1(CODE[36]), 

    Serial_print@val	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_5(CODE[3]), STR_4(CODE[8]), STR_3(CODE[4]), STR_2(CODE[11]), 
		 -> STR_1(CODE[36]), 


Critical Paths under _main in COMRAM

    _setup->_RF24N_begin_d
    _Serial_begin->___lldiv
    _RF24_begin->_RF24_setChannel
    _RF24_begin->_RF24_setRetries
    _RF24_setDataRate->_RF24_write_register_d
    _RF24N_begin_d->_RF24N_pipe_address
    _RF24_setRetries->_RF24_write_register_d
    _RF24_setChannel->_RF24_write_register_d
    _RF24_openReadingPipe_d->_RF24_write_register_c_d
    _RF24_openReadingPipe_d->_RF24_write_register_d
    _RF24_enableDynamicPayloads->_RF24_write_register_d
    _loop->_RF24N_write_m
    _Serial_println->_Serial_print
    _Serial_print->_Serial_tx
    _RF24N_write_m->_RF24N_write_
    _RF24N_write_->_RF24N__write
    _RF24_flush_rx->_RF24_spiTrans
    _RF24_read->_RF24_read_payload
    _RF24N_enqueue->_RF24_stopListening
    _RF24N_logicalToPhysicalAddress->_RF24N_is_direct_child
    _RF24N_is_direct_child->_RF24N_is_descendant
    _RF24N_write_to_pipe->_RF24_writeFast_m
    _RF24_writeFast_m->_RF24_startFastWrite
    _RF24_startFastWrite->_RF24_write_payload
    _RF24_openWritingPipe_d->_RF24_write_register_c_d
    _RF24_openWritingPipe_d->_RF24_write_register_d
    _RF24N_is_direct_child->_RF24N_is_descendant
    _RF24_openWritingPipe_d->_RF24_write_register_c_d
    _RF24_openWritingPipe_d->_RF24_write_register_d
    _RF24_writeFast_m->_RF24_startFastWrite
    _RF24_get_status->_RF24_spiTrans
    _RF24_endTransaction->_RF24_csn_d
    _RF24_beginTransaction->_RF24_csn_d
    _RF24_csn_d->_delayMicroseconds
    _RF24_get_status->_RF24_spiTrans
    _RF24_closeReadingPipe->_RF24_write_register_d
    _RF24_startFastWrite->_RF24_write_payload
    _RF24_csn_d->_delayMicroseconds
    _RF24_ce_d->_digitalWrite
    _RF24_flush_rx->_RF24_spiTrans
    _RF24_flush_tx->_RF24_spiTrans
    _RF24_powerUp->_RF24_write_register_d
    _RF24_read->_RF24_read_payload
    _RF24N_write->_RF24N_write_to_pipe
    _RF24_txStandBy_t->_RF24_stopListening
    _RF24_write_register_d->_RF24_read_register_d
    _RF24_stopListening->_RF24_write_register_d
    _RF24_ce_d->_digitalWrite
    _RF24_startListening->_RF24_closeReadingPipe
    _RF24_powerUp->_RF24_write_register_d
    _RF24_flush_tx->_RF24_spiTrans
    _RF24_closeReadingPipe->_RF24_write_register_d
    _RF24_setAutoAck_p->_RF24_write_register_d
    _RF24N_write_to_pipe->_RF24_writeFast_m
    _RF24N_logicalToPhysicalAddress->_RF24N_is_direct_child
    _RF24N_enqueue->_RF24_stopListening

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_loop

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 4570891
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0  256607
                      _RF24N_begin_d
                         _RF24N_init
                         _RF24_begin
                          _RF24_init
                       _Serial_begin
                     _Serial_println
 ---------------------------------------------------------------------------------
 (2) _Serial_begin                                         8     4      4     713
                                             15 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     570
                                              2 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _RF24_init                                            2     1      1     120
                                              2 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _RF24_begin                                           2     2      0  107020
                                             20 COMRAM     2     2      0
                          _RF24_ce_d
                         _RF24_csn_d
                      _RF24_flush_rx
                      _RF24_flush_tx
                       _RF24_powerUp
               _RF24_read_register_d
                    _RF24_setChannel
                   _RF24_setDataRate
                    _RF24_setRetries
             _RF24_toggle_features_d
              _RF24_write_register_d
                          _SPI_begin
                              _delay
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              2     1      1     944
                                              2 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _SPI_begin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RF24_toggle_features_d                               0     0      0    4210
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _RF24_setDataRate                                     3     3      0   11764
                                             16 COMRAM     3     3      0
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (2) _RF24N_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RF24N_begin_d                                       10     8      2  148164
                                             33 COMRAM    10     8      2
             _RF24N_is_valid_address
                 _RF24N_pipe_address
                _RF24N_setup_address
         _RF24_enableDynamicPayloads
                       _RF24_isValid
             _RF24_openReadingPipe_d
                  _RF24_setAutoAck_p
                    _RF24_setChannel
                    _RF24_setRetries
                _RF24_startListening
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _RF24_setRetries                                      4     3      1    7589
                                             16 COMRAM     4     3      1
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24_setChannel                                      4     4      0    7506
                                             16 COMRAM     4     4      0
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24_openReadingPipe_d                              11     9      2   22034
                                             16 COMRAM    11     9      2
               _RF24_read_register_d
            _RF24_write_register_c_d
              _RF24_write_register_d
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _RF24_enableDynamicPayloads                           0     0      0   11648
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24N_setup_address                                 11    11      0     163
                                              2 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 (1) _loop                                                29    29      0 4314284
                                              0 BANK0     29    29      0
                        _RF24NH_init
                       _RF24N_update
                      _RF24N_write_m
                       _Serial_print
                     _Serial_println
                             _millis
 ---------------------------------------------------------------------------------
 (2) _Serial_println                                       2     0      2     590
                                              9 COMRAM     2     0      2
                       _Serial_print
 ---------------------------------------------------------------------------------
 (3) _Serial_print                                         6     4      2     340
                                              3 COMRAM     6     4      2
                          _Serial_tx
 ---------------------------------------------------------------------------------
 (4) _Serial_tx                                            1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RF24N_write_m                                        6     0      6 2596755
                                             99 COMRAM     6     0      6
                       _RF24N_write_
 ---------------------------------------------------------------------------------
 (3) _RF24N_write_                                        25    17      8 2596461
                                             74 COMRAM    25    17      8
                       _RF24N__write
                       _RF24N_update
                  _RF24_setAutoAck_p
                _RF24_startListening
                 _RF24_stopListening
                   _RF24_txStandBy_t
                            ___lwdiv
                            ___lwmod
                             ___wmul
                              _delay
                  _delayMicroseconds
                             _millis
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     463
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     463
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _RF24N__write                                        11     3      8  671335
                                             63 COMRAM    11     3      8
                        _RF24N_write
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _RF24NH_init                                          5     0      5     338
                                              2 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (6) _digitalWrite                                         2     1      1     944
                                              2 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (5) _RF24N_available                                      2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _RF24_getDynamicPayloadSize                           1     1      0   43726
                                             15 COMRAM     2     2      0
              _RF24_beginTransaction
                _RF24_endTransaction
                      _RF24_flush_rx
                       _SPI_transfer
                              _delay
 ---------------------------------------------------------------------------------
 (3) _RF24_flush_rx                                        0     0      0   16930
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (5) _RF24_read                                            3     0      3   32460
                                             28 COMRAM     3     0      3
                  _RF24_read_payload
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (6) _RF24_read_payload                                   11     8      3    8739
                                             11 COMRAM    17    14      3
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (5) _RF24N_enqueue                                       16    14      2   71450
                                             18 COMRAM    23    21      2
                 _RF24_stopListening
                            ___lwdiv
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6    4224
                                              2 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _RF24N_levelToAddress                                 8     6      2      90
                                              2 COMRAM    11     9      2
 ---------------------------------------------------------------------------------
 (5) _RF24_available_p                                     4     2      2   42589
                                             15 COMRAM     5     3      2
                    _RF24_get_status
               _RF24_read_register_d
 ---------------------------------------------------------------------------------
 (6) _RF24N_logicalToPhysicalAddress                      12    10      2    2091
                                             20 COMRAM    21    19      2
        _RF24N_direct_child_route_to
                _RF24N_is_descendant
              _RF24N_is_direct_child
 ---------------------------------------------------------------------------------
 (7) _RF24N_is_direct_child                                9     7      2     515
                                              8 COMRAM    12    10      2
                _RF24N_is_descendant
 ---------------------------------------------------------------------------------
 (8) _RF24N_is_descendant                                  6     4      2     174
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _RF24N_direct_child_route_to                          6     4      2     121
                                              2 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (6) _RF24N_write_to_pipe                                 10     6      4  488802
                                             47 COMRAM    16    12      4
                 _RF24N_pipe_address
             _RF24_openWritingPipe_d
                  _RF24_setAutoAck_p
                 _RF24_stopListening
                   _RF24_txStandBy_t
                   _RF24_writeFast_m
 ---------------------------------------------------------------------------------
 (7) _RF24_writeFast_m                                     5     1      4   95300
                                             42 COMRAM     5     1      4
                    _RF24_get_status
                _RF24_startFastWrite
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (8) _RF24_startFastWrite                                  7     2      5   23066
                                             33 COMRAM     9     4      5
                          _RF24_ce_d
                 _RF24_write_payload
 ---------------------------------------------------------------------------------
 (9) _RF24_write_payload                                  14    10      4    9111
                                             11 COMRAM    22    18      4
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (7) _RF24_openWritingPipe_d                              10     8      2   26347
                                             16 COMRAM    16    14      2
            _RF24_write_register_c_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24N_pipe_address                                  20    15      5    1139
                                              2 COMRAM    31    26      5
 ---------------------------------------------------------------------------------
 (7) _RF24N_is_direct_child                                9     7      2     515
                                              8 COMRAM    12    10      2
                _RF24N_is_descendant
 ---------------------------------------------------------------------------------
 (8) _RF24N_is_descendant                                  6     4      2     174
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _RF24N_direct_child_route_to                          6     4      2     121
                                              2 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (7) _RF24_openWritingPipe_d                              10     8      2   26347
                                             16 COMRAM    16    14      2
            _RF24_write_register_c_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (4) _RF24_write_register_c_d                              5     2      3    5652
                                             11 COMRAM     5     2      3
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (7) _RF24_writeFast_m                                     5     1      4   95300
                                             42 COMRAM     5     1      4
                    _RF24_get_status
                _RF24_startFastWrite
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (5) _RF24_get_status                                      0     0      0   16930
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (9) _RF24_write_payload                                  14    10      4    9111
                                             11 COMRAM    22    18      4
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (6) _RF24_read_payload                                   11     8      3    8739
                                             11 COMRAM    17    14      3
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _RF24_spiTrans                                        2     2      0    8465
                                             11 COMRAM     4     4      0
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _SPI_transfer                                         1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RF24_endTransaction                                  0     0      0    2094
                         _RF24_csn_d
 ---------------------------------------------------------------------------------
 (4) _RF24_beginTransaction                                0     0      0    2094
                         _RF24_csn_d
 ---------------------------------------------------------------------------------
 (5) _RF24_csn_d                                           1     1      0    2094
                                              9 COMRAM     2     2      0
                  _delayMicroseconds
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _RF24_get_status                                      0     0      0   16930
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (4) _RF24_spiTrans                                        2     2      0    8465
                                             11 COMRAM     4     4      0
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _RF24_closeReadingPipe                                4     4      0   23318
                                             16 COMRAM     5     5      0
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (8) _RF24_startFastWrite                                  7     2      5   23066
                                             33 COMRAM     9     4      5
                          _RF24_ce_d
                 _RF24_write_payload
 ---------------------------------------------------------------------------------
 (3) _RF24N_is_valid_address                               4     2      2     320
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _RF24_isValid                                         1     1      0      24
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _RF24N_pipe_address                                  20    15      5    1139
                                              2 COMRAM    31    26      5
 ---------------------------------------------------------------------------------
 (5) _RF24_csn_d                                           1     1      0    2094
                                              9 COMRAM     2     2      0
                  _delayMicroseconds
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _digitalWrite                                         2     1      1     944
                                              2 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (6) _delayMicroseconds                                    7     7      0      92
                                              2 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (3) _RF24_ce_d                                            1     1      0    1910
                                              5 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _RF24_flush_rx                                        0     0      0   16930
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (3) _RF24_flush_tx                                        0     0      0   16930
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (3) _RF24_powerUp                                         1     1      0   24741
                                             16 COMRAM     2     2      0
               _RF24_read_register_d
              _RF24_write_register_d
                              _delay
 ---------------------------------------------------------------------------------
 (4) _RF24N_update                                         7     7      0 1715945
                    _RF24N_available
                      _RF24N_enqueue
             _RF24N_is_valid_address
               _RF24N_levelToAddress
                        _RF24N_write
                   _RF24_available_p
         _RF24_getDynamicPayloadSize
                       _RF24_isValid
                          _RF24_read
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                6     4      2     700
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _RF24_read                                            3     0      3   32460
                                             28 COMRAM     3     0      3
                  _RF24_read_payload
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24_isValid                                         1     1      0      24
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _RF24_getDynamicPayloadSize                           1     1      0   43726
                                             15 COMRAM     2     2      0
              _RF24_beginTransaction
                _RF24_endTransaction
                      _RF24_flush_rx
                       _SPI_transfer
                              _delay
 ---------------------------------------------------------------------------------
 (5) _RF24_available_p                                     4     2      2   42589
                                             15 COMRAM     5     3      2
                    _RF24_get_status
               _RF24_read_register_d
 ---------------------------------------------------------------------------------
 (5) _RF24N_write                                         15    12      3  666236
             _RF24N_is_valid_address
     _RF24N_logicalToPhysicalAddress
                       _RF24N_update
                _RF24N_write_to_pipe
                  _RF24_setAutoAck_p
                _RF24_startListening
                   _RF24_txStandBy_t
                             _millis
 ---------------------------------------------------------------------------------
 (4) _RF24_txStandBy_t                                    17    12      5   78521
                                             18 COMRAM    17    12      5
                          _RF24_ce_d
                      _RF24_flush_tx
                    _RF24_get_status
               _RF24_read_register_d
                 _RF24_stopListening
              _RF24_write_register_d
                             _millis
 ---------------------------------------------------------------------------------
 (2) _millis                                               4     0      4       0
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _RF24_write_register_d                                3     2      1    7393
                                             13 COMRAM     3     2      1
              _RF24_beginTransaction
                _RF24_endTransaction
               _RF24_read_register_d (ARG)
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (5) _RF24_stopListening                                   2     2      0   30580
                                             16 COMRAM     2     2      0
                          _RF24_ce_d
                      _RF24_flush_tx
               _RF24_read_register_d
              _RF24_write_register_d
                  _delayMicroseconds
 ---------------------------------------------------------------------------------
 (3) _RF24_ce_d                                            1     1      0    1910
                                              5 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _RF24_startListening                                  1     1      0   84199
                                             21 COMRAM     1     1      0
                          _RF24_ce_d
              _RF24_closeReadingPipe
                      _RF24_flush_tx
                       _RF24_powerUp
               _RF24_read_register_d
            _RF24_write_register_c_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (4) _RF24_read_register_d                                 2     2      0    4255
                                             11 COMRAM     2     2      0
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _RF24_powerUp                                         1     1      0   24741
                                             16 COMRAM     2     2      0
               _RF24_read_register_d
              _RF24_write_register_d
                              _delay
 ---------------------------------------------------------------------------------
 (3) _RF24_flush_tx                                        0     0      0   16930
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (4) _RF24_closeReadingPipe                                4     4      0   23318
                                             16 COMRAM     5     5      0
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24_setAutoAck_p                                    5     4      1   12217
                                             16 COMRAM     5     4      1
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (6) _RF24N_write_to_pipe                                 10     6      4  488802
                                             47 COMRAM    16    12      4
                 _RF24N_pipe_address
             _RF24_openWritingPipe_d
                  _RF24_setAutoAck_p
                 _RF24_stopListening
                   _RF24_txStandBy_t
                   _RF24_writeFast_m
 ---------------------------------------------------------------------------------
 (4) _RF24N_update                                         7     7      0 1715945
                    _RF24N_available
                      _RF24N_enqueue
             _RF24N_is_valid_address
               _RF24N_levelToAddress
                        _RF24N_write
                   _RF24_available_p
         _RF24_getDynamicPayloadSize
                       _RF24_isValid
                          _RF24_read
                              _delay
 ---------------------------------------------------------------------------------
 (6) _RF24N_logicalToPhysicalAddress                      12    10      2    2091
                                             20 COMRAM    21    19      2
        _RF24N_direct_child_route_to
                _RF24N_is_descendant
              _RF24N_is_direct_child
 ---------------------------------------------------------------------------------
 (3) _RF24N_is_valid_address                               4     2      2     320
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _RF24N_levelToAddress                                 8     6      2      90
                                              2 COMRAM    11     9      2
 ---------------------------------------------------------------------------------
 (5) _RF24N_enqueue                                       16    14      2   71450
                                             18 COMRAM    23    21      2
                 _RF24_stopListening
                            ___lwdiv
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _RF24N_available                                      2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _isr                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _RF24NH_init
     _RF24N_update
       _RF24N_available
       _RF24N_enqueue
         _RF24_stopListening
           _RF24_ce_d
             _digitalWrite
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
           _delayMicroseconds
         ___lwdiv
         _memcpy
       _RF24N_is_valid_address
       _RF24N_levelToAddress
       _RF24N_write
         _RF24N_is_valid_address
         _RF24N_logicalToPhysicalAddress
           _RF24N_direct_child_route_to
           _RF24N_is_descendant
           _RF24N_is_direct_child
             _RF24N_is_descendant
         _RF24N_write_to_pipe
           _RF24N_pipe_address
           _RF24_openWritingPipe_d
             _RF24_write_register_c_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
           _RF24_setAutoAck_p
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
           _RF24_stopListening
             _RF24_ce_d
               _digitalWrite
             _RF24_flush_tx
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _delayMicroseconds
           _RF24_txStandBy_t
             _RF24_ce_d
               _digitalWrite
             _RF24_flush_tx
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_get_status
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_stopListening
               _RF24_ce_d
                 _digitalWrite
               _RF24_flush_tx
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
               _delayMicroseconds
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _millis
           _RF24_writeFast_m
             _RF24_get_status
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_startFastWrite
               _RF24_ce_d
                 _digitalWrite
               _RF24_write_payload
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
         _RF24_setAutoAck_p
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
         _RF24_startListening
           _RF24_ce_d
             _digitalWrite
           _RF24_closeReadingPipe
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_powerUp
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _delay
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_c_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
         _RF24_txStandBy_t
           _RF24_ce_d
             _digitalWrite
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_get_status
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_stopListening
             _RF24_ce_d
               _digitalWrite
             _RF24_flush_tx
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _delayMicroseconds
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
           _millis
         _millis
       _RF24_available_p
         _RF24_get_status
           _RF24_spiTrans
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
       _RF24_getDynamicPayloadSize
         _RF24_beginTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_endTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_flush_rx
           _RF24_spiTrans
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
         _SPI_transfer
         _delay
       _RF24_isValid
       _RF24_read
         _RF24_read_payload
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _delay
     _RF24N_write_m
       _RF24N_write_
         _RF24N__write
           _RF24N_write
             _RF24N_is_valid_address
             _RF24N_logicalToPhysicalAddress
               _RF24N_direct_child_route_to
               _RF24N_is_descendant
               _RF24N_is_direct_child
                 _RF24N_is_descendant
             _RF24N_update
               _RF24N_available
               _RF24N_enqueue
                 _RF24_stopListening
                   _RF24_ce_d
                     _digitalWrite
                   _RF24_flush_tx
                     _RF24_spiTrans
                       _RF24_beginTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _RF24_endTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _SPI_transfer
                   _RF24_read_register_d
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _RF24_write_register_d
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_read_register_d (ARG)
                       _RF24_beginTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _RF24_endTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _SPI_transfer
                     _SPI_transfer (ARG)
                   _delayMicroseconds
                 ___lwdiv
                 _memcpy
               _RF24N_is_valid_address
               _RF24N_levelToAddress
               _RF24_available_p
                 _RF24_get_status
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_getDynamicPayloadSize
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_flush_rx
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _SPI_transfer
                 _delay
               _RF24_isValid
               _RF24_read
                 _RF24_read_payload
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
               _delay
             _RF24N_write_to_pipe
               _RF24N_pipe_address
               _RF24_openWritingPipe_d
                 _RF24_write_register_c_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
               _RF24_setAutoAck_p
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
               _RF24_stopListening
                 _RF24_ce_d
                   _digitalWrite
                 _RF24_flush_tx
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
                 _delayMicroseconds
               _RF24_txStandBy_t
                 _RF24_ce_d
                   _digitalWrite
                 _RF24_flush_tx
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_get_status
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_stopListening
                   _RF24_ce_d
                     _digitalWrite
                   _RF24_flush_tx
                     _RF24_spiTrans
                       _RF24_beginTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _RF24_endTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _SPI_transfer
                   _RF24_read_register_d
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _RF24_write_register_d
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_read_register_d (ARG)
                       _RF24_beginTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _RF24_endTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _SPI_transfer
                     _SPI_transfer (ARG)
                   _delayMicroseconds
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
                 _millis
               _RF24_writeFast_m
                 _RF24_get_status
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_startFastWrite
                   _RF24_ce_d
                     _digitalWrite
                   _RF24_write_payload
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
             _RF24_setAutoAck_p
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
             _RF24_startListening
               _RF24_ce_d
                 _digitalWrite
               _RF24_closeReadingPipe
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
               _RF24_flush_tx
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_powerUp
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
                 _delay
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_c_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
             _RF24_txStandBy_t
               _RF24_ce_d
                 _digitalWrite
               _RF24_flush_tx
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_get_status
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_stopListening
                 _RF24_ce_d
                   _digitalWrite
                 _RF24_flush_tx
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
                 _delayMicroseconds
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
               _millis
             _millis
           _memcpy
         _RF24N_update
           _RF24N_available
           _RF24N_enqueue
             _RF24_stopListening
               _RF24_ce_d
                 _digitalWrite
               _RF24_flush_tx
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
               _delayMicroseconds
             ___lwdiv
             _memcpy
           _RF24N_is_valid_address
           _RF24N_levelToAddress
           _RF24N_write
             _RF24N_is_valid_address
             _RF24N_logicalToPhysicalAddress
               _RF24N_direct_child_route_to
               _RF24N_is_descendant
               _RF24N_is_direct_child
                 _RF24N_is_descendant
             _RF24N_write_to_pipe
               _RF24N_pipe_address
               _RF24_openWritingPipe_d
                 _RF24_write_register_c_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
               _RF24_setAutoAck_p
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
               _RF24_stopListening
                 _RF24_ce_d
                   _digitalWrite
                 _RF24_flush_tx
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
                 _delayMicroseconds
               _RF24_txStandBy_t
                 _RF24_ce_d
                   _digitalWrite
                 _RF24_flush_tx
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_get_status
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_stopListening
                   _RF24_ce_d
                     _digitalWrite
                   _RF24_flush_tx
                     _RF24_spiTrans
                       _RF24_beginTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _RF24_endTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _SPI_transfer
                   _RF24_read_register_d
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _RF24_write_register_d
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_read_register_d (ARG)
                       _RF24_beginTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _RF24_endTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _SPI_transfer
                     _SPI_transfer (ARG)
                   _delayMicroseconds
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
                 _millis
               _RF24_writeFast_m
                 _RF24_get_status
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_startFastWrite
                   _RF24_ce_d
                     _digitalWrite
                   _RF24_write_payload
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
             _RF24_setAutoAck_p
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
             _RF24_startListening
               _RF24_ce_d
                 _digitalWrite
               _RF24_closeReadingPipe
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
               _RF24_flush_tx
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_powerUp
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
                 _delay
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_c_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
             _RF24_txStandBy_t
               _RF24_ce_d
                 _digitalWrite
               _RF24_flush_tx
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_get_status
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_stopListening
                 _RF24_ce_d
                   _digitalWrite
                 _RF24_flush_tx
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
                 _delayMicroseconds
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
               _millis
             _millis
           _RF24_available_p
             _RF24_get_status
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_getDynamicPayloadSize
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_flush_rx
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _SPI_transfer
             _delay
           _RF24_isValid
           _RF24_read
             _RF24_read_payload
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
           _delay
         _RF24_setAutoAck_p
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
         _RF24_startListening
           _RF24_ce_d
             _digitalWrite
           _RF24_closeReadingPipe
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_powerUp
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _delay
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_c_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
         _RF24_stopListening
           _RF24_ce_d
             _digitalWrite
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
           _delayMicroseconds
         _RF24_txStandBy_t
           _RF24_ce_d
             _digitalWrite
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_get_status
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_stopListening
             _RF24_ce_d
               _digitalWrite
             _RF24_flush_tx
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _delayMicroseconds
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
           _millis
         ___lwdiv
         ___lwmod
         ___wmul
         _delay
         _delayMicroseconds
         _millis
     _Serial_print
       _Serial_tx
     _Serial_println
       _Serial_print
         _Serial_tx
     _millis
   _setup
     _RF24N_begin_d
       _RF24N_is_valid_address
       _RF24N_pipe_address
       _RF24N_setup_address
       _RF24_enableDynamicPayloads
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_isValid
       _RF24_openReadingPipe_d
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_c_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
         _memcpy
       _RF24_setAutoAck_p
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_setChannel
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_setRetries
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_startListening
         _RF24_ce_d
           _digitalWrite
         _RF24_closeReadingPipe
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
         _RF24_flush_tx
           _RF24_spiTrans
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
         _RF24_powerUp
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
           _delay
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_c_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       ___lwmod
       ___wmul
     _RF24N_init
     _RF24_begin
       _RF24_ce_d
         _digitalWrite
       _RF24_csn_d
         _delayMicroseconds
         _digitalWrite
       _RF24_flush_rx
         _RF24_spiTrans
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
       _RF24_flush_tx
         _RF24_spiTrans
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
       _RF24_powerUp
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
         _delay
       _RF24_read_register_d
         _RF24_beginTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_endTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _SPI_transfer
       _RF24_setChannel
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_setDataRate
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_setRetries
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_toggle_features_d
         _RF24_beginTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_endTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _SPI_transfer
       _RF24_write_register_d
         _RF24_beginTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_endTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_read_register_d (ARG)
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _SPI_transfer (ARG)
       _SPI_begin
       _delay
       _pinMode
     _RF24_init
     _Serial_begin
       ___lldiv
     _Serial_println
       _Serial_print
         _Serial_tx

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0     172      37        9.3%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1D      55       5       66.4%
BITCOMRAM           73      0       0       0        0.0%
COMRAM              73     69      6B       1       93.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       3       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C0      34        0.0%
DATA                 0      0     235       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Dec  5 19:29:25 2016

                          __size_of_RF24N_write_to_pipe 0094  
                                         ?_RF24_powerUp 0001  
                                       ??_RF24N_begin_d 0024  
                                        ?_RF24_spiTrans 0001  
                                        ??_RF24N__write 0048  
                                           _SSPSTATbits 000FC7  
                                                    l93 3BBE  
                            RF24_read_register_d@result 000D  
                                                    _rf 008C  
                                                    _rn 00D5  
                                   RF24N__write@message 0042  
                                   ___wmul@multiplicand 0005  
                                           __CFG_BORV$3 000000  
                                          __CFG_CP0$OFF 000000  
                                       ??_RF24N_enqueue 0015  
                                        ??_RF24N_write_ 0053  
                                          __CFG_CP1$OFF 000000  
                                          __CFG_CP2$OFF 000000  
                                          __CFG_CP3$OFF 000000  
                                _RF24_openReadingPipe_d 289C  
                                                   l200 22B6  
                                                   l201 22C2  
                                                   l210 23C0  
                                                   l202 22CE  
                                                   l211 23CC  
                                                   l220 2438  
                                                   l212 23D8  
                                                   l221 2444  
                                                   l213 23E4  
                                                   l230 24B0  
                                                   l222 2450  
                                                   l214 23F0  
                                                   l231 24BC  
                                                   l223 245C  
                                                   l215 23FC  
                                                   l312 3BA4  
                                                   l240 2528  
                                                   l232 24C8  
                                                   l224 2468  
                                                   l216 2408  
                                                   l208 23B4  
                                                   l241 2534  
                                                   l233 24D4  
                                                   l225 2474  
                                                   l217 2414  
                                                   l242 2540  
                                                   l234 24E0  
                                                   l226 2480  
                                                   l218 2420  
                                                   l170 214E  
                                                   l243 254C  
                                                   l235 24EC  
                                                   l227 248C  
                                                   l219 242C  
                                                   l171 215A  
                                                   l236 24F8  
                                                   l228 2498  
                                                   l180 21C6  
                                                   l172 2166  
                                                   l237 2504  
                                                   l229 24A4  
                                                   l181 21D2  
                                                   l173 2172  
                                                   l238 2510  
                                                   l190 223E  
                                                   l182 21DE  
                                                   l174 217E  
                                                   l239 251C  
                                                   l191 224A  
                                                   l183 21EA  
                                                   l175 218A  
                                                   l167 2136  
                                                   l192 2256  
                                                   l184 21F6  
                                                   l176 2196  
                                                   l409 1B16  
                                                   l193 2262  
                                                   l185 2202  
                                                   l177 21A2  
                                                   l169 2142  
                                                   l194 226E  
                                                   l186 220E  
                                                   l178 21AE  
                                                   l515 2054  
                                                   l195 227A  
                                                   l187 221A  
                                                   l179 21BA  
                                                   l196 2286  
                                                   l188 2226  
                                                   l517 20A8  
                                                   l197 2292  
                                                   l189 2232  
                                                   l534 1E2C  
                                                   l198 229E  
                                                   l199 22AA  
                                                   l712 2F60  
                                                   l457 134E  
                                                   l397 2C7C  
                                                   l758 39B8  
                                                   l599 3554  
                                                   l793 3262  
                                                   l971 3AF2  
                                                   l986 3238  
                                ??_RF24_read_register_d 000C  
                                          __CFG_CPB$OFF 000000  
                                          __CFG_CPD$OFF 000000  
                            __end_of_child_payload_size 1007  
                                                   _isr 0008  
                                 _RF24_write_register_d 3A80  
                                                   prod 000FF3  
                                                   wreg 000FE8  
                                  RF24N__write@sendType 004A  
                         ??_RF24N_direct_child_route_to 0005  
                                       ??_RF24N_write_m 006A  
                                          __CFG_LVP$OFF 000000  
                                   _RF24N_is_descendant 3922  
                                          __CFG_WDT$OFF 000000  
                                 __size_of_SPI_transfer 0010  
                                                  l1432 34BA  
                                                  l1442 362A  
                                                  l4011 1266  
                                                  l4005 122A  
                                                  l1365 30D0  
                                                  l4031 12E8  
                                                  l4025 12C6  
                                                  l4211 18B6  
                                                  l4123 391E  
                                                  l4107 354A  
                                                  l4027 12E4  
                                                  l4019 1290  
                                                  l4221 1956  
                                                  l4205 186E  
                                RF24_startFastWrite@buf 0022  
                                                  l4231 197A  
                                                  l3431 3700  
                                                  l3511 2FC6  
                                                  l4135 3302  
                                                  l4119 391A  
                                                  l4311 2D76  
                                                  l4225 195E  
                                                  l4209 1896  
                                                  l4161 1640  
                                                  l4153 1626  
                                                  l3441 371C  
                                                  l3433 3708  
                                                  l3601 27E0  
                                                  l3513 2FCC  
                                                  l3505 2FAA  
                                                  l4065 1468  
                                                  l4049 1376  
                                                  l4073 147A  
                                                  l3443 3720  
                                                  l3611 280A  
                                                  l4059 1464  
                                                  l3427 2558  
                                                  l4323 2DBC  
                                                  l3701 3404  
                                                  l4253 1AB0  
                                                  l4165 165E  
                                                  l4157 163C  
                                                  l4261 1AEC  
                                                  l3621 2862  
                                                  l3613 2824  
                                                  l3605 27F4  
                                                  l3509 2FBC  
                                                  l4085 14C2  
                                                  l4341 3600  
                                                  l4501 1FEC  
                                                  l5205 2770  
                                                  l3703 340A  
                                                  l3527 35B2  
                                                  l4247 1A5A  
                                                  l4095 15C2  
                                                  l4087 1506  
                                                  l4319 2D9E  
                                                  l4327 2DD0  
                                                  l4343 3608  
                                                  l4407 2C14  
                                                  l4415 28A2  
                                                  l3633 2E08  
                                                  l3537 35E0  
                                                  l3529 35BA  
                                                  l3553 38B0  
                                                  l3617 285A  
                                                  l3801 34B0  
                                                  l4097 15C6  
                                                  l4345 360C  
                                                  l4409 2C38  
                                                  l4425 28E4  
                                                  l4601 308E  
                                                  l5225 38EA  
                                                  l3635 2E1E  
                                                  l3539 35E4  
                                                  l4259 1ABC  
                                                  l4195 17D8  
                                                  l3811 386C  
                                                  l3731 2EF6  
                                                  l4283 2A08  
                                                  l3715 3662  
                                                  l4507 2038  
                                                  l4443 1E38  
                                                  l4355 3568  
                                                  l4435 2936  
                                                  l4419 28AA  
                                                  l4611 30C2  
                                                  l4603 3092  
                                                  l3645 2E9E  
                                                  l3813 387E  
                                                  l3549 389E  
                                                  l3741 2F44  
                                                  l4293 2A6E  
                                                  l3709 3646  
                                                  l4349 3620  
                                                  l4517 20A0  
                                                  l4461 1EE2  
                                                  l4437 295A  
                                                  l4429 2904  
                                                  l4365 22DA  
                                RF24_startFastWrite@len 0024  
                                                  l3583 344C  
                                                  l3911 1D06  
                                                  l3815 3886  
                                                  l3807 385A  
                                                  l3655 3160  
                                                  l3567 37F4  
                                                  l3671 3676  
                                                  l4295 2A72  
                                                  l4527 20B6  
                                                  l4447 1E44  
                                                  l4359 3588  
                                                  l4391 2B78  
                                                  l3585 3466  
                                                  l3665 31A2  
                                                  l3497 2F90  
                                                  l3729 2EEC  
                                                  l4289 2A38  
                                                  l4529 20BC  
                                                  l4473 1F0A  
                                                  l4449 1E92  
                                                  l4393 2B8C  
                                                  l3595 27A6  
                                                  l3659 3168  
                                                  l3499 2F98  
                                                  l3771 304C  
                                                  l3851 37E2  
                                                  l4555 212E  
                                                  l4547 2110  
                                                  l4539 20FC  
                                                  l4483 1F74  
                                                  l4467 1EFA  
                                                  l3933 1DB2  
                                                  l3773 3052  
                                                  l3765 302E  
                                                  l3757 3014  
                                                  l4741 2D14  
                                                  l4573 3204  
                                                  l3919 1D44  
                                                  l3599 27B4  
                                                  l3679 368E  
                                                  l3791 3490  
                                                  l3759 301C  
                                                  l4495 1FC6  
                                                  l3937 1E10  
                                                  l3929 1D80  
                                                  l3873 1B62  
                                                  l3793 3494  
                                                  l3769 3042  
                                                  l4489 1F8E  
                                                  l4737 2CEE  
                                                  l4665 2AAC  
                                                  l3939 1E1C  
                                                  l3867 1B46  
                                                  l3963 10C6  
                                                  l4499 1FDC  
                                                  l4579 321E  
                                                  l3789 3488  
                                                  l4685 2B06  
                                                  l4669 2AC4  
                                                  l3991 11DC  
                                                  l4599 3082  
                                                  l3985 116A  
                                                  l3977 112E  
                                                  ?_isr 0001  
                                                  STR_1 101B  
                                                  STR_2 103F  
                                                  STR_3 1052  
                                                  STR_4 104A  
                                                  STR_5 1056  
                                                  u4000 3A7C  
                                                  u3105 23E0  
                                                  u3106 23E2  
                                                  u3115 23EC  
                                                  u3116 23EE  
                                                  u4005 3A74  
                                                  u3205 2458  
                                                  u3125 23F8  
                                                  u4110 1D2E  
                                                  u3206 245A  
                                                  u3126 23FA  
                                                  u3215 2464  
                                                  u3135 2404  
                                                  u3216 2466  
                                                  u3136 2406  
                                                  u3305 24D0  
                                                  u3225 2470  
                                                  u3145 2410  
                                                  u3306 24D2  
                                                  u3226 2472  
                                                  u3146 2412  
                                                  u3315 24DC  
                                                  u3235 247C  
                                                  u3155 241C  
                                                  u3075 23BC  
                                                  u3316 24DE  
                                                  u3236 247E  
                                                  u3156 241E  
                                                  u3076 23BE  
                                                  u3405 2548  
                                                  u3325 24E8  
                                                  u3245 2488  
                                                  u3165 2428  
                                                  u3085 23C8  
                                                  u5005 219E  
                                                  u3406 254A  
                                                  u3326 24EA  
                                                  u3246 248A  
                                                  u3166 242A  
                                                  u3086 23CA  
                                                  u5006 21A0  
                                                  u3415 2554  
                                                  u3335 24F4  
                                                  u3255 2494  
                                                  u3175 2434  
                                                  u3095 23D4  
                                                  u5015 21AA  
                                                  u4320 1286  
                                                  u3416 2556  
                                                  u3336 24F6  
                                                  u3256 2496  
                                                  u3176 2436  
                                                  u3096 23D6  
                                                  u5016 21AC  
                                                  u3345 2500  
                                                  u3265 24A0  
                                                  u3185 2440  
                                                  u5105 2216  
                                                  u5025 21B6  
                                                  u3346 2502  
                                                  u3266 24A2  
                                                  u3186 2442  
                                                  u5106 2218  
                                                  u5026 21B8  
                                                  u3355 250C  
                                                  u3275 24AC  
                                                  u3195 244C  
                                                  u5115 2222  
                                                  u5035 21C2  
                                                  u4500 3300  
                                                  u3356 250E  
                                                  u3276 24AE  
                                                  u3196 244E  
                                                  u5116 2224  
                                                  u5036 21C4  
                                                  u3365 2518  
                                                  u3285 24B8  
                                                  u5205 228E  
                                                  u5125 222E  
                                                  u5045 21CE  
                                                  u3614 3442  
                                                  u3366 251A  
                                                  u3286 24BA  
                                                  u5206 2290  
                                                  u5126 2230  
                                                  u5046 21D0  
                                                  u3615 343E  
                                                  u3631 2788  
                            __size_of_RF24_read_payload 0086  
                                                  u3375 2524  
                                                  u3295 24C4  
                                                  u5215 229A  
                                                  u5135 223A  
                                                  u5055 21DA  
                                                  u3624 345C  
                                                  u4600 174A  
                                                  u3376 2526  
                                                  u3296 24C6  
                                                  u5400 1F06  
                                                  u5216 229C  
                                                  u5136 223C  
                                                  u5056 21DC  
                                                  u3625 3458  
                                                  u3385 2530  
                                                  u5225 22A6  
                                                  u5145 2246  
                                                  u5065 21E6  
                                                  u3554 328C  
                                                  u4530 1626  
                                                  u3386 2532  
                                                  u5410 1F46  
                                                  u5226 22A8  
                                                  u5146 2248  
                                                  u5066 21E8  
                                                  u3555 3288  
                                                  u3395 253C  
                                                  u5235 22B2  
                                                  u5155 2252  
                                                  u5075 21F2  
                                                  u3804 36D8  
                                                  u3396 253E  
                                                  u5420 1F48  
                                                  u5236 22B4  
                                                  u5156 2254  
                                                  u5076 21F4  
                                                  u3805 36D4  
                                                  u5245 22BE  
                                                  u5165 225E  
                                                  u5085 21FE  
                                                  u4454 353C  
                                                  u5246 22C0  
                                                  u5166 2260  
                                                  u5086 2200  
                                                  u4455 3536  
                                                  u5255 22CA  
                                                  u5175 226A  
                                                  u5095 220A  
                                                  u5256 22CC  
                                                  u5176 226C  
                                                  u5096 220C  
                                                  u5265 22D6  
                                                  u5185 2276  
                                                  u4490 32FE  
                                                  u5354 2998  
                                                  u5266 22D8  
                                                  u5186 2278  
                                                  u4571 16F6  
                                                  u5355 2994  
                                                  u5195 2282  
                                                  u5196 2284  
                                                  u5605 3108  
                                                  u4750 19D6  
                                                  u3870 394C  
                                   RF24_writeFast_m@buf 002B  
                                                  u4925 213E  
                                                  u4926 2140  
                                                  u4935 214A  
                                                  u4936 214C  
                                                  u4945 2156  
                                                  u4946 2158  
                                                  i2l59 3972  
                                                  u4955 2162  
                                                  u4956 2164  
                                                  u4965 216E  
                                                  u4966 2170  
                                                  u4975 217A  
                                                  u4976 217C  
                                                  u4985 2186  
                                                  u4986 2188  
                                                  u4995 2192  
                                                  u4996 2194  
                                   RF24_writeFast_m@len 002D  
                                 RF24N_write_to_pipe@ok 003F  
                                     ??_RF24N_available 0003  
                           RF24_write_register_d@status 0010  
                                          __CFG_PWRT$ON 000000  
                          RF24N_is_valid_address@result 0008  
                                    __size_of_RF24_ce_d 001C  
                                    __size_of_RF24_init 003C  
                                    __size_of_RF24_read 001C  
                                                  _buff 00A2  
                                                  _main 38BE  
                                        ??_RF24_isValid 0003  
                                                  _loop 262E  
                                                  fsr0h 000FEA  
                                                  fsr1h 000FE2  
                                                  indf0 000FEF  
                                                  fsr0l 000FE9  
                                                  fsr2h 000FDA  
                                                  fsr1l 000FE1  
                                                  indf2 000FDF  
                                                  fsr2l 000FD9  
                                                  btemp 006A  
                           ?_RF24_enableDynamicPayloads 0001  
                                          RF24_read@buf 001D  
                                                  prodh 000FF4  
                                                  prodl 000FF3  
                                          RF24_read@len 001F  
                                                  start 0014  
                                         __CFG_IESO$OFF 000000  
                                         __CFG_MCLRE$ON 000000  
                                        ??_RF24_powerUp 0011  
                                          ___param_bank 000010  
                              ??_RF24N_is_valid_address 0005  
                                _RF24_openWritingPipe_d 315C  
                                  ?_RF24N_is_descendant 0003  
                                   RF24_spiTrans@status 000F  
                          __end_of_RF24N_levelToAddress 355E  
                                                 ??_isr 0001  
                                ?_RF24_closeReadingPipe 0001  
                               _RF24_write_payload$2320 001F  
                               _RF24_write_payload$2319 001D  
                                                 ?_main 0001  
                                                 ?_loop 0001  
                                       __end_of___lldiv 30E2  
                           __size_of_RF24N_pipe_address 011E  
                                       __end_of___lwdiv 34C4  
                                       __end_of___lwmod 3634  
                                      SPI_transfer@data 0003  
                                                 _RCREG 000FAE  
                                 RF24N_begin_d@_channel 002A  
                                   __size_of_RF24N_init 005C  
                                          _SPI_transfer 3B9C  
                                                 _TMR0H 000FD7  
                                                 _TMR0L 000FD6  
                                                 _SPBRG 000FAF  
                                                 _TXREG 000FAD  
                                     ?_RF24_txStandBy_t 0013  
                                         __CFG_WRT0$OFF 000000  
                                         __CFG_WRT1$OFF 000000  
                                         __CFG_WRT2$OFF 000000  
                                         __CFG_WRT3$OFF 000000  
                             __size_of_RF24_available_p 0032  
                                        __CFG_EBTR0$OFF 000000  
                                        __CFG_FCMEN$OFF 000000  
                                        __CFG_EBTR1$OFF 000000  
                                        __CFG_EBTR2$OFF 000000  
                                        __CFG_EBTR3$OFF 000000  
                                   __size_of_RF24_begin 00DE  
                                         __CFG_WRTB$OFF 000000  
                                         __CFG_WRTC$OFF 000000  
                                         __CFG_WRTD$OFF 000000  
                                   __size_of_RF24_csn_d 0018  
                          ??_RF24_getDynamicPayloadSize 0010  
                                    ??_RF24_txStandBy_t 0018  
                                        __CFG_EBTRB$OFF 000000  
                                                 _delay 35A8  
                                        RF24_ce_d@level 0007  
                                   RF24N_pipe_address@i 0021  
                                                 _mtime 0084  
                                       __end_of_pinMode 23B0  
                                                 _setup 34C4  
                                        __CFG_BOREN$OFF 000000  
                                                 tablat 000FF5  
                                       ??_RF24_flush_rx 0010  
                                       ??_RF24_flush_tx 0010  
                               _RF24_write_register_c_d 388A  
                                                 plusw0 000FEB  
                                                 plusw1 000FE3  
                                                 plusw2 000FDB  
                          RF24_startFastWrite@multicast 0025  
                                                 status 000FD8  
                                    __size_of_SPI_begin 001A  
                       __size_of_RF24_toggle_features_d 0016  
                  __size_of_RF24N_direct_child_route_to 0036  
                                       ??_RF24_spiTrans 000C  
                                  __end_of_digitalWrite 262E  
                                       __initialization 3306  
                            __size_of_RF24_setAutoAck_p 0056  
                                 ??_RF24N_is_descendant 0005  
                           __size_of_RF24_write_payload 0092  
                                          __end_of_main 38F0  
                                          __end_of_loop 277E  
RF24N_logicalToPhysicalAddress@pre_conversion_send_node 0023  
RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe 0027  
                  RF24N_is_direct_child@child_node_mask 0012  
                                 RF24N_begin_d@retryVar 0029  
                                        __CFG_OSC$HSPLL 000000  
                   __size_of_RF24_getDynamicPayloadSize 0038  
                                     __end_of_RF24_ce_d 3B12  
                                                ??_main 006A  
                                     __end_of_RF24_init 37AE  
                               RF24_setAutoAck_p@enable 0011  
                                     __end_of_RF24_read 3ADA  
                                                ??_loop 00AC  
                                         __activetblptr 000002  
                 RF24N_pipe_address@address_translation 00C9  
                                ?_RF24_write_register_d 000E  
                           __end_of_RF24N_setup_address 2C4A  
                                     _child_pipe_enable 100D  
                                        _Serial_println 3B2C  
                                  __size_of_RF24NH_init 003E  
                                                ?_delay 0003  
                                                ?_setup 0001  
                                     ?_RF24_writeFast_m 002B  
                                  __end_of_RF24N__write 2DF8  
                                    delayMicroseconds@d 0005  
                                    delayMicroseconds@i 0006  
                                    delayMicroseconds@j 0008  
                              RF24_available_p@pipe_num 0010  
                                    ??_RF24_writeFast_m 002F  
                                                _SPBRGH 000FB0  
                                  __end_of_RF24N_update 1B20  
                                                _SSPBUF 000FC9  
                                  __size_of_RF24N_write 0316  
                                  __end_of_RF24N_write_ 2132  
                             RF24N_is_direct_child@node 0009  
                               RF24N_write_to_pipe@node 0030  
                               RF24N_write_to_pipe@pipe 0032  
                                 RF24_write_payload@buf 000C  
                                        __CFG_XINST$OFF 000000  
                                        RF24_csn_d@mode 000B  
                       __size_of_RF24N_is_valid_address 0036  
                                                ___wmul 39F0  
                        RF24_openReadingPipe_d@address_ 0011  
                                   _RF24_endTransaction 3BD4  
                                             ??___lldiv 000B  
                                             ??___lwdiv 0007  
                                             ??___lwmod 0007  
                           __end_of_RF24_startFastWrite 381E  
                                                _memcpy 3634  
                                                delay@i 0005  
                                                delay@j 0007  
                                                _millis 3B8A  
                                                clear_0 330E  
                                                clear_1 3320  
                                    __size_of_Serial_tx 000C  
                                      __end_of_interval 1017  
                             __end_of_child_pipe_enable 1013  
                                __end_of_Serial_println 3B46  
                                _RF24_toggle_features_d 3B5E  
                                  __end_of_RF24_isValid 3AF6  
                                     __end_of_SPI_begin 3B2C  
                                          __pdataCOMRAM 0076  
                                  RF24_read_payload@buf 000C  
                                             ??_pinMode 0004  
                                                loop@ok 00B4  
                                 _RF24N_is_direct_child 32A2  
                                          __mediumconst 0000  
                                 _RF24_beginTransaction 3BDC  
                                                tblptrh 000FF7  
                                                tblptrl 000FF6  
                                                tblptru 000FF8  
                                  __end_of_RF24_powerUp 3A3C  
                                   _RF24N_write_to_pipe 2EB4  
                             ??_RF24_write_register_c_d 000F  
                                  ?_RF24_endTransaction 0001  
                                      Serial_begin@baud 0010  
                                  _RF24N_levelToAddress 3512  
                            __end_of_RF24_stopListening 32A2  
                 RF24N_direct_child_route_to@child_mask 0009  
                                            __accesstop 0080  
                               __end_of__initialization 335E  
                                          ??_RF24N_init 0003  
                          RF24_openWritingPipe_d@value_ 0011  
                                       __CFG_PBADEN$OFF 000000  
                                 RF24_setDataRate@speed 0012  
                                 RF24_setDataRate@setup 0013  
                             __size_of_RF24_setDataRate 006A  
                           __end_of_RF24_startListening 341C  
                                      RF24_spiTrans@cmd 000E  
                                         ___rparam_used 000001  
                                          ??_RF24_begin 0015  
                                          ??_RF24_csn_d 000A  
                                           pinMode@mode 0003  
                                       RF24_begin@setup 0016  
                                        __pcstackCOMRAM 0001  
                                            ___inthi_sp 06B0  
                       RF24N_direct_child_route_to@node 0003  
                                  ?_RF24N_write_to_pipe 0030  
                                          __pidataBANK0 3BAC  
                              __size_of_RF24_get_status 0008  
                                         __end_of_delay 35F2  
                               ?_RF24_openReadingPipe_d 0011  
                                         __end_of_setup 3512  
                                       ?_Serial_println 000A  
                                 RF24_setAutoAck_p@pipe 0015  
                                  _RF24_setChannel$2342 0011  
                                       _RF24N_available 3A5E  
                                _RF24_read_payload$2327 001A  
                                    __end_of_RF24N_init 33C4  
                                      _RF24_available_p 38F0  
                    __end_of_RF24_getDynamicPayloadSize 37E6  
                            _RF24_getDynamicPayloadSize 37AE  
                                RF24_available_p@status 0014  
                                _RF24N_is_valid_address 3854  
                                 ??_RF24_endTransaction 000C  
                                    __end_of_RF24_begin 2B6E  
                                               ??_delay 0005  
                                    __end_of_RF24_csn_d 3B5E  
                                  RF24N_write_@msgCount 005F  
                                               ??_setup 002C  
                                 ?_RF24N_levelToAddress 0003  
                                            __pbssBANK0 0080  
                                           loop@payload 00B9  
                                         ?_Serial_begin 0010  
                                    _child_payload_size 1001  
                                     __end_of_Serial_tx 3BC4  
                                 __size_of_digitalWrite 027E  
                                         ?_Serial_print 0004  
                             RF24_closeReadingPipe@pipe 0015  
                               ?_RF24_openWritingPipe_d 0011  
                                            _child_pipe 1007  
                              __size_of_RF24_setChannel 0026  
                                 ??_RF24N_write_to_pipe 0034  
                        __end_of_RF24_openReadingPipe_d 29AE  
                               ??_RF24_closeReadingPipe 0011  
                                               ?___wmul 0003  
          RF24N_logicalToPhysicalAddress@conversionInfo 0015  
                                 __end_of_RF24N_begin_d 2D22  
                                               ?_memcpy 0003  
                                               ?_millis 0003  
                            RF24_write_payload@data_len 000E  
                                   RF24N_enqueue@header 0013  
                              __size_of_RF24_setRetries 0022  
                                ?_RF24N_is_direct_child 0009  
                                 __end_of_RF24N_enqueue 15CE  
                                ?_RF24_beginTransaction 0001  
                                   RF24N_enqueue@result 0027  
                                 __size_of_RF24N__write 00D6  
                         __size_of_RF24_read_register_d 001E  
                            RF24N_is_valid_address@node 0003  
                                          _digitalWrite 23B0  
                                 __size_of_RF24N_update 0552  
                                 __size_of_RF24N_write_ 02FC  
                                 __end_of_RF24N_write_m 39F0  
                               RF24N_write_@fragmentLen 005C  
                               RF24N_write_@fragment_id 0063  
                                        ??_Serial_begin 0014  
                                        ??_Serial_print 0006  
                        __end_of_RF24_openWritingPipe_d 31D2  
                          RF24N_write_to_pipe@multicast 0033  
                             __size_of_RF24_txStandBy_t 00BC  
                                               __Hparam 0000  
                                               __Lparam 0000  
                           RF24N_write_to_pipe@out_pipe 003A  
                                  RF24N_write_m@message 0066  
                                               ___lldiv 3060  
                                       __size_of___wmul 0026  
                      ??_RF24N_logicalToPhysicalAddress 0017  
                       ?_RF24N_logicalToPhysicalAddress 0015  
                               __end_of_RF24N_available 3A80  
                                               ___lwdiv 3472  
                                 __size_of_RF24_isValid 001C  
                                               ___lwmod 35F2  
                                          __psmallconst 1000  
                               ??_RF24_write_register_d 000F  
                            __end_of_RF24N_pipe_address 289C  
                                          _RF24N__write 2D22  
                                       __CFG_STVREN$OFF 000000  
                                               __pcinit 3306  
                                       __size_of_memcpy 0040  
                         RF24_write_register_c_d@status 000F  
                                       __size_of_millis 0012  
                                               __ramtop 1000  
                                               __ptext0 38BE  
                                               __ptext1 34C4  
                                               __ptext2 30E2  
                                               __ptext3 3060  
                                               __ptext4 3772  
                                               __ptext5 2A90  
                                               __ptext6 2132  
                                               __ptext7 3B12  
                                               __ptext8 3B5E  
                                               __ptext9 31D2  
                                          _RF24N_update 15CE  
                                             _T0CONbits 000FD5  
                                     ??_RF24_get_status 0010  
                                          _RF24N_write_ 1E36  
                   __end_of_RF24N_direct_child_route_to 3854  
                           _RF24N_direct_child_route_to 381E  
                                 __size_of_RF24_powerUp 0026  
                                          __size_of_isr 3974  
                                               _pinMode 2132  
                                         Serial_print@i 0008  
                                 RF24N_pipe_address@dec 001C  
                                             _RF24_ce_d 3AF6  
                                               _next_id 0076  
                                 RF24N_pipe_address@out 001F  
                                             _RF24_init 3772  
                                             _RF24_read 3ABE  
                             RF24N_enqueue@padding_2049 0025  
                                ??_RF24N_levelToAddress 0005  
                                        __pintcode_body 3950  
                                     RF24N_begin_d@addr 0024  
                                  end_of_initialization 335E  
                                  RF24_setRetries@delay 0014  
                                  RF24_setRetries@count 0011  
                               RF24N__write@writeDirect 0046  
                                               memcpy@d 0009  
                                               memcpy@n 0007  
                                               memcpy@s 000B  
                                         __Lmediumconst 0000  
                                               int_func 3950  
                                      RF24NH_init@_type 0007  
                                 __end_of_RF24_flush_rx 3BCC  
                                 __end_of_RF24_flush_tx 3BEC  
                                      _RF24_setDataRate 31D2  
                                       RF24_init@_cepin 0004  
                           __end_of_RF24N_is_descendant 3950  
                              RF24N_pipe_address@result 0017  
                                       RF24_init@_cspin 0003  
                                               loop@now 00B5  
                      RF24_getDynamicPayloadSize@result 0011  
                                          _RF24_isValid 3ADA  
                            __end_of_RF24_write_payload 2FDA  
                                     __end_of_this_node 101B  
                                       ___lldiv@divisor 0007  
                                       ___lldiv@counter 000F  
                                             _RCSTAbits 000FAB  
                                               postdec0 000FED  
                                               postdec2 000FDD  
                                               postinc0 000FEE  
                                               postinc1 000FE6  
                                               postinc2 000FDE  
                                 __end_of_RF24_spiTrans 3B8A  
                             __size_of_RF24_writeFast_m 0040  
                                          _RF24_powerUp 3A16  
                               ?_RF24_toggle_features_d 0001  
                             RF24N_pipe_address@address 0006  
                                            _other_node 1017  
                                     ??_RF24_setChannel 0011  
                                             _PORTAbits 000F80  
                                             _PORTBbits 000F81  
                                             _PORTCbits 000F82  
                                             _PORTDbits 000F83  
                                             _PORTEbits 000F84  
                                         ??_RF24NH_init 0008  
                                    _RF24N_enqueue$2047 0026  
                                            ?_RF24_ce_d 0001  
                                             _TRISAbits 000F92  
                                             _TRISBbits 000F93  
                                             _TRISCbits 000F94  
                                            ?_RF24_init 0003  
                                            ?_RF24_read 001D  
                                             _TRISDbits 000F95  
                                             _TRISEbits 000F96  
                                    RF24N__write@header 0040  
                 RF24N_logicalToPhysicalAddress@to_node 0028  
                              _RF24_startFastWrite$2393 0029  
                                     ??_RF24_setRetries 0012  
                                             _SPI_begin 3B12  
                                RF24_setDataRate@result 0011  
                          __size_of_RF24N_setup_address 00DC  
                                             _TXSTAbits 000FAC  
                            RF24_write_register_d@value 000E  
                            RF24_write_register_c_d@buf 000C  
                            RF24_write_register_c_d@len 000E  
                            RF24_write_register_c_d@reg 0010  
                              __end_of_RF24_available_p 3922  
                                      ??_Serial_println 000C  
                        __end_of_RF24_toggle_features_d 3B74  
                            RF24_setChannel@max_channel 0014  
                                    _RF24_stopListening 323C  
                                      ?_RF24N_available 0001  
                            RF24N_begin_d@_node_address 0022  
                                        __end_of___wmul 3A16  
                                  RF24N_setup_address@i 0005  
                                  RF24N_setup_address@m 0007  
                                           _BAUDCONbits 000FB8  
                                         __pidataCOMRAM 3BEC  
                                  __end_of_Serial_begin 315C  
                                        __end_of_memcpy 3674  
                              RF24_write_payload@status 001A  
                                        __end_of_millis 3B9C  
                                  __end_of_Serial_print 35A8  
                                   ?_RF24_stopListening 0001  
                               ?_RF24N_is_valid_address 0003  
                                   start_initialization 3306  
                          __size_of_RF24_startFastWrite 0038  
                           ?_RF24_getDynamicPayloadSize 0001  
                                           __end_of_isr 397C  
                                       _RF24_begin$2356 0015  
                                            ?_SPI_begin 0001  
                                   __end_of_RF24NH_init 3772  
                                RF24_setAutoAck_p@en_aa 0014  
                             RF24_writeFast_m@multicast 002E  
                             RF24N_enqueue@message_size 0028  
                              RF24_write_register_d@reg 000F  
                                  ??_RF24_stopListening 0011  
                                      _RF24_txStandBy_t 2DF8  
                                   __end_of_RF24N_write 1E36  
                          ??_RF24_enableDynamicPayloads 0011  
               RF24N_logicalToPhysicalAddress@multicast 0021  
                                             _Serial_tx 3BB8  
                                              ??___wmul 0007  
                                          _packets_sent 0088  
                        __size_of_RF24_closeReadingPipe 0040  
                          __size_of_RF24_startListening 0058  
                         __end_of_RF24_closeReadingPipe 36F4  
                                           __pdataBANK0 00C9  
                                      __CFG_LPT1OSC$OFF 000000  
                                        RF24NH_init@_to 0005  
                               ??_RF24N_is_direct_child 000B  
                                              ??_memcpy 0009  
                                        RF24NH_init@rnh 0003  
                                              ??_millis 0007  
                               ??_RF24_beginTransaction 000C  
                        __end_of_RF24N_is_valid_address 388A  
                           __end_of_RF24_endTransaction 3BDC  
                                         ?_SPI_transfer 0001  
                                           __pbssBIGRAM 00D5  
                              ?_RF24_write_register_c_d 000C  
                                           ??_RF24_ce_d 0006  
                                         __pcstackBANK0 00AC  
                                           ??_RF24_init 0004  
                                           ??_RF24_read 0020  
                              RF24_read_payload@current 0018  
                                            pinMode@pin 0004  
                                     _delayMicroseconds 36F4  
                   __size_of_RF24_enableDynamicPayloads 0028  
                                    ?_delayMicroseconds 0001  
                               RF24_openReadingPipe_d@i 001A  
                                            loop@header 00C1  
                           __end_of_RF24N_write_to_pipe 2F48  
                                   RF24N_write_@message 004D  
                                       RF24_powerUp@cfg 0012  
                           RF24_openReadingPipe_d@child 001B  
                                   ??_delayMicroseconds 0003  
                          __end_of_RF24_read_register_d 3ABE  
                                      ___lwdiv@dividend 0003  
                                            ?_Serial_tx 0001  
                                     _RF24_isValid$2468 0004  
                            RF24_read_payload@blank_len 001C  
                                     __CFG_CCP2MX$PORTC 000000  
                                       _RF24_get_status 3BCC  
                             RF24N_levelToAddress@level 000B  
                                             __pintcode 0008  
                                      _RF24_writeFast_m 3674  
                                              ?___lldiv 0003  
                                              ?___lwdiv 0003  
                                              ?___lwmod 0003  
                               RF24N_enqueue@isFragment 0023  
                        __size_of_RF24_write_register_d 0020  
                             RF24_write_payload@current 001B  
                                        ??_SPI_transfer 0003  
                         __end_of_RF24_write_register_d 3AA0  
                                       RF24N__write@len 0044  
                              __end_of_RF24_setDataRate 323C  
                                           __smallconst 1000  
                                           _RF24NH_init 3734  
                             __end_of_delayMicroseconds 3734  
                                              ?_pinMode 0003  
                                   RF24N_write_m@header 0064  
                           RF24_write_payload@blank_len 0021  
                               RF24N_write_@writeDirect 0051  
                               RF24N_pipe_address@F3856 00D0  
                                             _last_sent 0080  
                __end_of_RF24N_logicalToPhysicalAddress 2A90  
               __size_of_RF24N_logicalToPhysicalAddress 00E2  
                        _RF24N_logicalToPhysicalAddress 29AE  
                                           ??_SPI_begin 0003  
                                      ___lwdiv@quotient 0007  
                                        __size_of_delay 004A  
                                    _RF24N_pipe_address 277E  
                                      RF24N_write_@type 005E  
                                        __size_of_setup 004E  
                    RF24N_setup_address@node_mask_check 000C  
                                           _RF24N_write 1B20  
                                      RF24N_write_m@len 0068  
                                          Serial_tx@val 0003  
                                  RF24N_enqueue@padding 0024  
                                       Serial_print@val 0004  
                                __size_of_RF24N_begin_d 00D8  
                                        ___wmul@product 0007  
                                              _LATAbits 000F89  
                                              _LATBbits 000F8A  
                                              _LATCbits 000F8B  
                                              _LATDbits 000F8C  
                                              _LATEbits 000F8D  
                                   ?_RF24N_pipe_address 0003  
                            RF24N_write_@retriesPerFrag 005B  
                               RF24N_pipe_address@count 001E  
                           RF24N_is_valid_address@digit 0007  
                                       _RF24_setChannel 39A4  
                                __size_of_RF24N_enqueue 0574  
                                              _PIR1bits 000F9E  
                                 __size_of_Serial_begin 007A  
                                      __CFG_WDTPS$32768 000000  
                                             _this_node 1019  
                                 __size_of_Serial_print 004A  
                                   _RF24N_setup_address 2B6E  
                       __end_of_RF24_write_register_c_d 38BE  
                                       _RF24_setRetries 3A3C  
                                __size_of_RF24N_write_m 0026  
                                    _RF24_write_payload 2F48  
                                  ??_RF24N_pipe_address 0008  
                                     ___wmul@multiplier 0003  
                           RF24N_is_direct_child@result 0014  
                              RF24N_setup_address@count 0009  
                                RF24_setChannel@channel 0013  
                                   ?_RF24_write_payload 000C  
                                    __end_of_child_pipe 100D  
                                             copy_data0 333A  
                                  ?_RF24N_setup_address 0001  
                         __size_of_RF24N_levelToAddress 004C  
                               __end_of_RF24_get_status 3BD4  
                                          _Serial_begin 30E2  
                              ??_RF24_openReadingPipe_d 0013  
                    __end_of_RF24_enableDynamicPayloads 39A4  
                            _RF24_enableDynamicPayloads 397C  
                                          _Serial_print 355E  
                                              __Hrparam 0000  
                                   _RF24_startFastWrite 37E6  
                                           ??_Serial_tx 0003  
                                              __Lrparam 0000  
                                     ?_RF24_available_p 0010  
                                  ??_RF24_write_payload 0010  
                                        RF24N_begin_d@i 002B  
                          __size_of_RF24N_is_descendant 002E  
                         RF24_openReadingPipe_d@address 0015  
                                    ??_RF24_available_p 0012  
                           RF24_write_payload@writeType 000F  
                                      __size_of___lldiv 0082  
                                      __size_of___lwdiv 0052  
                                      __size_of___lwmod 0042  
                                         _RF24N_begin_d 2C4A  
                                    RF24N_write_@header 004B  
                               RF24_read_payload@status 0017  
                              __end_of_RF24_txStandBy_t 2EB4  
                            __size_of_delayMicroseconds 0040  
                                __size_of_RF24_flush_rx 0008  
                                __size_of_RF24_flush_tx 0008  
                                    RF24N_write_@offset 0060  
                                         _RF24N_enqueue 105A  
                                  ?_RF24_startFastWrite 0022  
                                  _RF24_read_register_d 3AA0  
                           RF24_openWritingPipe_d@value 001B  
                             RF24_read_payload@data_len 000E  
                                      __size_of_pinMode 027E  
                                       ___lwdiv@divisor 0005  
                                       ___lwdiv@counter 0009  
                              ??_RF24_openWritingPipe_d 0013  
                                              __ptext10 3368  
                                              __ptext11 2C4A  
                                              __ptext20 3BB8  
                                              __ptext12 3A3C  
                                              __ptext21 39CA  
                                              __ptext13 39A4  
                                              __ptext30 3BC4  
                                              __ptext22 1E36  
                                              __ptext14 289C  
                                              __ptext31 3ABE  
                                              __ptext23 39F0  
                                              __ptext15 397C  
                                              __ptext40 3922  
                                              __ptext32 2FDA  
                                              __ptext24 35F2  
                                              __ptext16 2B6E  
                                              __ptext41 381E  
                                              __ptext33 105A  
                                              __ptext25 2D22  
                                              __ptext17 262E  
                                              __ptext50 3B74  
                                              __ptext42 2EB4  
                                              __ptext34 3634  
                                              __ptext26 3734  
                                              __ptext18 3B2C  
                                              __ptext51 3B9C  
                                              __ptext43 3674  
                                              __ptext35 3472  
                                              __ptext27 23B0  
                                              __ptext19 355E  
                                              __ptext60 3BE4  
                                              __ptext52 3BD4  
                                              __ptext44 37E6  
                                              __ptext36 3512  
                                              __ptext28 3A5E  
                                              __ptext61 3A16  
                                              __ptext53 3BDC  
                                              __ptext45 2F48  
                                              __ptext37 38F0  
                                              __ptext29 37AE  
                                              __ptext70 3AA0  
                                              __ptext62 15CE  
                                              __ptext54 3B46  
                                              __ptext46 315C  
                                              __ptext38 29AE  
                                              __ptext71 341C  
                                              __ptext63 35A8  
                                              __ptext55 36B4  
                                              __ptext47 277E  
                                              __ptext39 32A2  
                                              __ptext64 1B20  
                                              __ptext56 3854  
                                              __ptext48 388A  
                                              __ptext65 2DF8  
                                              __ptext57 3ADA  
                                              __ptext49 3BCC  
                                              __ptext66 3B8A  
                                              __ptext58 36F4  
                                              __ptext67 3A80  
                                              __ptext59 3AF6  
                                              __ptext68 323C  
                                              __ptext69 33C4  
                                 ??_RF24N_setup_address 0003  
                               RF24_openWritingPipe_d@i 0020  
                                   _RF24_startListening 33C4  
                                __size_of_RF24_spiTrans 0016  
                               __end_of_RF24_setChannel 39CA  
                                         _RF24N_write_m 39CA  
                                       RF24N_write_@len 004F  
                                         __size_of_main 0032  
                               RF24_read_register_d@reg 000C  
                                     _RF24_read_payload 2FDA  
                                            _RF24N_init 3368  
                                         __size_of_loop 0150  
                                  __end_of_SPI_transfer 3BAC  
                                              delay@val 0003  
                                              _interval 1013  
                                    ?_RF24_read_payload 000C  
                               RF24N_is_descendant@node 0003  
                                            _RF24_begin 2A90  
                                RF24N_pipe_address@node 0003  
                                RF24N_pipe_address@pipe 0005  
                                            _RF24_csn_d 3B46  
                               __end_of_RF24_setRetries 3A5E  
                                  ?_RF24_startListening 0001  
                                   ??_RF24_read_payload 000F  
                                        ?_RF24N_begin_d 0022  
                         RF24N_levelToAddress@levelAddr 000C  
                                     Serial_println@val 000A  
                            RF24_startFastWrite@startTx 0026  
                        __size_of_RF24N_is_direct_child 0064  
                         __end_of_RF24N_is_direct_child 3306  
                        __size_of_RF24_beginTransaction 0008  
                         __end_of_RF24_beginTransaction 3BE4  
                                        ?_RF24N_enqueue 0013  
                                 ??_RF24_startFastWrite 0027  
                                            _INTCONbits 000FF2  
                                 ?_RF24_read_register_d 0001  
                              __size_of_RF24N_available 0022  
                                              memcpy@d1 0003  
                                              memcpy@s1 0005  
                                         ?_digitalWrite 0003  
                               RF24_txStandBy_t@timeout 0013  
                              __end_of_RF24_writeFast_m 36B4  
                               RF24_txStandBy_t@startTx 0017  
                                        ?_RF24N_write_m 0064  
                                              intlevel2 0000  
                             __end_of_RF24_read_payload 3060  
                                      ___lwmod@dividend 0003  
                                      ?_RF24_get_status 0001  
                                      ___lldiv@dividend 0003  
                                    __end_of_other_node 1019  
                      __size_of_RF24_write_register_c_d 0034  
                       __size_of_RF24_openReadingPipe_d 0112  
                           __size_of_RF24_stopListening 0066  
                                         _RF24_flush_rx 3BC4  
                                         _RF24_flush_tx 3BE4  
                                        RF24N_write_@ok 0062  
                                 ??_RF24_startListening 0016  
                                     _RF24_setAutoAck_p 341C  
                                         _RF24_spiTrans 3B74  
                                         ?_RF24N__write 0040  
                                    ?_RF24_setAutoAck_p 0011  
                                 _RF24_closeReadingPipe 36B4  
                                         ?_RF24N_write_ 004B  
                                      digitalWrite@mode 0003  
                                          ?_RF24NH_init 0003  
                                     ?_RF24_setDataRate 0001  
                                      ___lldiv@quotient 000B  
                          ?_RF24N_direct_child_route_to 0003  
                                       ___lwmod@divisor 0005  
                                       ___lwmod@counter 0007  
                               __size_of_Serial_println 001A  
                                        ??_digitalWrite 0004  
                                   ??_RF24_setAutoAck_p 0012  
                                    ??_RF24_setDataRate 0011  
                                           _SSPCON1bits 000FC6  
                RF24N_logicalToPhysicalAddress@directTo 0025  
                       __size_of_RF24_openWritingPipe_d 0076  
                          __size_of_RF24_endTransaction 0008  
                                 RF24_txStandBy_t@start 0020  
                                       digitalWrite@pin 0005  
                                      ?_RF24_setChannel 0001  
                                           ?_RF24N_init 0001  
                                        ?_RF24_flush_rx 0001  
                                        ?_RF24_flush_tx 0001  
                              ??_RF24_toggle_features_d 000C  
                                         ?_RF24_isValid 0001  
                        RF24N_setup_address@parent_mask 000A  
                                           ?_RF24_begin 0001  
                                           ?_RF24_csn_d 0001  
                                      ?_RF24_setRetries 0011  
                             __end_of_RF24_setAutoAck_p 3472  
