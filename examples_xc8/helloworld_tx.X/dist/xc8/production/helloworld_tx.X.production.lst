

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Dec  3 00:01:52 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92  0000                     
    93 ;;RF24N_update@val	offset	0
    94 ;;RF24N_update@header	offset	1
    95 ;;RF24N_update@returnVal	offset	3
    96 ;;RF24N_update@pipe_num	offset	4
    97 ;;RF24N_write@header	offset	0
    98 ;;RF24N_write@conversion	offset	2
    99 ;;RF24N_write@reply_time	offset	6
   100 ;;RF24N_write@ok	offset	10
   101 ;;RF24N_write@isAckType	offset	11
   102 ;;RF24N_write@to_node	offset=-2 (param)
   103 ;;RF24N_write@directTo	offset=-3 (param)
   104                           
   105                           	psect	idataCOMRAM
   106  003BEC                     __pidataCOMRAM:
   107                           	opt stack 0
   108                           
   109                           ;initializer for _next_id
   110  003BEC  0001               	dw	1
   111                           
   112                           	psect	idataBANK0
   113  003BAC                     __pidataBANK0:
   114                           	opt stack 0
   115                           
   116                           ;initializer for RF24N_pipe_address@address_translation
   117  003BAC  C3                 	db	195
   118  003BAD  3C                 	db	60
   119  003BAE  33                 	db	51
   120  003BAF  CE                 	db	206
   121  003BB0  3E                 	db	62
   122  003BB1  E3                 	db	227
   123  003BB2  EC                 	db	236
   124                           
   125                           ;initializer for RF24N_pipe_address@F3842
   126  003BB3  CC                 	db	204
   127  003BB4  CC                 	db	204
   128  003BB5  CC                 	db	204
   129  003BB6  CC                 	db	204
   130  003BB7  CC                 	db	204
   131                           
   132                           	psect	smallconst
   133  001000                     __psmallconst:
   134                           	opt stack 0
   135  001000  00                 	db	0
   136  001001                     _child_payload_size:
   137                           	opt stack 0
   138  001001  11                 	db	17
   139  001002  12                 	db	18
   140  001003  13                 	db	19
   141  001004  14                 	db	20
   142  001005  15                 	db	21
   143  001006  16                 	db	22
   144  001007                     __end_of_child_payload_size:
   145                           	opt stack 0
   146  001007                     _child_pipe:
   147                           	opt stack 0
   148  001007  0A                 	db	10
   149  001008  0B                 	db	11
   150  001009  0C                 	db	12
   151  00100A  0D                 	db	13
   152  00100B  0E                 	db	14
   153  00100C  0F                 	db	15
   154  00100D                     __end_of_child_pipe:
   155                           	opt stack 0
   156  00100D                     _child_pipe_enable:
   157                           	opt stack 0
   158  00100D  00                 	db	0
   159  00100E  01                 	db	1
   160  00100F  02                 	db	2
   161  001010  03                 	db	3
   162  001011  04                 	db	4
   163  001012  05                 	db	5
   164  001013                     __end_of_child_pipe_enable:
   165                           	opt stack 0
   166  001013                     _interval:
   167                           	opt stack 0
   168  001013  07D0               	dw	2000
   169  001015  0000               	dw	0
   170  001017                     __end_of_interval:
   171                           	opt stack 0
   172  001017                     _other_node:
   173                           	opt stack 0
   174  001017  0000               	dw	0
   175  001019                     __end_of_other_node:
   176                           	opt stack 0
   177  001019                     _this_node:
   178                           	opt stack 0
   179  001019  0001               	dw	1
   180  00101B                     __end_of_this_node:
   181                           	opt stack 0
   182  0000                     _BAUDCONbits	set	4024
   183  0000                     _INTCONbits	set	4082
   184  0000                     _LATAbits	set	3977
   185  0000                     _LATBbits	set	3978
   186  0000                     _LATCbits	set	3979
   187  0000                     _LATDbits	set	3980
   188  0000                     _LATEbits	set	3981
   189  0000                     _PIR1bits	set	3998
   190  0000                     _PORTAbits	set	3968
   191  0000                     _PORTBbits	set	3969
   192  0000                     _PORTCbits	set	3970
   193  0000                     _PORTDbits	set	3971
   194  0000                     _PORTEbits	set	3972
   195  0000                     _RCREG	set	4014
   196  0000                     _RCSTAbits	set	4011
   197  0000                     _SPBRG	set	4015
   198  0000                     _SPBRGH	set	4016
   199  0000                     _SSPBUF	set	4041
   200  0000                     _SSPCON1bits	set	4038
   201  0000                     _SSPSTATbits	set	4039
   202  0000                     _T0CONbits	set	4053
   203  0000                     _TMR0H	set	4055
   204  0000                     _TMR0L	set	4054
   205  0000                     _TRISAbits	set	3986
   206  0000                     _TRISBbits	set	3987
   207  0000                     _TRISCbits	set	3988
   208  0000                     _TRISDbits	set	3989
   209  0000                     _TRISEbits	set	3990
   210  0000                     _TXREG	set	4013
   211  0000                     _TXSTAbits	set	4012
   212  00101B                     STR_1:
   213  00101B  52                 	db	82	;'R'
   214  00101C  46                 	db	70	;'F'
   215  00101D  32                 	db	50	;'2'
   216  00101E  34                 	db	52	;'4'
   217  00101F  4E                 	db	78	;'N'
   218  001020  65                 	db	101	;'e'
   219  001021  74                 	db	116	;'t'
   220  001022  77                 	db	119	;'w'
   221  001023  6F                 	db	111	;'o'
   222  001024  72                 	db	114	;'r'
   223  001025  6B                 	db	107	;'k'
   224  001026  2F                 	db	47
   225  001027  65                 	db	101	;'e'
   226  001028  78                 	db	120	;'x'
   227  001029  61                 	db	97	;'a'
   228  00102A  6D                 	db	109	;'m'
   229  00102B  70                 	db	112	;'p'
   230  00102C  6C                 	db	108	;'l'
   231  00102D  65                 	db	101	;'e'
   232  00102E  73                 	db	115	;'s'
   233  00102F  2F                 	db	47
   234  001030  68                 	db	104	;'h'
   235  001031  65                 	db	101	;'e'
   236  001032  6C                 	db	108	;'l'
   237  001033  6C                 	db	108	;'l'
   238  001034  6F                 	db	111	;'o'
   239  001035  77                 	db	119	;'w'
   240  001036  6F                 	db	111	;'o'
   241  001037  72                 	db	114	;'r'
   242  001038  6C                 	db	108	;'l'
   243  001039  64                 	db	100	;'d'
   244  00103A  5F                 	db	95	;'_'
   245  00103B  74                 	db	116	;'t'
   246  00103C  78                 	db	120	;'x'
   247  00103D  2F                 	db	47
   248  00103E  00                 	db	0
   249  00103F                     STR_2:
   250  00103F  53                 	db	83	;'S'
   251  001040  65                 	db	101	;'e'
   252  001041  6E                 	db	110	;'n'
   253  001042  64                 	db	100	;'d'
   254  001043  69                 	db	105	;'i'
   255  001044  6E                 	db	110	;'n'
   256  001045  67                 	db	103	;'g'
   257  001046  2E                 	db	46
   258  001047  2E                 	db	46
   259  001048  2E                 	db	46
   260  001049  00                 	db	0
   261  00104A                     STR_4:
   262  00104A  66                 	db	102	;'f'
   263  00104B  61                 	db	97	;'a'
   264  00104C  69                 	db	105	;'i'
   265  00104D  6C                 	db	108	;'l'
   266  00104E  65                 	db	101	;'e'
   267  00104F  64                 	db	100	;'d'
   268  001050  2E                 	db	46
   269  001051  00                 	db	0
   270  001052                     STR_3:
   271  001052  6F                 	db	111	;'o'
   272  001053  6B                 	db	107	;'k'
   273  001054  2E                 	db	46
   274  001055  00                 	db	0
   275  001056                     STR_5:
   276  001056  0D                 	db	13
   277  001057  0A                 	db	10
   278  001058  00                 	db	0
   279                           
   280                           ; #config settings
   281  001059  00                 	db	0	; dummy byte at the end
   282  0000                     
   283                           	psect	cinit
   284  003306                     __pcinit:
   285                           	opt stack 0
   286  003306                     start_initialization:
   287                           	opt stack 0
   288  003306                     __initialization:
   289                           	opt stack 0
   290                           
   291                           ; Clear objects allocated to BIGRAM (370 bytes)
   292  003306  EE00  F0D5         	lfsr	0,__pbssBIGRAM
   293  00330A  EE21 F072          	lfsr	2,370
   294  00330E                     clear_0:
   295  00330E  6AEE               	clrf	postinc0,c
   296  003310  50DD               	movf	postdec2,w,c
   297  003312  50D9               	movf	fsr2l,w,c
   298  003314  E1FC               	bnz	clear_0
   299  003316  50DA               	movf	fsr2h,w,c
   300  003318  E1FA               	bnz	clear_0
   301                           
   302                           ; Clear objects allocated to BANK0 (44 bytes)
   303  00331A  EE00  F080         	lfsr	0,__pbssBANK0
   304  00331E  0E2C               	movlw	44
   305  003320                     clear_1:
   306  003320  6AEE               	clrf	postinc0,c
   307  003322  06E8               	decf	wreg,f,c
   308  003324  E1FD               	bnz	clear_1
   309                           
   310                           ; Initialize objects allocated to BANK0 (12 bytes)
   311                           ; load TBLPTR registers with __pidataBANK0
   312  003326  0EAC               	movlw	low __pidataBANK0
   313  003328  6EF6               	movwf	tblptrl,c
   314  00332A  0E3B               	movlw	high __pidataBANK0
   315  00332C  6EF7               	movwf	tblptrh,c
   316  00332E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   317  003330  6EF8               	movwf	tblptru,c
   318  003332  EE00  F0C9         	lfsr	0,__pdataBANK0
   319  003336  EE20 F00C          	lfsr	2,12
   320  00333A                     copy_data0:
   321  00333A  0009               	tblrd		*+
   322  00333C  CFF5 FFEE          	movff	tablat,postinc0
   323  003340  50DD               	movf	postdec2,w,c
   324  003342  50D9               	movf	fsr2l,w,c
   325  003344  E1FA               	bnz	copy_data0
   326                           
   327                           ; Initialize objects allocated to COMRAM (2 bytes)
   328                           ; load TBLPTR registers with __pidataCOMRAM
   329  003346  0EEC               	movlw	low __pidataCOMRAM
   330  003348  6EF6               	movwf	tblptrl,c
   331  00334A  0E3B               	movlw	high __pidataCOMRAM
   332  00334C  6EF7               	movwf	tblptrh,c
   333  00334E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   334  003350  6EF8               	movwf	tblptru,c
   335  003352  0009               	tblrd		*+	;fetch initializer
   336  003354  CFF5 F076          	movff	tablat,__pdataCOMRAM
   337  003358  0009               	tblrd		*+	;fetch initializer
   338  00335A  CFF5 F077          	movff	tablat,__pdataCOMRAM+1
   339  00335E                     end_of_initialization:
   340                           	opt stack 0
   341  00335E                     __end_of__initialization:
   342                           	opt stack 0
   343  00335E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   344  003360  6EF8               	movwf	tblptru,c
   345  003362  0100               	movlb	0
   346  003364  EF5F  F01C         	goto	_main	;jump to C main() function
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           postinc0	equ	0xFEE
   352                           wreg	equ	0xFE8
   353                           postdec2	equ	0xFDD
   354                           fsr2h	equ	0xFDA
   355                           fsr2l	equ	0xFD9
   356                           
   357                           	psect	dataCOMRAM
   358  000076                     __pdataCOMRAM:
   359                           	opt stack 0
   360  000076                     _next_id:
   361                           	opt stack 0
   362  000076                     	ds	2
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           postdec2	equ	0xFDD
   370                           fsr2h	equ	0xFDA
   371                           fsr2l	equ	0xFD9
   372                           
   373                           	psect	bssBANK0
   374  000080                     __pbssBANK0:
   375                           	opt stack 0
   376  000080                     _last_sent:
   377                           	opt stack 0
   378  000080                     	ds	4
   379  000084                     _mtime:
   380                           	opt stack 0
   381  000084                     	ds	4
   382  000088                     _packets_sent:
   383                           	opt stack 0
   384  000088                     	ds	4
   385  00008C                     _rf:
   386                           	opt stack 0
   387  00008C                     	ds	22
   388  0000A2                     _buff:
   389                           	opt stack 0
   390  0000A2                     	ds	10
   391                           tblptru	equ	0xFF8
   392                           tblptrh	equ	0xFF7
   393                           tblptrl	equ	0xFF6
   394                           tablat	equ	0xFF5
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           postdec2	equ	0xFDD
   398                           fsr2h	equ	0xFDA
   399                           fsr2l	equ	0xFD9
   400                           
   401                           	psect	dataBANK0
   402  0000C9                     __pdataBANK0:
   403                           	opt stack 0
   404  0000C9                     RF24N_pipe_address@address_translation:
   405                           	opt stack 0
   406  0000C9                     	ds	7
   407  0000D0                     RF24N_pipe_address@F3842:
   408                           	opt stack 0
   409  0000D0                     	ds	5
   410                           tblptru	equ	0xFF8
   411                           tblptrh	equ	0xFF7
   412                           tblptrl	equ	0xFF6
   413                           tablat	equ	0xFF5
   414                           postinc0	equ	0xFEE
   415                           wreg	equ	0xFE8
   416                           postdec2	equ	0xFDD
   417                           fsr2h	equ	0xFDA
   418                           fsr2l	equ	0xFD9
   419                           
   420                           	psect	bssBIGRAM
   421  0000D5                     __pbssBIGRAM:
   422                           	opt stack 0
   423  0000D5                     _rn:
   424                           	opt stack 0
   425  0000D5                     	ds	370
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           postinc0	equ	0xFEE
   431                           wreg	equ	0xFE8
   432                           postdec2	equ	0xFDD
   433                           fsr2h	equ	0xFDA
   434                           fsr2l	equ	0xFD9
   435                           
   436                           	psect	cstackBANK0
   437  0000AC                     __pcstackBANK0:
   438                           	opt stack 0
   439  0000AC                     ??_loop:
   440                           
   441                           ; 1 bytes @ 0x0
   442  0000AC                     	ds	8
   443  0000B4                     loop@ok:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x8
   447  0000B4                     	ds	1
   448  0000B5                     loop@now:
   449                           	opt stack 0
   450                           
   451                           ; 4 bytes @ 0x9
   452  0000B5                     	ds	4
   453  0000B9                     loop@payload:
   454                           	opt stack 0
   455                           
   456                           ; 8 bytes @ 0xD
   457  0000B9                     	ds	8
   458  0000C1                     loop@header:
   459                           	opt stack 0
   460                           
   461                           ; 8 bytes @ 0x15
   462  0000C1                     	ds	8
   463                           tblptru	equ	0xFF8
   464                           tblptrh	equ	0xFF7
   465                           tblptrl	equ	0xFF6
   466                           tablat	equ	0xFF5
   467                           postinc0	equ	0xFEE
   468                           wreg	equ	0xFE8
   469                           postdec2	equ	0xFDD
   470                           fsr2h	equ	0xFDA
   471                           fsr2l	equ	0xFD9
   472                           
   473                           	psect	cstackCOMRAM
   474  000001                     __pcstackCOMRAM:
   475                           	opt stack 0
   476  000001                     ??_isr:
   477  000001                     
   478                           ; 1 bytes @ 0x0
   479  000001                     	ds	2
   480  000003                     ??_RF24N_setup_address:
   481  000003                     ??_RF24N_available:
   482  000003                     ??_delayMicroseconds:
   483  000003                     ?_RF24N_levelToAddress:
   484                           	opt stack 0
   485  000003                     ?_RF24N_direct_child_route_to:
   486                           	opt stack 0
   487  000003                     ?___wmul:
   488                           	opt stack 0
   489  000003                     ?___lwdiv:
   490                           	opt stack 0
   491  000003                     ?___lwmod:
   492                           	opt stack 0
   493  000003                     ?_millis:
   494                           	opt stack 0
   495  000003                     ?___lldiv:
   496                           	opt stack 0
   497  000003                     Serial_tx@val:
   498                           	opt stack 0
   499  000003                     pinMode@mode:
   500                           	opt stack 0
   501  000003                     digitalWrite@mode:
   502                           	opt stack 0
   503  000003                     SPI_transfer@data:
   504                           	opt stack 0
   505  000003                     RF24_init@_cspin:
   506                           	opt stack 0
   507  000003                     delay@val:
   508                           	opt stack 0
   509  000003                     RF24NH_init@rnh:
   510                           	opt stack 0
   511  000003                     RF24N_is_descendant@node:
   512                           	opt stack 0
   513  000003                     RF24N_direct_child_route_to@node:
   514                           	opt stack 0
   515  000003                     RF24N_is_valid_address@node:
   516                           	opt stack 0
   517  000003                     RF24N_pipe_address@node:
   518                           	opt stack 0
   519  000003                     ___wmul@multiplier:
   520                           	opt stack 0
   521  000003                     ___lwdiv@dividend:
   522                           	opt stack 0
   523  000003                     ___lwmod@dividend:
   524                           	opt stack 0
   525  000003                     memcpy@d1:
   526                           	opt stack 0
   527  000003                     ___lldiv@dividend:
   528                           	opt stack 0
   529                           
   530                           ; 4 bytes @ 0x2
   531  000003                     	ds	1
   532  000004                     pinMode@pin:
   533                           	opt stack 0
   534  000004                     RF24_init@_cepin:
   535                           	opt stack 0
   536  000004                     _RF24_isValid$2052:
   537                           	opt stack 0
   538  000004                     Serial_print@val:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x3
   542  000004                     	ds	1
   543  000005                     ??_RF24N_levelToAddress:
   544  000005                     ??_RF24N_is_descendant:
   545  000005                     ??_RF24N_direct_child_route_to:
   546  000005                     digitalWrite@pin:
   547                           	opt stack 0
   548  000005                     delayMicroseconds@d:
   549                           	opt stack 0
   550  000005                     RF24N_pipe_address@pipe:
   551                           	opt stack 0
   552  000005                     delay@i:
   553                           	opt stack 0
   554  000005                     RF24NH_init@_to:
   555                           	opt stack 0
   556  000005                     RF24N_setup_address@i:
   557                           	opt stack 0
   558  000005                     ___wmul@multiplicand:
   559                           	opt stack 0
   560  000005                     ___lwdiv@divisor:
   561                           	opt stack 0
   562  000005                     ___lwmod@divisor:
   563                           	opt stack 0
   564  000005                     memcpy@s1:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x4
   568  000005                     	ds	1
   569  000006                     ??_Serial_print:
   570  000006                     delayMicroseconds@i:
   571                           	opt stack 0
   572  000006                     RF24N_pipe_address@address:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x5
   576  000006                     	ds	1
   577  000007                     RF24_ce_d@level:
   578                           	opt stack 0
   579  000007                     RF24NH_init@_type:
   580                           	opt stack 0
   581  000007                     RF24N_is_valid_address@digit:
   582                           	opt stack 0
   583  000007                     ___lwmod@counter:
   584                           	opt stack 0
   585  000007                     delay@j:
   586                           	opt stack 0
   587  000007                     RF24N_setup_address@m:
   588                           	opt stack 0
   589  000007                     ___wmul@product:
   590                           	opt stack 0
   591  000007                     ___lwdiv@quotient:
   592                           	opt stack 0
   593  000007                     memcpy@n:
   594                           	opt stack 0
   595  000007                     ___lldiv@divisor:
   596                           	opt stack 0
   597                           
   598                           ; 4 bytes @ 0x6
   599  000007                     	ds	1
   600  000008                     ??_RF24N_pipe_address:
   601  000008                     RF24N_is_valid_address@result:
   602                           	opt stack 0
   603  000008                     Serial_print@i:
   604                           	opt stack 0
   605  000008                     delayMicroseconds@j:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x7
   609  000008                     	ds	1
   610  000009                     RF24N_setup_address@count:
   611                           	opt stack 0
   612  000009                     ___lwdiv@counter:
   613                           	opt stack 0
   614  000009                     RF24N_is_direct_child@node:
   615                           	opt stack 0
   616  000009                     RF24N_direct_child_route_to@child_mask:
   617                           	opt stack 0
   618  000009                     memcpy@d:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x8
   622  000009                     	ds	1
   623  00000A                     Serial_println@val:
   624                           	opt stack 0
   625  00000A                     RF24N_setup_address@parent_mask:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x9
   629  00000A                     	ds	1
   630  00000B                     ??_RF24N_is_direct_child:
   631  00000B                     RF24_csn_d@mode:
   632                           	opt stack 0
   633  00000B                     RF24N_levelToAddress@level:
   634                           	opt stack 0
   635  00000B                     memcpy@s:
   636                           	opt stack 0
   637  00000B                     ___lldiv@quotient:
   638                           	opt stack 0
   639                           
   640                           ; 4 bytes @ 0xA
   641  00000B                     	ds	1
   642  00000C                     RF24_read_register_d@reg:
   643                           	opt stack 0
   644  00000C                     RF24_write_register_c_d@buf:
   645                           	opt stack 0
   646  00000C                     RF24_write_payload@buf:
   647                           	opt stack 0
   648  00000C                     RF24_read_payload@buf:
   649                           	opt stack 0
   650  00000C                     RF24N_setup_address@node_mask_check:
   651                           	opt stack 0
   652  00000C                     RF24N_levelToAddress@levelAddr:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0xB
   656  00000C                     	ds	1
   657  00000D                     RF24_read_register_d@result:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0xC
   661  00000D                     	ds	1
   662  00000E                     RF24_write_register_c_d@len:
   663                           	opt stack 0
   664  00000E                     RF24_write_register_d@value:
   665                           	opt stack 0
   666  00000E                     RF24_write_payload@data_len:
   667                           	opt stack 0
   668  00000E                     RF24_read_payload@data_len:
   669                           	opt stack 0
   670  00000E                     RF24_spiTrans@cmd:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0xD
   674  00000E                     	ds	1
   675  00000F                     ??_RF24_read_payload:
   676  00000F                     RF24_write_register_c_d@status:
   677                           	opt stack 0
   678  00000F                     RF24_write_register_d@reg:
   679                           	opt stack 0
   680  00000F                     RF24_write_payload@writeType:
   681                           	opt stack 0
   682  00000F                     RF24_spiTrans@status:
   683                           	opt stack 0
   684  00000F                     ___lldiv@counter:
   685                           	opt stack 0
   686                           
   687                           ; 1 bytes @ 0xE
   688  00000F                     	ds	1
   689  000010                     ??_RF24_write_payload:
   690  000010                     RF24_write_register_c_d@reg:
   691                           	opt stack 0
   692  000010                     RF24_write_register_d@status:
   693                           	opt stack 0
   694  000010                     RF24_available_p@pipe_num:
   695                           	opt stack 0
   696  000010                     Serial_begin@baud:
   697                           	opt stack 0
   698                           
   699                           ; 4 bytes @ 0xF
   700  000010                     	ds	1
   701  000011                     ??_RF24_closeReadingPipe:
   702  000011                     ??_RF24_stopListening:
   703  000011                     RF24_getDynamicPayloadSize@result:
   704                           	opt stack 0
   705  000011                     RF24_setAutoAck_p@enable:
   706                           	opt stack 0
   707  000011                     RF24_setDataRate@result:
   708                           	opt stack 0
   709  000011                     RF24_setRetries@count:
   710                           	opt stack 0
   711  000011                     _RF24_setChannel$1923:
   712                           	opt stack 0
   713  000011                     RF24_openWritingPipe_d@value_:
   714                           	opt stack 0
   715  000011                     RF24_openReadingPipe_d@address_:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x10
   719  000011                     	ds	1
   720  000012                     ??_RF24_setRetries:
   721  000012                     ??_RF24_available_p:
   722  000012                     ??_RF24_setAutoAck_p:
   723  000012                     RF24_powerUp@cfg:
   724                           	opt stack 0
   725  000012                     RF24_setDataRate@speed:
   726                           	opt stack 0
   727  000012                     RF24N_is_direct_child@child_node_mask:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x11
   731  000012                     	ds	1
   732  000013                     ??_RF24_openWritingPipe_d:
   733  000013                     ??_RF24_openReadingPipe_d:
   734  000013                     RF24_setChannel@channel:
   735                           	opt stack 0
   736  000013                     RF24_setDataRate@setup:
   737                           	opt stack 0
   738  000013                     RF24N_enqueue@header:
   739                           	opt stack 0
   740  000013                     RF24_txStandBy_t@timeout:
   741                           	opt stack 0
   742                           
   743                           ; 4 bytes @ 0x12
   744  000013                     	ds	1
   745  000014                     ??_Serial_begin:
   746  000014                     RF24_setChannel@max_channel:
   747                           	opt stack 0
   748  000014                     RF24_available_p@status:
   749                           	opt stack 0
   750  000014                     RF24_setAutoAck_p@en_aa:
   751                           	opt stack 0
   752  000014                     RF24_setRetries@delay:
   753                           	opt stack 0
   754  000014                     RF24N_is_direct_child@result:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x13
   758  000014                     	ds	1
   759  000015                     ??_RF24N_enqueue:
   760  000015                     _RF24_begin$1938:
   761                           	opt stack 0
   762  000015                     RF24_closeReadingPipe@pipe:
   763                           	opt stack 0
   764  000015                     RF24_setAutoAck_p@pipe:
   765                           	opt stack 0
   766  000015                     RF24N_logicalToPhysicalAddress@conversionInfo:
   767                           	opt stack 0
   768  000015                     RF24_openReadingPipe_d@address:
   769                           	opt stack 0
   770                           
   771                           ; 5 bytes @ 0x14
   772  000015                     	ds	1
   773  000016                     ??_RF24_startListening:
   774  000016                     RF24_begin@setup:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0x15
   778  000016                     	ds	1
   779  000017                     RF24_read_payload@status:
   780                           	opt stack 0
   781  000017                     RF24_txStandBy_t@startTx:
   782                           	opt stack 0
   783  000017                     RF24N_pipe_address@result:
   784                           	opt stack 0
   785                           
   786                           ; 5 bytes @ 0x16
   787  000017                     	ds	1
   788  000018                     ??_RF24_txStandBy_t:
   789  000018                     RF24_read_payload@current:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0x17
   793  000018                     	ds	2
   794  00001A                     RF24_write_payload@status:
   795                           	opt stack 0
   796  00001A                     RF24_openReadingPipe_d@i:
   797                           	opt stack 0
   798  00001A                     _RF24_read_payload$1908:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x19
   802  00001A                     	ds	1
   803  00001B                     RF24_openReadingPipe_d@child:
   804                           	opt stack 0
   805  00001B                     RF24_write_payload@current:
   806                           	opt stack 0
   807  00001B                     RF24_openWritingPipe_d@value:
   808                           	opt stack 0
   809                           
   810                           ; 5 bytes @ 0x1A
   811  00001B                     	ds	1
   812  00001C                     RF24_read_payload@blank_len:
   813                           	opt stack 0
   814  00001C                     RF24N_pipe_address@dec:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x1B
   818  00001C                     	ds	1
   819  00001D                     _RF24_write_payload$1900:
   820                           	opt stack 0
   821  00001D                     RF24_read@buf:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x1C
   825  00001D                     	ds	1
   826  00001E                     RF24N_pipe_address@count:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0x1D
   830  00001E                     	ds	1
   831  00001F                     RF24_read@len:
   832                           	opt stack 0
   833  00001F                     _RF24_write_payload$1901:
   834                           	opt stack 0
   835  00001F                     RF24N_pipe_address@out:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x1E
   839  00001F                     	ds	1
   840  000020                     RF24_openWritingPipe_d@i:
   841                           	opt stack 0
   842  000020                     RF24_txStandBy_t@start:
   843                           	opt stack 0
   844                           
   845                           ; 4 bytes @ 0x1F
   846  000020                     	ds	1
   847  000021                     RF24_write_payload@blank_len:
   848                           	opt stack 0
   849  000021                     RF24N_pipe_address@i:
   850                           	opt stack 0
   851  000021                     RF24N_logicalToPhysicalAddress@multicast:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x20
   855  000021                     	ds	1
   856  000022                     RF24_startFastWrite@buf:
   857                           	opt stack 0
   858  000022                     RF24N_begin_d@_node_address:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x21
   862  000022                     	ds	1
   863  000023                     RF24N_enqueue@isFragment:
   864                           	opt stack 0
   865  000023                     RF24N_logicalToPhysicalAddress@pre_conversion_send_node:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x22
   869  000023                     	ds	1
   870  000024                     RF24_startFastWrite@len:
   871                           	opt stack 0
   872  000024                     RF24N_enqueue@padding:
   873                           	opt stack 0
   874  000024                     RF24N_begin_d@addr:
   875                           	opt stack 0
   876                           
   877                           ; 5 bytes @ 0x23
   878  000024                     	ds	1
   879  000025                     RF24_startFastWrite@multicast:
   880                           	opt stack 0
   881  000025                     RF24N_enqueue@padding_2297:
   882                           	opt stack 0
   883  000025                     RF24N_logicalToPhysicalAddress@directTo:
   884                           	opt stack 0
   885                           
   886                           ; 2 bytes @ 0x24
   887  000025                     	ds	1
   888  000026                     RF24_startFastWrite@startTx:
   889                           	opt stack 0
   890  000026                     _RF24N_enqueue$2295:
   891                           	opt stack 0
   892                           
   893                           ; 1 bytes @ 0x25
   894  000026                     	ds	1
   895  000027                     RF24N_enqueue@result:
   896                           	opt stack 0
   897  000027                     RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe:
   898                           	opt stack 0
   899                           
   900                           ; 1 bytes @ 0x26
   901  000027                     	ds	1
   902  000028                     RF24N_enqueue@message_size:
   903                           	opt stack 0
   904  000028                     RF24N_logicalToPhysicalAddress@to_node:
   905                           	opt stack 0
   906                           
   907                           ; 2 bytes @ 0x27
   908  000028                     	ds	1
   909  000029                     RF24N_begin_d@retryVar:
   910                           	opt stack 0
   911  000029                     _RF24_startFastWrite$1976:
   912                           	opt stack 0
   913                           
   914                           ; 2 bytes @ 0x28
   915  000029                     	ds	1
   916  00002A                     RF24N_begin_d@_channel:
   917                           	opt stack 0
   918                           
   919                           ; 1 bytes @ 0x29
   920  00002A                     	ds	1
   921  00002B                     RF24N_begin_d@i:
   922                           	opt stack 0
   923  00002B                     RF24_writeFast_m@buf:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0x2A
   927  00002B                     	ds	1
   928  00002C                     
   929                           ; 1 bytes @ 0x2B
   930  00002C                     	ds	1
   931  00002D                     RF24_writeFast_m@len:
   932                           	opt stack 0
   933                           
   934                           ; 1 bytes @ 0x2C
   935  00002D                     	ds	1
   936  00002E                     RF24_writeFast_m@multicast:
   937                           	opt stack 0
   938                           
   939                           ; 1 bytes @ 0x2D
   940  00002E                     	ds	1
   941  00002F                     ??_RF24_writeFast_m:
   942                           
   943                           ; 1 bytes @ 0x2E
   944  00002F                     	ds	1
   945  000030                     RF24N_write_to_pipe@node:
   946                           	opt stack 0
   947                           
   948                           ; 2 bytes @ 0x2F
   949  000030                     	ds	2
   950  000032                     RF24N_write_to_pipe@pipe:
   951                           	opt stack 0
   952                           
   953                           ; 1 bytes @ 0x31
   954  000032                     	ds	1
   955  000033                     RF24N_write_to_pipe@multicast:
   956                           	opt stack 0
   957                           
   958                           ; 1 bytes @ 0x32
   959  000033                     	ds	1
   960  000034                     
   961                           ; 1 bytes @ 0x33
   962  000034                     	ds	6
   963  00003A                     RF24N_write_to_pipe@out_pipe:
   964                           	opt stack 0
   965                           
   966                           ; 5 bytes @ 0x39
   967  00003A                     	ds	5
   968  00003F                     RF24N_write_to_pipe@ok:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x3E
   972  00003F                     	ds	1
   973  000040                     RF24N__write@header:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x3F
   977  000040                     	ds	2
   978  000042                     RF24N__write@message:
   979                           	opt stack 0
   980                           
   981                           ; 2 bytes @ 0x41
   982  000042                     	ds	2
   983  000044                     RF24N__write@len:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x43
   987  000044                     	ds	2
   988  000046                     RF24N__write@writeDirect:
   989                           	opt stack 0
   990                           
   991                           ; 2 bytes @ 0x45
   992  000046                     	ds	2
   993  000048                     ??_RF24N__write:
   994                           
   995                           ; 1 bytes @ 0x47
   996  000048                     	ds	2
   997  00004A                     RF24N__write@sendType:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x49
  1001  00004A                     	ds	1
  1002  00004B                     RF24N_write_@header:
  1003                           	opt stack 0
  1004                           
  1005                           ; 2 bytes @ 0x4A
  1006  00004B                     	ds	2
  1007  00004D                     RF24N_write_@message:
  1008                           	opt stack 0
  1009                           
  1010                           ; 2 bytes @ 0x4C
  1011  00004D                     	ds	2
  1012  00004F                     RF24N_write_@len:
  1013                           	opt stack 0
  1014                           
  1015                           ; 2 bytes @ 0x4E
  1016  00004F                     	ds	2
  1017  000051                     RF24N_write_@writeDirect:
  1018                           	opt stack 0
  1019                           
  1020                           ; 2 bytes @ 0x50
  1021  000051                     	ds	2
  1022  000053                     ??_RF24N_write_:
  1023                           
  1024                           ; 1 bytes @ 0x52
  1025  000053                     	ds	8
  1026  00005B                     RF24N_write_@retriesPerFrag:
  1027                           	opt stack 0
  1028                           
  1029                           ; 1 bytes @ 0x5A
  1030  00005B                     	ds	1
  1031  00005C                     RF24N_write_@fragmentLen:
  1032                           	opt stack 0
  1033                           
  1034                           ; 2 bytes @ 0x5B
  1035  00005C                     	ds	2
  1036  00005E                     RF24N_write_@type:
  1037                           	opt stack 0
  1038                           
  1039                           ; 1 bytes @ 0x5D
  1040  00005E                     	ds	1
  1041  00005F                     RF24N_write_@msgCount:
  1042                           	opt stack 0
  1043                           
  1044                           ; 1 bytes @ 0x5E
  1045  00005F                     	ds	1
  1046  000060                     RF24N_write_@offset:
  1047                           	opt stack 0
  1048                           
  1049                           ; 2 bytes @ 0x5F
  1050  000060                     	ds	2
  1051  000062                     RF24N_write_@ok:
  1052                           	opt stack 0
  1053                           
  1054                           ; 1 bytes @ 0x61
  1055  000062                     	ds	1
  1056  000063                     RF24N_write_@fragment_id:
  1057                           	opt stack 0
  1058                           
  1059                           ; 1 bytes @ 0x62
  1060  000063                     	ds	1
  1061  000064                     RF24N_write_m@header:
  1062                           	opt stack 0
  1063                           
  1064                           ; 2 bytes @ 0x63
  1065  000064                     	ds	2
  1066  000066                     RF24N_write_m@message:
  1067                           	opt stack 0
  1068                           
  1069                           ; 2 bytes @ 0x65
  1070  000066                     	ds	2
  1071  000068                     RF24N_write_m@len:
  1072                           	opt stack 0
  1073                           
  1074                           ; 2 bytes @ 0x67
  1075  000068                     	ds	2
  1076  00006A                     tblptru	equ	0xFF8
  1077                           tblptrh	equ	0xFF7
  1078                           tblptrl	equ	0xFF6
  1079                           tablat	equ	0xFF5
  1080                           postinc0	equ	0xFEE
  1081                           wreg	equ	0xFE8
  1082                           postdec2	equ	0xFDD
  1083                           fsr2h	equ	0xFDA
  1084                           fsr2l	equ	0xFD9
  1085                           
  1086                           ; 1 bytes @ 0x69
  1087 ;;
  1088 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1089 ;;
  1090 ;; *************** function _main *****************
  1091 ;; Defined at:
  1092 ;;		line 30 in file "pic_main.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;Total ram usage:        0 bytes
  1111 ;; Hardware stack levels required when called:   14
  1112 ;; This function calls:
  1113 ;;		_loop
  1114 ;;		_setup
  1115 ;; This function is called by:
  1116 ;;		Startup code after reset
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text0
  1121  0038BE                     __ptext0:
  1122                           	opt stack 0
  1123  0038BE                     _main:
  1124                           	opt stack 17
  1125                           
  1126                           ;pic_main.c: 32: mtime=0;
  1127                           
  1128                           ;incstack = 0
  1129  0038BE  0E00               	movlw	0
  1130  0038C0  0100               	movlb	0	; () banked
  1131  0038C2  6F84               	movwf	_mtime& (0+255),b
  1132  0038C4  0E00               	movlw	0
  1133  0038C6  6F85               	movwf	(_mtime+1)& (0+255),b
  1134  0038C8  0E00               	movlw	0
  1135  0038CA  6F86               	movwf	(_mtime+2)& (0+255),b
  1136  0038CC  0E00               	movlw	0
  1137  0038CE  6F87               	movwf	(_mtime+3)& (0+255),b
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;pic_main.c: 34: T0CONbits.T08BIT=0;
  1141  0038D0  9CD5               	bcf	4053,6,c	;volatile
  1142                           
  1143                           ; BSR set to: 0
  1144                           ;pic_main.c: 35: T0CONbits.T0CS=0;
  1145  0038D2  9AD5               	bcf	4053,5,c	;volatile
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;pic_main.c: 36: T0CONbits.PSA=1;
  1149  0038D4  86D5               	bsf	4053,3,c	;volatile
  1150                           
  1151                           ;pic_main.c: 40: TMR0H=(65536l-(32000000/4000l)&0xFF00)>>8;
  1152  0038D6  0EE0               	movlw	224
  1153  0038D8  6ED7               	movwf	4055,c	;volatile
  1154                           
  1155                           ;pic_main.c: 41: TMR0L=(65536l-(32000000/4000l)&0x00FF);
  1156  0038DA  0EC0               	movlw	192
  1157  0038DC  6ED6               	movwf	4054,c	;volatile
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;pic_main.c: 42: INTCONbits.TMR0IF=0;
  1161  0038DE  94F2               	bcf	intcon,2,c	;volatile
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;pic_main.c: 43: INTCONbits.GIE = 1;
  1165  0038E0  8EF2               	bsf	intcon,7,c	;volatile
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;pic_main.c: 44: INTCONbits.TMR0IE = 1;
  1169  0038E2  8AF2               	bsf	intcon,5,c	;volatile
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;pic_main.c: 45: T0CONbits.TMR0ON=1;
  1173  0038E4  8ED5               	bsf	4053,7,c	;volatile
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;pic_main.c: 47: setup();
  1177  0038E6  EC62  F01A         	call	_setup	;wreg free
  1178  0038EA                     l5182:
  1179                           
  1180                           ;pic_main.c: 51: {
  1181                           ;pic_main.c: 52: loop();
  1182  0038EA  EC17  F013         	call	_loop	;wreg free
  1183  0038EE  D7FD               	goto	l5182
  1184  0038F0                     __end_of_main:
  1185                           	opt stack 0
  1186                           tblptru	equ	0xFF8
  1187                           tblptrh	equ	0xFF7
  1188                           tblptrl	equ	0xFF6
  1189                           tablat	equ	0xFF5
  1190                           intcon	equ	0xFF2
  1191                           postinc0	equ	0xFEE
  1192                           wreg	equ	0xFE8
  1193                           postdec2	equ	0xFDD
  1194                           fsr2h	equ	0xFDA
  1195                           fsr2l	equ	0xFD9
  1196                           
  1197 ;; *************** function _setup *****************
  1198 ;; Defined at:
  1199 ;;		line 40 in file "helloworld_tx.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1217 ;;Total ram usage:        0 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    8
  1220 ;; This function calls:
  1221 ;;		_RF24N_begin_d
  1222 ;;		_RF24N_init
  1223 ;;		_RF24_begin
  1224 ;;		_RF24_init
  1225 ;;		_Serial_begin
  1226 ;;		_Serial_println
  1227 ;; This function is called by:
  1228 ;;		_main
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text1
  1233  0034C4                     __ptext1:
  1234                           	opt stack 0
  1235  0034C4                     _setup:
  1236                           	opt stack 22
  1237                           
  1238                           ;helloworld_tx.c: 42: RF24_init(36,35);
  1239                           
  1240                           ;incstack = 0
  1241  0034C4  0E23               	movlw	35
  1242  0034C6  6E03               	movwf	RF24_init@_cspin,c
  1243  0034C8  0E24               	movlw	36
  1244  0034CA  ECB9  F01B         	call	_RF24_init
  1245                           
  1246                           ;helloworld_tx.c: 43: RF24N_init();
  1247  0034CE  ECB4  F019         	call	_RF24N_init	;wreg free
  1248                           
  1249                           ;helloworld_tx.c: 45: Serial_begin(57600);
  1250  0034D2  0E00               	movlw	0
  1251  0034D4  6E10               	movwf	Serial_begin@baud,c
  1252  0034D6  0EE1               	movlw	225
  1253  0034D8  6E11               	movwf	Serial_begin@baud+1,c
  1254  0034DA  0E00               	movlw	0
  1255  0034DC  6E12               	movwf	Serial_begin@baud+2,c
  1256  0034DE  0E00               	movlw	0
  1257  0034E0  6E13               	movwf	Serial_begin@baud+3,c
  1258  0034E2  EC71  F018         	call	_Serial_begin	;wreg free
  1259                           
  1260                           ;helloworld_tx.c: 46: Serial_println("RF24Network/examples/helloworld_tx/");
  1261  0034E6  0E1B               	movlw	low STR_1
  1262  0034E8  6E0A               	movwf	Serial_println@val,c
  1263  0034EA  0E10               	movlw	high STR_1
  1264  0034EC  6E0B               	movwf	Serial_println@val+1,c
  1265  0034EE  EC96  F01D         	call	_Serial_println	;wreg free
  1266                           
  1267                           ;helloworld_tx.c: 48: RF24_begin();
  1268  0034F2  EC48  F015         	call	_RF24_begin	;wreg free
  1269                           
  1270                           ;helloworld_tx.c: 49: RF24N_begin_d( 90, this_node);
  1271  0034F6  0E19               	movlw	low _this_node
  1272  0034F8  6EF6               	movwf	tblptrl,c
  1273  0034FA                     	if	1	;There is more than 1 active tblptr byte
  1274  0034FA  0E10               	movlw	high _this_node
  1275  0034FC  6EF7               	movwf	tblptrh,c
  1276  0034FE                     	endif
  1277  0034FE                     	if	0	;There are less than 3 active tblptr bytes
  1278  0034FE                     	endif
  1279  0034FE  0009               	tblrd		*+
  1280  003500  CFF5 F022          	movff	tablat,RF24N_begin_d@_node_address
  1281  003504  000A               	tblrd		*-
  1282  003506  CFF5 F023          	movff	tablat,RF24N_begin_d@_node_address+1
  1283  00350A  0E5A               	movlw	90
  1284  00350C  EC25  F016         	call	_RF24N_begin_d
  1285  003510  0012               	return		;funcret
  1286  003512                     __end_of_setup:
  1287                           	opt stack 0
  1288                           tblptru	equ	0xFF8
  1289                           tblptrh	equ	0xFF7
  1290                           tblptrl	equ	0xFF6
  1291                           tablat	equ	0xFF5
  1292                           intcon	equ	0xFF2
  1293                           postinc0	equ	0xFEE
  1294                           wreg	equ	0xFE8
  1295                           postdec2	equ	0xFDD
  1296                           fsr2h	equ	0xFDA
  1297                           fsr2l	equ	0xFD9
  1298                           
  1299 ;; *************** function _Serial_begin *****************
  1300 ;; Defined at:
  1301 ;;		line 31 in file "serial.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  baud            4   15[COMRAM] unsigned long 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;		None
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;Total ram usage:        8 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    2
  1322 ;; This function calls:
  1323 ;;		___lldiv
  1324 ;; This function is called by:
  1325 ;;		_setup
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text2
  1330  0030E2                     __ptext2:
  1331                           	opt stack 0
  1332  0030E2                     _Serial_begin:
  1333                           	opt stack 27
  1334                           
  1335                           ;serial.c: 33: TRISCbits.TRISC6=1;
  1336                           
  1337                           ;incstack = 0
  1338  0030E2  8C94               	bsf	3988,6,c	;volatile
  1339                           
  1340                           ;serial.c: 34: TRISCbits.TRISC7=1;
  1341  0030E4  8E94               	bsf	3988,7,c	;volatile
  1342                           
  1343                           ;serial.c: 36: baud=((32000000/(4*baud))-1);
  1344  0030E6  0E00               	movlw	0
  1345  0030E8  6E03               	movwf	___lldiv@dividend,c
  1346  0030EA  0E48               	movlw	72
  1347  0030EC  6E04               	movwf	___lldiv@dividend+1,c
  1348  0030EE  0EE8               	movlw	232
  1349  0030F0  6E05               	movwf	___lldiv@dividend+2,c
  1350  0030F2  0E01               	movlw	1
  1351  0030F4  6E06               	movwf	___lldiv@dividend+3,c
  1352  0030F6  C010  F014         	movff	Serial_begin@baud,??_Serial_begin
  1353  0030FA  C011  F015         	movff	Serial_begin@baud+1,??_Serial_begin+1
  1354  0030FE  C012  F016         	movff	Serial_begin@baud+2,??_Serial_begin+2
  1355  003102  C013  F017         	movff	Serial_begin@baud+3,??_Serial_begin+3
  1356  003106  0E02               	movlw	2
  1357  003108                     u5605:
  1358  003108  90D8               	bcf	status,0,c
  1359  00310A  3614               	rlcf	??_Serial_begin,f,c
  1360  00310C  3615               	rlcf	??_Serial_begin+1,f,c
  1361  00310E  3616               	rlcf	??_Serial_begin+2,f,c
  1362  003110  3617               	rlcf	??_Serial_begin+3,f,c
  1363  003112  2EE8               	decfsz	wreg,f,c
  1364  003114  D7F9               	goto	u5605
  1365  003116  C014  F007         	movff	??_Serial_begin,___lldiv@divisor
  1366  00311A  C015  F008         	movff	??_Serial_begin+1,___lldiv@divisor+1
  1367  00311E  C016  F009         	movff	??_Serial_begin+2,___lldiv@divisor+2
  1368  003122  C017  F00A         	movff	??_Serial_begin+3,___lldiv@divisor+3
  1369  003126  EC30  F018         	call	___lldiv	;wreg free
  1370  00312A  0EFF               	movlw	255
  1371  00312C  2403               	addwf	?___lldiv,w,c
  1372  00312E  6E10               	movwf	Serial_begin@baud,c
  1373  003130  0EFF               	movlw	255
  1374  003132  2004               	addwfc	?___lldiv+1,w,c
  1375  003134  6E11               	movwf	Serial_begin@baud+1,c
  1376  003136  0EFF               	movlw	255
  1377  003138  2005               	addwfc	?___lldiv+2,w,c
  1378  00313A  6E12               	movwf	Serial_begin@baud+2,c
  1379  00313C  0EFF               	movlw	255
  1380  00313E  2006               	addwfc	?___lldiv+3,w,c
  1381  003140  6E13               	movwf	Serial_begin@baud+3,c
  1382                           
  1383                           ;serial.c: 42: SPBRG= (0x00FF & baud);
  1384  003142  C010  FFAF         	movff	Serial_begin@baud,4015	;volatile
  1385                           
  1386                           ;serial.c: 43: SPBRGH=(0xFF00 & baud)>>8;
  1387  003146  C011  FFB0         	movff	Serial_begin@baud+1,4016	;volatile
  1388                           
  1389                           ;serial.c: 46: TXSTAbits.TX9=0;
  1390  00314A  9CAC               	bcf	4012,6,c	;volatile
  1391                           
  1392                           ;serial.c: 47: TXSTAbits.SYNC=0;
  1393  00314C  98AC               	bcf	4012,4,c	;volatile
  1394                           
  1395                           ;serial.c: 48: TXSTAbits.BRGH=1;
  1396  00314E  84AC               	bsf	4012,2,c	;volatile
  1397                           
  1398                           ;serial.c: 49: BAUDCONbits.BRG16=1;
  1399  003150  86B8               	bsf	4024,3,c	;volatile
  1400                           
  1401                           ;serial.c: 50: RCSTAbits.RX9=0;
  1402  003152  9CAB               	bcf	4011,6,c	;volatile
  1403                           
  1404                           ;serial.c: 51: RCSTAbits.CREN=1;
  1405  003154  88AB               	bsf	4011,4,c	;volatile
  1406                           
  1407                           ;serial.c: 52: TXSTAbits.TXEN=1;
  1408  003156  8AAC               	bsf	4012,5,c	;volatile
  1409                           
  1410                           ;serial.c: 53: RCSTAbits.SPEN=1;
  1411  003158  8EAB               	bsf	4011,7,c	;volatile
  1412  00315A  0012               	return		;funcret
  1413  00315C                     __end_of_Serial_begin:
  1414                           	opt stack 0
  1415                           tblptru	equ	0xFF8
  1416                           tblptrh	equ	0xFF7
  1417                           tblptrl	equ	0xFF6
  1418                           tablat	equ	0xFF5
  1419                           intcon	equ	0xFF2
  1420                           postinc0	equ	0xFEE
  1421                           wreg	equ	0xFE8
  1422                           postdec2	equ	0xFDD
  1423                           fsr2h	equ	0xFDA
  1424                           fsr2l	equ	0xFD9
  1425                           status	equ	0xFD8
  1426                           
  1427 ;; *************** function ___lldiv *****************
  1428 ;; Defined at:
  1429 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lldiv.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  dividend        4    2[COMRAM] unsigned long 
  1432 ;;  divisor         4    6[COMRAM] unsigned long 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  quotient        4   10[COMRAM] unsigned long 
  1435 ;;  counter         1   14[COMRAM] unsigned char 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  4    2[COMRAM] unsigned long 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1445 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;Total ram usage:       13 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:    1
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_Serial_begin
  1456 ;;		_ultoa
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text3
  1461  003060                     __ptext3:
  1462                           	opt stack 0
  1463  003060                     ___lldiv:
  1464                           	opt stack 27
  1465                           
  1466                           ;incstack = 0
  1467  003060  0E00               	movlw	0
  1468  003062  6E0B               	movwf	___lldiv@quotient,c
  1469  003064  0E00               	movlw	0
  1470  003066  6E0C               	movwf	___lldiv@quotient+1,c
  1471  003068  0E00               	movlw	0
  1472  00306A  6E0D               	movwf	___lldiv@quotient+2,c
  1473  00306C  0E00               	movlw	0
  1474  00306E  6E0E               	movwf	___lldiv@quotient+3,c
  1475  003070  5007               	movf	___lldiv@divisor,w,c
  1476  003072  1008               	iorwf	___lldiv@divisor+1,w,c
  1477  003074  1009               	iorwf	___lldiv@divisor+2,w,c
  1478  003076  100A               	iorwf	___lldiv@divisor+3,w,c
  1479  003078  B4D8               	btfsc	status,2,c
  1480  00307A  D02A               	goto	l1344
  1481  00307C  0E01               	movlw	1
  1482  00307E  6E0F               	movwf	___lldiv@counter,c
  1483  003080  D006               	goto	l4558
  1484  003082                     l4556:
  1485  003082  90D8               	bcf	status,0,c
  1486  003084  3607               	rlcf	___lldiv@divisor,f,c
  1487  003086  3608               	rlcf	___lldiv@divisor+1,f,c
  1488  003088  3609               	rlcf	___lldiv@divisor+2,f,c
  1489  00308A  360A               	rlcf	___lldiv@divisor+3,f,c
  1490  00308C  2A0F               	incf	___lldiv@counter,f,c
  1491  00308E                     l4558:
  1492  00308E  AE0A               	btfss	___lldiv@divisor+3,7,c
  1493  003090  D7F8               	goto	l4556
  1494  003092                     l4560:
  1495  003092  90D8               	bcf	status,0,c
  1496  003094  360B               	rlcf	___lldiv@quotient,f,c
  1497  003096  360C               	rlcf	___lldiv@quotient+1,f,c
  1498  003098  360D               	rlcf	___lldiv@quotient+2,f,c
  1499  00309A  360E               	rlcf	___lldiv@quotient+3,f,c
  1500  00309C  5007               	movf	___lldiv@divisor,w,c
  1501  00309E  5C03               	subwf	___lldiv@dividend,w,c
  1502  0030A0  5008               	movf	___lldiv@divisor+1,w,c
  1503  0030A2  5804               	subwfb	___lldiv@dividend+1,w,c
  1504  0030A4  5009               	movf	___lldiv@divisor+2,w,c
  1505  0030A6  5805               	subwfb	___lldiv@dividend+2,w,c
  1506  0030A8  500A               	movf	___lldiv@divisor+3,w,c
  1507  0030AA  5806               	subwfb	___lldiv@dividend+3,w,c
  1508  0030AC  A0D8               	btfss	status,0,c
  1509  0030AE  D009               	goto	l4568
  1510  0030B0  5007               	movf	___lldiv@divisor,w,c
  1511  0030B2  5E03               	subwf	___lldiv@dividend,f,c
  1512  0030B4  5008               	movf	___lldiv@divisor+1,w,c
  1513  0030B6  5A04               	subwfb	___lldiv@dividend+1,f,c
  1514  0030B8  5009               	movf	___lldiv@divisor+2,w,c
  1515  0030BA  5A05               	subwfb	___lldiv@dividend+2,f,c
  1516  0030BC  500A               	movf	___lldiv@divisor+3,w,c
  1517  0030BE  5A06               	subwfb	___lldiv@dividend+3,f,c
  1518  0030C0  800B               	bsf	___lldiv@quotient,0,c
  1519  0030C2                     l4568:
  1520  0030C2  90D8               	bcf	status,0,c
  1521  0030C4  320A               	rrcf	___lldiv@divisor+3,f,c
  1522  0030C6  3209               	rrcf	___lldiv@divisor+2,f,c
  1523  0030C8  3208               	rrcf	___lldiv@divisor+1,f,c
  1524  0030CA  3207               	rrcf	___lldiv@divisor,f,c
  1525  0030CC  2E0F               	decfsz	___lldiv@counter,f,c
  1526  0030CE  D7E1               	goto	l4560
  1527  0030D0                     l1344:
  1528  0030D0  C00B  F003         	movff	___lldiv@quotient,?___lldiv
  1529  0030D4  C00C  F004         	movff	___lldiv@quotient+1,?___lldiv+1
  1530  0030D8  C00D  F005         	movff	___lldiv@quotient+2,?___lldiv+2
  1531  0030DC  C00E  F006         	movff	___lldiv@quotient+3,?___lldiv+3
  1532  0030E0  0012               	return		;funcret
  1533  0030E2                     __end_of___lldiv:
  1534                           	opt stack 0
  1535                           tblptru	equ	0xFF8
  1536                           tblptrh	equ	0xFF7
  1537                           tblptrl	equ	0xFF6
  1538                           tablat	equ	0xFF5
  1539                           intcon	equ	0xFF2
  1540                           postinc0	equ	0xFEE
  1541                           wreg	equ	0xFE8
  1542                           postdec2	equ	0xFDD
  1543                           fsr2h	equ	0xFDA
  1544                           fsr2l	equ	0xFD9
  1545                           status	equ	0xFD8
  1546                           
  1547 ;; *************** function _RF24_init *****************
  1548 ;; Defined at:
  1549 ;;		line 433 in file "../../../RF24_c/RF24_cg.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  _cepin          1    wreg     unsigned char 
  1552 ;;  _cspin          1    2[COMRAM] unsigned char 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  _cepin          1    3[COMRAM] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1564 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;Total ram usage:        2 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    1
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_setup
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text4
  1579  003772                     __ptext4:
  1580                           	opt stack 0
  1581  003772                     _RF24_init:
  1582                           	opt stack 28
  1583                           
  1584                           ;incstack = 0
  1585                           ;RF24_init@_cepin stored from wreg
  1586  003772  6E04               	movwf	RF24_init@_cepin,c
  1587                           
  1588                           ;RF24_cg.c: 435: rf.ce_pin=_cepin;
  1589  003774  C004  F08C         	movff	RF24_init@_cepin,_rf
  1590                           
  1591                           ;RF24_cg.c: 436: rf.csn_pin=_cspin;
  1592  003778  C003  F08D         	movff	RF24_init@_cspin,_rf+1
  1593                           
  1594                           ;RF24_cg.c: 437: rf.p_variant=0;
  1595  00377C  0E00               	movlw	0
  1596  00377E  0100               	movlb	0	; () banked
  1597  003780  6F90               	movwf	(_rf+4)& (0+255),b
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;RF24_cg.c: 438: rf.payload_size=32;
  1601  003782  0E20               	movlw	32
  1602  003784  0100               	movlb	0	; () banked
  1603  003786  6F91               	movwf	(_rf+5)& (0+255),b
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;RF24_cg.c: 439: rf.dynamic_payloads_enabled=0;
  1607  003788  0E00               	movlw	0
  1608  00378A  0100               	movlb	0	; () banked
  1609  00378C  6F92               	movwf	(_rf+6)& (0+255),b
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;RF24_cg.c: 440: rf.addr_width=5;
  1613  00378E  0E05               	movlw	5
  1614  003790  0100               	movlb	0	; () banked
  1615  003792  6F98               	movwf	(_rf+12)& (0+255),b
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;RF24_cg.c: 441: rf.csDelay=5;
  1619  003794  0E05               	movlw	5
  1620  003796  0100               	movlb	0	; () banked
  1621  003798  6F9D               	movwf	(_rf+17)& (0+255),b
  1622  00379A  0E00               	movlw	0
  1623  00379C  6F9E               	movwf	(_rf+18)& (0+255),b
  1624  00379E  0E00               	movlw	0
  1625  0037A0  6F9F               	movwf	(_rf+19)& (0+255),b
  1626  0037A2  0E00               	movlw	0
  1627  0037A4  6FA0               	movwf	(_rf+20)& (0+255),b
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;RF24_cg.c: 442: rf.pipe0_reading_address[0]=0;
  1631  0037A6  0E00               	movlw	0
  1632  0037A8  0100               	movlb	0	; () banked
  1633  0037AA  6F93               	movwf	(_rf+7)& (0+255),b
  1634                           
  1635                           ; BSR set to: 0
  1636  0037AC  0012               	return		;funcret
  1637  0037AE                     __end_of_RF24_init:
  1638                           	opt stack 0
  1639                           tblptru	equ	0xFF8
  1640                           tblptrh	equ	0xFF7
  1641                           tblptrl	equ	0xFF6
  1642                           tablat	equ	0xFF5
  1643                           intcon	equ	0xFF2
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           postdec2	equ	0xFDD
  1647                           fsr2h	equ	0xFDA
  1648                           fsr2l	equ	0xFD9
  1649                           status	equ	0xFD8
  1650                           
  1651 ;; *************** function _RF24_begin *****************
  1652 ;; Defined at:
  1653 ;;		line 598 in file "../../../RF24_c/RF24_cg.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  setup           1   21[COMRAM] unsigned char 
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      unsigned char 
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;Total ram usage:        2 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    6
  1674 ;; This function calls:
  1675 ;;		_RF24_ce_d
  1676 ;;		_RF24_csn_d
  1677 ;;		_RF24_flush_rx
  1678 ;;		_RF24_flush_tx
  1679 ;;		_RF24_powerUp
  1680 ;;		_RF24_read_register_d
  1681 ;;		_RF24_setChannel
  1682 ;;		_RF24_setDataRate
  1683 ;;		_RF24_setRetries
  1684 ;;		_RF24_toggle_features_d
  1685 ;;		_RF24_write_register_d
  1686 ;;		_SPI_begin
  1687 ;;		_delay
  1688 ;;		_pinMode
  1689 ;; This function is called by:
  1690 ;;		_setup
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text5
  1695  002A90                     __ptext5:
  1696                           	opt stack 0
  1697  002A90                     _RF24_begin:
  1698                           	opt stack 23
  1699                           
  1700                           ;RF24_cg.c: 601: uint8_t setup=0;
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;incstack = 0
  1704  002A90  0E00               	movlw	0
  1705  002A92  6E16               	movwf	RF24_begin@setup,c
  1706                           
  1707                           ;RF24_cg.c: 640: if (rf.ce_pin != rf.csn_pin) pinMode(rf.ce_pin,0);
  1708  002A94  0100               	movlb	0	; () banked
  1709  002A96  518C               	movf	_rf& (0+255),w,b
  1710  002A98  0100               	movlb	0	; () banked
  1711  002A9A  198D               	xorwf	(_rf+1)& (0+255),w,b
  1712  002A9C  B4D8               	btfsc	status,2,c
  1713  002A9E  D006               	goto	l4622
  1714                           
  1715                           ; BSR set to: 0
  1716  002AA0  0E00               	movlw	0
  1717  002AA2  6E03               	movwf	pinMode@mode,c
  1718  002AA4  0100               	movlb	0	; () banked
  1719  002AA6  518C               	movf	_rf& (0+255),w,b
  1720  002AA8  EC99  F010         	call	_pinMode
  1721  002AAC                     l4622:
  1722                           
  1723                           ;RF24_cg.c: 643: if (rf.ce_pin != rf.csn_pin)
  1724  002AAC  0100               	movlb	0	; () banked
  1725  002AAE  518C               	movf	_rf& (0+255),w,b
  1726  002AB0  0100               	movlb	0	; () banked
  1727  002AB2  198D               	xorwf	(_rf+1)& (0+255),w,b
  1728  002AB4  B4D8               	btfsc	status,2,c
  1729  002AB6  D006               	goto	l4626
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;RF24_cg.c: 645: pinMode(rf.csn_pin,0);
  1733  002AB8  0E00               	movlw	0
  1734  002ABA  6E03               	movwf	pinMode@mode,c
  1735  002ABC  0100               	movlb	0	; () banked
  1736  002ABE  518D               	movf	(_rf+1)& (0+255),w,b
  1737  002AC0  EC99  F010         	call	_pinMode
  1738  002AC4                     l4626:
  1739                           
  1740                           ;RF24_cg.c: 647: SPI_begin();
  1741  002AC4  EC89  F01D         	call	_SPI_begin	;wreg free
  1742                           
  1743                           ;RF24_cg.c: 648: RF24_ce_d(0);
  1744  002AC8  0E00               	movlw	0
  1745  002ACA  EC6D  F01D         	call	_RF24_ce_d
  1746                           
  1747                           ;RF24_cg.c: 649: RF24_csn_d(1);
  1748  002ACE  0E01               	movlw	1
  1749  002AD0  ECA3  F01D         	call	_RF24_csn_d
  1750                           
  1751                           ;RF24_cg.c: 661: delay( 5 ) ;
  1752  002AD4  0E00               	movlw	0
  1753  002AD6  6E04               	movwf	delay@val+1,c
  1754  002AD8  0E05               	movlw	5
  1755  002ADA  6E03               	movwf	delay@val,c
  1756  002ADC  ECD4  F01A         	call	_delay	;wreg free
  1757                           
  1758                           ;RF24_cg.c: 664: RF24_write_register_d( 0x00, 0b00001100 ) ;
  1759  002AE0  0E0C               	movlw	12
  1760  002AE2  6E0E               	movwf	RF24_write_register_d@value,c
  1761  002AE4  0E00               	movlw	0
  1762  002AE6  EC40  F01D         	call	_RF24_write_register_d
  1763                           
  1764                           ;RF24_cg.c: 669: RF24_setRetries(5,15);
  1765  002AEA  0E0F               	movlw	15
  1766  002AEC  6E11               	movwf	RF24_setRetries@count,c
  1767  002AEE  0E05               	movlw	5
  1768  002AF0  EC1E  F01D         	call	_RF24_setRetries
  1769                           
  1770                           ;RF24_cg.c: 676: if( RF24_setDataRate( RF24_250KBPS ) )
  1771  002AF4  0E02               	movlw	2
  1772  002AF6  ECE9  F018         	call	_RF24_setDataRate
  1773  002AFA  0900               	iorlw	0
  1774  002AFC  B4D8               	btfsc	status,2,c
  1775  002AFE  D003               	goto	l4642
  1776                           
  1777                           ;RF24_cg.c: 677: {
  1778                           ;RF24_cg.c: 678: rf.p_variant = 1 ;
  1779  002B00  0E01               	movlw	1
  1780  002B02  0100               	movlb	0	; () banked
  1781  002B04  6F90               	movwf	(_rf+4)& (0+255),b
  1782  002B06                     l4642:
  1783                           
  1784                           ;RF24_cg.c: 679: }
  1785                           ;RF24_cg.c: 680: setup = RF24_read_register_d(0x06);
  1786  002B06  0E06               	movlw	6
  1787  002B08  EC50  F01D         	call	_RF24_read_register_d
  1788  002B0C  6E16               	movwf	RF24_begin@setup,c
  1789                           
  1790                           ;RF24_cg.c: 688: RF24_setDataRate( RF24_1MBPS ) ;
  1791  002B0E  0E00               	movlw	0
  1792  002B10  ECE9  F018         	call	_RF24_setDataRate
  1793                           
  1794                           ;RF24_cg.c: 694: RF24_toggle_features_d();
  1795  002B14  ECAF  F01D         	call	_RF24_toggle_features_d	;wreg free
  1796                           
  1797                           ;RF24_cg.c: 695: RF24_write_register_d(0x1D,0 );
  1798  002B18  0E00               	movlw	0
  1799  002B1A  6E0E               	movwf	RF24_write_register_d@value,c
  1800  002B1C  0E1D               	movlw	29
  1801  002B1E  EC40  F01D         	call	_RF24_write_register_d
  1802                           
  1803                           ;RF24_cg.c: 696: RF24_write_register_d(0x1C,0);
  1804  002B22  0E00               	movlw	0
  1805  002B24  6E0E               	movwf	RF24_write_register_d@value,c
  1806  002B26  0E1C               	movlw	28
  1807  002B28  EC40  F01D         	call	_RF24_write_register_d
  1808                           
  1809                           ;RF24_cg.c: 700: RF24_write_register_d(0x07,(1<<(6)) | (1<<(5)) | (1<<(4)) );
  1810  002B2C  0E70               	movlw	112
  1811  002B2E  6E0E               	movwf	RF24_write_register_d@value,c
  1812  002B30  0E07               	movlw	7
  1813  002B32  EC40  F01D         	call	_RF24_write_register_d
  1814                           
  1815                           ;RF24_cg.c: 705: RF24_setChannel(76);
  1816  002B36  0E4C               	movlw	76
  1817  002B38  ECD2  F01C         	call	_RF24_setChannel
  1818                           
  1819                           ;RF24_cg.c: 708: RF24_flush_rx();
  1820  002B3C  ECE6  F01D         	call	_RF24_flush_rx	;wreg free
  1821                           
  1822                           ;RF24_cg.c: 709: RF24_flush_tx();
  1823  002B40  ECF2  F01D         	call	_RF24_flush_tx	;wreg free
  1824                           
  1825                           ;RF24_cg.c: 711: RF24_powerUp();
  1826  002B44  EC0B  F01D         	call	_RF24_powerUp	;wreg free
  1827                           
  1828                           ;RF24_cg.c: 715: RF24_write_register_d(0x00, ( RF24_read_register_d(0x00) ) & ~(1<<(0)) 
      +                          );
  1829  002B48  0E00               	movlw	0
  1830  002B4A  EC50  F01D         	call	_RF24_read_register_d
  1831  002B4E  0BFE               	andlw	254
  1832  002B50  6E0E               	movwf	RF24_write_register_d@value,c
  1833  002B52  0E00               	movlw	0
  1834  002B54  EC40  F01D         	call	_RF24_write_register_d
  1835                           
  1836                           ;RF24_cg.c: 718: return ( setup != 0 && setup != 0xff );
  1837  002B58  0E00               	movlw	0
  1838  002B5A  6E15               	movwf	_RF24_begin$1938,c
  1839  002B5C  5016               	movf	RF24_begin@setup,w,c
  1840  002B5E  B4D8               	btfsc	status,2,c
  1841  002B60  0012               	return	
  1842  002B62  2816               	incf	RF24_begin@setup,w,c
  1843  002B64  B4D8               	btfsc	status,2,c
  1844  002B66  0012               	return	
  1845  002B68  0E01               	movlw	1
  1846  002B6A  6E15               	movwf	_RF24_begin$1938,c
  1847  002B6C  0012               	return	
  1848  002B6E                     __end_of_RF24_begin:
  1849                           	opt stack 0
  1850                           tblptru	equ	0xFF8
  1851                           tblptrh	equ	0xFF7
  1852                           tblptrl	equ	0xFF6
  1853                           tablat	equ	0xFF5
  1854                           intcon	equ	0xFF2
  1855                           postinc0	equ	0xFEE
  1856                           wreg	equ	0xFE8
  1857                           postdec2	equ	0xFDD
  1858                           fsr2h	equ	0xFDA
  1859                           fsr2l	equ	0xFD9
  1860                           status	equ	0xFD8
  1861                           
  1862 ;; *************** function _pinMode *****************
  1863 ;; Defined at:
  1864 ;;		line 8 in file "../../../RF24_c/utility/XC8/spi.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  pin             1    wreg     unsigned char 
  1867 ;;  mode            1    2[COMRAM] unsigned char 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  pin             1    3[COMRAM] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1879 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1882 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1883 ;;Total ram usage:        2 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    1
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_RF24_begin
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text6
  1894  002132                     __ptext6:
  1895                           	opt stack 0
  1896  002132                     _pinMode:
  1897                           	opt stack 27
  1898                           
  1899                           ;incstack = 0
  1900                           ;pinMode@pin stored from wreg
  1901  002132  6E04               	movwf	pinMode@pin,c
  1902                           
  1903                           ;spi.c: 10: switch(pin)
  1904  002134  D0D2               	goto	l4322
  1905  002136                     l167:
  1906  002136  B003               	btfsc	pinMode@mode,0,c
  1907  002138  D002               	bra	u4925
  1908  00213A  9092               	bcf	3986,0,c	;volatile
  1909  00213C  D001               	bra	u4926
  1910  00213E                     u4925:
  1911  00213E  8092               	bsf	3986,0,c	;volatile
  1912  002140                     u4926:
  1913  002140  0012               	return	
  1914  002142                     l169:
  1915  002142  B003               	btfsc	pinMode@mode,0,c
  1916  002144  D002               	bra	u4935
  1917  002146  9292               	bcf	3986,1,c	;volatile
  1918  002148  D001               	bra	u4936
  1919  00214A                     u4935:
  1920  00214A  8292               	bsf	3986,1,c	;volatile
  1921  00214C                     u4936:
  1922  00214C  0012               	return	
  1923  00214E                     l170:
  1924  00214E  B003               	btfsc	pinMode@mode,0,c
  1925  002150  D002               	bra	u4945
  1926  002152  9492               	bcf	3986,2,c	;volatile
  1927  002154  D001               	bra	u4946
  1928  002156                     u4945:
  1929  002156  8492               	bsf	3986,2,c	;volatile
  1930  002158                     u4946:
  1931  002158  0012               	return	
  1932  00215A                     l171:
  1933  00215A  B003               	btfsc	pinMode@mode,0,c
  1934  00215C  D002               	bra	u4955
  1935  00215E  9692               	bcf	3986,3,c	;volatile
  1936  002160  D001               	bra	u4956
  1937  002162                     u4955:
  1938  002162  8692               	bsf	3986,3,c	;volatile
  1939  002164                     u4956:
  1940  002164  0012               	return	
  1941  002166                     l172:
  1942  002166  B003               	btfsc	pinMode@mode,0,c
  1943  002168  D002               	bra	u4965
  1944  00216A  9892               	bcf	3986,4,c	;volatile
  1945  00216C  D001               	bra	u4966
  1946  00216E                     u4965:
  1947  00216E  8892               	bsf	3986,4,c	;volatile
  1948  002170                     u4966:
  1949  002170  0012               	return	
  1950  002172                     l173:
  1951  002172  B003               	btfsc	pinMode@mode,0,c
  1952  002174  D002               	bra	u4975
  1953  002176  9A92               	bcf	3986,5,c	;volatile
  1954  002178  D001               	bra	u4976
  1955  00217A                     u4975:
  1956  00217A  8A92               	bsf	3986,5,c	;volatile
  1957  00217C                     u4976:
  1958  00217C  0012               	return	
  1959  00217E                     l174:
  1960  00217E  B003               	btfsc	pinMode@mode,0,c
  1961  002180  D002               	bra	u4985
  1962  002182  9096               	bcf	3990,0,c	;volatile
  1963  002184  D001               	bra	u4986
  1964  002186                     u4985:
  1965  002186  8096               	bsf	3990,0,c	;volatile
  1966  002188                     u4986:
  1967  002188  0012               	return	
  1968  00218A                     l175:
  1969  00218A  B003               	btfsc	pinMode@mode,0,c
  1970  00218C  D002               	bra	u4995
  1971  00218E  9296               	bcf	3990,1,c	;volatile
  1972  002190  D001               	bra	u4996
  1973  002192                     u4995:
  1974  002192  8296               	bsf	3990,1,c	;volatile
  1975  002194                     u4996:
  1976  002194  0012               	return	
  1977  002196                     l176:
  1978  002196  B003               	btfsc	pinMode@mode,0,c
  1979  002198  D002               	bra	u5005
  1980  00219A  9496               	bcf	3990,2,c	;volatile
  1981  00219C  D001               	bra	u5006
  1982  00219E                     u5005:
  1983  00219E  8496               	bsf	3990,2,c	;volatile
  1984  0021A0                     u5006:
  1985  0021A0  0012               	return	
  1986  0021A2                     l177:
  1987  0021A2  B003               	btfsc	pinMode@mode,0,c
  1988  0021A4  D002               	bra	u5015
  1989  0021A6  9E92               	bcf	3986,7,c	;volatile
  1990  0021A8  D001               	bra	u5016
  1991  0021AA                     u5015:
  1992  0021AA  8E92               	bsf	3986,7,c	;volatile
  1993  0021AC                     u5016:
  1994  0021AC  0012               	return	
  1995  0021AE                     l178:
  1996  0021AE  B003               	btfsc	pinMode@mode,0,c
  1997  0021B0  D002               	bra	u5025
  1998  0021B2  9C92               	bcf	3986,6,c	;volatile
  1999  0021B4  D001               	bra	u5026
  2000  0021B6                     u5025:
  2001  0021B6  8C92               	bsf	3986,6,c	;volatile
  2002  0021B8                     u5026:
  2003  0021B8  0012               	return	
  2004  0021BA                     l179:
  2005  0021BA  B003               	btfsc	pinMode@mode,0,c
  2006  0021BC  D002               	bra	u5035
  2007  0021BE  9094               	bcf	3988,0,c	;volatile
  2008  0021C0  D001               	bra	u5036
  2009  0021C2                     u5035:
  2010  0021C2  8094               	bsf	3988,0,c	;volatile
  2011  0021C4                     u5036:
  2012  0021C4  0012               	return	
  2013  0021C6                     l180:
  2014  0021C6  B003               	btfsc	pinMode@mode,0,c
  2015  0021C8  D002               	bra	u5045
  2016  0021CA  9294               	bcf	3988,1,c	;volatile
  2017  0021CC  D001               	bra	u5046
  2018  0021CE                     u5045:
  2019  0021CE  8294               	bsf	3988,1,c	;volatile
  2020  0021D0                     u5046:
  2021  0021D0  0012               	return	
  2022  0021D2                     l181:
  2023  0021D2  B003               	btfsc	pinMode@mode,0,c
  2024  0021D4  D002               	bra	u5055
  2025  0021D6  9494               	bcf	3988,2,c	;volatile
  2026  0021D8  D001               	bra	u5056
  2027  0021DA                     u5055:
  2028  0021DA  8494               	bsf	3988,2,c	;volatile
  2029  0021DC                     u5056:
  2030  0021DC  0012               	return	
  2031  0021DE                     l182:
  2032  0021DE  B003               	btfsc	pinMode@mode,0,c
  2033  0021E0  D002               	bra	u5065
  2034  0021E2  9694               	bcf	3988,3,c	;volatile
  2035  0021E4  D001               	bra	u5066
  2036  0021E6                     u5065:
  2037  0021E6  8694               	bsf	3988,3,c	;volatile
  2038  0021E8                     u5066:
  2039  0021E8  0012               	return	
  2040  0021EA                     l183:
  2041  0021EA  B003               	btfsc	pinMode@mode,0,c
  2042  0021EC  D002               	bra	u5075
  2043  0021EE  9095               	bcf	3989,0,c	;volatile
  2044  0021F0  D001               	bra	u5076
  2045  0021F2                     u5075:
  2046  0021F2  8095               	bsf	3989,0,c	;volatile
  2047  0021F4                     u5076:
  2048  0021F4  0012               	return	
  2049  0021F6                     l184:
  2050  0021F6  B003               	btfsc	pinMode@mode,0,c
  2051  0021F8  D002               	bra	u5085
  2052  0021FA  9295               	bcf	3989,1,c	;volatile
  2053  0021FC  D001               	bra	u5086
  2054  0021FE                     u5085:
  2055  0021FE  8295               	bsf	3989,1,c	;volatile
  2056  002200                     u5086:
  2057  002200  0012               	return	
  2058  002202                     l185:
  2059  002202  B003               	btfsc	pinMode@mode,0,c
  2060  002204  D002               	bra	u5095
  2061  002206  9495               	bcf	3989,2,c	;volatile
  2062  002208  D001               	bra	u5096
  2063  00220A                     u5095:
  2064  00220A  8495               	bsf	3989,2,c	;volatile
  2065  00220C                     u5096:
  2066  00220C  0012               	return	
  2067  00220E                     l186:
  2068  00220E  B003               	btfsc	pinMode@mode,0,c
  2069  002210  D002               	bra	u5105
  2070  002212  9695               	bcf	3989,3,c	;volatile
  2071  002214  D001               	bra	u5106
  2072  002216                     u5105:
  2073  002216  8695               	bsf	3989,3,c	;volatile
  2074  002218                     u5106:
  2075  002218  0012               	return	
  2076  00221A                     l187:
  2077  00221A  B003               	btfsc	pinMode@mode,0,c
  2078  00221C  D002               	bra	u5115
  2079  00221E  9894               	bcf	3988,4,c	;volatile
  2080  002220  D001               	bra	u5116
  2081  002222                     u5115:
  2082  002222  8894               	bsf	3988,4,c	;volatile
  2083  002224                     u5116:
  2084  002224  0012               	return	
  2085  002226                     l188:
  2086  002226  B003               	btfsc	pinMode@mode,0,c
  2087  002228  D002               	bra	u5125
  2088  00222A  9A94               	bcf	3988,5,c	;volatile
  2089  00222C  D001               	bra	u5126
  2090  00222E                     u5125:
  2091  00222E  8A94               	bsf	3988,5,c	;volatile
  2092  002230                     u5126:
  2093  002230  0012               	return	
  2094  002232                     l189:
  2095  002232  B003               	btfsc	pinMode@mode,0,c
  2096  002234  D002               	bra	u5135
  2097  002236  9C94               	bcf	3988,6,c	;volatile
  2098  002238  D001               	bra	u5136
  2099  00223A                     u5135:
  2100  00223A  8C94               	bsf	3988,6,c	;volatile
  2101  00223C                     u5136:
  2102  00223C  0012               	return	
  2103  00223E                     l190:
  2104  00223E  B003               	btfsc	pinMode@mode,0,c
  2105  002240  D002               	bra	u5145
  2106  002242  9E94               	bcf	3988,7,c	;volatile
  2107  002244  D001               	bra	u5146
  2108  002246                     u5145:
  2109  002246  8E94               	bsf	3988,7,c	;volatile
  2110  002248                     u5146:
  2111  002248  0012               	return	
  2112  00224A                     l191:
  2113  00224A  B003               	btfsc	pinMode@mode,0,c
  2114  00224C  D002               	bra	u5155
  2115  00224E  9895               	bcf	3989,4,c	;volatile
  2116  002250  D001               	bra	u5156
  2117  002252                     u5155:
  2118  002252  8895               	bsf	3989,4,c	;volatile
  2119  002254                     u5156:
  2120  002254  0012               	return	
  2121  002256                     l192:
  2122  002256  B003               	btfsc	pinMode@mode,0,c
  2123  002258  D002               	bra	u5165
  2124  00225A  9A95               	bcf	3989,5,c	;volatile
  2125  00225C  D001               	bra	u5166
  2126  00225E                     u5165:
  2127  00225E  8A95               	bsf	3989,5,c	;volatile
  2128  002260                     u5166:
  2129  002260  0012               	return	
  2130  002262                     l193:
  2131  002262  B003               	btfsc	pinMode@mode,0,c
  2132  002264  D002               	bra	u5175
  2133  002266  9C95               	bcf	3989,6,c	;volatile
  2134  002268  D001               	bra	u5176
  2135  00226A                     u5175:
  2136  00226A  8C95               	bsf	3989,6,c	;volatile
  2137  00226C                     u5176:
  2138  00226C  0012               	return	
  2139  00226E                     l194:
  2140  00226E  B003               	btfsc	pinMode@mode,0,c
  2141  002270  D002               	bra	u5185
  2142  002272  9E95               	bcf	3989,7,c	;volatile
  2143  002274  D001               	bra	u5186
  2144  002276                     u5185:
  2145  002276  8E95               	bsf	3989,7,c	;volatile
  2146  002278                     u5186:
  2147  002278  0012               	return	
  2148  00227A                     l195:
  2149  00227A  B003               	btfsc	pinMode@mode,0,c
  2150  00227C  D002               	bra	u5195
  2151  00227E  9093               	bcf	3987,0,c	;volatile
  2152  002280  D001               	bra	u5196
  2153  002282                     u5195:
  2154  002282  8093               	bsf	3987,0,c	;volatile
  2155  002284                     u5196:
  2156  002284  0012               	return	
  2157  002286                     l196:
  2158  002286  B003               	btfsc	pinMode@mode,0,c
  2159  002288  D002               	bra	u5205
  2160  00228A  9293               	bcf	3987,1,c	;volatile
  2161  00228C  D001               	bra	u5206
  2162  00228E                     u5205:
  2163  00228E  8293               	bsf	3987,1,c	;volatile
  2164  002290                     u5206:
  2165  002290  0012               	return	
  2166  002292                     l197:
  2167  002292  B003               	btfsc	pinMode@mode,0,c
  2168  002294  D002               	bra	u5215
  2169  002296  9493               	bcf	3987,2,c	;volatile
  2170  002298  D001               	bra	u5216
  2171  00229A                     u5215:
  2172  00229A  8493               	bsf	3987,2,c	;volatile
  2173  00229C                     u5216:
  2174  00229C  0012               	return	
  2175  00229E                     l198:
  2176  00229E  B003               	btfsc	pinMode@mode,0,c
  2177  0022A0  D002               	bra	u5225
  2178  0022A2  9693               	bcf	3987,3,c	;volatile
  2179  0022A4  D001               	bra	u5226
  2180  0022A6                     u5225:
  2181  0022A6  8693               	bsf	3987,3,c	;volatile
  2182  0022A8                     u5226:
  2183  0022A8  0012               	return	
  2184  0022AA                     l199:
  2185  0022AA  B003               	btfsc	pinMode@mode,0,c
  2186  0022AC  D002               	bra	u5235
  2187  0022AE  9893               	bcf	3987,4,c	;volatile
  2188  0022B0  D001               	bra	u5236
  2189  0022B2                     u5235:
  2190  0022B2  8893               	bsf	3987,4,c	;volatile
  2191  0022B4                     u5236:
  2192  0022B4  0012               	return	
  2193  0022B6                     l200:
  2194  0022B6  B003               	btfsc	pinMode@mode,0,c
  2195  0022B8  D002               	bra	u5245
  2196  0022BA  9A93               	bcf	3987,5,c	;volatile
  2197  0022BC  D001               	bra	u5246
  2198  0022BE                     u5245:
  2199  0022BE  8A93               	bsf	3987,5,c	;volatile
  2200  0022C0                     u5246:
  2201  0022C0  0012               	return	
  2202  0022C2                     l201:
  2203  0022C2  B003               	btfsc	pinMode@mode,0,c
  2204  0022C4  D002               	bra	u5255
  2205  0022C6  9C93               	bcf	3987,6,c	;volatile
  2206  0022C8  D001               	bra	u5256
  2207  0022CA                     u5255:
  2208  0022CA  8C93               	bsf	3987,6,c	;volatile
  2209  0022CC                     u5256:
  2210  0022CC  0012               	return	
  2211  0022CE                     l202:
  2212  0022CE  B003               	btfsc	pinMode@mode,0,c
  2213  0022D0  D002               	bra	u5265
  2214  0022D2  9E93               	bcf	3987,7,c	;volatile
  2215  0022D4  D001               	bra	u5266
  2216  0022D6                     u5265:
  2217  0022D6  8E93               	bsf	3987,7,c	;volatile
  2218  0022D8                     u5266:
  2219                           
  2220                           ;spi.c: 59: }
  2221                           
  2222                           ;spi.c: 58: default: break;
  2223  0022D8  0012               	return	
  2224  0022DA                     l4322:
  2225  0022DA  5004               	movf	pinMode@pin,w,c
  2226                           
  2227                           ; Switch size 1, requested type "space"
  2228                           ; Number of cases is 35, Range of values is 2 to 40
  2229                           ; switch strategies available:
  2230                           ; Name         Instructions Cycles
  2231                           ; simple_byte          106    54 (average)
  2232                           ;	Chosen strategy is simple_byte
  2233  0022DC  0A02               	xorlw	2	; case 2
  2234  0022DE  B4D8               	btfsc	status,2,c
  2235  0022E0  D72A               	goto	l167
  2236  0022E2  0A01               	xorlw	1	; case 3
  2237  0022E4  B4D8               	btfsc	status,2,c
  2238  0022E6  D72D               	goto	l169
  2239  0022E8  0A07               	xorlw	7	; case 4
  2240  0022EA  B4D8               	btfsc	status,2,c
  2241  0022EC  D730               	goto	l170
  2242  0022EE  0A01               	xorlw	1	; case 5
  2243  0022F0  B4D8               	btfsc	status,2,c
  2244  0022F2  D733               	goto	l171
  2245  0022F4  0A03               	xorlw	3	; case 6
  2246  0022F6  B4D8               	btfsc	status,2,c
  2247  0022F8  D736               	goto	l172
  2248  0022FA  0A01               	xorlw	1	; case 7
  2249  0022FC  B4D8               	btfsc	status,2,c
  2250  0022FE  D739               	goto	l173
  2251  002300  0A0F               	xorlw	15	; case 8
  2252  002302  B4D8               	btfsc	status,2,c
  2253  002304  D73C               	goto	l174
  2254  002306  0A01               	xorlw	1	; case 9
  2255  002308  B4D8               	btfsc	status,2,c
  2256  00230A  D73F               	goto	l175
  2257  00230C  0A03               	xorlw	3	; case 10
  2258  00230E  B4D8               	btfsc	status,2,c
  2259  002310  D742               	goto	l176
  2260  002312  0A07               	xorlw	7	; case 13
  2261  002314  B4D8               	btfsc	status,2,c
  2262  002316  D745               	goto	l177
  2263  002318  0A03               	xorlw	3	; case 14
  2264  00231A  B4D8               	btfsc	status,2,c
  2265  00231C  D748               	goto	l178
  2266  00231E  0A01               	xorlw	1	; case 15
  2267  002320  B4D8               	btfsc	status,2,c
  2268  002322  D74B               	goto	l179
  2269  002324  0A1F               	xorlw	31	; case 16
  2270  002326  B4D8               	btfsc	status,2,c
  2271  002328  D74E               	goto	l180
  2272  00232A  0A01               	xorlw	1	; case 17
  2273  00232C  B4D8               	btfsc	status,2,c
  2274  00232E  D751               	goto	l181
  2275  002330  0A03               	xorlw	3	; case 18
  2276  002332  B4D8               	btfsc	status,2,c
  2277  002334  D754               	goto	l182
  2278  002336  0A01               	xorlw	1	; case 19
  2279  002338  B4D8               	btfsc	status,2,c
  2280  00233A  D757               	goto	l183
  2281  00233C  0A07               	xorlw	7	; case 20
  2282  00233E  B4D8               	btfsc	status,2,c
  2283  002340  D75A               	goto	l184
  2284  002342  0A01               	xorlw	1	; case 21
  2285  002344  B4D8               	btfsc	status,2,c
  2286  002346  D75D               	goto	l185
  2287  002348  0A03               	xorlw	3	; case 22
  2288  00234A  B4D8               	btfsc	status,2,c
  2289  00234C  D760               	goto	l186
  2290  00234E  0A01               	xorlw	1	; case 23
  2291  002350  B4D8               	btfsc	status,2,c
  2292  002352  D763               	goto	l187
  2293  002354  0A0F               	xorlw	15	; case 24
  2294  002356  B4D8               	btfsc	status,2,c
  2295  002358  D766               	goto	l188
  2296  00235A  0A01               	xorlw	1	; case 25
  2297  00235C  B4D8               	btfsc	status,2,c
  2298  00235E  D769               	goto	l189
  2299  002360  0A03               	xorlw	3	; case 26
  2300  002362  B4D8               	btfsc	status,2,c
  2301  002364  D76C               	goto	l190
  2302  002366  0A01               	xorlw	1	; case 27
  2303  002368  B4D8               	btfsc	status,2,c
  2304  00236A  D76F               	goto	l191
  2305  00236C  0A07               	xorlw	7	; case 28
  2306  00236E  B4D8               	btfsc	status,2,c
  2307  002370  D772               	goto	l192
  2308  002372  0A01               	xorlw	1	; case 29
  2309  002374  B4D8               	btfsc	status,2,c
  2310  002376  D775               	goto	l193
  2311  002378  0A03               	xorlw	3	; case 30
  2312  00237A  B4D8               	btfsc	status,2,c
  2313  00237C  D778               	goto	l194
  2314  00237E  0A3F               	xorlw	63	; case 33
  2315  002380  B4D8               	btfsc	status,2,c
  2316  002382  D77B               	goto	l195
  2317  002384  0A03               	xorlw	3	; case 34
  2318  002386  B4D8               	btfsc	status,2,c
  2319  002388  D77E               	goto	l196
  2320  00238A  0A01               	xorlw	1	; case 35
  2321  00238C  B4D8               	btfsc	status,2,c
  2322  00238E  D781               	goto	l197
  2323  002390  0A07               	xorlw	7	; case 36
  2324  002392  B4D8               	btfsc	status,2,c
  2325  002394  D784               	goto	l198
  2326  002396  0A01               	xorlw	1	; case 37
  2327  002398  B4D8               	btfsc	status,2,c
  2328  00239A  D787               	goto	l199
  2329  00239C  0A03               	xorlw	3	; case 38
  2330  00239E  B4D8               	btfsc	status,2,c
  2331  0023A0  D78A               	goto	l200
  2332  0023A2  0A01               	xorlw	1	; case 39
  2333  0023A4  B4D8               	btfsc	status,2,c
  2334  0023A6  D78D               	goto	l201
  2335  0023A8  0A0F               	xorlw	15	; case 40
  2336  0023AA  A4D8               	btfss	status,2,c
  2337  0023AC  0012               	return	
  2338  0023AE  D78F               	goto	l202
  2339  0023B0                     __end_of_pinMode:
  2340                           	opt stack 0
  2341                           tblptru	equ	0xFF8
  2342                           tblptrh	equ	0xFF7
  2343                           tblptrl	equ	0xFF6
  2344                           tablat	equ	0xFF5
  2345                           intcon	equ	0xFF2
  2346                           postinc0	equ	0xFEE
  2347                           wreg	equ	0xFE8
  2348                           postdec2	equ	0xFDD
  2349                           fsr2h	equ	0xFDA
  2350                           fsr2l	equ	0xFD9
  2351                           status	equ	0xFD8
  2352                           
  2353 ;; *************** function _SPI_begin *****************
  2354 ;; Defined at:
  2355 ;;		line 224 in file "../../../RF24_c/utility/XC8/spi.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, status,2
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;Total ram usage:        0 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    1
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_RF24_begin
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text7
  2384  003B12                     __ptext7:
  2385                           	opt stack 0
  2386  003B12                     _SPI_begin:
  2387                           	opt stack 27
  2388                           
  2389                           ;spi.c: 235: TRISCbits.TRISC4=1;
  2390                           
  2391                           ;incstack = 0
  2392  003B12  8894               	bsf	3988,4,c	;volatile
  2393                           
  2394                           ;spi.c: 237: TRISCbits.TRISC3=0;
  2395  003B14  9694               	bcf	3988,3,c	;volatile
  2396                           
  2397                           ;spi.c: 239: TRISCbits.TRISC5=0;
  2398  003B16  9A94               	bcf	3988,5,c	;volatile
  2399                           
  2400                           ;spi.c: 242: SSPCON1bits.SSPEN=0;
  2401  003B18  9AC6               	bcf	4038,5,c	;volatile
  2402                           
  2403                           ;spi.c: 243: SSPSTATbits.CKE=1;
  2404  003B1A  8CC7               	bsf	4039,6,c	;volatile
  2405                           
  2406                           ;spi.c: 244: SSPCON1bits.CKP=0;
  2407  003B1C  98C6               	bcf	4038,4,c	;volatile
  2408                           
  2409                           ;spi.c: 245: SSPSTATbits.SMP=0;
  2410  003B1E  9EC7               	bcf	4039,7,c	;volatile
  2411                           
  2412                           ;spi.c: 246: SSPCON1bits.SSPM=1;
  2413  003B20  50C6               	movf	4038,w,c	;volatile
  2414  003B22  0BF0               	andlw	-16
  2415  003B24  0901               	iorlw	1
  2416  003B26  6EC6               	movwf	4038,c	;volatile
  2417                           
  2418                           ;spi.c: 247: SSPCON1bits.SSPEN=1;
  2419  003B28  8AC6               	bsf	4038,5,c	;volatile
  2420  003B2A  0012               	return		;funcret
  2421  003B2C                     __end_of_SPI_begin:
  2422                           	opt stack 0
  2423                           tblptru	equ	0xFF8
  2424                           tblptrh	equ	0xFF7
  2425                           tblptrl	equ	0xFF6
  2426                           tablat	equ	0xFF5
  2427                           intcon	equ	0xFF2
  2428                           postinc0	equ	0xFEE
  2429                           wreg	equ	0xFE8
  2430                           postdec2	equ	0xFDD
  2431                           fsr2h	equ	0xFDA
  2432                           fsr2l	equ	0xFD9
  2433                           status	equ	0xFD8
  2434                           
  2435 ;; *************** function _RF24_toggle_features_d *****************
  2436 ;; Defined at:
  2437 ;;		line 1266 in file "../../../RF24_c/RF24_cg.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;Total ram usage:        0 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    4
  2458 ;; This function calls:
  2459 ;;		_RF24_beginTransaction
  2460 ;;		_RF24_endTransaction
  2461 ;;		_SPI_transfer
  2462 ;; This function is called by:
  2463 ;;		_RF24_begin
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text8
  2468  003B5E                     __ptext8:
  2469                           	opt stack 0
  2470  003B5E                     _RF24_toggle_features_d:
  2471                           	opt stack 24
  2472                           
  2473                           ;RF24_cg.c: 1268: RF24_beginTransaction();
  2474                           
  2475                           ;incstack = 0
  2476  003B5E  ECEE  F01D         	call	_RF24_beginTransaction	;wreg free
  2477                           
  2478                           ;RF24_cg.c: 1269: SPI_transfer( 0x50 );
  2479  003B62  0E50               	movlw	80
  2480  003B64  ECCE  F01D         	call	_SPI_transfer
  2481                           
  2482                           ;RF24_cg.c: 1270: SPI_transfer( 0x73 );
  2483  003B68  0E73               	movlw	115
  2484  003B6A  ECCE  F01D         	call	_SPI_transfer
  2485                           
  2486                           ;RF24_cg.c: 1271: RF24_endTransaction();
  2487  003B6E  ECEA  F01D         	call	_RF24_endTransaction	;wreg free
  2488  003B72  0012               	return		;funcret
  2489  003B74                     __end_of_RF24_toggle_features_d:
  2490                           	opt stack 0
  2491                           tblptru	equ	0xFF8
  2492                           tblptrh	equ	0xFF7
  2493                           tblptrl	equ	0xFF6
  2494                           tablat	equ	0xFF5
  2495                           intcon	equ	0xFF2
  2496                           postinc0	equ	0xFEE
  2497                           wreg	equ	0xFE8
  2498                           postdec2	equ	0xFDD
  2499                           fsr2h	equ	0xFDA
  2500                           fsr2l	equ	0xFD9
  2501                           status	equ	0xFD8
  2502                           
  2503 ;; *************** function _RF24_setDataRate *****************
  2504 ;; Defined at:
  2505 ;;		line 1453 in file "../../../RF24_c/RF24_cg.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  speed           1    wreg     enum E3388
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  speed           1   17[COMRAM] enum E3388
  2510 ;;  setup           1   18[COMRAM] unsigned char 
  2511 ;;  result          1   16[COMRAM] unsigned char 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      unsigned char 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2, status,0, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;Total ram usage:        3 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    5
  2528 ;; This function calls:
  2529 ;;		_RF24_read_register_d
  2530 ;;		_RF24_write_register_d
  2531 ;; This function is called by:
  2532 ;;		_RF24_begin
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text9
  2537  0031D2                     __ptext9:
  2538                           	opt stack 0
  2539  0031D2                     _RF24_setDataRate:
  2540                           	opt stack 23
  2541                           
  2542                           ;incstack = 0
  2543                           ;RF24_setDataRate@speed stored from wreg
  2544  0031D2  6E12               	movwf	RF24_setDataRate@speed,c
  2545                           
  2546                           ;RF24_cg.c: 1455: uint8_t result = 0;
  2547  0031D4  0E00               	movlw	0
  2548  0031D6  6E11               	movwf	RF24_setDataRate@result,c
  2549                           
  2550                           ;RF24_cg.c: 1456: uint8_t setup = RF24_read_register_d(0x06) ;
  2551  0031D8  0E06               	movlw	6
  2552  0031DA  EC50  F01D         	call	_RF24_read_register_d
  2553  0031DE  6E13               	movwf	RF24_setDataRate@setup,c
  2554                           
  2555                           ;RF24_cg.c: 1459: setup &= ~((1<<(5)) | (1<<(3))) ;
  2556  0031E0  0ED7               	movlw	215
  2557  0031E2  1613               	andwf	RF24_setDataRate@setup,f,c
  2558                           
  2559                           ;RF24_cg.c: 1464: rf.txDelay=85;
  2560  0031E4  0E55               	movlw	85
  2561  0031E6  0100               	movlb	0	; () banked
  2562  0031E8  6F99               	movwf	(_rf+13)& (0+255),b
  2563  0031EA  0E00               	movlw	0
  2564  0031EC  6F9A               	movwf	(_rf+14)& (0+255),b
  2565  0031EE  0E00               	movlw	0
  2566  0031F0  6F9B               	movwf	(_rf+15)& (0+255),b
  2567  0031F2  0E00               	movlw	0
  2568  0031F4  6F9C               	movwf	(_rf+16)& (0+255),b
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;RF24_cg.c: 1466: if( speed == RF24_250KBPS )
  2572  0031F6  0E02               	movlw	2
  2573  0031F8  1812               	xorwf	RF24_setDataRate@speed,w,c
  2574  0031FA  A4D8               	btfss	status,2,c
  2575  0031FC  D003               	goto	l4354
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;RF24_cg.c: 1467: {
  2579                           ;RF24_cg.c: 1470: setup |= (1<<(5)) ;
  2580  0031FE  8A13               	bsf	RF24_setDataRate@setup,5,c
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;RF24_cg.c: 1474: rf.txDelay=155;
  2584  003200  0E9B               	movlw	155
  2585  003202  D005               	goto	L1
  2586  003204                     l4354:
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;RF24_cg.c: 1477: else
  2590                           ;RF24_cg.c: 1478: {
  2591                           ;RF24_cg.c: 1481: if ( speed == RF24_2MBPS )
  2592  003204  0412               	decf	RF24_setDataRate@speed,w,c
  2593  003206  A4D8               	btfss	status,2,c
  2594  003208  D00A               	goto	l4360
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;RF24_cg.c: 1482: {
  2598                           ;RF24_cg.c: 1483: setup |= (1<<(3));
  2599  00320A  8613               	bsf	RF24_setDataRate@setup,3,c
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;RF24_cg.c: 1487: rf.txDelay=65;
  2603  00320C  0E41               	movlw	65
  2604  00320E                     L1:
  2605  00320E  0100               	movlb	0	; () banked
  2606  003210  6F99               	movwf	(_rf+13)& (0+255),b
  2607  003212  0E00               	movlw	0
  2608  003214  6F9A               	movwf	(_rf+14)& (0+255),b
  2609  003216  0E00               	movlw	0
  2610  003218  6F9B               	movwf	(_rf+15)& (0+255),b
  2611  00321A  0E00               	movlw	0
  2612  00321C  6F9C               	movwf	(_rf+16)& (0+255),b
  2613  00321E                     l4360:
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;RF24_cg.c: 1489: }
  2617                           ;RF24_cg.c: 1490: }
  2618                           ;RF24_cg.c: 1491: RF24_write_register_d(0x06,setup);
  2619  00321E  C013  F00E         	movff	RF24_setDataRate@setup,RF24_write_register_d@value
  2620  003222  0E06               	movlw	6
  2621  003224  EC40  F01D         	call	_RF24_write_register_d
  2622                           
  2623                           ;RF24_cg.c: 1494: if ( RF24_read_register_d(0x06) == setup )
  2624  003228  0E06               	movlw	6
  2625  00322A  EC50  F01D         	call	_RF24_read_register_d
  2626  00322E  1813               	xorwf	RF24_setDataRate@setup,w,c
  2627  003230  A4D8               	btfss	status,2,c
  2628  003232  D002               	goto	l658
  2629                           
  2630                           ;RF24_cg.c: 1495: {
  2631                           ;RF24_cg.c: 1496: result = 1;
  2632  003234  0E01               	movlw	1
  2633  003236  6E11               	movwf	RF24_setDataRate@result,c
  2634  003238                     l658:
  2635                           
  2636                           ;RF24_cg.c: 1497: }
  2637                           ;RF24_cg.c: 1498: return result;
  2638  003238  5011               	movf	RF24_setDataRate@result,w,c
  2639  00323A  0012               	return	
  2640  00323C                     __end_of_RF24_setDataRate:
  2641                           	opt stack 0
  2642                           tblptru	equ	0xFF8
  2643                           tblptrh	equ	0xFF7
  2644                           tblptrl	equ	0xFF6
  2645                           tablat	equ	0xFF5
  2646                           intcon	equ	0xFF2
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           postdec2	equ	0xFDD
  2650                           fsr2h	equ	0xFDA
  2651                           fsr2l	equ	0xFD9
  2652                           status	equ	0xFD8
  2653                           
  2654 ;; *************** function _RF24N_init *****************
  2655 ;; Defined at:
  2656 ;;		line 84 in file "../../RF24Network_cg.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		None
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;Total ram usage:        0 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    1
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_setup
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text10
  2685  003368                     __ptext10:
  2686                           	opt stack 0
  2687  003368                     _RF24N_init:
  2688                           	opt stack 28
  2689                           
  2690                           ;RF24Network_cg.c: 86: rn.next_frame= rn.frame_queue;
  2691                           
  2692                           ;incstack = 0
  2693  003368  0E0F               	movlw	low (_rn+58)
  2694  00336A  CFE8 F1A9          	movff	wreg,_rn+212
  2695  00336E  0E01               	movlw	high (_rn+58)
  2696  003370  CFE8 F1AA          	movff	wreg,_rn+213
  2697                           
  2698                           ;RF24Network_cg.c: 88: rn.frag_queue.message_buffer=&rn.frag_queue_message_buffer[0];
  2699  003374  0EB7               	movlw	low (_rn+226)
  2700  003376  CFE8 F1B5          	movff	wreg,_rn+224
  2701  00337A  0E01               	movlw	high (_rn+226)
  2702  00337C  CFE8 F1B6          	movff	wreg,_rn+225
  2703                           
  2704                           ;RF24Network_cg.c: 89: rn.frag_ptr = &rn.frag_queue;
  2705  003380  0EAB               	movlw	low (_rn+214)
  2706  003382  CFE8 F0FC          	movff	wreg,_rn+39
  2707  003386  0E01               	movlw	high (_rn+214)
  2708  003388  CFE8 F0FD          	movff	wreg,_rn+40
  2709                           
  2710                           ;RF24Network_cg.c: 91: rn.txTime=0;
  2711  00338C  0E00               	movlw	0
  2712  00338E  CFE8 F100          	movff	wreg,_rn+43
  2713  003392  0E00               	movlw	0
  2714  003394  CFE8 F101          	movff	wreg,_rn+44
  2715  003398  0E00               	movlw	0
  2716  00339A  CFE8 F102          	movff	wreg,_rn+45
  2717  00339E  0E00               	movlw	0
  2718  0033A0  CFE8 F103          	movff	wreg,_rn+46
  2719                           
  2720                           ;RF24Network_cg.c: 92: rn.networkFlags=0;
  2721  0033A4  0E00               	movlw	0
  2722  0033A6  CFE8 F0FF          	movff	wreg,_rn+42
  2723                           
  2724                           ;RF24Network_cg.c: 93: rn.returnSysMsgs=0;
  2725  0033AA  0E00               	movlw	0
  2726  0033AC  CFE8 F0FE          	movff	wreg,_rn+41
  2727                           
  2728                           ;RF24Network_cg.c: 94: rn.multicastRelay=0;
  2729  0033B0  0E00               	movlw	0
  2730  0033B2  CFE8 F0D5          	movff	wreg,_rn
  2731                           
  2732                           ;RF24Network_cg.c: 99: rn.max_frame_payload_size = 32-sizeof(RF24NetworkHeader);
  2733  0033B6  0E18               	movlw	24
  2734  0033B8  CFE8 F108          	movff	wreg,_rn+51
  2735  0033BC  0E00               	movlw	0
  2736  0033BE  CFE8 F109          	movff	wreg,_rn+52
  2737  0033C2  0012               	return		;funcret
  2738  0033C4                     __end_of_RF24N_init:
  2739                           	opt stack 0
  2740                           tblptru	equ	0xFF8
  2741                           tblptrh	equ	0xFF7
  2742                           tblptrl	equ	0xFF6
  2743                           tablat	equ	0xFF5
  2744                           intcon	equ	0xFF2
  2745                           postinc0	equ	0xFEE
  2746                           wreg	equ	0xFE8
  2747                           postdec2	equ	0xFDD
  2748                           fsr2h	equ	0xFDA
  2749                           fsr2l	equ	0xFD9
  2750                           status	equ	0xFD8
  2751                           
  2752 ;; *************** function _RF24N_begin_d *****************
  2753 ;; Defined at:
  2754 ;;		line 163 in file "../../RF24Network_cg.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  _channel        1    wreg     unsigned char 
  2757 ;;  _node_addres    2   33[COMRAM] unsigned int 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  _channel        1   41[COMRAM] unsigned char 
  2760 ;;  addr            5   35[COMRAM] unsigned char [5]
  2761 ;;  i               1   42[COMRAM] unsigned char 
  2762 ;;  retryVar        1   40[COMRAM] unsigned char 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;Total ram usage:       10 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    7
  2779 ;; This function calls:
  2780 ;;		_RF24N_is_valid_address
  2781 ;;		_RF24N_pipe_address
  2782 ;;		_RF24N_setup_address
  2783 ;;		_RF24_enableDynamicPayloads
  2784 ;;		_RF24_isValid
  2785 ;;		_RF24_openReadingPipe_d
  2786 ;;		_RF24_setAutoAck_p
  2787 ;;		_RF24_setChannel
  2788 ;;		_RF24_setRetries
  2789 ;;		_RF24_startListening
  2790 ;;		___lwmod
  2791 ;;		___wmul
  2792 ;; This function is called by:
  2793 ;;		_setup
  2794 ;;		_RF24N_begin
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text11
  2799  002C4A                     __ptext11:
  2800                           	opt stack 0
  2801  002C4A                     _RF24N_begin_d:
  2802                           	opt stack 22
  2803                           
  2804                           ;incstack = 0
  2805                           ;RF24N_begin_d@_channel stored from wreg
  2806  002C4A  6E2A               	movwf	RF24N_begin_d@_channel,c
  2807                           
  2808                           ;RF24Network_cg.c: 165: uint8_t i;
  2809                           ;RF24Network_cg.c: 166: uint8_t retryVar;
  2810                           ;RF24Network_cg.c: 168: if (! RF24N_is_valid_address(_node_address) )
  2811  002C4C  C022  F003         	movff	RF24N_begin_d@_node_address,RF24N_is_valid_address@node
  2812  002C50  C023  F004         	movff	RF24N_begin_d@_node_address+1,RF24N_is_valid_address@node+1
  2813  002C54  EC2A  F01C         	call	_RF24N_is_valid_address	;wreg free
  2814  002C58  0900               	iorlw	0
  2815  002C5A  B4D8               	btfsc	status,2,c
  2816  002C5C  0012               	return	
  2817                           
  2818                           ;RF24Network_cg.c: 171: rn.node_address = _node_address;
  2819                           
  2820                           ;RF24Network_cg.c: 169: return;
  2821  002C5E  C022  F105         	movff	RF24N_begin_d@_node_address,_rn+48
  2822  002C62  C023  F106         	movff	RF24N_begin_d@_node_address+1,_rn+49
  2823                           
  2824                           ;RF24Network_cg.c: 173: if ( ! RF24_isValid() ){
  2825  002C66  EC7B  F01D         	call	_RF24_isValid	;wreg free
  2826  002C6A  0900               	iorlw	0
  2827  002C6C  B4D8               	btfsc	status,2,c
  2828  002C6E  0012               	return	
  2829                           
  2830                           ;RF24Network_cg.c: 175: }
  2831                           ;RF24Network_cg.c: 178: if(_channel != 255){
  2832                           
  2833                           ;RF24Network_cg.c: 174: return;
  2834  002C70  282A               	incf	RF24N_begin_d@_channel,w,c
  2835  002C72  B4D8               	btfsc	status,2,c
  2836  002C74  D003               	goto	l769
  2837                           
  2838                           ;RF24Network_cg.c: 179: RF24_setChannel(_channel);
  2839  002C76  502A               	movf	RF24N_begin_d@_channel,w,c
  2840  002C78  ECD2  F01C         	call	_RF24_setChannel
  2841  002C7C                     l769:
  2842                           
  2843                           ;RF24Network_cg.c: 180: }
  2844                           ;RF24Network_cg.c: 182: RF24_setAutoAck_p(0,0);
  2845  002C7C  0E00               	movlw	0
  2846  002C7E  6E11               	movwf	RF24_setAutoAck_p@enable,c
  2847  002C80  0E00               	movlw	0
  2848  002C82  EC0E  F01A         	call	_RF24_setAutoAck_p
  2849                           
  2850                           ;RF24Network_cg.c: 185: RF24_enableDynamicPayloads();
  2851  002C86  ECBE  F01C         	call	_RF24_enableDynamicPayloads	;wreg free
  2852                           
  2853                           ;RF24Network_cg.c: 189: retryVar = (((rn.node_address % 6)+1) *2) + 3;
  2854  002C8A  C105  F003         	movff	_rn+48,___lwmod@dividend
  2855  002C8E  C106  F004         	movff	_rn+49,___lwmod@dividend+1
  2856  002C92  0E00               	movlw	0
  2857  002C94  6E06               	movwf	___lwmod@divisor+1,c
  2858  002C96  0E06               	movlw	6
  2859  002C98  6E05               	movwf	___lwmod@divisor,c
  2860  002C9A  ECF9  F01A         	call	___lwmod	;wreg free
  2861  002C9E  90D8               	bcf	status,0,c
  2862  002CA0  3403               	rlcf	?___lwmod,w,c
  2863  002CA2  0F05               	addlw	5
  2864  002CA4  6E29               	movwf	RF24N_begin_d@retryVar,c
  2865                           
  2866                           ;RF24Network_cg.c: 190: RF24_setRetries(retryVar, 5);
  2867  002CA6  0E05               	movlw	5
  2868  002CA8  6E11               	movwf	RF24_setRetries@count,c
  2869  002CAA  5029               	movf	RF24N_begin_d@retryVar,w,c
  2870  002CAC  EC1E  F01D         	call	_RF24_setRetries
  2871                           
  2872                           ;RF24Network_cg.c: 191: rn.txTimeout = 25;
  2873  002CB0  0E19               	movlw	25
  2874  002CB2  CFE8 F0D6          	movff	wreg,_rn+1
  2875  002CB6  0E00               	movlw	0
  2876  002CB8  CFE8 F0D7          	movff	wreg,_rn+2
  2877  002CBC  0E00               	movlw	0
  2878  002CBE  CFE8 F0D8          	movff	wreg,_rn+3
  2879  002CC2  0E00               	movlw	0
  2880  002CC4  CFE8 F0D9          	movff	wreg,_rn+4
  2881                           
  2882                           ;RF24Network_cg.c: 192: rn.routeTimeout = rn.txTimeout*3;
  2883  002CC8  C0D6  F003         	movff	_rn+1,___wmul@multiplier
  2884  002CCC  C0D7  F004         	movff	_rn+2,___wmul@multiplier+1
  2885  002CD0  0E00               	movlw	0
  2886  002CD2  6E06               	movwf	___wmul@multiplicand+1,c
  2887  002CD4  0E03               	movlw	3
  2888  002CD6  6E05               	movwf	___wmul@multiplicand,c
  2889  002CD8  ECF8  F01C         	call	___wmul	;wreg free
  2890  002CDC  C003  F0DA         	movff	?___wmul,_rn+5
  2891  002CE0  C004  F0DB         	movff	?___wmul+1,_rn+6
  2892                           
  2893                           ;RF24Network_cg.c: 202: RF24N_setup_address();
  2894  002CE4  ECB7  F015         	call	_RF24N_setup_address	;wreg free
  2895                           
  2896                           ;RF24Network_cg.c: 205: i = 6;
  2897  002CE8  0E06               	movlw	6
  2898  002CEA  6E2B               	movwf	RF24N_begin_d@i,c
  2899                           
  2900                           ;RF24Network_cg.c: 206: while (i--){
  2901  002CEC  D013               	goto	l4698
  2902  002CEE                     l4694:
  2903                           
  2904                           ;RF24Network_cg.c: 207: raddr_t addr[5];
  2905                           ;RF24Network_cg.c: 208: RF24N_pipe_address(_node_address,i,addr);
  2906  002CEE  C022  F003         	movff	RF24N_begin_d@_node_address,RF24N_pipe_address@node
  2907  002CF2  C023  F004         	movff	RF24N_begin_d@_node_address+1,RF24N_pipe_address@node+1
  2908  002CF6  C02B  F005         	movff	RF24N_begin_d@i,RF24N_pipe_address@pipe
  2909  002CFA  0E24               	movlw	low RF24N_begin_d@addr
  2910  002CFC  6E06               	movwf	RF24N_pipe_address@address,c
  2911  002CFE  0E00               	movlw	high RF24N_begin_d@addr
  2912  002D00  6E07               	movwf	RF24N_pipe_address@address+1,c
  2913  002D02  ECBF  F013         	call	_RF24N_pipe_address	;wreg free
  2914                           
  2915                           ;RF24Network_cg.c: 209: RF24_openReadingPipe_d(i,addr);
  2916  002D06  0E24               	movlw	low RF24N_begin_d@addr
  2917  002D08  6E11               	movwf	RF24_openReadingPipe_d@address_,c
  2918  002D0A  0E00               	movlw	high RF24N_begin_d@addr
  2919  002D0C  6E12               	movwf	RF24_openReadingPipe_d@address_+1,c
  2920  002D0E  502B               	movf	RF24N_begin_d@i,w,c
  2921  002D10  EC4E  F014         	call	_RF24_openReadingPipe_d
  2922  002D14                     l4698:
  2923  002D14  062B               	decf	RF24N_begin_d@i,f,c
  2924  002D16  282B               	incf	RF24N_begin_d@i,w,c
  2925  002D18  A4D8               	btfss	status,2,c
  2926  002D1A  D7E9               	goto	l4694
  2927                           
  2928                           ;RF24Network_cg.c: 210: }
  2929                           ;RF24Network_cg.c: 211: RF24_startListening();
  2930  002D1C  ECE2  F019         	call	_RF24_startListening	;wreg free
  2931  002D20  0012               	return		;funcret
  2932  002D22                     __end_of_RF24N_begin_d:
  2933                           	opt stack 0
  2934                           tblptru	equ	0xFF8
  2935                           tblptrh	equ	0xFF7
  2936                           tblptrl	equ	0xFF6
  2937                           tablat	equ	0xFF5
  2938                           intcon	equ	0xFF2
  2939                           postinc0	equ	0xFEE
  2940                           wreg	equ	0xFE8
  2941                           postdec2	equ	0xFDD
  2942                           fsr2h	equ	0xFDA
  2943                           fsr2l	equ	0xFD9
  2944                           status	equ	0xFD8
  2945                           
  2946 ;; *************** function _RF24_setRetries *****************
  2947 ;; Defined at:
  2948 ;;		line 1580 in file "../../../RF24_c/RF24_cg.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  delay           1    wreg     unsigned char 
  2951 ;;  count           1   16[COMRAM] unsigned char 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  delay           1   19[COMRAM] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2963 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;Total ram usage:        4 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    5
  2970 ;; This function calls:
  2971 ;;		_RF24_write_register_d
  2972 ;; This function is called by:
  2973 ;;		_RF24_begin
  2974 ;;		_RF24N_begin_d
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text12
  2979  003A3C                     __ptext12:
  2980                           	opt stack 0
  2981  003A3C                     _RF24_setRetries:
  2982                           	opt stack 23
  2983                           
  2984                           ;incstack = 0
  2985                           ;RF24_setRetries@delay stored from wreg
  2986  003A3C  6E14               	movwf	RF24_setRetries@delay,c
  2987                           
  2988                           ;RF24_cg.c: 1582: RF24_write_register_d(0x04,(delay&0xf)<<4 | (count&0xf)<<0);
  2989  003A3E  C011  F012         	movff	RF24_setRetries@count,??_RF24_setRetries
  2990  003A42  0E0F               	movlw	15
  2991  003A44  1612               	andwf	??_RF24_setRetries,f,c
  2992  003A46  C014  F013         	movff	RF24_setRetries@delay,??_RF24_setRetries+1
  2993  003A4A  0E0F               	movlw	15
  2994  003A4C  1613               	andwf	??_RF24_setRetries+1,f,c
  2995  003A4E  3813               	swapf	??_RF24_setRetries+1,w,c
  2996  003A50  0BF0               	andlw	240
  2997  003A52  1012               	iorwf	??_RF24_setRetries,w,c
  2998  003A54  6E0E               	movwf	RF24_write_register_d@value,c
  2999  003A56  0E04               	movlw	4
  3000  003A58  EC40  F01D         	call	_RF24_write_register_d
  3001  003A5C  0012               	return		;funcret
  3002  003A5E                     __end_of_RF24_setRetries:
  3003                           	opt stack 0
  3004                           tblptru	equ	0xFF8
  3005                           tblptrh	equ	0xFF7
  3006                           tblptrl	equ	0xFF6
  3007                           tablat	equ	0xFF5
  3008                           intcon	equ	0xFF2
  3009                           postinc0	equ	0xFEE
  3010                           wreg	equ	0xFE8
  3011                           postdec2	equ	0xFDD
  3012                           fsr2h	equ	0xFDA
  3013                           fsr2l	equ	0xFD9
  3014                           status	equ	0xFD8
  3015                           
  3016 ;; *************** function _RF24_setChannel *****************
  3017 ;; Defined at:
  3018 ;;		line 464 in file "../../../RF24_c/RF24_cg.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  channel         1    wreg     unsigned char 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  channel         1   18[COMRAM] unsigned char 
  3023 ;;  max_channel     1   19[COMRAM] const unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      void 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2, status,0, cstack
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;Total ram usage:        4 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    5
  3040 ;; This function calls:
  3041 ;;		_RF24_write_register_d
  3042 ;; This function is called by:
  3043 ;;		_RF24_begin
  3044 ;;		_RF24N_begin_d
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text13
  3049  0039A4                     __ptext13:
  3050                           	opt stack 0
  3051  0039A4                     _RF24_setChannel:
  3052                           	opt stack 23
  3053                           
  3054                           ;incstack = 0
  3055                           ;RF24_setChannel@channel stored from wreg
  3056  0039A4  6E13               	movwf	RF24_setChannel@channel,c
  3057                           
  3058                           ;RF24_cg.c: 466: const uint8_t max_channel = 125;
  3059  0039A6  0E7D               	movlw	125
  3060  0039A8  6E14               	movwf	RF24_setChannel@max_channel,c
  3061                           
  3062                           ;RF24_cg.c: 467: RF24_write_register_d(0x05,(channel<max_channel?channel:max_channel));
  3063  0039AA  5014               	movf	RF24_setChannel@max_channel,w,c
  3064  0039AC  5C13               	subwf	RF24_setChannel@channel,w,c
  3065  0039AE  A0D8               	btfss	status,0,c
  3066  0039B0  D003               	goto	l430
  3067  0039B2  C014  F011         	movff	RF24_setChannel@max_channel,_RF24_setChannel$1923
  3068  0039B6  D002               	goto	L2
  3069  0039B8                     l430:
  3070  0039B8  C013  F011         	movff	RF24_setChannel@channel,_RF24_setChannel$1923
  3071  0039BC                     L2:
  3072  0039BC  6A12               	clrf	_RF24_setChannel$1923+1,c
  3073  0039BE  C011  F00E         	movff	_RF24_setChannel$1923,RF24_write_register_d@value
  3074  0039C2  0E05               	movlw	5
  3075  0039C4  EC40  F01D         	call	_RF24_write_register_d
  3076  0039C8  0012               	return		;funcret
  3077  0039CA                     __end_of_RF24_setChannel:
  3078                           	opt stack 0
  3079                           tblptru	equ	0xFF8
  3080                           tblptrh	equ	0xFF7
  3081                           tblptrl	equ	0xFF6
  3082                           tablat	equ	0xFF5
  3083                           intcon	equ	0xFF2
  3084                           postinc0	equ	0xFEE
  3085                           wreg	equ	0xFE8
  3086                           postdec2	equ	0xFDD
  3087                           fsr2h	equ	0xFDA
  3088                           fsr2l	equ	0xFD9
  3089                           status	equ	0xFD8
  3090                           
  3091 ;; *************** function _RF24_openReadingPipe_d *****************
  3092 ;; Defined at:
  3093 ;;		line 1187 in file "../../../RF24_c/RF24_cg.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  child           1    wreg     unsigned char 
  3096 ;;  address_        2   16[COMRAM] PTR const unsigned char 
  3097 ;;		 -> RF24N_multicastLevel@addr(5), RF24N_begin_d@addr(5), 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  child           1   26[COMRAM] unsigned char 
  3100 ;;  address         5   20[COMRAM] unsigned char [5]
  3101 ;;  i               1   25[COMRAM] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;Total ram usage:       11 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    5
  3118 ;; This function calls:
  3119 ;;		_RF24_read_register_d
  3120 ;;		_RF24_write_register_c_d
  3121 ;;		_RF24_write_register_d
  3122 ;;		_memcpy
  3123 ;; This function is called by:
  3124 ;;		_RF24N_begin_d
  3125 ;;		_RF24N_multicastLevel
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text14
  3130  00289C                     __ptext14:
  3131                           	opt stack 0
  3132  00289C                     _RF24_openReadingPipe_d:
  3133                           	opt stack 23
  3134                           
  3135                           ;incstack = 0
  3136                           ;RF24_openReadingPipe_d@child stored from wreg
  3137  00289C  6E1B               	movwf	RF24_openReadingPipe_d@child,c
  3138                           
  3139                           ;RF24_cg.c: 1189: uint8_t i;
  3140                           ;RF24_cg.c: 1190: raddr_t address[5];
  3141                           ;RF24_cg.c: 1191: for(i=0;i<5;i++)
  3142  00289E  0E00               	movlw	0
  3143  0028A0  6E1A               	movwf	RF24_openReadingPipe_d@i,c
  3144  0028A2                     l4376:
  3145  0028A2  0E04               	movlw	4
  3146  0028A4  641A               	cpfsgt	RF24_openReadingPipe_d@i,c
  3147  0028A6  D001               	goto	l4380
  3148  0028A8  D01D               	goto	l4386
  3149  0028AA                     l4380:
  3150                           
  3151                           ;RF24_cg.c: 1192: {
  3152                           ;RF24_cg.c: 1193: address[i]=address_[4-i];
  3153  0028AA  501A               	movf	RF24_openReadingPipe_d@i,w,c
  3154  0028AC  6E13               	movwf	??_RF24_openReadingPipe_d& (0+255),c
  3155  0028AE  6A14               	clrf	(??_RF24_openReadingPipe_d+1)& (0+255),c
  3156  0028B0  1E13               	comf	??_RF24_openReadingPipe_d,f,c
  3157  0028B2  1E14               	comf	??_RF24_openReadingPipe_d+1,f,c
  3158  0028B4  4A13               	infsnz	??_RF24_openReadingPipe_d,f,c
  3159  0028B6  2A14               	incf	??_RF24_openReadingPipe_d+1,f,c
  3160  0028B8  0E04               	movlw	4
  3161  0028BA  2613               	addwf	??_RF24_openReadingPipe_d,f,c
  3162  0028BC  0E00               	movlw	0
  3163  0028BE  2214               	addwfc	??_RF24_openReadingPipe_d+1,f,c
  3164  0028C0  5013               	movf	??_RF24_openReadingPipe_d,w,c
  3165  0028C2  2411               	addwf	RF24_openReadingPipe_d@address_,w,c
  3166  0028C4  6ED9               	movwf	fsr2l,c
  3167  0028C6  5014               	movf	??_RF24_openReadingPipe_d+1,w,c
  3168  0028C8  2012               	addwfc	RF24_openReadingPipe_d@address_+1,w,c
  3169  0028CA  6EDA               	movwf	fsr2h,c
  3170  0028CC  501A               	movf	RF24_openReadingPipe_d@i,w,c
  3171  0028CE  0D01               	mullw	1
  3172  0028D0  0E15               	movlw	low RF24_openReadingPipe_d@address
  3173  0028D2  24F3               	addwf	prodl,w,c
  3174  0028D4  6EE9               	movwf	fsr0l,c
  3175  0028D6  0E00               	movlw	high RF24_openReadingPipe_d@address
  3176  0028D8  20F4               	addwfc	prodh,w,c
  3177  0028DA  6EEA               	movwf	fsr0h,c
  3178  0028DC  CFDF FFEF          	movff	indf2,indf0
  3179  0028E0  2A1A               	incf	RF24_openReadingPipe_d@i,f,c
  3180  0028E2  D7DF               	goto	l4376
  3181  0028E4                     l4386:
  3182                           
  3183                           ;RF24_cg.c: 1194: }
  3184                           ;RF24_cg.c: 1198: if (child == 0){
  3185  0028E4  501B               	movf	RF24_openReadingPipe_d@child,w,c
  3186  0028E6  A4D8               	btfss	status,2,c
  3187  0028E8  D00D               	goto	l4390
  3188                           
  3189                           ;RF24_cg.c: 1199: memcpy(rf.pipe0_reading_address,address,rf.addr_width);
  3190  0028EA  0E93               	movlw	low (_rf+7)
  3191  0028EC  6E03               	movwf	memcpy@d1,c
  3192  0028EE  0E00               	movlw	high (_rf+7)
  3193  0028F0  6E04               	movwf	memcpy@d1+1,c
  3194  0028F2  0E15               	movlw	low RF24_openReadingPipe_d@address
  3195  0028F4  6E05               	movwf	memcpy@s1,c
  3196  0028F6  0E00               	movlw	high RF24_openReadingPipe_d@address
  3197  0028F8  6E06               	movwf	memcpy@s1+1,c
  3198  0028FA  C098  F007         	movff	_rf+12,memcpy@n
  3199  0028FE  6A08               	clrf	memcpy@n+1,c
  3200  002900  EC5A  F01B         	call	_memcpy	;wreg free
  3201  002904                     l4390:
  3202                           
  3203                           ;RF24_cg.c: 1200: }
  3204                           ;RF24_cg.c: 1202: if (child <= 6)
  3205  002904  0E07               	movlw	7
  3206  002906  601B               	cpfslt	RF24_openReadingPipe_d@child,c
  3207  002908  0012               	return	
  3208                           
  3209                           ;RF24_cg.c: 1203: {
  3210                           ;RF24_cg.c: 1205: if ( child < 2 )
  3211  00290A  0E02               	movlw	2
  3212  00290C  601B               	cpfslt	RF24_openReadingPipe_d@child,c
  3213  00290E  D013               	goto	l4396
  3214                           
  3215                           ;RF24_cg.c: 1206: RF24_write_register_c_d((*(&child_pipe[child])), (const uint8_t*)(addr
      +                          ess), rf.addr_width);
  3216  002910  0E15               	movlw	low RF24_openReadingPipe_d@address
  3217  002912  6E0C               	movwf	RF24_write_register_c_d@buf,c
  3218  002914  0E00               	movlw	high RF24_openReadingPipe_d@address
  3219  002916  6E0D               	movwf	RF24_write_register_c_d@buf+1,c
  3220  002918  C098  F00E         	movff	_rf+12,RF24_write_register_c_d@len
  3221  00291C  501B               	movf	RF24_openReadingPipe_d@child,w,c
  3222  00291E  0D01               	mullw	1
  3223  002920  0E07               	movlw	low _child_pipe
  3224  002922  24F3               	addwf	prodl,w,c
  3225  002924  6EF6               	movwf	tblptrl,c
  3226  002926  0E10               	movlw	high _child_pipe
  3227  002928  20F4               	addwfc	prodh,w,c
  3228  00292A  6EF7               	movwf	tblptrh,c
  3229  00292C                     	if	0	;There are less than 3 active tblptr bytes
  3230  00292C                     	endif
  3231  00292C  0008               	tblrd		*
  3232  00292E  50F5               	movf	tablat,w,c
  3233  002930  EC45  F01C         	call	_RF24_write_register_c_d
  3234  002934  D012               	goto	l4398
  3235  002936                     l4396:
  3236                           
  3237                           ;RF24_cg.c: 1207: else
  3238                           ;RF24_cg.c: 1208: RF24_write_register_c_d((*(&child_pipe[child])), (const uint8_t*)(addr
      +                          ess), 1);
  3239  002936  0E15               	movlw	low RF24_openReadingPipe_d@address
  3240  002938  6E0C               	movwf	RF24_write_register_c_d@buf,c
  3241  00293A  0E00               	movlw	high RF24_openReadingPipe_d@address
  3242  00293C  6E0D               	movwf	RF24_write_register_c_d@buf+1,c
  3243  00293E  0E01               	movlw	1
  3244  002940  6E0E               	movwf	RF24_write_register_c_d@len,c
  3245  002942  501B               	movf	RF24_openReadingPipe_d@child,w,c
  3246  002944  0D01               	mullw	1
  3247  002946  0E07               	movlw	low _child_pipe
  3248  002948  24F3               	addwf	prodl,w,c
  3249  00294A  6EF6               	movwf	tblptrl,c
  3250  00294C  0E10               	movlw	high _child_pipe
  3251  00294E  20F4               	addwfc	prodh,w,c
  3252  002950  6EF7               	movwf	tblptrh,c
  3253  002952                     	if	0	;There are less than 3 active tblptr bytes
  3254  002952                     	endif
  3255  002952  0008               	tblrd		*
  3256  002954  50F5               	movf	tablat,w,c
  3257  002956  EC45  F01C         	call	_RF24_write_register_c_d
  3258  00295A                     l4398:
  3259                           
  3260                           ;RF24_cg.c: 1210: RF24_write_register_d((*(&child_payload_size[child])),rf.payload_size)
      +                          ;
  3261  00295A  C091  F00E         	movff	_rf+5,RF24_write_register_d@value
  3262  00295E  501B               	movf	RF24_openReadingPipe_d@child,w,c
  3263  002960  0D01               	mullw	1
  3264  002962  0E01               	movlw	low _child_payload_size
  3265  002964  24F3               	addwf	prodl,w,c
  3266  002966  6EF6               	movwf	tblptrl,c
  3267  002968  0E10               	movlw	high _child_payload_size
  3268  00296A  20F4               	addwfc	prodh,w,c
  3269  00296C  6EF7               	movwf	tblptrh,c
  3270  00296E                     	if	0	;There are less than 3 active tblptr bytes
  3271  00296E                     	endif
  3272  00296E  0008               	tblrd		*
  3273  002970  50F5               	movf	tablat,w,c
  3274  002972  EC40  F01D         	call	_RF24_write_register_d
  3275                           
  3276                           ;RF24_cg.c: 1215: RF24_write_register_d(0x02,RF24_read_register_d(0x02) | (1<<((*(&child
      +                          _pipe_enable[child])))));
  3277  002976  501B               	movf	RF24_openReadingPipe_d@child,w,c
  3278  002978  0D01               	mullw	1
  3279  00297A  0E0D               	movlw	low _child_pipe_enable
  3280  00297C  24F3               	addwf	prodl,w,c
  3281  00297E  6EF6               	movwf	tblptrl,c
  3282  002980  0E10               	movlw	high _child_pipe_enable
  3283  002982  20F4               	addwfc	prodh,w,c
  3284  002984  6EF7               	movwf	tblptrh,c
  3285  002986                     	if	0	;There are less than 3 active tblptr bytes
  3286  002986                     	endif
  3287  002986  0008               	tblrd		*
  3288  002988  CFF5 F013          	movff	tablat,??_RF24_openReadingPipe_d
  3289  00298C  0E01               	movlw	1
  3290  00298E  6E14               	movwf	(??_RF24_openReadingPipe_d+1)& (0+255),c
  3291  002990  2A13               	incf	??_RF24_openReadingPipe_d,f,c
  3292  002992  D002               	goto	u5364
  3293  002994                     u5365:
  3294  002994  90D8               	bcf	status,0,c
  3295  002996  3614               	rlcf	??_RF24_openReadingPipe_d+1,f,c
  3296  002998                     u5364:
  3297  002998  2E13               	decfsz	??_RF24_openReadingPipe_d,f,c
  3298  00299A  D7FC               	goto	u5365
  3299  00299C  0E02               	movlw	2
  3300  00299E  EC50  F01D         	call	_RF24_read_register_d
  3301  0029A2  1014               	iorwf	??_RF24_openReadingPipe_d+1,w,c
  3302  0029A4  6E0E               	movwf	RF24_write_register_d@value,c
  3303  0029A6  0E02               	movlw	2
  3304  0029A8  EC40  F01D         	call	_RF24_write_register_d
  3305  0029AC  0012               	return	
  3306  0029AE                     __end_of_RF24_openReadingPipe_d:
  3307                           	opt stack 0
  3308                           tblptru	equ	0xFF8
  3309                           tblptrh	equ	0xFF7
  3310                           tblptrl	equ	0xFF6
  3311                           tablat	equ	0xFF5
  3312                           prodh	equ	0xFF4
  3313                           prodl	equ	0xFF3
  3314                           intcon	equ	0xFF2
  3315                           indf0	equ	0xFEF
  3316                           postinc0	equ	0xFEE
  3317                           fsr0h	equ	0xFEA
  3318                           fsr0l	equ	0xFE9
  3319                           wreg	equ	0xFE8
  3320                           indf2	equ	0xFDF
  3321                           postdec2	equ	0xFDD
  3322                           fsr2h	equ	0xFDA
  3323                           fsr2l	equ	0xFD9
  3324                           status	equ	0xFD8
  3325                           
  3326 ;; *************** function _RF24_enableDynamicPayloads *****************
  3327 ;; Defined at:
  3328 ;;		line 1276 in file "../../../RF24_c/RF24_cg.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;		None
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3346 ;;Total ram usage:        0 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    5
  3349 ;; This function calls:
  3350 ;;		_RF24_read_register_d
  3351 ;;		_RF24_write_register_d
  3352 ;; This function is called by:
  3353 ;;		_RF24N_begin_d
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text15
  3358  00397C                     __ptext15:
  3359                           	opt stack 0
  3360  00397C                     _RF24_enableDynamicPayloads:
  3361                           	opt stack 23
  3362                           
  3363                           ;RF24_cg.c: 1281: RF24_write_register_d(0x1D,RF24_read_register_d(0x1D) | (1<<(2)) );
  3364                           
  3365                           ;incstack = 0
  3366  00397C  0E1D               	movlw	29
  3367  00397E  EC50  F01D         	call	_RF24_read_register_d
  3368  003982  0904               	iorlw	4
  3369  003984  6E0E               	movwf	RF24_write_register_d@value,c
  3370  003986  0E1D               	movlw	29
  3371  003988  EC40  F01D         	call	_RF24_write_register_d
  3372                           
  3373                           ;RF24_cg.c: 1284: ;
  3374                           ;RF24_cg.c: 1290: RF24_write_register_d(0x1C,RF24_read_register_d(0x1C) | (1<<(5)) | (1<
      +                          <(4)) | (1<<(3)) | (1<<(2)) | (1<<(1)) | (1<<(0)));
  3375  00398C  0E1C               	movlw	28
  3376  00398E  EC50  F01D         	call	_RF24_read_register_d
  3377  003992  093F               	iorlw	63
  3378  003994  6E0E               	movwf	RF24_write_register_d@value,c
  3379  003996  0E1C               	movlw	28
  3380  003998  EC40  F01D         	call	_RF24_write_register_d
  3381                           
  3382                           ;RF24_cg.c: 1292: rf.dynamic_payloads_enabled = 1;
  3383  00399C  0E01               	movlw	1
  3384  00399E  0100               	movlb	0	; () banked
  3385  0039A0  6F92               	movwf	(_rf+6)& (0+255),b
  3386                           
  3387                           ; BSR set to: 0
  3388  0039A2  0012               	return		;funcret
  3389  0039A4                     __end_of_RF24_enableDynamicPayloads:
  3390                           	opt stack 0
  3391                           tblptru	equ	0xFF8
  3392                           tblptrh	equ	0xFF7
  3393                           tblptrl	equ	0xFF6
  3394                           tablat	equ	0xFF5
  3395                           prodh	equ	0xFF4
  3396                           prodl	equ	0xFF3
  3397                           intcon	equ	0xFF2
  3398                           indf0	equ	0xFEF
  3399                           postinc0	equ	0xFEE
  3400                           fsr0h	equ	0xFEA
  3401                           fsr0l	equ	0xFE9
  3402                           wreg	equ	0xFE8
  3403                           indf2	equ	0xFDF
  3404                           postdec2	equ	0xFDD
  3405                           fsr2h	equ	0xFDA
  3406                           fsr2l	equ	0xFD9
  3407                           status	equ	0xFD8
  3408                           
  3409 ;; *************** function _RF24N_setup_address *****************
  3410 ;; Defined at:
  3411 ;;		line 1225 in file "../../RF24Network_cg.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;		None
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  node_mask_ch    2   11[COMRAM] unsigned int 
  3416 ;;  parent_mask     2    9[COMRAM] unsigned int 
  3417 ;;  m               2    6[COMRAM] unsigned int 
  3418 ;;  i               2    4[COMRAM] unsigned int 
  3419 ;;  count           1    8[COMRAM] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3432 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;Total ram usage:       11 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    1
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_RF24N_begin_d
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text16
  3444  002B6E                     __ptext16:
  3445                           	opt stack 0
  3446  002B6E                     _RF24N_setup_address:
  3447                           	opt stack 27
  3448                           
  3449                           ;RF24Network_cg.c: 1228: uint16_t node_mask_check = 0xFFFF;
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;incstack = 0
  3453  002B6E  680C               	setf	RF24N_setup_address@node_mask_check,c
  3454  002B70  680D               	setf	RF24N_setup_address@node_mask_check+1,c
  3455                           
  3456                           ;RF24Network_cg.c: 1230: uint8_t count = 0;
  3457  002B72  0E00               	movlw	0
  3458  002B74  6E09               	movwf	RF24N_setup_address@count,c
  3459                           
  3460                           ;RF24Network_cg.c: 1232: uint16_t i;
  3461                           ;RF24Network_cg.c: 1233: uint16_t m;
  3462                           ;RF24Network_cg.c: 1234: uint16_t parent_mask;
  3463                           ;RF24Network_cg.c: 1236: while ( rn.node_address & node_mask_check ){
  3464  002B76  D00A               	goto	l4412
  3465  002B78                     l4410:
  3466                           
  3467                           ;RF24Network_cg.c: 1237: node_mask_check <<= 3;
  3468  002B78  90D8               	bcf	status,0,c
  3469  002B7A  360C               	rlcf	RF24N_setup_address@node_mask_check,f,c
  3470  002B7C  360D               	rlcf	RF24N_setup_address@node_mask_check+1,f,c
  3471  002B7E  90D8               	bcf	status,0,c
  3472  002B80  360C               	rlcf	RF24N_setup_address@node_mask_check,f,c
  3473  002B82  360D               	rlcf	RF24N_setup_address@node_mask_check+1,f,c
  3474  002B84  90D8               	bcf	status,0,c
  3475  002B86  360C               	rlcf	RF24N_setup_address@node_mask_check,f,c
  3476  002B88  360D               	rlcf	RF24N_setup_address@node_mask_check+1,f,c
  3477                           
  3478                           ;RF24Network_cg.c: 1239: count++;
  3479  002B8A  2A09               	incf	RF24N_setup_address@count,f,c
  3480  002B8C                     l4412:
  3481  002B8C  EE21  F005         	lfsr	2,_rn+48
  3482  002B90  CFDE F003          	movff	postinc2,??_RF24N_setup_address
  3483  002B94  CFDD F004          	movff	postdec2,??_RF24N_setup_address+1
  3484  002B98  500C               	movf	RF24N_setup_address@node_mask_check,w,c
  3485  002B9A  1603               	andwf	??_RF24N_setup_address,f,c
  3486  002B9C  500D               	movf	RF24N_setup_address@node_mask_check+1,w,c
  3487  002B9E  1604               	andwf	??_RF24N_setup_address+1,f,c
  3488  002BA0  5003               	movf	??_RF24N_setup_address,w,c
  3489  002BA2  1004               	iorwf	??_RF24N_setup_address+1,w,c
  3490  002BA4  A4D8               	btfss	status,2,c
  3491  002BA6  D7E8               	goto	l4410
  3492                           
  3493                           ;RF24Network_cg.c: 1240: }
  3494                           ;RF24Network_cg.c: 1241: rn.multicast_level = count;
  3495  002BA8  EE21  F004         	lfsr	2,_rn+47
  3496  002BAC  C009  FFDF         	movff	RF24N_setup_address@count,indf2
  3497                           
  3498                           ;RF24Network_cg.c: 1246: rn.node_mask = ~ node_mask_check;
  3499  002BB0  1C0C               	comf	RF24N_setup_address@node_mask_check,w,c
  3500  002BB2  6E03               	movwf	??_RF24N_setup_address& (0+255),c
  3501  002BB4  1C0D               	comf	RF24N_setup_address@node_mask_check+1,w,c
  3502  002BB6  6E04               	movwf	(??_RF24N_setup_address+1)& (0+255),c
  3503  002BB8  C003  F10D         	movff	??_RF24N_setup_address,_rn+56
  3504  002BBC  C004  F10E         	movff	??_RF24N_setup_address+1,_rn+57
  3505                           
  3506                           ;RF24Network_cg.c: 1249: parent_mask = rn.node_mask >> 3;
  3507  002BC0  EE21  F00D         	lfsr	2,_rn+56
  3508  002BC4  CFDE F003          	movff	postinc2,??_RF24N_setup_address
  3509  002BC8  CFDD F004          	movff	postdec2,??_RF24N_setup_address+1
  3510  002BCC  90D8               	bcf	status,0,c
  3511  002BCE  3204               	rrcf	??_RF24N_setup_address+1,f,c
  3512  002BD0  3203               	rrcf	??_RF24N_setup_address,f,c
  3513  002BD2  90D8               	bcf	status,0,c
  3514  002BD4  3204               	rrcf	??_RF24N_setup_address+1,f,c
  3515  002BD6  3203               	rrcf	??_RF24N_setup_address,f,c
  3516  002BD8  90D8               	bcf	status,0,c
  3517  002BDA  3204               	rrcf	??_RF24N_setup_address+1,f,c
  3518  002BDC  3203               	rrcf	??_RF24N_setup_address,f,c
  3519  002BDE  C003  F00A         	movff	??_RF24N_setup_address,RF24N_setup_address@parent_mask
  3520  002BE2  C004  F00B         	movff	??_RF24N_setup_address+1,RF24N_setup_address@parent_mask+1
  3521                           
  3522                           ;RF24Network_cg.c: 1252: rn.parent_node = rn.node_address & parent_mask;
  3523  002BE6  EE21  F005         	lfsr	2,_rn+48
  3524  002BEA  CFDE F003          	movff	postinc2,??_RF24N_setup_address
  3525  002BEE  CFDD F004          	movff	postdec2,??_RF24N_setup_address+1
  3526  002BF2  500A               	movf	RF24N_setup_address@parent_mask,w,c
  3527  002BF4  1603               	andwf	??_RF24N_setup_address,f,c
  3528  002BF6  500B               	movf	RF24N_setup_address@parent_mask+1,w,c
  3529  002BF8  1604               	andwf	??_RF24N_setup_address+1,f,c
  3530  002BFA  C003  F10A         	movff	??_RF24N_setup_address,_rn+53
  3531  002BFE  C004  F10B         	movff	??_RF24N_setup_address+1,_rn+54
  3532                           
  3533                           ;RF24Network_cg.c: 1255: i = rn.node_address;
  3534  002C02  C105  F005         	movff	_rn+48,RF24N_setup_address@i
  3535  002C06  C106  F006         	movff	_rn+49,RF24N_setup_address@i+1
  3536                           
  3537                           ;RF24Network_cg.c: 1256: m = parent_mask;
  3538  002C0A  C00A  F007         	movff	RF24N_setup_address@parent_mask,RF24N_setup_address@m
  3539  002C0E  C00B  F008         	movff	RF24N_setup_address@parent_mask+1,RF24N_setup_address@m+1
  3540                           
  3541                           ;RF24Network_cg.c: 1257: while (m)
  3542  002C12  D012               	goto	l4428
  3543  002C14                     l4426:
  3544                           
  3545                           ;RF24Network_cg.c: 1258: {
  3546                           ;RF24Network_cg.c: 1259: i >>= 3;
  3547  002C14  90D8               	bcf	status,0,c
  3548  002C16  3206               	rrcf	RF24N_setup_address@i+1,f,c
  3549  002C18  3205               	rrcf	RF24N_setup_address@i,f,c
  3550  002C1A  90D8               	bcf	status,0,c
  3551  002C1C  3206               	rrcf	RF24N_setup_address@i+1,f,c
  3552  002C1E  3205               	rrcf	RF24N_setup_address@i,f,c
  3553  002C20  90D8               	bcf	status,0,c
  3554  002C22  3206               	rrcf	RF24N_setup_address@i+1,f,c
  3555  002C24  3205               	rrcf	RF24N_setup_address@i,f,c
  3556                           
  3557                           ;RF24Network_cg.c: 1260: m >>= 3;
  3558  002C26  90D8               	bcf	status,0,c
  3559  002C28  3208               	rrcf	RF24N_setup_address@m+1,f,c
  3560  002C2A  3207               	rrcf	RF24N_setup_address@m,f,c
  3561  002C2C  90D8               	bcf	status,0,c
  3562  002C2E  3208               	rrcf	RF24N_setup_address@m+1,f,c
  3563  002C30  3207               	rrcf	RF24N_setup_address@m,f,c
  3564  002C32  90D8               	bcf	status,0,c
  3565  002C34  3208               	rrcf	RF24N_setup_address@m+1,f,c
  3566  002C36  3207               	rrcf	RF24N_setup_address@m,f,c
  3567  002C38                     l4428:
  3568  002C38  5007               	movf	RF24N_setup_address@m,w,c
  3569  002C3A  1008               	iorwf	RF24N_setup_address@m+1,w,c
  3570  002C3C  A4D8               	btfss	status,2,c
  3571  002C3E  D7EA               	goto	l4426
  3572                           
  3573                           ;RF24Network_cg.c: 1261: }
  3574                           ;RF24Network_cg.c: 1262: rn.parent_pipe = i;
  3575  002C40  EE21  F00C         	lfsr	2,_rn+55
  3576  002C44  C005  FFDF         	movff	RF24N_setup_address@i,indf2
  3577  002C48  0012               	return		;funcret
  3578  002C4A                     __end_of_RF24N_setup_address:
  3579                           	opt stack 0
  3580                           tblptru	equ	0xFF8
  3581                           tblptrh	equ	0xFF7
  3582                           tblptrl	equ	0xFF6
  3583                           tablat	equ	0xFF5
  3584                           prodh	equ	0xFF4
  3585                           prodl	equ	0xFF3
  3586                           intcon	equ	0xFF2
  3587                           indf0	equ	0xFEF
  3588                           postinc0	equ	0xFEE
  3589                           fsr0h	equ	0xFEA
  3590                           fsr0l	equ	0xFE9
  3591                           wreg	equ	0xFE8
  3592                           indf2	equ	0xFDF
  3593                           postinc2	equ	0xFDE
  3594                           postdec2	equ	0xFDD
  3595                           fsr2h	equ	0xFDA
  3596                           fsr2l	equ	0xFD9
  3597                           status	equ	0xFD8
  3598                           
  3599 ;; *************** function _loop *****************
  3600 ;; Defined at:
  3601 ;;		line 52 in file "helloworld_tx.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;		None
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  header          8   21[BANK0 ] struct .
  3606 ;;  payload         8   13[BANK0 ] struct .
  3607 ;;  ok              1    8[BANK0 ] unsigned char 
  3608 ;;  now             4    9[BANK0 ] unsigned long 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;Total ram usage:       29 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:   13
  3625 ;; This function calls:
  3626 ;;		_RF24NH_init
  3627 ;;		_RF24N_update
  3628 ;;		_RF24N_write_m
  3629 ;;		_Serial_print
  3630 ;;		_Serial_println
  3631 ;;		_millis
  3632 ;; This function is called by:
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text17
  3638  00262E                     __ptext17:
  3639                           	opt stack 0
  3640  00262E                     _loop:
  3641                           	opt stack 17
  3642                           
  3643                           ;helloworld_tx.c: 53: unsigned long now ;
  3644                           ;helloworld_tx.c: 54: RF24N_update();
  3645                           
  3646                           ;incstack = 0
  3647  00262E  ECE7  F00A         	call	_RF24N_update	;wreg free
  3648                           
  3649                           ;helloworld_tx.c: 57: now = millis();
  3650  002632  ECC5  F01D         	call	_millis	;wreg free
  3651  002636  C003  F0B5         	movff	?_millis,loop@now
  3652  00263A  C004  F0B6         	movff	?_millis+1,loop@now+1
  3653  00263E  C005  F0B7         	movff	?_millis+2,loop@now+2
  3654  002642  C006  F0B8         	movff	?_millis+3,loop@now+3
  3655                           
  3656                           ;helloworld_tx.c: 58: if ( now - last_sent >= interval )
  3657  002646  0E13               	movlw	low _interval
  3658  002648  6EF6               	movwf	tblptrl,c
  3659  00264A                     	if	1	;There is more than 1 active tblptr byte
  3660  00264A  0E10               	movlw	high _interval
  3661  00264C  6EF7               	movwf	tblptrh,c
  3662  00264E                     	endif
  3663  00264E                     	if	0	;There are less than 3 active tblptr bytes
  3664  00264E                     	endif
  3665  00264E  C080  F0AC         	movff	_last_sent,??_loop
  3666  002652  C081  F0AD         	movff	_last_sent+1,??_loop+1
  3667  002656  C082  F0AE         	movff	_last_sent+2,??_loop+2
  3668  00265A  C083  F0AF         	movff	_last_sent+3,??_loop+3
  3669  00265E  0100               	movlb	0	; () banked
  3670  002660  1FAC               	comf	??_loop& (0+255),f,b
  3671  002662  1FAD               	comf	(??_loop+1)& (0+255),f,b
  3672  002664  1FAE               	comf	(??_loop+2)& (0+255),f,b
  3673  002666  1FAF               	comf	(??_loop+3)& (0+255),f,b
  3674  002668  2BAC               	incf	??_loop& (0+255),f,b
  3675  00266A  0E00               	movlw	0
  3676  00266C  23AD               	addwfc	(??_loop+1)& (0+255),f,b
  3677  00266E  23AE               	addwfc	(??_loop+2)& (0+255),f,b
  3678  002670  23AF               	addwfc	(??_loop+3)& (0+255),f,b
  3679  002672  0100               	movlb	0	; () banked
  3680  002674  51B5               	movf	loop@now& (0+255),w,b
  3681  002676  0100               	movlb	0	; () banked
  3682  002678  25AC               	addwf	??_loop& (0+255),w,b
  3683  00267A  0100               	movlb	0	; () banked
  3684  00267C  6FB0               	movwf	(??_loop+4)& (0+255),b
  3685  00267E  0100               	movlb	0	; () banked
  3686  002680  51B6               	movf	(loop@now+1)& (0+255),w,b
  3687  002682  0100               	movlb	0	; () banked
  3688  002684  21AD               	addwfc	(??_loop+1)& (0+255),w,b
  3689  002686  0100               	movlb	0	; () banked
  3690  002688  6FB1               	movwf	(??_loop+5)& (0+255),b
  3691  00268A  0100               	movlb	0	; () banked
  3692  00268C  51B7               	movf	(loop@now+2)& (0+255),w,b
  3693  00268E  0100               	movlb	0	; () banked
  3694  002690  21AE               	addwfc	(??_loop+2)& (0+255),w,b
  3695  002692  0100               	movlb	0	; () banked
  3696  002694  6FB2               	movwf	(??_loop+6)& (0+255),b
  3697  002696  0100               	movlb	0	; () banked
  3698  002698  51B8               	movf	(loop@now+3)& (0+255),w,b
  3699  00269A  0100               	movlb	0	; () banked
  3700  00269C  21AF               	addwfc	(??_loop+3)& (0+255),w,b
  3701  00269E  0100               	movlb	0	; () banked
  3702  0026A0  6FB3               	movwf	(??_loop+7)& (0+255),b
  3703  0026A2  0009               	tblrd		*+
  3704  0026A4  50F5               	movf	tablat,w,c
  3705  0026A6  0100               	movlb	0	; () banked
  3706  0026A8  5DB0               	subwf	(??_loop+4)& (0+255),w,b
  3707  0026AA  0009               	tblrd		*+
  3708  0026AC  50F5               	movf	tablat,w,c
  3709  0026AE  0100               	movlb	0	; () banked
  3710  0026B0  59B1               	subwfb	(??_loop+5)& (0+255),w,b
  3711  0026B2  0009               	tblrd		*+
  3712  0026B4  50F5               	movf	tablat,w,c
  3713  0026B6  0100               	movlb	0	; () banked
  3714  0026B8  59B2               	subwfb	(??_loop+6)& (0+255),w,b
  3715  0026BA  0009               	tblrd		*+
  3716  0026BC  50F5               	movf	tablat,w,c
  3717  0026BE  0100               	movlb	0	; () banked
  3718  0026C0  59B3               	subwfb	(??_loop+7)& (0+255),w,b
  3719  0026C2  A0D8               	btfss	status,0,c
  3720  0026C4  0012               	return	
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;helloworld_tx.c: 59: {
  3724                           ;helloworld_tx.c: 60: payload_t payload;
  3725                           ;helloworld_tx.c: 61: uint8_t ok;
  3726                           ;helloworld_tx.c: 62: RF24NetworkHeader header;
  3727                           ;helloworld_tx.c: 64: last_sent = now;
  3728  0026C6  C0B5  F080         	movff	loop@now,_last_sent
  3729  0026CA  C0B6  F081         	movff	loop@now+1,_last_sent+1
  3730  0026CE  C0B7  F082         	movff	loop@now+2,_last_sent+2
  3731  0026D2  C0B8  F083         	movff	loop@now+3,_last_sent+3
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;helloworld_tx.c: 66: Serial_print("Sending...");
  3735  0026D6  0E3F               	movlw	low STR_2
  3736  0026D8  6E04               	movwf	Serial_print@val,c
  3737  0026DA  0E10               	movlw	high STR_2
  3738  0026DC  6E05               	movwf	Serial_print@val+1,c
  3739  0026DE  ECAF  F01A         	call	_Serial_print	;wreg free
  3740                           
  3741                           ;helloworld_tx.c: 68: payload.ms= millis();
  3742  0026E2  ECC5  F01D         	call	_millis	;wreg free
  3743  0026E6  C003  F0B9         	movff	?_millis,loop@payload
  3744  0026EA  C004  F0BA         	movff	?_millis+1,loop@payload+1
  3745  0026EE  C005  F0BB         	movff	?_millis+2,loop@payload+2
  3746  0026F2  C006  F0BC         	movff	?_millis+3,loop@payload+3
  3747                           
  3748                           ;helloworld_tx.c: 69: payload.counter=packets_sent++;
  3749  0026F6  C088  F0BD         	movff	_packets_sent,loop@payload+4
  3750  0026FA  C089  F0BE         	movff	_packets_sent+1,loop@payload+5
  3751  0026FE  C08A  F0BF         	movff	_packets_sent+2,loop@payload+6
  3752  002702  C08B  F0C0         	movff	_packets_sent+3,loop@payload+7
  3753  002706  0E01               	movlw	1
  3754  002708  0100               	movlb	0	; () banked
  3755  00270A  2788               	addwf	_packets_sent& (0+255),f,b
  3756  00270C  0E00               	movlw	0
  3757  00270E  2389               	addwfc	(_packets_sent+1)& (0+255),f,b
  3758  002710  238A               	addwfc	(_packets_sent+2)& (0+255),f,b
  3759  002712  238B               	addwfc	(_packets_sent+3)& (0+255),f,b
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;helloworld_tx.c: 71: RF24NH_init(&header, other_node,0);
  3763  002714  0EC1               	movlw	low loop@header
  3764  002716  6E03               	movwf	RF24NH_init@rnh,c
  3765  002718  0E00               	movlw	high loop@header
  3766  00271A  6E04               	movwf	RF24NH_init@rnh+1,c
  3767  00271C  0E17               	movlw	low _other_node
  3768  00271E  6EF6               	movwf	tblptrl,c
  3769  002720                     	if	1	;There is more than 1 active tblptr byte
  3770  002720  0E10               	movlw	high _other_node
  3771  002722  6EF7               	movwf	tblptrh,c
  3772  002724                     	endif
  3773  002724                     	if	0	;There are less than 3 active tblptr bytes
  3774  002724                     	endif
  3775  002724  0009               	tblrd		*+
  3776  002726  CFF5 F005          	movff	tablat,RF24NH_init@_to
  3777  00272A  000A               	tblrd		*-
  3778  00272C  CFF5 F006          	movff	tablat,RF24NH_init@_to+1
  3779  002730  0E00               	movlw	0
  3780  002732  6E07               	movwf	RF24NH_init@_type,c
  3781  002734  EC9A  F01B         	call	_RF24NH_init	;wreg free
  3782                           
  3783                           ;helloworld_tx.c: 72: ok = RF24N_write_m(&header,&payload,sizeof(payload));
  3784  002738  0EC1               	movlw	low loop@header
  3785  00273A  6E64               	movwf	RF24N_write_m@header,c
  3786  00273C  0E00               	movlw	high loop@header
  3787  00273E  6E65               	movwf	RF24N_write_m@header+1,c
  3788  002740  0EB9               	movlw	low loop@payload
  3789  002742  6E66               	movwf	RF24N_write_m@message,c
  3790  002744  0E00               	movlw	high loop@payload
  3791  002746  6E67               	movwf	RF24N_write_m@message+1,c
  3792  002748  0E00               	movlw	0
  3793  00274A  6E69               	movwf	RF24N_write_m@len+1,c
  3794  00274C  0E08               	movlw	8
  3795  00274E  6E68               	movwf	RF24N_write_m@len,c
  3796  002750  ECE5  F01C         	call	_RF24N_write_m	;wreg free
  3797  002754  0100               	movlb	0	; () banked
  3798  002756  6FB4               	movwf	loop@ok& (0+255),b
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;helloworld_tx.c: 73: if (ok)
  3802  002758  0100               	movlb	0	; () banked
  3803  00275A  51B4               	movf	loop@ok& (0+255),w,b
  3804  00275C  0100               	movlb	0	; () banked
  3805  00275E  B4D8               	btfsc	status,2,c
  3806  002760  D007               	goto	l5162
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;helloworld_tx.c: 74: Serial_println("ok.");
  3810  002762  0E52               	movlw	low STR_3
  3811  002764  6E0A               	movwf	Serial_println@val,c
  3812  002766  0E10               	movlw	high STR_3
  3813  002768  6E0B               	movwf	Serial_println@val+1,c
  3814  00276A  EC96  F01D         	call	_Serial_println	;wreg free
  3815  00276E  0012               	return	
  3816  002770                     l5162:
  3817                           
  3818                           ;helloworld_tx.c: 75: else
  3819                           ;helloworld_tx.c: 76: Serial_println("failed.");
  3820  002770  0E4A               	movlw	low STR_4
  3821  002772  6E0A               	movwf	Serial_println@val,c
  3822  002774  0E10               	movlw	high STR_4
  3823  002776  6E0B               	movwf	Serial_println@val+1,c
  3824  002778  EC96  F01D         	call	_Serial_println	;wreg free
  3825  00277C  0012               	return	
  3826  00277E                     __end_of_loop:
  3827                           	opt stack 0
  3828                           tblptru	equ	0xFF8
  3829                           tblptrh	equ	0xFF7
  3830                           tblptrl	equ	0xFF6
  3831                           tablat	equ	0xFF5
  3832                           prodh	equ	0xFF4
  3833                           prodl	equ	0xFF3
  3834                           intcon	equ	0xFF2
  3835                           indf0	equ	0xFEF
  3836                           postinc0	equ	0xFEE
  3837                           fsr0h	equ	0xFEA
  3838                           fsr0l	equ	0xFE9
  3839                           wreg	equ	0xFE8
  3840                           indf2	equ	0xFDF
  3841                           postinc2	equ	0xFDE
  3842                           postdec2	equ	0xFDD
  3843                           fsr2h	equ	0xFDA
  3844                           fsr2l	equ	0xFD9
  3845                           status	equ	0xFD8
  3846                           
  3847 ;; *************** function _Serial_println *****************
  3848 ;; Defined at:
  3849 ;;		line 76 in file "serial.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  val             2    9[COMRAM] PTR const unsigned char 
  3852 ;;		 -> STR_4(8), STR_3(4), STR_1(36), 
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;		None
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  1    wreg      void 
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3867 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;Total ram usage:        2 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; Hardware stack levels required when called:    3
  3871 ;; This function calls:
  3872 ;;		_Serial_print
  3873 ;; This function is called by:
  3874 ;;		_setup
  3875 ;;		_loop
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text18
  3880  003B2C                     __ptext18:
  3881                           	opt stack 0
  3882  003B2C                     _Serial_println:
  3883                           	opt stack 26
  3884                           
  3885                           ;serial.c: 78: Serial_print(val);
  3886                           
  3887                           ;incstack = 0
  3888  003B2C  C00A  F004         	movff	Serial_println@val,Serial_print@val
  3889  003B30  C00B  F005         	movff	Serial_println@val+1,Serial_print@val+1
  3890  003B34  ECAF  F01A         	call	_Serial_print	;wreg free
  3891                           
  3892                           ;serial.c: 79: Serial_print("\r\n");
  3893  003B38  0E56               	movlw	low STR_5
  3894  003B3A  6E04               	movwf	Serial_print@val,c
  3895  003B3C  0E10               	movlw	high STR_5
  3896  003B3E  6E05               	movwf	Serial_print@val+1,c
  3897  003B40  ECAF  F01A         	call	_Serial_print	;wreg free
  3898  003B44  0012               	return		;funcret
  3899  003B46                     __end_of_Serial_println:
  3900                           	opt stack 0
  3901                           tblptru	equ	0xFF8
  3902                           tblptrh	equ	0xFF7
  3903                           tblptrl	equ	0xFF6
  3904                           tablat	equ	0xFF5
  3905                           prodh	equ	0xFF4
  3906                           prodl	equ	0xFF3
  3907                           intcon	equ	0xFF2
  3908                           indf0	equ	0xFEF
  3909                           postinc0	equ	0xFEE
  3910                           fsr0h	equ	0xFEA
  3911                           fsr0l	equ	0xFE9
  3912                           wreg	equ	0xFE8
  3913                           indf2	equ	0xFDF
  3914                           postinc2	equ	0xFDE
  3915                           postdec2	equ	0xFDD
  3916                           fsr2h	equ	0xFDA
  3917                           fsr2l	equ	0xFD9
  3918                           status	equ	0xFD8
  3919                           
  3920 ;; *************** function _Serial_print *****************
  3921 ;; Defined at:
  3922 ;;		line 65 in file "serial.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;  val             2    3[COMRAM] PTR const unsigned char 
  3925 ;;		 -> STR_5(3), STR_4(8), STR_3(4), STR_2(11), 
  3926 ;;		 -> STR_1(36), 
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;  i               2    7[COMRAM] unsigned int 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3941 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;Total ram usage:        6 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    2
  3945 ;; This function calls:
  3946 ;;		_Serial_tx
  3947 ;; This function is called by:
  3948 ;;		_loop
  3949 ;;		_Serial_println
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text19
  3954  00355E                     __ptext19:
  3955                           	opt stack 0
  3956  00355E                     _Serial_print:
  3957                           	opt stack 26
  3958                           
  3959                           ;serial.c: 67: unsigned int i=0;
  3960                           
  3961                           ;incstack = 0
  3962  00355E  0E00               	movlw	0
  3963  003560  6E09               	movwf	Serial_print@i+1,c
  3964  003562  0E00               	movlw	0
  3965  003564  6E08               	movwf	Serial_print@i,c
  3966                           
  3967                           ;serial.c: 69: while(val[i])
  3968  003566  D010               	goto	l4316
  3969  003568                     l4312:
  3970                           
  3971                           ;serial.c: 70: {
  3972                           ;serial.c: 71: Serial_tx(val[i]);
  3973  003568  5008               	movf	Serial_print@i,w,c
  3974  00356A  2404               	addwf	Serial_print@val,w,c
  3975  00356C  6E06               	movwf	??_Serial_print& (0+255),c
  3976  00356E  5009               	movf	Serial_print@i+1,w,c
  3977  003570  2005               	addwfc	Serial_print@val+1,w,c
  3978  003572  6E07               	movwf	(??_Serial_print+1)& (0+255),c
  3979  003574  C006  FFF6         	movff	??_Serial_print,tblptrl
  3980  003578  C007  FFF7         	movff	??_Serial_print+1,tblptrh
  3981  00357C                     	if	0	;tblptru may be non-zero
  3982  00357C                     	endif
  3983  00357C                     	if	0	;tblptru may be non-zero
  3984  00357C                     	endif
  3985  00357C  0008               	tblrd		*
  3986  00357E  50F5               	movf	tablat,w,c
  3987  003580  ECDC  F01D         	call	_Serial_tx
  3988                           
  3989                           ;serial.c: 72: i++;
  3990  003584  4A08               	infsnz	Serial_print@i,f,c
  3991  003586  2A09               	incf	Serial_print@i+1,f,c
  3992  003588                     l4316:
  3993  003588  5008               	movf	Serial_print@i,w,c
  3994  00358A  2404               	addwf	Serial_print@val,w,c
  3995  00358C  6E06               	movwf	??_Serial_print& (0+255),c
  3996  00358E  5009               	movf	Serial_print@i+1,w,c
  3997  003590  2005               	addwfc	Serial_print@val+1,w,c
  3998  003592  6E07               	movwf	(??_Serial_print+1)& (0+255),c
  3999  003594  C006  FFF6         	movff	??_Serial_print,tblptrl
  4000  003598  C007  FFF7         	movff	??_Serial_print+1,tblptrh
  4001  00359C                     	if	0	;tblptru may be non-zero
  4002  00359C                     	endif
  4003  00359C                     	if	0	;tblptru may be non-zero
  4004  00359C                     	endif
  4005  00359C  0008               	tblrd		*
  4006  00359E  50F5               	movf	tablat,w,c
  4007  0035A0  0900               	iorlw	0
  4008  0035A2  B4D8               	btfsc	status,2,c
  4009  0035A4  0012               	return	
  4010  0035A6  D7E0               	goto	l4312
  4011  0035A8                     __end_of_Serial_print:
  4012                           	opt stack 0
  4013                           tblptru	equ	0xFF8
  4014                           tblptrh	equ	0xFF7
  4015                           tblptrl	equ	0xFF6
  4016                           tablat	equ	0xFF5
  4017                           prodh	equ	0xFF4
  4018                           prodl	equ	0xFF3
  4019                           intcon	equ	0xFF2
  4020                           indf0	equ	0xFEF
  4021                           postinc0	equ	0xFEE
  4022                           fsr0h	equ	0xFEA
  4023                           fsr0l	equ	0xFE9
  4024                           wreg	equ	0xFE8
  4025                           indf2	equ	0xFDF
  4026                           postinc2	equ	0xFDE
  4027                           postdec2	equ	0xFDD
  4028                           fsr2h	equ	0xFDA
  4029                           fsr2l	equ	0xFD9
  4030                           status	equ	0xFD8
  4031                           
  4032 ;; *************** function _Serial_tx *****************
  4033 ;; Defined at:
  4034 ;;		line 59 in file "serial.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  val             1    wreg     const unsigned char 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  val             1    2[COMRAM] const unsigned char 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      void 
  4041 ;; Registers used:
  4042 ;;		wreg
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4052 ;;Total ram usage:        1 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; Hardware stack levels required when called:    1
  4055 ;; This function calls:
  4056 ;;		Nothing
  4057 ;; This function is called by:
  4058 ;;		_Serial_print
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           	psect	text20
  4063  003BB8                     __ptext20:
  4064                           	opt stack 0
  4065  003BB8                     _Serial_tx:
  4066                           	opt stack 26
  4067                           
  4068                           ;incstack = 0
  4069                           ;Serial_tx@val stored from wreg
  4070  003BB8  6E03               	movwf	Serial_tx@val,c
  4071                           
  4072                           ;serial.c: 61: TXREG=val;
  4073  003BBA  C003  FFAD         	movff	Serial_tx@val,4013	;volatile
  4074  003BBE                     l93:
  4075  003BBE  B2AC               	btfsc	4012,1,c	;volatile
  4076  003BC0  0012               	return	
  4077  003BC2  D7FD               	goto	l93
  4078  003BC4                     __end_of_Serial_tx:
  4079                           	opt stack 0
  4080                           tblptru	equ	0xFF8
  4081                           tblptrh	equ	0xFF7
  4082                           tblptrl	equ	0xFF6
  4083                           tablat	equ	0xFF5
  4084                           prodh	equ	0xFF4
  4085                           prodl	equ	0xFF3
  4086                           intcon	equ	0xFF2
  4087                           indf0	equ	0xFEF
  4088                           postinc0	equ	0xFEE
  4089                           fsr0h	equ	0xFEA
  4090                           fsr0l	equ	0xFE9
  4091                           wreg	equ	0xFE8
  4092                           indf2	equ	0xFDF
  4093                           postinc2	equ	0xFDE
  4094                           postdec2	equ	0xFDD
  4095                           fsr2h	equ	0xFDA
  4096                           fsr2l	equ	0xFD9
  4097                           status	equ	0xFD8
  4098                           
  4099 ;; *************** function _RF24N_write_m *****************
  4100 ;; Defined at:
  4101 ;;		line 791 in file "../../RF24Network_cg.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  header          2   99[COMRAM] PTR struct .
  4104 ;;		 -> loop@header(8), 
  4105 ;;  message         2  101[COMRAM] PTR const void 
  4106 ;;		 -> loop@payload(8), 
  4107 ;;  len             2  103[COMRAM] unsigned int 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      unsigned char 
  4112 ;; Registers used:
  4113 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4119 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;Total ram usage:        6 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:   12
  4126 ;; This function calls:
  4127 ;;		_RF24N_write_
  4128 ;; This function is called by:
  4129 ;;		_loop
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           	psect	text21
  4134  0039CA                     __ptext21:
  4135                           	opt stack 0
  4136  0039CA                     _RF24N_write_m:
  4137                           	opt stack 17
  4138                           
  4139                           ;RF24Network_cg.c: 792: return RF24N_write_(header,message,len,070);
  4140                           
  4141                           ;incstack = 0
  4142  0039CA  C064  F04B         	movff	RF24N_write_m@header,RF24N_write_@header
  4143  0039CE  C065  F04C         	movff	RF24N_write_m@header+1,RF24N_write_@header+1
  4144  0039D2  C066  F04D         	movff	RF24N_write_m@message,RF24N_write_@message
  4145  0039D6  C067  F04E         	movff	RF24N_write_m@message+1,RF24N_write_@message+1
  4146  0039DA  C068  F04F         	movff	RF24N_write_m@len,RF24N_write_@len
  4147  0039DE  C069  F050         	movff	RF24N_write_m@len+1,RF24N_write_@len+1
  4148  0039E2  0E00               	movlw	0
  4149  0039E4  6E52               	movwf	RF24N_write_@writeDirect+1,c
  4150  0039E6  0E38               	movlw	56
  4151  0039E8  6E51               	movwf	RF24N_write_@writeDirect,c
  4152  0039EA  EC1B  F00F         	call	_RF24N_write_	;wreg free
  4153  0039EE  0012               	return	
  4154  0039F0                     __end_of_RF24N_write_m:
  4155                           	opt stack 0
  4156                           tblptru	equ	0xFF8
  4157                           tblptrh	equ	0xFF7
  4158                           tblptrl	equ	0xFF6
  4159                           tablat	equ	0xFF5
  4160                           prodh	equ	0xFF4
  4161                           prodl	equ	0xFF3
  4162                           intcon	equ	0xFF2
  4163                           indf0	equ	0xFEF
  4164                           postinc0	equ	0xFEE
  4165                           fsr0h	equ	0xFEA
  4166                           fsr0l	equ	0xFE9
  4167                           wreg	equ	0xFE8
  4168                           indf2	equ	0xFDF
  4169                           postinc2	equ	0xFDE
  4170                           postdec2	equ	0xFDD
  4171                           fsr2h	equ	0xFDA
  4172                           fsr2l	equ	0xFD9
  4173                           status	equ	0xFD8
  4174                           
  4175 ;; *************** function _RF24N_write_ *****************
  4176 ;; Defined at:
  4177 ;;		line 795 in file "../../RF24Network_cg.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  header          2   74[COMRAM] PTR struct .
  4180 ;;		 -> loop@header(8), 
  4181 ;;  message         2   76[COMRAM] PTR const void 
  4182 ;;		 -> loop@payload(8), 
  4183 ;;  len             2   78[COMRAM] unsigned int 
  4184 ;;  writeDirect     2   80[COMRAM] unsigned int 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  offset          2   95[COMRAM] unsigned int 
  4187 ;;  fragmentLen     2   91[COMRAM] unsigned int 
  4188 ;;  fragment_id     1   98[COMRAM] unsigned char 
  4189 ;;  ok              1   97[COMRAM] unsigned char 
  4190 ;;  msgCount        1   94[COMRAM] unsigned char 
  4191 ;;  type            1   93[COMRAM] unsigned char 
  4192 ;;  retriesPerFr    1   90[COMRAM] unsigned char 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      unsigned char 
  4195 ;; Registers used:
  4196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4202 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;Total ram usage:       25 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:   11
  4209 ;; This function calls:
  4210 ;;		_RF24N__write
  4211 ;;		_RF24N_update
  4212 ;;		_RF24_setAutoAck_p
  4213 ;;		_RF24_startListening
  4214 ;;		_RF24_stopListening
  4215 ;;		_RF24_txStandBy_t
  4216 ;;		___lwdiv
  4217 ;;		___lwmod
  4218 ;;		___wmul
  4219 ;;		_delay
  4220 ;;		_delayMicroseconds
  4221 ;;		_millis
  4222 ;; This function is called by:
  4223 ;;		_RF24N_write_m
  4224 ;;		_RF24N_multicast
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text22
  4229  001E36                     __ptext22:
  4230                           	opt stack 0
  4231  001E36                     _RF24N_write_:
  4232                           	opt stack 17
  4233                           
  4234                           ;RF24Network_cg.c: 796: uint8_t fragment_id;
  4235                           ;RF24Network_cg.c: 797: uint8_t msgCount;
  4236                           ;RF24Network_cg.c: 798: uint8_t retriesPerFrag;
  4237                           ;RF24Network_cg.c: 799: uint8_t type;
  4238                           ;RF24Network_cg.c: 800: uint8_t ok;
  4239                           ;RF24Network_cg.c: 803: while(millis()-rn.txTime < 25){ if(RF24N_update() > 127){break;}
      +                           }
  4240                           
  4241                           ;incstack = 0
  4242  001E36  D006               	goto	l4438
  4243  001E38                     l4434:
  4244  001E38  ECE7  F00A         	call	_RF24N_update	;wreg free
  4245  001E3C  0E7F               	movlw	127
  4246  001E3E  646A               	cpfsgt	btemp,c
  4247  001E40  D001               	goto	l4438
  4248  001E42  D027               	goto	l4440
  4249  001E44                     l4438:
  4250  001E44  C100  F053         	movff	_rn+43,??_RF24N_write_
  4251  001E48  C101  F054         	movff	_rn+44,??_RF24N_write_+1
  4252  001E4C  C102  F055         	movff	_rn+45,??_RF24N_write_+2
  4253  001E50  C103  F056         	movff	_rn+46,??_RF24N_write_+3
  4254  001E54  1E53               	comf	??_RF24N_write_,f,c
  4255  001E56  1E54               	comf	??_RF24N_write_+1,f,c
  4256  001E58  1E55               	comf	??_RF24N_write_+2,f,c
  4257  001E5A  1E56               	comf	??_RF24N_write_+3,f,c
  4258  001E5C  2A53               	incf	??_RF24N_write_,f,c
  4259  001E5E  0E00               	movlw	0
  4260  001E60  2254               	addwfc	??_RF24N_write_+1,f,c
  4261  001E62  2255               	addwfc	??_RF24N_write_+2,f,c
  4262  001E64  2256               	addwfc	??_RF24N_write_+3,f,c
  4263  001E66  ECC5  F01D         	call	_millis	;wreg free
  4264  001E6A  5053               	movf	??_RF24N_write_,w,c
  4265  001E6C  2403               	addwf	?_millis,w,c
  4266  001E6E  6E57               	movwf	(??_RF24N_write_+4)& (0+255),c
  4267  001E70  5054               	movf	??_RF24N_write_+1,w,c
  4268  001E72  2004               	addwfc	?_millis+1,w,c
  4269  001E74  6E58               	movwf	(??_RF24N_write_+5)& (0+255),c
  4270  001E76  5055               	movf	??_RF24N_write_+2,w,c
  4271  001E78  2005               	addwfc	?_millis+2,w,c
  4272  001E7A  6E59               	movwf	(??_RF24N_write_+6)& (0+255),c
  4273  001E7C  5056               	movf	??_RF24N_write_+3,w,c
  4274  001E7E  2006               	addwfc	?_millis+3,w,c
  4275  001E80  6E5A               	movwf	(??_RF24N_write_+7)& (0+255),c
  4276  001E82  505A               	movf	??_RF24N_write_+7,w,c
  4277  001E84  1059               	iorwf	??_RF24N_write_+6,w,c
  4278  001E86  1058               	iorwf	??_RF24N_write_+5,w,c
  4279  001E88  E104               	bnz	l4440
  4280  001E8A  0E19               	movlw	25
  4281  001E8C  5C57               	subwf	??_RF24N_write_+4,w,c
  4282  001E8E  A0D8               	btfss	status,0,c
  4283  001E90  D7D3               	goto	l4434
  4284  001E92                     l4440:
  4285                           
  4286                           ;RF24Network_cg.c: 804: delayMicroseconds(200);
  4287  001E92  0EC8               	movlw	200
  4288  001E94  EC7A  F01B         	call	_delayMicroseconds
  4289                           
  4290                           ;RF24Network_cg.c: 812: if(len <= rn.max_frame_payload_size){
  4291  001E98  EE21  F008         	lfsr	2,_rn+51
  4292  001E9C  504F               	movf	RF24N_write_@len,w,c
  4293  001E9E  5CDE               	subwf	postinc2,w,c
  4294  001EA0  5050               	movf	RF24N_write_@len+1,w,c
  4295  001EA2  58DE               	subwfb	postinc2,w,c
  4296  001EA4  A0D8               	btfss	status,0,c
  4297  001EA6  D029               	goto	l4458
  4298                           
  4299                           ;RF24Network_cg.c: 814: rn.frame_size = len + sizeof(RF24NetworkHeader);
  4300  001EA8  C04F  F053         	movff	RF24N_write_@len,??_RF24N_write_
  4301  001EAC  0E08               	movlw	8
  4302  001EAE  2653               	addwf	??_RF24N_write_,f,c
  4303  001EB0  C053  F107         	movff	??_RF24N_write_,_rn+50
  4304                           
  4305                           ;RF24Network_cg.c: 815: if(RF24N__write(header,message,len,writeDirect)){
  4306  001EB4  C04B  F040         	movff	RF24N_write_@header,RF24N__write@header
  4307  001EB8  C04C  F041         	movff	RF24N_write_@header+1,RF24N__write@header+1
  4308  001EBC  C04D  F042         	movff	RF24N_write_@message,RF24N__write@message
  4309  001EC0  C04E  F043         	movff	RF24N_write_@message+1,RF24N__write@message+1
  4310  001EC4  C04F  F044         	movff	RF24N_write_@len,RF24N__write@len
  4311  001EC8  C050  F045         	movff	RF24N_write_@len+1,RF24N__write@len+1
  4312  001ECC  C051  F046         	movff	RF24N_write_@writeDirect,RF24N__write@writeDirect
  4313  001ED0  C052  F047         	movff	RF24N_write_@writeDirect+1,RF24N__write@writeDirect+1
  4314  001ED4  EC91  F016         	call	_RF24N__write	;wreg free
  4315  001ED8  0900               	iorlw	0
  4316  001EDA  B4D8               	btfsc	status,2,c
  4317  001EDC  D002               	goto	l4452
  4318                           
  4319                           ;RF24Network_cg.c: 816: return 1;
  4320  001EDE  0E01               	movlw	1
  4321  001EE0  0012               	return	
  4322  001EE2                     l4452:
  4323                           
  4324                           ;RF24Network_cg.c: 817: }
  4325                           ;RF24Network_cg.c: 818: rn.txTime = millis();
  4326  001EE2  ECC5  F01D         	call	_millis	;wreg free
  4327  001EE6  C003  F100         	movff	?_millis,_rn+43
  4328  001EEA  C004  F101         	movff	?_millis+1,_rn+44
  4329  001EEE  C005  F102         	movff	?_millis+2,_rn+45
  4330  001EF2  C006  F103         	movff	?_millis+3,_rn+46
  4331                           
  4332                           ;RF24Network_cg.c: 819: return 0;
  4333  001EF6  0E00               	movlw	0
  4334  001EF8  0012               	return	
  4335  001EFA                     l4458:
  4336                           
  4337                           ;RF24Network_cg.c: 820: }
  4338                           ;RF24Network_cg.c: 822: if (len > 144 + 10-10) {
  4339  001EFA  5050               	movf	RF24N_write_@len+1,w,c
  4340  001EFC  E104               	bnz	u5430
  4341  001EFE  0E91               	movlw	145
  4342  001F00  5C4F               	subwf	RF24N_write_@len,w,c
  4343  001F02  A0D8               	btfss	status,0,c
  4344  001F04  D002               	goto	l4464
  4345  001F06                     u5430:
  4346                           
  4347                           ;RF24Network_cg.c: 823: ;
  4348                           ;RF24Network_cg.c: 824: return 0;
  4349  001F06  0E00               	movlw	0
  4350  001F08  0012               	return	
  4351  001F0A                     l4464:
  4352                           
  4353                           ;RF24Network_cg.c: 825: }
  4354                           ;RF24Network_cg.c: 828: fragment_id = (len % rn.max_frame_payload_size != 0) + ((len ) /
      +                           rn.max_frame_payload_size);
  4355  001F0A  C04F  F003         	movff	RF24N_write_@len,___lwdiv@dividend
  4356  001F0E  C050  F004         	movff	RF24N_write_@len+1,___lwdiv@dividend+1
  4357  001F12  C108  F005         	movff	_rn+51,___lwdiv@divisor
  4358  001F16  C109  F006         	movff	_rn+52,___lwdiv@divisor+1
  4359  001F1A  EC39  F01A         	call	___lwdiv	;wreg free
  4360  001F1E  C003  F053         	movff	?___lwdiv,??_RF24N_write_
  4361  001F22  C004  F054         	movff	?___lwdiv+1,??_RF24N_write_+1
  4362  001F26  C04F  F003         	movff	RF24N_write_@len,___lwmod@dividend
  4363  001F2A  C050  F004         	movff	RF24N_write_@len+1,___lwmod@dividend+1
  4364  001F2E  C108  F005         	movff	_rn+51,___lwmod@divisor
  4365  001F32  C109  F006         	movff	_rn+52,___lwmod@divisor+1
  4366  001F36  ECF9  F01A         	call	___lwmod	;wreg free
  4367  001F3A  5003               	movf	?___lwmod,w,c
  4368  001F3C  1004               	iorwf	?___lwmod+1,w,c
  4369  001F3E  B4D8               	btfsc	status,2,c
  4370  001F40  D002               	goto	u5440
  4371  001F42  0E01               	movlw	1
  4372  001F44  D001               	goto	u5450
  4373  001F46                     u5440:
  4374  001F46  0E00               	movlw	0
  4375  001F48                     u5450:
  4376  001F48  2453               	addwf	??_RF24N_write_,w,c
  4377  001F4A  6E63               	movwf	RF24N_write_@fragment_id,c
  4378                           
  4379                           ;RF24Network_cg.c: 830: msgCount = 0;
  4380  001F4C  0E00               	movlw	0
  4381  001F4E  6E5F               	movwf	RF24N_write_@msgCount,c
  4382                           
  4383                           ;RF24Network_cg.c: 832: ;
  4384                           ;RF24Network_cg.c: 834: if(header->to_node != 0100){
  4385  001F50  EE20 F002          	lfsr	2,2
  4386  001F54  504B               	movf	RF24N_write_@header,w,c
  4387  001F56  26D9               	addwf	fsr2l,f,c
  4388  001F58  504C               	movf	RF24N_write_@header+1,w,c
  4389  001F5A  22DA               	addwfc	fsr2h,f,c
  4390  001F5C  0E40               	movlw	64
  4391  001F5E  18DE               	xorwf	postinc2,w,c
  4392  001F60  10DE               	iorwf	postinc2,w,c
  4393  001F62  B4D8               	btfsc	status,2,c
  4394  001F64  D007               	goto	l4474
  4395                           
  4396                           ;RF24Network_cg.c: 835: rn.networkFlags |= 4;
  4397  001F66  C0FF  FFE8         	movff	_rn+42,wreg
  4398  001F6A  0904               	iorlw	4
  4399  001F6C  CFE8 F0FF          	movff	wreg,_rn+42
  4400                           
  4401                           ;RF24Network_cg.c: 837: RF24_stopListening();
  4402  001F70  EC1E  F019         	call	_RF24_stopListening	;wreg free
  4403  001F74                     l4474:
  4404                           
  4405                           ;RF24Network_cg.c: 839: }
  4406                           ;RF24Network_cg.c: 841: retriesPerFrag = 0;
  4407  001F74  0E00               	movlw	0
  4408  001F76  6E5B               	movwf	RF24N_write_@retriesPerFrag,c
  4409                           
  4410                           ;RF24Network_cg.c: 842: type = header->type;
  4411  001F78  EE20 F006          	lfsr	2,6
  4412  001F7C  504B               	movf	RF24N_write_@header,w,c
  4413  001F7E  26D9               	addwf	fsr2l,f,c
  4414  001F80  504C               	movf	RF24N_write_@header+1,w,c
  4415  001F82  22DA               	addwfc	fsr2h,f,c
  4416  001F84  50DF               	movf	indf2,w,c
  4417  001F86  6E5E               	movwf	RF24N_write_@type,c
  4418                           
  4419                           ;RF24Network_cg.c: 843: ok = 0;
  4420  001F88  0E00               	movlw	0
  4421  001F8A  6E62               	movwf	RF24N_write_@ok,c
  4422                           
  4423                           ;RF24Network_cg.c: 845: while (fragment_id > 0) {
  4424  001F8C  D094               	goto	l4518
  4425  001F8E                     l4480:
  4426                           
  4427                           ;RF24Network_cg.c: 846: uint16_t offset;
  4428                           ;RF24Network_cg.c: 847: uint16_t fragmentLen;
  4429                           ;RF24Network_cg.c: 851: header->reserved = fragment_id;
  4430  001F8E  EE20 F007          	lfsr	2,7
  4431  001F92  504B               	movf	RF24N_write_@header,w,c
  4432  001F94  26D9               	addwf	fsr2l,f,c
  4433  001F96  504C               	movf	RF24N_write_@header+1,w,c
  4434  001F98  22DA               	addwfc	fsr2h,f,c
  4435  001F9A  C063  FFDF         	movff	RF24N_write_@fragment_id,indf2
  4436                           
  4437                           ;RF24Network_cg.c: 853: if (fragment_id == 1) {
  4438  001F9E  0463               	decf	RF24N_write_@fragment_id,w,c
  4439  001FA0  A4D8               	btfss	status,2,c
  4440  001FA2  D011               	goto	l4486
  4441                           
  4442                           ;RF24Network_cg.c: 854: header->type = 150;
  4443  001FA4  EE20 F006          	lfsr	2,6
  4444  001FA8  504B               	movf	RF24N_write_@header,w,c
  4445  001FAA  26D9               	addwf	fsr2l,f,c
  4446  001FAC  504C               	movf	RF24N_write_@header+1,w,c
  4447  001FAE  22DA               	addwfc	fsr2h,f,c
  4448  001FB0  0E96               	movlw	150
  4449  001FB2  6EDF               	movwf	indf2,c
  4450                           
  4451                           ;RF24Network_cg.c: 855: header->reserved = type;
  4452  001FB4  EE20 F007          	lfsr	2,7
  4453  001FB8  504B               	movf	RF24N_write_@header,w,c
  4454  001FBA  26D9               	addwf	fsr2l,f,c
  4455  001FBC  504C               	movf	RF24N_write_@header+1,w,c
  4456  001FBE  22DA               	addwfc	fsr2h,f,c
  4457  001FC0  C05E  FFDF         	movff	RF24N_write_@type,indf2
  4458                           
  4459                           ;RF24Network_cg.c: 856: } else {
  4460  001FC4  D013               	goto	l4492
  4461  001FC6                     l4486:
  4462                           
  4463                           ;RF24Network_cg.c: 857: if (msgCount == 0) {
  4464  001FC6  505F               	movf	RF24N_write_@msgCount,w,c
  4465  001FC8  A4D8               	btfss	status,2,c
  4466  001FCA  D008               	goto	l4490
  4467                           
  4468                           ;RF24Network_cg.c: 858: header->type = 148;
  4469  001FCC  EE20 F006          	lfsr	2,6
  4470  001FD0  504B               	movf	RF24N_write_@header,w,c
  4471  001FD2  26D9               	addwf	fsr2l,f,c
  4472  001FD4  504C               	movf	RF24N_write_@header+1,w,c
  4473  001FD6  22DA               	addwfc	fsr2h,f,c
  4474  001FD8  0E94               	movlw	148
  4475  001FDA  D007               	goto	L3
  4476  001FDC                     l4490:
  4477                           
  4478                           ;RF24Network_cg.c: 860: header->type = 149;
  4479  001FDC  EE20 F006          	lfsr	2,6
  4480  001FE0  504B               	movf	RF24N_write_@header,w,c
  4481  001FE2  26D9               	addwf	fsr2l,f,c
  4482  001FE4  504C               	movf	RF24N_write_@header+1,w,c
  4483  001FE6  22DA               	addwfc	fsr2h,f,c
  4484  001FE8  0E95               	movlw	149
  4485  001FEA                     L3:
  4486  001FEA  6EDF               	movwf	indf2,c
  4487  001FEC                     l4492:
  4488                           
  4489                           ;RF24Network_cg.c: 861: }
  4490                           ;RF24Network_cg.c: 862: }
  4491                           ;RF24Network_cg.c: 864: offset = msgCount*rn.max_frame_payload_size;
  4492  001FEC  C05F  F003         	movff	RF24N_write_@msgCount,___wmul@multiplier
  4493  001FF0  6A04               	clrf	___wmul@multiplier+1,c
  4494  001FF2  C108  F005         	movff	_rn+51,___wmul@multiplicand
  4495  001FF6  C109  F006         	movff	_rn+52,___wmul@multiplicand+1
  4496  001FFA  ECF8  F01C         	call	___wmul	;wreg free
  4497  001FFE  C003  F060         	movff	?___wmul,RF24N_write_@offset
  4498  002002  C004  F061         	movff	?___wmul+1,RF24N_write_@offset+1
  4499                           
  4500                           ;RF24Network_cg.c: 865: fragmentLen = ((uint16_t)(len-offset)<rn.max_frame_payload_size?
      +                          (uint16_t)(len-offset):rn.max_frame_payload_size);
  4501  002006  EE21  F008         	lfsr	2,_rn+51
  4502  00200A  C060  F055         	movff	RF24N_write_@offset,??_RF24N_write_+2
  4503  00200E  C061  F056         	movff	RF24N_write_@offset+1,??_RF24N_write_+3
  4504  002012  1E55               	comf	??_RF24N_write_+2,f,c
  4505  002014  1E56               	comf	??_RF24N_write_+3,f,c
  4506  002016  4A55               	infsnz	??_RF24N_write_+2,f,c
  4507  002018  2A56               	incf	??_RF24N_write_+3,f,c
  4508  00201A  504F               	movf	RF24N_write_@len,w,c
  4509  00201C  2655               	addwf	??_RF24N_write_+2,f,c
  4510  00201E  5050               	movf	RF24N_write_@len+1,w,c
  4511  002020  2256               	addwfc	??_RF24N_write_+3,f,c
  4512  002022  50DE               	movf	postinc2,w,c
  4513  002024  5C55               	subwf	??_RF24N_write_+2,w,c
  4514  002026  50DE               	movf	postinc2,w,c
  4515  002028  5856               	subwfb	??_RF24N_write_+3,w,c
  4516  00202A  A0D8               	btfss	status,0,c
  4517  00202C  D005               	goto	l4498
  4518  00202E  C108  F05C         	movff	_rn+51,RF24N_write_@fragmentLen
  4519  002032  C109  F05D         	movff	_rn+52,RF24N_write_@fragmentLen+1
  4520  002036  D00E               	goto	l887
  4521  002038                     l4498:
  4522  002038  C060  F053         	movff	RF24N_write_@offset,??_RF24N_write_
  4523  00203C  C061  F054         	movff	RF24N_write_@offset+1,??_RF24N_write_+1
  4524  002040  1E53               	comf	??_RF24N_write_,f,c
  4525  002042  1E54               	comf	??_RF24N_write_+1,f,c
  4526  002044  4A53               	infsnz	??_RF24N_write_,f,c
  4527  002046  2A54               	incf	??_RF24N_write_+1,f,c
  4528  002048  504F               	movf	RF24N_write_@len,w,c
  4529  00204A  2453               	addwf	??_RF24N_write_,w,c
  4530  00204C  6E5C               	movwf	RF24N_write_@fragmentLen,c
  4531  00204E  5050               	movf	RF24N_write_@len+1,w,c
  4532  002050  2054               	addwfc	??_RF24N_write_+1,w,c
  4533  002052  6E5D               	movwf	RF24N_write_@fragmentLen+1,c
  4534  002054                     l887:
  4535                           
  4536                           ;RF24Network_cg.c: 868: rn.frame_size = sizeof(RF24NetworkHeader)+fragmentLen;
  4537  002054  C05C  F053         	movff	RF24N_write_@fragmentLen,??_RF24N_write_
  4538  002058  0E08               	movlw	8
  4539  00205A  2653               	addwf	??_RF24N_write_,f,c
  4540  00205C  C053  F107         	movff	??_RF24N_write_,_rn+50
  4541                           
  4542                           ;RF24Network_cg.c: 869: ok = RF24N__write(header,((char *)message)+offset,fragmentLen,wr
      +                          iteDirect);
  4543  002060  C04B  F040         	movff	RF24N_write_@header,RF24N__write@header
  4544  002064  C04C  F041         	movff	RF24N_write_@header+1,RF24N__write@header+1
  4545  002068  5060               	movf	RF24N_write_@offset,w,c
  4546  00206A  244D               	addwf	RF24N_write_@message,w,c
  4547  00206C  6E42               	movwf	RF24N__write@message,c
  4548  00206E  5061               	movf	RF24N_write_@offset+1,w,c
  4549  002070  204E               	addwfc	RF24N_write_@message+1,w,c
  4550  002072  6E43               	movwf	RF24N__write@message+1,c
  4551  002074  C05C  F044         	movff	RF24N_write_@fragmentLen,RF24N__write@len
  4552  002078  C05D  F045         	movff	RF24N_write_@fragmentLen+1,RF24N__write@len+1
  4553  00207C  C051  F046         	movff	RF24N_write_@writeDirect,RF24N__write@writeDirect
  4554  002080  C052  F047         	movff	RF24N_write_@writeDirect+1,RF24N__write@writeDirect+1
  4555  002084  EC91  F016         	call	_RF24N__write	;wreg free
  4556  002088  6E62               	movwf	RF24N_write_@ok,c
  4557                           
  4558                           ;RF24Network_cg.c: 871: if (!ok) {
  4559  00208A  5062               	movf	RF24N_write_@ok,w,c
  4560  00208C  A4D8               	btfss	status,2,c
  4561  00208E  D008               	goto	l4508
  4562                           
  4563                           ;RF24Network_cg.c: 872: delay(2);
  4564  002090  0E00               	movlw	0
  4565  002092  6E04               	movwf	delay@val+1,c
  4566  002094  0E02               	movlw	2
  4567  002096  6E03               	movwf	delay@val,c
  4568  002098  ECD4  F01A         	call	_delay	;wreg free
  4569                           
  4570                           ;RF24Network_cg.c: 873: ++retriesPerFrag;
  4571  00209C  2A5B               	incf	RF24N_write_@retriesPerFrag,f,c
  4572                           
  4573                           ;RF24Network_cg.c: 875: }else{
  4574  00209E  D004               	goto	l889
  4575  0020A0                     l4508:
  4576                           
  4577                           ;RF24Network_cg.c: 876: retriesPerFrag = 0;
  4578  0020A0  0E00               	movlw	0
  4579  0020A2  6E5B               	movwf	RF24N_write_@retriesPerFrag,c
  4580                           
  4581                           ;RF24Network_cg.c: 877: fragment_id--;
  4582  0020A4  0663               	decf	RF24N_write_@fragment_id,f,c
  4583                           
  4584                           ;RF24Network_cg.c: 878: msgCount++;
  4585  0020A6  2A5F               	incf	RF24N_write_@msgCount,f,c
  4586  0020A8                     l889:
  4587                           
  4588                           ;RF24Network_cg.c: 879: }
  4589                           ;RF24Network_cg.c: 883: if (!ok && retriesPerFrag >= 3) {
  4590  0020A8  5062               	movf	RF24N_write_@ok,w,c
  4591  0020AA  A4D8               	btfss	status,2,c
  4592  0020AC  D004               	goto	l4518
  4593  0020AE  0E02               	movlw	2
  4594  0020B0  645B               	cpfsgt	RF24N_write_@retriesPerFrag,c
  4595  0020B2  D001               	goto	l4518
  4596  0020B4  D003               	goto	l4520
  4597  0020B6                     l4518:
  4598  0020B6  5063               	movf	RF24N_write_@fragment_id,w,c
  4599  0020B8  A4D8               	btfss	status,2,c
  4600  0020BA  D769               	goto	l4480
  4601  0020BC                     l4520:
  4602                           
  4603                           ;RF24Network_cg.c: 886: }
  4604                           ;RF24Network_cg.c: 895: }
  4605                           ;RF24Network_cg.c: 896: header->type = type;
  4606  0020BC  EE20 F006          	lfsr	2,6
  4607  0020C0  504B               	movf	RF24N_write_@header,w,c
  4608  0020C2  26D9               	addwf	fsr2l,f,c
  4609  0020C4  504C               	movf	RF24N_write_@header+1,w,c
  4610  0020C6  22DA               	addwfc	fsr2h,f,c
  4611  0020C8  C05E  FFDF         	movff	RF24N_write_@type,indf2
  4612                           
  4613                           ;RF24Network_cg.c: 898: if(rn.networkFlags & 4){
  4614  0020CC  EE20  F0FF         	lfsr	2,_rn+42
  4615  0020D0  A4DF               	btfss	indf2,2,c
  4616  0020D2  D014               	goto	l4530
  4617                           
  4618                           ;RF24Network_cg.c: 899: ok = RF24_txStandBy_t(rn.txTimeout,0);
  4619  0020D4  C0D6  F013         	movff	_rn+1,RF24_txStandBy_t@timeout
  4620  0020D8  C0D7  F014         	movff	_rn+2,RF24_txStandBy_t@timeout+1
  4621  0020DC  C0D8  F015         	movff	_rn+3,RF24_txStandBy_t@timeout+2
  4622  0020E0  C0D9  F016         	movff	_rn+4,RF24_txStandBy_t@timeout+3
  4623  0020E4  0E00               	movlw	0
  4624  0020E6  6E17               	movwf	RF24_txStandBy_t@startTx,c
  4625  0020E8  ECFC  F016         	call	_RF24_txStandBy_t	;wreg free
  4626  0020EC  6E62               	movwf	RF24N_write_@ok,c
  4627                           
  4628                           ;RF24Network_cg.c: 900: RF24_startListening();
  4629  0020EE  ECE2  F019         	call	_RF24_startListening	;wreg free
  4630                           
  4631                           ;RF24Network_cg.c: 901: RF24_setAutoAck_p(0,0);
  4632  0020F2  0E00               	movlw	0
  4633  0020F4  6E11               	movwf	RF24_setAutoAck_p@enable,c
  4634  0020F6  0E00               	movlw	0
  4635  0020F8  EC0E  F01A         	call	_RF24_setAutoAck_p
  4636  0020FC                     l4530:
  4637                           
  4638                           ;RF24Network_cg.c: 902: }
  4639                           ;RF24Network_cg.c: 903: rn.networkFlags &= ~4;
  4640  0020FC  C0FF  FFE8         	movff	_rn+42,wreg
  4641  002100  0BFB               	andlw	251
  4642  002102  CFE8 F0FF          	movff	wreg,_rn+42
  4643                           
  4644                           ;RF24Network_cg.c: 905: if(!ok){
  4645  002106  5062               	movf	RF24N_write_@ok,w,c
  4646  002108  A4D8               	btfss	status,2,c
  4647  00210A  D002               	goto	l4538
  4648                           
  4649                           ;RF24Network_cg.c: 906: return 0;
  4650  00210C  0E00               	movlw	0
  4651  00210E  0012               	return	
  4652  002110                     l4538:
  4653                           
  4654                           ;RF24Network_cg.c: 907: }
  4655                           ;RF24Network_cg.c: 914: ;
  4656                           ;RF24Network_cg.c: 915: if(fragment_id > 0){
  4657  002110  5063               	movf	RF24N_write_@fragment_id,w,c
  4658  002112  B4D8               	btfsc	status,2,c
  4659  002114  D00C               	goto	l4546
  4660                           
  4661                           ;RF24Network_cg.c: 916: rn.txTime = millis();
  4662  002116  ECC5  F01D         	call	_millis	;wreg free
  4663  00211A  C003  F100         	movff	?_millis,_rn+43
  4664  00211E  C004  F101         	movff	?_millis+1,_rn+44
  4665  002122  C005  F102         	movff	?_millis+2,_rn+45
  4666  002126  C006  F103         	movff	?_millis+3,_rn+46
  4667                           
  4668                           ;RF24Network_cg.c: 917: return 0;
  4669  00212A  0E00               	movlw	0
  4670  00212C  0012               	return	
  4671  00212E                     l4546:
  4672                           
  4673                           ;RF24Network_cg.c: 918: }
  4674                           ;RF24Network_cg.c: 919: return 1;
  4675  00212E  0E01               	movlw	1
  4676  002130  0012               	return	
  4677  002132                     __end_of_RF24N_write_:
  4678                           	opt stack 0
  4679                           tblptru	equ	0xFF8
  4680                           tblptrh	equ	0xFF7
  4681                           tblptrl	equ	0xFF6
  4682                           tablat	equ	0xFF5
  4683                           prodh	equ	0xFF4
  4684                           prodl	equ	0xFF3
  4685                           intcon	equ	0xFF2
  4686                           indf0	equ	0xFEF
  4687                           postinc0	equ	0xFEE
  4688                           fsr0h	equ	0xFEA
  4689                           fsr0l	equ	0xFE9
  4690                           wreg	equ	0xFE8
  4691                           indf2	equ	0xFDF
  4692                           postinc2	equ	0xFDE
  4693                           postdec2	equ	0xFDD
  4694                           fsr2h	equ	0xFDA
  4695                           fsr2l	equ	0xFD9
  4696                           status	equ	0xFD8
  4697                           
  4698 ;; *************** function ___wmul *****************
  4699 ;; Defined at:
  4700 ;;		line 15 in file "/opt/microchip/xc8/v1.36/sources/common/Umul16.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  multiplier      2    2[COMRAM] unsigned int 
  4703 ;;  multiplicand    2    4[COMRAM] unsigned int 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  product         2    6[COMRAM] unsigned int 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  2    2[COMRAM] unsigned int 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0, prodl, prodh
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4716 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;Total ram usage:        6 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    1
  4722 ;; This function calls:
  4723 ;;		Nothing
  4724 ;; This function is called by:
  4725 ;;		_RF24N_begin_d
  4726 ;;		_RF24N_write_
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           	psect	text23
  4731  0039F0                     __ptext23:
  4732                           	opt stack 0
  4733  0039F0                     ___wmul:
  4734                           	opt stack 27
  4735                           
  4736                           ;incstack = 0
  4737  0039F0  5003               	movf	___wmul@multiplier,w,c
  4738  0039F2  0205               	mulwf	___wmul@multiplicand,c
  4739  0039F4  CFF3 F007          	movff	prodl,___wmul@product
  4740  0039F8  CFF4 F008          	movff	prodh,___wmul@product+1
  4741  0039FC  5003               	movf	___wmul@multiplier,w,c
  4742  0039FE  0206               	mulwf	___wmul@multiplicand+1,c
  4743  003A00  50F3               	movf	prodl,w,c
  4744  003A02  2608               	addwf	___wmul@product+1,f,c
  4745  003A04  5004               	movf	___wmul@multiplier+1,w,c
  4746  003A06  0205               	mulwf	___wmul@multiplicand,c
  4747  003A08  50F3               	movf	prodl,w,c
  4748  003A0A  2608               	addwf	___wmul@product+1,f,c
  4749  003A0C  C007  F003         	movff	___wmul@product,?___wmul
  4750  003A10  C008  F004         	movff	___wmul@product+1,?___wmul+1
  4751  003A14  0012               	return	
  4752  003A16                     __end_of___wmul:
  4753                           	opt stack 0
  4754                           tblptru	equ	0xFF8
  4755                           tblptrh	equ	0xFF7
  4756                           tblptrl	equ	0xFF6
  4757                           tablat	equ	0xFF5
  4758                           prodh	equ	0xFF4
  4759                           prodl	equ	0xFF3
  4760                           intcon	equ	0xFF2
  4761                           indf0	equ	0xFEF
  4762                           postinc0	equ	0xFEE
  4763                           fsr0h	equ	0xFEA
  4764                           fsr0l	equ	0xFE9
  4765                           wreg	equ	0xFE8
  4766                           indf2	equ	0xFDF
  4767                           postinc2	equ	0xFDE
  4768                           postdec2	equ	0xFDD
  4769                           fsr2h	equ	0xFDA
  4770                           fsr2l	equ	0xFD9
  4771                           status	equ	0xFD8
  4772                           
  4773 ;; *************** function ___lwmod *****************
  4774 ;; Defined at:
  4775 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwmod.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;  dividend        2    2[COMRAM] unsigned int 
  4778 ;;  divisor         2    4[COMRAM] unsigned int 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  counter         1    6[COMRAM] unsigned char 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  2    2[COMRAM] unsigned int 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2, status,0
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;Total ram usage:        5 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    1
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_RF24N_begin_d
  4801 ;;		_RF24N_write_
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           	psect	text24
  4806  0035F2                     __ptext24:
  4807                           	opt stack 0
  4808  0035F2                     ___lwmod:
  4809                           	opt stack 27
  4810                           
  4811                           ;incstack = 0
  4812  0035F2  5005               	movf	___lwmod@divisor,w,c
  4813  0035F4  1006               	iorwf	___lwmod@divisor+1,w,c
  4814  0035F6  B4D8               	btfsc	status,2,c
  4815  0035F8  D018               	goto	l1421
  4816  0035FA  0E01               	movlw	1
  4817  0035FC  6E07               	movwf	___lwmod@counter,c
  4818  0035FE  D004               	goto	l4300
  4819  003600                     l4298:
  4820  003600  90D8               	bcf	status,0,c
  4821  003602  3605               	rlcf	___lwmod@divisor,f,c
  4822  003604  3606               	rlcf	___lwmod@divisor+1,f,c
  4823  003606  2A07               	incf	___lwmod@counter,f,c
  4824  003608                     l4300:
  4825  003608  AE06               	btfss	___lwmod@divisor+1,7,c
  4826  00360A  D7FA               	goto	l4298
  4827  00360C                     l4302:
  4828  00360C  5005               	movf	___lwmod@divisor,w,c
  4829  00360E  5C03               	subwf	___lwmod@dividend,w,c
  4830  003610  5006               	movf	___lwmod@divisor+1,w,c
  4831  003612  5804               	subwfb	___lwmod@dividend+1,w,c
  4832  003614  A0D8               	btfss	status,0,c
  4833  003616  D004               	goto	l4306
  4834  003618  5005               	movf	___lwmod@divisor,w,c
  4835  00361A  5E03               	subwf	___lwmod@dividend,f,c
  4836  00361C  5006               	movf	___lwmod@divisor+1,w,c
  4837  00361E  5A04               	subwfb	___lwmod@dividend+1,f,c
  4838  003620                     l4306:
  4839  003620  90D8               	bcf	status,0,c
  4840  003622  3206               	rrcf	___lwmod@divisor+1,f,c
  4841  003624  3205               	rrcf	___lwmod@divisor,f,c
  4842  003626  2E07               	decfsz	___lwmod@counter,f,c
  4843  003628  D7F1               	goto	l4302
  4844  00362A                     l1421:
  4845  00362A  C003  F003         	movff	___lwmod@dividend,?___lwmod
  4846  00362E  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  4847  003632  0012               	return		;funcret
  4848  003634                     __end_of___lwmod:
  4849                           	opt stack 0
  4850                           tblptru	equ	0xFF8
  4851                           tblptrh	equ	0xFF7
  4852                           tblptrl	equ	0xFF6
  4853                           tablat	equ	0xFF5
  4854                           prodh	equ	0xFF4
  4855                           prodl	equ	0xFF3
  4856                           intcon	equ	0xFF2
  4857                           indf0	equ	0xFEF
  4858                           postinc0	equ	0xFEE
  4859                           fsr0h	equ	0xFEA
  4860                           fsr0l	equ	0xFE9
  4861                           wreg	equ	0xFE8
  4862                           indf2	equ	0xFDF
  4863                           postinc2	equ	0xFDE
  4864                           postdec2	equ	0xFDD
  4865                           fsr2h	equ	0xFDA
  4866                           fsr2l	equ	0xFD9
  4867                           status	equ	0xFD8
  4868                           
  4869 ;; *************** function _RF24N__write *****************
  4870 ;; Defined at:
  4871 ;;		line 925 in file "../../RF24Network_cg.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  header          2   63[COMRAM] PTR struct .
  4874 ;;		 -> loop@header(8), 
  4875 ;;  message         2   65[COMRAM] PTR const void 
  4876 ;;		 -> loop@payload(8), 
  4877 ;;  len             2   67[COMRAM] unsigned int 
  4878 ;;  writeDirect     2   69[COMRAM] unsigned int 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  sendType        1   73[COMRAM] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      unsigned char 
  4883 ;; Registers used:
  4884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4890 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4894 ;;Total ram usage:       11 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; Hardware stack levels required when called:   10
  4897 ;; This function calls:
  4898 ;;		_RF24N_write
  4899 ;;		_memcpy
  4900 ;; This function is called by:
  4901 ;;		_RF24N_write_
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text25
  4906  002D22                     __ptext25:
  4907                           	opt stack 0
  4908  002D22                     _RF24N__write:
  4909                           	opt stack 17
  4910                           
  4911                           ;RF24Network_cg.c: 928: header->from_node = rn.node_address;
  4912                           
  4913                           ;incstack = 0
  4914  002D22  EE21  F005         	lfsr	2,_rn+48
  4915  002D26  C040  FFE9         	movff	RF24N__write@header,fsr0l
  4916  002D2A  C041  FFEA         	movff	RF24N__write@header+1,fsr0h
  4917  002D2E  CFDE FFEE          	movff	postinc2,postinc0
  4918  002D32  CFDD FFED          	movff	postdec2,postdec0
  4919                           
  4920                           ;RF24Network_cg.c: 931: memcpy(rn.frame_buffer,header,sizeof(RF24NetworkHeader));
  4921  002D36  0EDC               	movlw	low (_rn+7)
  4922  002D38  6E03               	movwf	memcpy@d1,c
  4923  002D3A  0E00               	movlw	high (_rn+7)
  4924  002D3C  6E04               	movwf	memcpy@d1+1,c
  4925  002D3E  C040  F005         	movff	RF24N__write@header,memcpy@s1
  4926  002D42  C041  F006         	movff	RF24N__write@header+1,memcpy@s1+1
  4927  002D46  0E00               	movlw	0
  4928  002D48  6E08               	movwf	memcpy@n+1,c
  4929  002D4A  0E08               	movlw	8
  4930  002D4C  6E07               	movwf	memcpy@n,c
  4931  002D4E  EC5A  F01B         	call	_memcpy	;wreg free
  4932                           
  4933                           ;RF24Network_cg.c: 936: ;
  4934                           ;RF24Network_cg.c: 938: if (len){
  4935  002D52  5044               	movf	RF24N__write@len,w,c
  4936  002D54  1045               	iorwf	RF24N__write@len+1,w,c
  4937  002D56  B4D8               	btfsc	status,2,c
  4938  002D58  D00E               	goto	l4268
  4939                           
  4940                           ;RF24Network_cg.c: 945: memcpy(rn.frame_buffer + sizeof(RF24NetworkHeader),message,len);
  4941  002D5A  0EE4               	movlw	low (_rn+15)
  4942  002D5C  6E03               	movwf	memcpy@d1,c
  4943  002D5E  0E00               	movlw	high (_rn+15)
  4944  002D60  6E04               	movwf	memcpy@d1+1,c
  4945  002D62  C042  F005         	movff	RF24N__write@message,memcpy@s1
  4946  002D66  C043  F006         	movff	RF24N__write@message+1,memcpy@s1+1
  4947  002D6A  C044  F007         	movff	RF24N__write@len,memcpy@n
  4948  002D6E  C045  F008         	movff	RF24N__write@len+1,memcpy@n+1
  4949  002D72  EC5A  F01B         	call	_memcpy	;wreg free
  4950  002D76                     l4268:
  4951                           
  4952                           ;RF24Network_cg.c: 949: }
  4953                           ;RF24Network_cg.c: 964: if(writeDirect != 070){
  4954  002D76  0E38               	movlw	56
  4955  002D78  1846               	xorwf	RF24N__write@writeDirect,w,c
  4956  002D7A  1047               	iorwf	RF24N__write@writeDirect+1,w,c
  4957  002D7C  B4D8               	btfsc	status,2,c
  4958  002D7E  D028               	goto	l4284
  4959                           
  4960                           ;RF24Network_cg.c: 965: uint8_t sendType = 3;
  4961  002D80  0E03               	movlw	3
  4962  002D82  6E4A               	movwf	RF24N__write@sendType,c
  4963                           
  4964                           ;RF24Network_cg.c: 967: if(header->to_node == 0100){
  4965  002D84  EE20 F002          	lfsr	2,2
  4966  002D88  5040               	movf	RF24N__write@header,w,c
  4967  002D8A  26D9               	addwf	fsr2l,f,c
  4968  002D8C  5041               	movf	RF24N__write@header+1,w,c
  4969  002D8E  22DA               	addwfc	fsr2h,f,c
  4970  002D90  0E40               	movlw	64
  4971  002D92  18DE               	xorwf	postinc2,w,c
  4972  002D94  10DE               	iorwf	postinc2,w,c
  4973  002D96  A4D8               	btfss	status,2,c
  4974  002D98  D002               	goto	l4276
  4975                           
  4976                           ;RF24Network_cg.c: 968: sendType = 4;
  4977  002D9A  0E04               	movlw	4
  4978  002D9C  6E4A               	movwf	RF24N__write@sendType,c
  4979  002D9E                     l4276:
  4980                           
  4981                           ;RF24Network_cg.c: 969: }
  4982                           ;RF24Network_cg.c: 970: if(header->to_node == writeDirect){
  4983  002D9E  EE20 F002          	lfsr	2,2
  4984  002DA2  5040               	movf	RF24N__write@header,w,c
  4985  002DA4  26D9               	addwf	fsr2l,f,c
  4986  002DA6  5041               	movf	RF24N__write@header+1,w,c
  4987  002DA8  22DA               	addwfc	fsr2h,f,c
  4988  002DAA  5046               	movf	RF24N__write@writeDirect,w,c
  4989  002DAC  18DE               	xorwf	postinc2,w,c
  4990  002DAE  E106               	bnz	l4280
  4991  002DB0  5047               	movf	RF24N__write@writeDirect+1,w,c
  4992  002DB2  18DE               	xorwf	postinc2,w,c
  4993  002DB4  A4D8               	btfss	status,2,c
  4994  002DB6  D002               	goto	l4280
  4995                           
  4996                           ;RF24Network_cg.c: 971: sendType = 2;
  4997  002DB8  0E02               	movlw	2
  4998  002DBA  6E4A               	movwf	RF24N__write@sendType,c
  4999  002DBC                     l4280:
  5000                           
  5001                           ;RF24Network_cg.c: 972: }
  5002                           ;RF24Network_cg.c: 973: return RF24N_write(writeDirect,sendType);
  5003  002DBC  504A               	movf	RF24N__write@sendType,w,c
  5004  002DBE  6EE6               	movwf	postinc1,c
  5005  002DC0  C046  FFE6         	movff	RF24N__write@writeDirect,postinc1
  5006  002DC4  C047  FFE6         	movff	RF24N__write@writeDirect+1,postinc1
  5007  002DC8  EC90  F00D         	call	_RF24N_write	;wreg free
  5008  002DCC  506A               	movf	btemp,w,c
  5009  002DCE  0012               	return	
  5010  002DD0                     l4284:
  5011                           
  5012                           ;RF24Network_cg.c: 974: }
  5013                           ;RF24Network_cg.c: 975: return RF24N_write(header->to_node,0);
  5014  002DD0  0E00               	movlw	0
  5015  002DD2  6EE6               	movwf	postinc1,c
  5016  002DD4  EE20 F002          	lfsr	2,2
  5017  002DD8  5040               	movf	RF24N__write@header,w,c
  5018  002DDA  26D9               	addwf	fsr2l,f,c
  5019  002DDC  5041               	movf	RF24N__write@header+1,w,c
  5020  002DDE  22DA               	addwfc	fsr2h,f,c
  5021  002DE0  CFDE F048          	movff	postinc2,??_RF24N__write
  5022  002DE4  CFDD F049          	movff	postdec2,??_RF24N__write+1
  5023  002DE8  C048  FFE6         	movff	??_RF24N__write,postinc1
  5024  002DEC  C049  FFE6         	movff	??_RF24N__write+1,postinc1
  5025  002DF0  EC90  F00D         	call	_RF24N_write	;wreg free
  5026  002DF4  506A               	movf	btemp,w,c
  5027  002DF6  0012               	return	
  5028  002DF8                     __end_of_RF24N__write:
  5029                           	opt stack 0
  5030                           tblptru	equ	0xFF8
  5031                           tblptrh	equ	0xFF7
  5032                           tblptrl	equ	0xFF6
  5033                           tablat	equ	0xFF5
  5034                           prodh	equ	0xFF4
  5035                           prodl	equ	0xFF3
  5036                           intcon	equ	0xFF2
  5037                           indf0	equ	0xFEF
  5038                           postinc0	equ	0xFEE
  5039                           postdec0	equ	0xFED
  5040                           fsr0h	equ	0xFEA
  5041                           fsr0l	equ	0xFE9
  5042                           wreg	equ	0xFE8
  5043                           postinc1	equ	0xFE6
  5044                           indf2	equ	0xFDF
  5045                           postinc2	equ	0xFDE
  5046                           postdec2	equ	0xFDD
  5047                           fsr2h	equ	0xFDA
  5048                           fsr2l	equ	0xFD9
  5049                           status	equ	0xFD8
  5050                           
  5051 ;; *************** function _RF24NH_init *****************
  5052 ;; Defined at:
  5053 ;;		line 47 in file "../../RF24Network_cg.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  rnh             2    2[COMRAM] PTR struct .
  5056 ;;		 -> loop@header(8), 
  5057 ;;  _to             2    4[COMRAM] unsigned int 
  5058 ;;  _type           1    6[COMRAM] unsigned char 
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;		None
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      void 
  5063 ;; Registers used:
  5064 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5070 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;Total ram usage:        5 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    1
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		_loop
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text26
  5085  003734                     __ptext26:
  5086                           	opt stack 0
  5087  003734                     _RF24NH_init:
  5088                           	opt stack 28
  5089                           
  5090                           ;RF24Network_cg.c: 49: rnh->to_node=_to;
  5091                           
  5092                           ;incstack = 0
  5093  003734  EE20 F002          	lfsr	2,2
  5094  003738  5003               	movf	RF24NH_init@rnh,w,c
  5095  00373A  26D9               	addwf	fsr2l,f,c
  5096  00373C  5004               	movf	RF24NH_init@rnh+1,w,c
  5097  00373E  22DA               	addwfc	fsr2h,f,c
  5098  003740  C005  FFDE         	movff	RF24NH_init@_to,postinc2
  5099  003744  C006  FFDD         	movff	RF24NH_init@_to+1,postdec2
  5100                           
  5101                           ;RF24Network_cg.c: 50: rnh->id=next_id++;
  5102  003748  EE20 F004          	lfsr	2,4
  5103  00374C  5003               	movf	RF24NH_init@rnh,w,c
  5104  00374E  26D9               	addwf	fsr2l,f,c
  5105  003750  5004               	movf	RF24NH_init@rnh+1,w,c
  5106  003752  22DA               	addwfc	fsr2h,f,c
  5107  003754  C076  FFDE         	movff	_next_id,postinc2
  5108  003758  C077  FFDD         	movff	_next_id+1,postdec2
  5109  00375C  4A76               	infsnz	_next_id,f,c
  5110  00375E  2A77               	incf	_next_id+1,f,c
  5111                           
  5112                           ;RF24Network_cg.c: 51: rnh->type=_type;
  5113  003760  EE20 F006          	lfsr	2,6
  5114  003764  5003               	movf	RF24NH_init@rnh,w,c
  5115  003766  26D9               	addwf	fsr2l,f,c
  5116  003768  5004               	movf	RF24NH_init@rnh+1,w,c
  5117  00376A  22DA               	addwfc	fsr2h,f,c
  5118  00376C  C007  FFDF         	movff	RF24NH_init@_type,indf2
  5119  003770  0012               	return		;funcret
  5120  003772                     __end_of_RF24NH_init:
  5121                           	opt stack 0
  5122                           tblptru	equ	0xFF8
  5123                           tblptrh	equ	0xFF7
  5124                           tblptrl	equ	0xFF6
  5125                           tablat	equ	0xFF5
  5126                           prodh	equ	0xFF4
  5127                           prodl	equ	0xFF3
  5128                           intcon	equ	0xFF2
  5129                           indf0	equ	0xFEF
  5130                           postinc0	equ	0xFEE
  5131                           postdec0	equ	0xFED
  5132                           fsr0h	equ	0xFEA
  5133                           fsr0l	equ	0xFE9
  5134                           wreg	equ	0xFE8
  5135                           postinc1	equ	0xFE6
  5136                           indf2	equ	0xFDF
  5137                           postinc2	equ	0xFDE
  5138                           postdec2	equ	0xFDD
  5139                           fsr2h	equ	0xFDA
  5140                           fsr2l	equ	0xFD9
  5141                           status	equ	0xFD8
  5142                           
  5143 ;; *************** function _digitalWrite *****************
  5144 ;; Defined at:
  5145 ;;		line 62 in file "../../../RF24_c/utility/XC8/spi.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;  pin             1    wreg     unsigned char 
  5148 ;;  mode            1    2[COMRAM] unsigned char 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  pin             1    4[COMRAM] unsigned char 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      void 
  5153 ;; Registers used:
  5154 ;;		wreg, status,2, status,0
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5160 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;Total ram usage:        3 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    1
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_RF24_csn_d
  5171 ;;		_RF24_ce_d
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           	psect	text27
  5176  0023B0                     __ptext27:
  5177                           	opt stack 0
  5178  0023B0                     _digitalWrite:
  5179                           	opt stack 24
  5180                           
  5181                           ;incstack = 0
  5182                           ;digitalWrite@pin stored from wreg
  5183  0023B0  6E05               	movwf	digitalWrite@pin,c
  5184                           
  5185                           ;spi.c: 64: switch(pin)
  5186  0023B2  D0D2               	goto	l3384
  5187  0023B4                     l208:
  5188  0023B4  B003               	btfsc	digitalWrite@mode,0,c
  5189  0023B6  D002               	bra	u3075
  5190  0023B8  9089               	bcf	3977,0,c	;volatile
  5191  0023BA  D001               	bra	u3076
  5192  0023BC                     u3075:
  5193  0023BC  8089               	bsf	3977,0,c	;volatile
  5194  0023BE                     u3076:
  5195  0023BE  0012               	return	
  5196  0023C0                     l210:
  5197  0023C0  B003               	btfsc	digitalWrite@mode,0,c
  5198  0023C2  D002               	bra	u3085
  5199  0023C4  9289               	bcf	3977,1,c	;volatile
  5200  0023C6  D001               	bra	u3086
  5201  0023C8                     u3085:
  5202  0023C8  8289               	bsf	3977,1,c	;volatile
  5203  0023CA                     u3086:
  5204  0023CA  0012               	return	
  5205  0023CC                     l211:
  5206  0023CC  B003               	btfsc	digitalWrite@mode,0,c
  5207  0023CE  D002               	bra	u3095
  5208  0023D0  9489               	bcf	3977,2,c	;volatile
  5209  0023D2  D001               	bra	u3096
  5210  0023D4                     u3095:
  5211  0023D4  8489               	bsf	3977,2,c	;volatile
  5212  0023D6                     u3096:
  5213  0023D6  0012               	return	
  5214  0023D8                     l212:
  5215  0023D8  B003               	btfsc	digitalWrite@mode,0,c
  5216  0023DA  D002               	bra	u3105
  5217  0023DC  9689               	bcf	3977,3,c	;volatile
  5218  0023DE  D001               	bra	u3106
  5219  0023E0                     u3105:
  5220  0023E0  8689               	bsf	3977,3,c	;volatile
  5221  0023E2                     u3106:
  5222  0023E2  0012               	return	
  5223  0023E4                     l213:
  5224  0023E4  B003               	btfsc	digitalWrite@mode,0,c
  5225  0023E6  D002               	bra	u3115
  5226  0023E8  9889               	bcf	3977,4,c	;volatile
  5227  0023EA  D001               	bra	u3116
  5228  0023EC                     u3115:
  5229  0023EC  8889               	bsf	3977,4,c	;volatile
  5230  0023EE                     u3116:
  5231  0023EE  0012               	return	
  5232  0023F0                     l214:
  5233  0023F0  B003               	btfsc	digitalWrite@mode,0,c
  5234  0023F2  D002               	bra	u3125
  5235  0023F4  9A89               	bcf	3977,5,c	;volatile
  5236  0023F6  D001               	bra	u3126
  5237  0023F8                     u3125:
  5238  0023F8  8A89               	bsf	3977,5,c	;volatile
  5239  0023FA                     u3126:
  5240  0023FA  0012               	return	
  5241  0023FC                     l215:
  5242  0023FC  B003               	btfsc	digitalWrite@mode,0,c
  5243  0023FE  D002               	bra	u3135
  5244  002400  908D               	bcf	3981,0,c	;volatile
  5245  002402  D001               	bra	u3136
  5246  002404                     u3135:
  5247  002404  808D               	bsf	3981,0,c	;volatile
  5248  002406                     u3136:
  5249  002406  0012               	return	
  5250  002408                     l216:
  5251  002408  B003               	btfsc	digitalWrite@mode,0,c
  5252  00240A  D002               	bra	u3145
  5253  00240C  928D               	bcf	3981,1,c	;volatile
  5254  00240E  D001               	bra	u3146
  5255  002410                     u3145:
  5256  002410  828D               	bsf	3981,1,c	;volatile
  5257  002412                     u3146:
  5258  002412  0012               	return	
  5259  002414                     l217:
  5260  002414  B003               	btfsc	digitalWrite@mode,0,c
  5261  002416  D002               	bra	u3155
  5262  002418  948D               	bcf	3981,2,c	;volatile
  5263  00241A  D001               	bra	u3156
  5264  00241C                     u3155:
  5265  00241C  848D               	bsf	3981,2,c	;volatile
  5266  00241E                     u3156:
  5267  00241E  0012               	return	
  5268  002420                     l218:
  5269  002420  B003               	btfsc	digitalWrite@mode,0,c
  5270  002422  D002               	bra	u3165
  5271  002424  9E89               	bcf	3977,7,c	;volatile
  5272  002426  D001               	bra	u3166
  5273  002428                     u3165:
  5274  002428  8E89               	bsf	3977,7,c	;volatile
  5275  00242A                     u3166:
  5276  00242A  0012               	return	
  5277  00242C                     l219:
  5278  00242C  B003               	btfsc	digitalWrite@mode,0,c
  5279  00242E  D002               	bra	u3175
  5280  002430  9C89               	bcf	3977,6,c	;volatile
  5281  002432  D001               	bra	u3176
  5282  002434                     u3175:
  5283  002434  8C89               	bsf	3977,6,c	;volatile
  5284  002436                     u3176:
  5285  002436  0012               	return	
  5286  002438                     l220:
  5287  002438  B003               	btfsc	digitalWrite@mode,0,c
  5288  00243A  D002               	bra	u3185
  5289  00243C  908B               	bcf	3979,0,c	;volatile
  5290  00243E  D001               	bra	u3186
  5291  002440                     u3185:
  5292  002440  808B               	bsf	3979,0,c	;volatile
  5293  002442                     u3186:
  5294  002442  0012               	return	
  5295  002444                     l221:
  5296  002444  B003               	btfsc	digitalWrite@mode,0,c
  5297  002446  D002               	bra	u3195
  5298  002448  928B               	bcf	3979,1,c	;volatile
  5299  00244A  D001               	bra	u3196
  5300  00244C                     u3195:
  5301  00244C  828B               	bsf	3979,1,c	;volatile
  5302  00244E                     u3196:
  5303  00244E  0012               	return	
  5304  002450                     l222:
  5305  002450  B003               	btfsc	digitalWrite@mode,0,c
  5306  002452  D002               	bra	u3205
  5307  002454  948B               	bcf	3979,2,c	;volatile
  5308  002456  D001               	bra	u3206
  5309  002458                     u3205:
  5310  002458  848B               	bsf	3979,2,c	;volatile
  5311  00245A                     u3206:
  5312  00245A  0012               	return	
  5313  00245C                     l223:
  5314  00245C  B003               	btfsc	digitalWrite@mode,0,c
  5315  00245E  D002               	bra	u3215
  5316  002460  968B               	bcf	3979,3,c	;volatile
  5317  002462  D001               	bra	u3216
  5318  002464                     u3215:
  5319  002464  868B               	bsf	3979,3,c	;volatile
  5320  002466                     u3216:
  5321  002466  0012               	return	
  5322  002468                     l224:
  5323  002468  B003               	btfsc	digitalWrite@mode,0,c
  5324  00246A  D002               	bra	u3225
  5325  00246C  908C               	bcf	3980,0,c	;volatile
  5326  00246E  D001               	bra	u3226
  5327  002470                     u3225:
  5328  002470  808C               	bsf	3980,0,c	;volatile
  5329  002472                     u3226:
  5330  002472  0012               	return	
  5331  002474                     l225:
  5332  002474  B003               	btfsc	digitalWrite@mode,0,c
  5333  002476  D002               	bra	u3235
  5334  002478  928C               	bcf	3980,1,c	;volatile
  5335  00247A  D001               	bra	u3236
  5336  00247C                     u3235:
  5337  00247C  828C               	bsf	3980,1,c	;volatile
  5338  00247E                     u3236:
  5339  00247E  0012               	return	
  5340  002480                     l226:
  5341  002480  B003               	btfsc	digitalWrite@mode,0,c
  5342  002482  D002               	bra	u3245
  5343  002484  948C               	bcf	3980,2,c	;volatile
  5344  002486  D001               	bra	u3246
  5345  002488                     u3245:
  5346  002488  848C               	bsf	3980,2,c	;volatile
  5347  00248A                     u3246:
  5348  00248A  0012               	return	
  5349  00248C                     l227:
  5350  00248C  B003               	btfsc	digitalWrite@mode,0,c
  5351  00248E  D002               	bra	u3255
  5352  002490  968C               	bcf	3980,3,c	;volatile
  5353  002492  D001               	bra	u3256
  5354  002494                     u3255:
  5355  002494  868C               	bsf	3980,3,c	;volatile
  5356  002496                     u3256:
  5357  002496  0012               	return	
  5358  002498                     l228:
  5359  002498  B003               	btfsc	digitalWrite@mode,0,c
  5360  00249A  D002               	bra	u3265
  5361  00249C  988B               	bcf	3979,4,c	;volatile
  5362  00249E  D001               	bra	u3266
  5363  0024A0                     u3265:
  5364  0024A0  888B               	bsf	3979,4,c	;volatile
  5365  0024A2                     u3266:
  5366  0024A2  0012               	return	
  5367  0024A4                     l229:
  5368  0024A4  B003               	btfsc	digitalWrite@mode,0,c
  5369  0024A6  D002               	bra	u3275
  5370  0024A8  9A8B               	bcf	3979,5,c	;volatile
  5371  0024AA  D001               	bra	u3276
  5372  0024AC                     u3275:
  5373  0024AC  8A8B               	bsf	3979,5,c	;volatile
  5374  0024AE                     u3276:
  5375  0024AE  0012               	return	
  5376  0024B0                     l230:
  5377  0024B0  B003               	btfsc	digitalWrite@mode,0,c
  5378  0024B2  D002               	bra	u3285
  5379  0024B4  9C8B               	bcf	3979,6,c	;volatile
  5380  0024B6  D001               	bra	u3286
  5381  0024B8                     u3285:
  5382  0024B8  8C8B               	bsf	3979,6,c	;volatile
  5383  0024BA                     u3286:
  5384  0024BA  0012               	return	
  5385  0024BC                     l231:
  5386  0024BC  B003               	btfsc	digitalWrite@mode,0,c
  5387  0024BE  D002               	bra	u3295
  5388  0024C0  9E8B               	bcf	3979,7,c	;volatile
  5389  0024C2  D001               	bra	u3296
  5390  0024C4                     u3295:
  5391  0024C4  8E8B               	bsf	3979,7,c	;volatile
  5392  0024C6                     u3296:
  5393  0024C6  0012               	return	
  5394  0024C8                     l232:
  5395  0024C8  B003               	btfsc	digitalWrite@mode,0,c
  5396  0024CA  D002               	bra	u3305
  5397  0024CC  988C               	bcf	3980,4,c	;volatile
  5398  0024CE  D001               	bra	u3306
  5399  0024D0                     u3305:
  5400  0024D0  888C               	bsf	3980,4,c	;volatile
  5401  0024D2                     u3306:
  5402  0024D2  0012               	return	
  5403  0024D4                     l233:
  5404  0024D4  B003               	btfsc	digitalWrite@mode,0,c
  5405  0024D6  D002               	bra	u3315
  5406  0024D8  9A8C               	bcf	3980,5,c	;volatile
  5407  0024DA  D001               	bra	u3316
  5408  0024DC                     u3315:
  5409  0024DC  8A8C               	bsf	3980,5,c	;volatile
  5410  0024DE                     u3316:
  5411  0024DE  0012               	return	
  5412  0024E0                     l234:
  5413  0024E0  B003               	btfsc	digitalWrite@mode,0,c
  5414  0024E2  D002               	bra	u3325
  5415  0024E4  9C8C               	bcf	3980,6,c	;volatile
  5416  0024E6  D001               	bra	u3326
  5417  0024E8                     u3325:
  5418  0024E8  8C8C               	bsf	3980,6,c	;volatile
  5419  0024EA                     u3326:
  5420  0024EA  0012               	return	
  5421  0024EC                     l235:
  5422  0024EC  B003               	btfsc	digitalWrite@mode,0,c
  5423  0024EE  D002               	bra	u3335
  5424  0024F0  9E8C               	bcf	3980,7,c	;volatile
  5425  0024F2  D001               	bra	u3336
  5426  0024F4                     u3335:
  5427  0024F4  8E8C               	bsf	3980,7,c	;volatile
  5428  0024F6                     u3336:
  5429  0024F6  0012               	return	
  5430  0024F8                     l236:
  5431  0024F8  B003               	btfsc	digitalWrite@mode,0,c
  5432  0024FA  D002               	bra	u3345
  5433  0024FC  908A               	bcf	3978,0,c	;volatile
  5434  0024FE  D001               	bra	u3346
  5435  002500                     u3345:
  5436  002500  808A               	bsf	3978,0,c	;volatile
  5437  002502                     u3346:
  5438  002502  0012               	return	
  5439  002504                     l237:
  5440  002504  B003               	btfsc	digitalWrite@mode,0,c
  5441  002506  D002               	bra	u3355
  5442  002508  928A               	bcf	3978,1,c	;volatile
  5443  00250A  D001               	bra	u3356
  5444  00250C                     u3355:
  5445  00250C  828A               	bsf	3978,1,c	;volatile
  5446  00250E                     u3356:
  5447  00250E  0012               	return	
  5448  002510                     l238:
  5449  002510  B003               	btfsc	digitalWrite@mode,0,c
  5450  002512  D002               	bra	u3365
  5451  002514  948A               	bcf	3978,2,c	;volatile
  5452  002516  D001               	bra	u3366
  5453  002518                     u3365:
  5454  002518  848A               	bsf	3978,2,c	;volatile
  5455  00251A                     u3366:
  5456  00251A  0012               	return	
  5457  00251C                     l239:
  5458  00251C  B003               	btfsc	digitalWrite@mode,0,c
  5459  00251E  D002               	bra	u3375
  5460  002520  968A               	bcf	3978,3,c	;volatile
  5461  002522  D001               	bra	u3376
  5462  002524                     u3375:
  5463  002524  868A               	bsf	3978,3,c	;volatile
  5464  002526                     u3376:
  5465  002526  0012               	return	
  5466  002528                     l240:
  5467  002528  B003               	btfsc	digitalWrite@mode,0,c
  5468  00252A  D002               	bra	u3385
  5469  00252C  988A               	bcf	3978,4,c	;volatile
  5470  00252E  D001               	bra	u3386
  5471  002530                     u3385:
  5472  002530  888A               	bsf	3978,4,c	;volatile
  5473  002532                     u3386:
  5474  002532  0012               	return	
  5475  002534                     l241:
  5476  002534  B003               	btfsc	digitalWrite@mode,0,c
  5477  002536  D002               	bra	u3395
  5478  002538  9A8A               	bcf	3978,5,c	;volatile
  5479  00253A  D001               	bra	u3396
  5480  00253C                     u3395:
  5481  00253C  8A8A               	bsf	3978,5,c	;volatile
  5482  00253E                     u3396:
  5483  00253E  0012               	return	
  5484  002540                     l242:
  5485  002540  B003               	btfsc	digitalWrite@mode,0,c
  5486  002542  D002               	bra	u3405
  5487  002544  9C8A               	bcf	3978,6,c	;volatile
  5488  002546  D001               	bra	u3406
  5489  002548                     u3405:
  5490  002548  8C8A               	bsf	3978,6,c	;volatile
  5491  00254A                     u3406:
  5492  00254A  0012               	return	
  5493  00254C                     l243:
  5494  00254C  B003               	btfsc	digitalWrite@mode,0,c
  5495  00254E  D002               	bra	u3415
  5496  002550  9E8A               	bcf	3978,7,c	;volatile
  5497  002552  D001               	bra	u3416
  5498  002554                     u3415:
  5499  002554  8E8A               	bsf	3978,7,c	;volatile
  5500  002556                     u3416:
  5501                           
  5502                           ;spi.c: 113: }
  5503                           
  5504                           ;spi.c: 112: default: break;
  5505  002556  0012               	return	
  5506  002558                     l3384:
  5507  002558  5005               	movf	digitalWrite@pin,w,c
  5508                           
  5509                           ; Switch size 1, requested type "space"
  5510                           ; Number of cases is 35, Range of values is 2 to 40
  5511                           ; switch strategies available:
  5512                           ; Name         Instructions Cycles
  5513                           ; simple_byte          106    54 (average)
  5514                           ;	Chosen strategy is simple_byte
  5515  00255A  0A02               	xorlw	2	; case 2
  5516  00255C  B4D8               	btfsc	status,2,c
  5517  00255E  D72A               	goto	l208
  5518  002560  0A01               	xorlw	1	; case 3
  5519  002562  B4D8               	btfsc	status,2,c
  5520  002564  D72D               	goto	l210
  5521  002566  0A07               	xorlw	7	; case 4
  5522  002568  B4D8               	btfsc	status,2,c
  5523  00256A  D730               	goto	l211
  5524  00256C  0A01               	xorlw	1	; case 5
  5525  00256E  B4D8               	btfsc	status,2,c
  5526  002570  D733               	goto	l212
  5527  002572  0A03               	xorlw	3	; case 6
  5528  002574  B4D8               	btfsc	status,2,c
  5529  002576  D736               	goto	l213
  5530  002578  0A01               	xorlw	1	; case 7
  5531  00257A  B4D8               	btfsc	status,2,c
  5532  00257C  D739               	goto	l214
  5533  00257E  0A0F               	xorlw	15	; case 8
  5534  002580  B4D8               	btfsc	status,2,c
  5535  002582  D73C               	goto	l215
  5536  002584  0A01               	xorlw	1	; case 9
  5537  002586  B4D8               	btfsc	status,2,c
  5538  002588  D73F               	goto	l216
  5539  00258A  0A03               	xorlw	3	; case 10
  5540  00258C  B4D8               	btfsc	status,2,c
  5541  00258E  D742               	goto	l217
  5542  002590  0A07               	xorlw	7	; case 13
  5543  002592  B4D8               	btfsc	status,2,c
  5544  002594  D745               	goto	l218
  5545  002596  0A03               	xorlw	3	; case 14
  5546  002598  B4D8               	btfsc	status,2,c
  5547  00259A  D748               	goto	l219
  5548  00259C  0A01               	xorlw	1	; case 15
  5549  00259E  B4D8               	btfsc	status,2,c
  5550  0025A0  D74B               	goto	l220
  5551  0025A2  0A1F               	xorlw	31	; case 16
  5552  0025A4  B4D8               	btfsc	status,2,c
  5553  0025A6  D74E               	goto	l221
  5554  0025A8  0A01               	xorlw	1	; case 17
  5555  0025AA  B4D8               	btfsc	status,2,c
  5556  0025AC  D751               	goto	l222
  5557  0025AE  0A03               	xorlw	3	; case 18
  5558  0025B0  B4D8               	btfsc	status,2,c
  5559  0025B2  D754               	goto	l223
  5560  0025B4  0A01               	xorlw	1	; case 19
  5561  0025B6  B4D8               	btfsc	status,2,c
  5562  0025B8  D757               	goto	l224
  5563  0025BA  0A07               	xorlw	7	; case 20
  5564  0025BC  B4D8               	btfsc	status,2,c
  5565  0025BE  D75A               	goto	l225
  5566  0025C0  0A01               	xorlw	1	; case 21
  5567  0025C2  B4D8               	btfsc	status,2,c
  5568  0025C4  D75D               	goto	l226
  5569  0025C6  0A03               	xorlw	3	; case 22
  5570  0025C8  B4D8               	btfsc	status,2,c
  5571  0025CA  D760               	goto	l227
  5572  0025CC  0A01               	xorlw	1	; case 23
  5573  0025CE  B4D8               	btfsc	status,2,c
  5574  0025D0  D763               	goto	l228
  5575  0025D2  0A0F               	xorlw	15	; case 24
  5576  0025D4  B4D8               	btfsc	status,2,c
  5577  0025D6  D766               	goto	l229
  5578  0025D8  0A01               	xorlw	1	; case 25
  5579  0025DA  B4D8               	btfsc	status,2,c
  5580  0025DC  D769               	goto	l230
  5581  0025DE  0A03               	xorlw	3	; case 26
  5582  0025E0  B4D8               	btfsc	status,2,c
  5583  0025E2  D76C               	goto	l231
  5584  0025E4  0A01               	xorlw	1	; case 27
  5585  0025E6  B4D8               	btfsc	status,2,c
  5586  0025E8  D76F               	goto	l232
  5587  0025EA  0A07               	xorlw	7	; case 28
  5588  0025EC  B4D8               	btfsc	status,2,c
  5589  0025EE  D772               	goto	l233
  5590  0025F0  0A01               	xorlw	1	; case 29
  5591  0025F2  B4D8               	btfsc	status,2,c
  5592  0025F4  D775               	goto	l234
  5593  0025F6  0A03               	xorlw	3	; case 30
  5594  0025F8  B4D8               	btfsc	status,2,c
  5595  0025FA  D778               	goto	l235
  5596  0025FC  0A3F               	xorlw	63	; case 33
  5597  0025FE  B4D8               	btfsc	status,2,c
  5598  002600  D77B               	goto	l236
  5599  002602  0A03               	xorlw	3	; case 34
  5600  002604  B4D8               	btfsc	status,2,c
  5601  002606  D77E               	goto	l237
  5602  002608  0A01               	xorlw	1	; case 35
  5603  00260A  B4D8               	btfsc	status,2,c
  5604  00260C  D781               	goto	l238
  5605  00260E  0A07               	xorlw	7	; case 36
  5606  002610  B4D8               	btfsc	status,2,c
  5607  002612  D784               	goto	l239
  5608  002614  0A01               	xorlw	1	; case 37
  5609  002616  B4D8               	btfsc	status,2,c
  5610  002618  D787               	goto	l240
  5611  00261A  0A03               	xorlw	3	; case 38
  5612  00261C  B4D8               	btfsc	status,2,c
  5613  00261E  D78A               	goto	l241
  5614  002620  0A01               	xorlw	1	; case 39
  5615  002622  B4D8               	btfsc	status,2,c
  5616  002624  D78D               	goto	l242
  5617  002626  0A0F               	xorlw	15	; case 40
  5618  002628  A4D8               	btfss	status,2,c
  5619  00262A  0012               	return	
  5620  00262C  D78F               	goto	l243
  5621  00262E                     __end_of_digitalWrite:
  5622                           	opt stack 0
  5623                           tblptru	equ	0xFF8
  5624                           tblptrh	equ	0xFF7
  5625                           tblptrl	equ	0xFF6
  5626                           tablat	equ	0xFF5
  5627                           prodh	equ	0xFF4
  5628                           prodl	equ	0xFF3
  5629                           intcon	equ	0xFF2
  5630                           indf0	equ	0xFEF
  5631                           postinc0	equ	0xFEE
  5632                           postdec0	equ	0xFED
  5633                           fsr0h	equ	0xFEA
  5634                           fsr0l	equ	0xFE9
  5635                           wreg	equ	0xFE8
  5636                           postinc1	equ	0xFE6
  5637                           indf2	equ	0xFDF
  5638                           postinc2	equ	0xFDE
  5639                           postdec2	equ	0xFDD
  5640                           fsr2h	equ	0xFDA
  5641                           fsr2l	equ	0xFD9
  5642                           status	equ	0xFD8
  5643                           
  5644 ;; *************** function _RF24_write_payload *****************
  5645 ;; Defined at:
  5646 ;;		line 224 in file "../../../RF24_c/RF24_cg.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  buf             2   11[COMRAM] PTR const void 
  5649 ;;		 -> rn.frame_buffer(32), rn(370), 
  5650 ;;  data_len        1   13[COMRAM] unsigned char 
  5651 ;;  writeType       1   14[COMRAM] const unsigned char 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;  current         2   26[COMRAM] PTR const unsigned char 
  5654 ;;		 -> rn.frame_buffer(32), rn(370), 
  5655 ;;  blank_len       1   32[COMRAM] unsigned char 
  5656 ;;  status          1   25[COMRAM] unsigned char 
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  1    wreg      unsigned char 
  5659 ;; Registers used:
  5660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5666 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5667 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5668 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5669 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;Total ram usage:       22 bytes
  5671 ;; Hardware stack levels used:    1
  5672 ;; Hardware stack levels required when called:    4
  5673 ;; This function calls:
  5674 ;;		_RF24_beginTransaction
  5675 ;;		_RF24_endTransaction
  5676 ;;		_SPI_transfer
  5677 ;; This function is called by:
  5678 ;;		_RF24_startFastWrite
  5679 ;;		_RF24_startWrite
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	text28
  5684  002F48                     __ptext28:
  5685                           	opt stack 0
  5686  002F48                     _RF24_write_payload:
  5687                           	opt stack 18
  5688                           
  5689                           ;RF24_cg.c: 226: uint8_t status;
  5690                           ;RF24_cg.c: 227: const uint8_t* current = (const uint8_t*)(buf);
  5691                           
  5692                           ;incstack = 0
  5693  002F48  C00C  F01B         	movff	RF24_write_payload@buf,RF24_write_payload@current
  5694  002F4C  C00D  F01C         	movff	RF24_write_payload@buf+1,RF24_write_payload@current+1
  5695                           
  5696                           ;RF24_cg.c: 228: uint8_t blank_len;
  5697                           ;RF24_cg.c: 230: data_len = (data_len<rf.payload_size?data_len:rf.payload_size);
  5698  002F50  0100               	movlb	0	; () banked
  5699  002F52  5191               	movf	(_rf+5)& (0+255),w,b
  5700  002F54  5C0E               	subwf	RF24_write_payload@data_len,w,c
  5701  002F56  A0D8               	btfss	status,0,c
  5702  002F58  D003               	goto	l384
  5703                           
  5704                           ; BSR set to: 0
  5705  002F5A  C091  F01D         	movff	_rf+5,_RF24_write_payload$1900
  5706  002F5E  D002               	goto	L4
  5707  002F60                     l384:
  5708                           
  5709                           ; BSR set to: 0
  5710  002F60  C00E  F01D         	movff	RF24_write_payload@data_len,_RF24_write_payload$1900
  5711  002F64                     L4:
  5712  002F64  6A1E               	clrf	_RF24_write_payload$1900+1,c
  5713                           
  5714                           ; BSR set to: 0
  5715  002F66  C01D  F00E         	movff	_RF24_write_payload$1900,RF24_write_payload@data_len
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;RF24_cg.c: 231: blank_len = rf.dynamic_payloads_enabled ? 0 : rf.payload_size - data_le
      +                          n;
  5719  002F6A  0100               	movlb	0	; () banked
  5720  002F6C  5192               	movf	(_rf+6)& (0+255),w,b
  5721  002F6E  A4D8               	btfss	status,2,c
  5722  002F70  D00F               	goto	l3454
  5723                           
  5724                           ; BSR set to: 0
  5725  002F72  500E               	movf	RF24_write_payload@data_len,w,c
  5726  002F74  6E10               	movwf	??_RF24_write_payload& (0+255),c
  5727  002F76  6A11               	clrf	(??_RF24_write_payload+1)& (0+255),c
  5728  002F78  1E10               	comf	??_RF24_write_payload,f,c
  5729  002F7A  1E11               	comf	??_RF24_write_payload+1,f,c
  5730  002F7C  4A10               	infsnz	??_RF24_write_payload,f,c
  5731  002F7E  2A11               	incf	??_RF24_write_payload+1,f,c
  5732  002F80  0100               	movlb	0	; () banked
  5733  002F82  5191               	movf	(_rf+5)& (0+255),w,b
  5734  002F84  2410               	addwf	??_RF24_write_payload,w,c
  5735  002F86  6E1F               	movwf	_RF24_write_payload$1901,c
  5736  002F88  0E00               	movlw	0
  5737  002F8A  2011               	addwfc	??_RF24_write_payload+1,w,c
  5738  002F8C  6E20               	movwf	_RF24_write_payload$1901+1,c
  5739  002F8E  D004               	goto	l3456
  5740  002F90                     l3454:
  5741                           
  5742                           ; BSR set to: 0
  5743  002F90  0E00               	movlw	0
  5744  002F92  6E20               	movwf	_RF24_write_payload$1901+1,c
  5745  002F94  0E00               	movlw	0
  5746  002F96  6E1F               	movwf	_RF24_write_payload$1901,c
  5747  002F98                     l3456:
  5748                           
  5749                           ; BSR set to: 0
  5750  002F98  C01F  F021         	movff	_RF24_write_payload$1901,RF24_write_payload@blank_len
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;RF24_cg.c: 234: ;
  5754                           ;RF24_cg.c: 255: RF24_beginTransaction();
  5755  002F9C  ECEE  F01D         	call	_RF24_beginTransaction	;wreg free
  5756                           
  5757                           ;RF24_cg.c: 256: status = SPI_transfer( writeType );
  5758  002FA0  500F               	movf	RF24_write_payload@writeType,w,c
  5759  002FA2  ECCE  F01D         	call	_SPI_transfer
  5760  002FA6  6E1A               	movwf	RF24_write_payload@status,c
  5761                           
  5762                           ;RF24_cg.c: 257: while ( data_len-- ) {
  5763  002FA8  D009               	goto	l3466
  5764  002FAA                     l3462:
  5765                           
  5766                           ;RF24_cg.c: 258: SPI_transfer(*current++);
  5767  002FAA  C01B  FFD9         	movff	RF24_write_payload@current,fsr2l
  5768  002FAE  C01C  FFDA         	movff	RF24_write_payload@current+1,fsr2h
  5769  002FB2  50DF               	movf	indf2,w,c
  5770  002FB4  ECCE  F01D         	call	_SPI_transfer
  5771  002FB8  4A1B               	infsnz	RF24_write_payload@current,f,c
  5772  002FBA  2A1C               	incf	RF24_write_payload@current+1,f,c
  5773  002FBC                     l3466:
  5774  002FBC  060E               	decf	RF24_write_payload@data_len,f,c
  5775  002FBE  280E               	incf	RF24_write_payload@data_len,w,c
  5776  002FC0  B4D8               	btfsc	status,2,c
  5777  002FC2  D004               	goto	l3470
  5778  002FC4  D7F2               	goto	l3462
  5779  002FC6                     l3468:
  5780                           
  5781                           ;RF24_cg.c: 261: SPI_transfer(0);
  5782  002FC6  0E00               	movlw	0
  5783  002FC8  ECCE  F01D         	call	_SPI_transfer
  5784  002FCC                     l3470:
  5785  002FCC  0621               	decf	RF24_write_payload@blank_len,f,c
  5786  002FCE  2821               	incf	RF24_write_payload@blank_len,w,c
  5787  002FD0  A4D8               	btfss	status,2,c
  5788  002FD2  D7F9               	goto	l3468
  5789                           
  5790                           ;RF24_cg.c: 262: }
  5791                           ;RF24_cg.c: 263: RF24_endTransaction();
  5792  002FD4  ECEA  F01D         	call	_RF24_endTransaction	;wreg free
  5793  002FD8  0012               	return	
  5794  002FDA                     __end_of_RF24_write_payload:
  5795                           	opt stack 0
  5796                           tblptru	equ	0xFF8
  5797                           tblptrh	equ	0xFF7
  5798                           tblptrl	equ	0xFF6
  5799                           tablat	equ	0xFF5
  5800                           prodh	equ	0xFF4
  5801                           prodl	equ	0xFF3
  5802                           intcon	equ	0xFF2
  5803                           indf0	equ	0xFEF
  5804                           postinc0	equ	0xFEE
  5805                           postdec0	equ	0xFED
  5806                           fsr0h	equ	0xFEA
  5807                           fsr0l	equ	0xFE9
  5808                           wreg	equ	0xFE8
  5809                           postinc1	equ	0xFE6
  5810                           indf2	equ	0xFDF
  5811                           postinc2	equ	0xFDE
  5812                           postdec2	equ	0xFDD
  5813                           fsr2h	equ	0xFDA
  5814                           fsr2l	equ	0xFD9
  5815                           status	equ	0xFD8
  5816                           
  5817 ;; *************** function _RF24_read_payload *****************
  5818 ;; Defined at:
  5819 ;;		line 272 in file "../../../RF24_c/RF24_cg.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;  buf             2   11[COMRAM] PTR void 
  5822 ;;		 -> rn(370), 
  5823 ;;  data_len        1   13[COMRAM] unsigned char 
  5824 ;; Auto vars:     Size  Location     Type
  5825 ;;  current         2   23[COMRAM] PTR unsigned char 
  5826 ;;		 -> rn(370), 
  5827 ;;  blank_len       1   27[COMRAM] unsigned char 
  5828 ;;  status          1   22[COMRAM] unsigned char 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      unsigned char 
  5831 ;; Registers used:
  5832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5838 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5839 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;Total ram usage:       17 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    4
  5845 ;; This function calls:
  5846 ;;		_RF24_beginTransaction
  5847 ;;		_RF24_endTransaction
  5848 ;;		_SPI_transfer
  5849 ;; This function is called by:
  5850 ;;		_RF24_read
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           	psect	text29
  5855  002FDA                     __ptext29:
  5856                           	opt stack 0
  5857  002FDA                     _RF24_read_payload:
  5858                           	opt stack 21
  5859                           
  5860                           ;RF24_cg.c: 274: uint8_t status;
  5861                           ;RF24_cg.c: 275: uint8_t* current = (uint8_t*)(buf);
  5862                           
  5863                           ;incstack = 0
  5864  002FDA  C00C  F018         	movff	RF24_read_payload@buf,RF24_read_payload@current
  5865  002FDE  C00D  F019         	movff	RF24_read_payload@buf+1,RF24_read_payload@current+1
  5866                           
  5867                           ;RF24_cg.c: 276: uint8_t blank_len;
  5868                           ;RF24_cg.c: 278: if(data_len > rf.payload_size) data_len = rf.payload_size;
  5869  002FE2  500E               	movf	RF24_read_payload@data_len,w,c
  5870  002FE4  0100               	movlb	0	; () banked
  5871  002FE6  5D91               	subwf	(_rf+5)& (0+255),w,b
  5872  002FE8  A0D8               	btfss	status,0,c
  5873                           
  5874                           ; BSR set to: 0
  5875  002FEA  C091  F00E         	movff	_rf+5,RF24_read_payload@data_len
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;RF24_cg.c: 279: blank_len = rf.dynamic_payloads_enabled ? 0 : rf.payload_size - data_le
      +                          n;
  5879                           
  5880                           ; BSR set to: 0
  5881  002FEE  0100               	movlb	0	; () banked
  5882  002FF0  5192               	movf	(_rf+6)& (0+255),w,b
  5883  002FF2  A4D8               	btfss	status,2,c
  5884  002FF4  D00F               	goto	l3660
  5885                           
  5886                           ; BSR set to: 0
  5887  002FF6  500E               	movf	RF24_read_payload@data_len,w,c
  5888  002FF8  6E0F               	movwf	??_RF24_read_payload& (0+255),c
  5889  002FFA  6A10               	clrf	(??_RF24_read_payload+1)& (0+255),c
  5890  002FFC  1E0F               	comf	??_RF24_read_payload,f,c
  5891  002FFE  1E10               	comf	??_RF24_read_payload+1,f,c
  5892  003000  4A0F               	infsnz	??_RF24_read_payload,f,c
  5893  003002  2A10               	incf	??_RF24_read_payload+1,f,c
  5894  003004  0100               	movlb	0	; () banked
  5895  003006  5191               	movf	(_rf+5)& (0+255),w,b
  5896  003008  240F               	addwf	??_RF24_read_payload,w,c
  5897  00300A  6E1A               	movwf	_RF24_read_payload$1908,c
  5898  00300C  0E00               	movlw	0
  5899  00300E  2010               	addwfc	??_RF24_read_payload+1,w,c
  5900  003010  6E1B               	movwf	_RF24_read_payload$1908+1,c
  5901  003012  D004               	goto	l3662
  5902  003014                     l3660:
  5903                           
  5904                           ; BSR set to: 0
  5905  003014  0E00               	movlw	0
  5906  003016  6E1B               	movwf	_RF24_read_payload$1908+1,c
  5907  003018  0E00               	movlw	0
  5908  00301A  6E1A               	movwf	_RF24_read_payload$1908,c
  5909  00301C                     l3662:
  5910                           
  5911                           ; BSR set to: 0
  5912  00301C  C01A  F01C         	movff	_RF24_read_payload$1908,RF24_read_payload@blank_len
  5913                           
  5914                           ; BSR set to: 0
  5915                           ;RF24_cg.c: 283: ;
  5916                           ;RF24_cg.c: 311: RF24_beginTransaction();
  5917  003020  ECEE  F01D         	call	_RF24_beginTransaction	;wreg free
  5918                           
  5919                           ;RF24_cg.c: 312: status = SPI_transfer( 0x61 );
  5920  003024  0E61               	movlw	97
  5921  003026  ECCE  F01D         	call	_SPI_transfer
  5922  00302A  6E17               	movwf	RF24_read_payload@status,c
  5923                           
  5924                           ;RF24_cg.c: 313: while ( data_len-- ) {
  5925  00302C  D00A               	goto	l3672
  5926  00302E                     l3668:
  5927                           
  5928                           ;RF24_cg.c: 314: *current++ = SPI_transfer(0xFF);
  5929  00302E  0EFF               	movlw	255
  5930  003030  ECCE  F01D         	call	_SPI_transfer
  5931  003034  C018  FFD9         	movff	RF24_read_payload@current,fsr2l
  5932  003038  C019  FFDA         	movff	RF24_read_payload@current+1,fsr2h
  5933  00303C  6EDF               	movwf	indf2,c
  5934  00303E  4A18               	infsnz	RF24_read_payload@current,f,c
  5935  003040  2A19               	incf	RF24_read_payload@current+1,f,c
  5936  003042                     l3672:
  5937  003042  060E               	decf	RF24_read_payload@data_len,f,c
  5938  003044  280E               	incf	RF24_read_payload@data_len,w,c
  5939  003046  B4D8               	btfsc	status,2,c
  5940  003048  D004               	goto	l3676
  5941  00304A  D7F1               	goto	l3668
  5942  00304C                     l3674:
  5943                           
  5944                           ;RF24_cg.c: 317: SPI_transfer(0xff);
  5945  00304C  0EFF               	movlw	255
  5946  00304E  ECCE  F01D         	call	_SPI_transfer
  5947  003052                     l3676:
  5948  003052  061C               	decf	RF24_read_payload@blank_len,f,c
  5949  003054  281C               	incf	RF24_read_payload@blank_len,w,c
  5950  003056  A4D8               	btfss	status,2,c
  5951  003058  D7F9               	goto	l3674
  5952                           
  5953                           ;RF24_cg.c: 318: }
  5954                           ;RF24_cg.c: 319: RF24_endTransaction();
  5955  00305A  ECEA  F01D         	call	_RF24_endTransaction	;wreg free
  5956  00305E  0012               	return	
  5957  003060                     __end_of_RF24_read_payload:
  5958                           	opt stack 0
  5959                           tblptru	equ	0xFF8
  5960                           tblptrh	equ	0xFF7
  5961                           tblptrl	equ	0xFF6
  5962                           tablat	equ	0xFF5
  5963                           prodh	equ	0xFF4
  5964                           prodl	equ	0xFF3
  5965                           intcon	equ	0xFF2
  5966                           indf0	equ	0xFEF
  5967                           postinc0	equ	0xFEE
  5968                           postdec0	equ	0xFED
  5969                           fsr0h	equ	0xFEA
  5970                           fsr0l	equ	0xFE9
  5971                           wreg	equ	0xFE8
  5972                           postinc1	equ	0xFE6
  5973                           indf2	equ	0xFDF
  5974                           postinc2	equ	0xFDE
  5975                           postdec2	equ	0xFDD
  5976                           fsr2h	equ	0xFDA
  5977                           fsr2l	equ	0xFD9
  5978                           status	equ	0xFD8
  5979                           
  5980 ;; *************** function _RF24_spiTrans *****************
  5981 ;; Defined at:
  5982 ;;		line 327 in file "../../../RF24_c/RF24_cg.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;  cmd             1    wreg     unsigned char 
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;  cmd             1   13[COMRAM] unsigned char 
  5987 ;;  status          1   14[COMRAM] unsigned char 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  1    wreg      unsigned char 
  5990 ;; Registers used:
  5991 ;;		wreg, status,2, status,0, cstack
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5998 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6000 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;Total ram usage:        4 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:    4
  6004 ;; This function calls:
  6005 ;;		_RF24_beginTransaction
  6006 ;;		_RF24_endTransaction
  6007 ;;		_SPI_transfer
  6008 ;; This function is called by:
  6009 ;;		_RF24_flush_rx
  6010 ;;		_RF24_flush_tx
  6011 ;;		_RF24_get_status
  6012 ;;		_RF24_reUseTX
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text30
  6017  003B74                     __ptext30:
  6018                           	opt stack 0
  6019  003B74                     _RF24_spiTrans:
  6020                           	opt stack 23
  6021                           
  6022                           ;incstack = 0
  6023                           ;RF24_spiTrans@cmd stored from wreg
  6024  003B74  6E0E               	movwf	RF24_spiTrans@cmd,c
  6025                           
  6026                           ;RF24_cg.c: 329: uint8_t status;
  6027                           ;RF24_cg.c: 331: RF24_beginTransaction();
  6028  003B76  ECEE  F01D         	call	_RF24_beginTransaction	;wreg free
  6029                           
  6030                           ;RF24_cg.c: 332: status = SPI_transfer( cmd );
  6031  003B7A  500E               	movf	RF24_spiTrans@cmd,w,c
  6032  003B7C  ECCE  F01D         	call	_SPI_transfer
  6033  003B80  6E0F               	movwf	RF24_spiTrans@status,c
  6034                           
  6035                           ;RF24_cg.c: 333: RF24_endTransaction();
  6036  003B82  ECEA  F01D         	call	_RF24_endTransaction	;wreg free
  6037                           
  6038                           ;RF24_cg.c: 335: return status;
  6039  003B86  500F               	movf	RF24_spiTrans@status,w,c
  6040  003B88  0012               	return	
  6041  003B8A                     __end_of_RF24_spiTrans:
  6042                           	opt stack 0
  6043                           tblptru	equ	0xFF8
  6044                           tblptrh	equ	0xFF7
  6045                           tblptrl	equ	0xFF6
  6046                           tablat	equ	0xFF5
  6047                           prodh	equ	0xFF4
  6048                           prodl	equ	0xFF3
  6049                           intcon	equ	0xFF2
  6050                           indf0	equ	0xFEF
  6051                           postinc0	equ	0xFEE
  6052                           postdec0	equ	0xFED
  6053                           fsr0h	equ	0xFEA
  6054                           fsr0l	equ	0xFE9
  6055                           wreg	equ	0xFE8
  6056                           postinc1	equ	0xFE6
  6057                           indf2	equ	0xFDF
  6058                           postinc2	equ	0xFDE
  6059                           postdec2	equ	0xFDD
  6060                           fsr2h	equ	0xFDA
  6061                           fsr2l	equ	0xFD9
  6062                           status	equ	0xFD8
  6063                           
  6064 ;; *************** function _RF24_get_status *****************
  6065 ;; Defined at:
  6066 ;;		line 355 in file "../../../RF24_c/RF24_cg.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;		None
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;		None
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      unsigned char 
  6073 ;; Registers used:
  6074 ;;		wreg, status,2, status,0, cstack
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;Total ram usage:        0 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:    5
  6087 ;; This function calls:
  6088 ;;		_RF24_spiTrans
  6089 ;; This function is called by:
  6090 ;;		_RF24_writeFast_m
  6091 ;;		_RF24_txStandBy_t
  6092 ;;		_RF24_available_p
  6093 ;;		_RF24_write_m
  6094 ;;		_RF24_writeBlocking
  6095 ;;		_RF24_txStandBy
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text31
  6100  003BC4                     __ptext31:
  6101                           	opt stack 0
  6102  003BC4                     _RF24_get_status:
  6103                           	opt stack 21
  6104                           
  6105                           ;RF24_cg.c: 357: return RF24_spiTrans( 0xFF);
  6106                           
  6107                           ;incstack = 0
  6108  003BC4  0EFF               	movlw	255
  6109  003BC6  ECBA  F01D         	call	_RF24_spiTrans
  6110  003BCA  0012               	return	
  6111  003BCC                     __end_of_RF24_get_status:
  6112                           	opt stack 0
  6113                           tblptru	equ	0xFF8
  6114                           tblptrh	equ	0xFF7
  6115                           tblptrl	equ	0xFF6
  6116                           tablat	equ	0xFF5
  6117                           prodh	equ	0xFF4
  6118                           prodl	equ	0xFF3
  6119                           intcon	equ	0xFF2
  6120                           indf0	equ	0xFEF
  6121                           postinc0	equ	0xFEE
  6122                           postdec0	equ	0xFED
  6123                           fsr0h	equ	0xFEA
  6124                           fsr0l	equ	0xFE9
  6125                           wreg	equ	0xFE8
  6126                           postinc1	equ	0xFE6
  6127                           indf2	equ	0xFDF
  6128                           postinc2	equ	0xFDE
  6129                           postdec2	equ	0xFDD
  6130                           fsr2h	equ	0xFDA
  6131                           fsr2l	equ	0xFD9
  6132                           status	equ	0xFD8
  6133                           
  6134 ;; *************** function _RF24_closeReadingPipe *****************
  6135 ;; Defined at:
  6136 ;;		line 1259 in file "../../../RF24_c/RF24_cg.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;  pipe            1    wreg     unsigned char 
  6139 ;; Auto vars:     Size  Location     Type
  6140 ;;  pipe            1   20[COMRAM] unsigned char 
  6141 ;; Return value:  Size  Location     Type
  6142 ;;                  1    wreg      void 
  6143 ;; Registers used:
  6144 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6145 ;; Tracked objects:
  6146 ;;		On entry : 0/0
  6147 ;;		On exit  : 0/0
  6148 ;;		Unchanged: 0/0
  6149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6151 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6152 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6153 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6154 ;;Total ram usage:        5 bytes
  6155 ;; Hardware stack levels used:    1
  6156 ;; Hardware stack levels required when called:    5
  6157 ;; This function calls:
  6158 ;;		_RF24_read_register_d
  6159 ;;		_RF24_write_register_d
  6160 ;; This function is called by:
  6161 ;;		_RF24_startListening
  6162 ;; This function uses a non-reentrant model
  6163 ;;
  6164                           
  6165                           	psect	text32
  6166  003634                     __ptext32:
  6167                           	opt stack 0
  6168  003634                     _RF24_closeReadingPipe:
  6169                           	opt stack 22
  6170                           
  6171                           ;incstack = 0
  6172                           ;RF24_closeReadingPipe@pipe stored from wreg
  6173  003634  6E15               	movwf	RF24_closeReadingPipe@pipe,c
  6174                           
  6175                           ;RF24_cg.c: 1261: RF24_write_register_d(0x02,RF24_read_register_d(0x02) & ~(1<<((*(&chil
      +                          d_pipe_enable[pipe])))));
  6176  003636  5015               	movf	RF24_closeReadingPipe@pipe,w,c
  6177  003638  0D01               	mullw	1
  6178  00363A  0E0D               	movlw	low _child_pipe_enable
  6179  00363C  24F3               	addwf	prodl,w,c
  6180  00363E  6EF6               	movwf	tblptrl,c
  6181  003640  0E10               	movlw	high _child_pipe_enable
  6182  003642  20F4               	addwfc	prodh,w,c
  6183  003644  6EF7               	movwf	tblptrh,c
  6184  003646                     	if	0	;There are less than 3 active tblptr bytes
  6185  003646                     	endif
  6186  003646  0008               	tblrd		*
  6187  003648  CFF5 F011          	movff	tablat,??_RF24_closeReadingPipe
  6188  00364C  0E01               	movlw	1
  6189  00364E  6E12               	movwf	(??_RF24_closeReadingPipe+1)& (0+255),c
  6190  003650  2A11               	incf	??_RF24_closeReadingPipe,f,c
  6191  003652  D002               	goto	u3604
  6192  003654                     u3605:
  6193  003654  90D8               	bcf	status,0,c
  6194  003656  3612               	rlcf	??_RF24_closeReadingPipe+1,f,c
  6195  003658                     u3604:
  6196  003658  2E11               	decfsz	??_RF24_closeReadingPipe,f,c
  6197  00365A  D7FC               	goto	u3605
  6198  00365C  5012               	movf	??_RF24_closeReadingPipe+1,w,c
  6199  00365E  0AFF               	xorlw	255
  6200  003660  6E13               	movwf	(??_RF24_closeReadingPipe+2)& (0+255),c
  6201  003662  0E02               	movlw	2
  6202  003664  EC50  F01D         	call	_RF24_read_register_d
  6203  003668  1413               	andwf	??_RF24_closeReadingPipe+2,w,c
  6204  00366A  6E0E               	movwf	RF24_write_register_d@value,c
  6205  00366C  0E02               	movlw	2
  6206  00366E  EC40  F01D         	call	_RF24_write_register_d
  6207  003672  0012               	return		;funcret
  6208  003674                     __end_of_RF24_closeReadingPipe:
  6209                           	opt stack 0
  6210                           tblptru	equ	0xFF8
  6211                           tblptrh	equ	0xFF7
  6212                           tblptrl	equ	0xFF6
  6213                           tablat	equ	0xFF5
  6214                           prodh	equ	0xFF4
  6215                           prodl	equ	0xFF3
  6216                           intcon	equ	0xFF2
  6217                           indf0	equ	0xFEF
  6218                           postinc0	equ	0xFEE
  6219                           postdec0	equ	0xFED
  6220                           fsr0h	equ	0xFEA
  6221                           fsr0l	equ	0xFE9
  6222                           wreg	equ	0xFE8
  6223                           postinc1	equ	0xFE6
  6224                           indf2	equ	0xFDF
  6225                           postinc2	equ	0xFDE
  6226                           postdec2	equ	0xFDD
  6227                           fsr2h	equ	0xFDA
  6228                           fsr2l	equ	0xFD9
  6229                           status	equ	0xFD8
  6230                           
  6231 ;; *************** function _RF24_startFastWrite *****************
  6232 ;; Defined at:
  6233 ;;		line 954 in file "../../../RF24_c/RF24_cg.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  buf             2   33[COMRAM] PTR const void 
  6236 ;;		 -> rn.frame_buffer(32), rn(370), 
  6237 ;;  len             1   35[COMRAM] unsigned char 
  6238 ;;  multicast       1   36[COMRAM] const unsigned char 
  6239 ;;  startTx         1   37[COMRAM] unsigned char 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;		None
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  1    wreg      void 
  6244 ;; Registers used:
  6245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6251 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6252 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6254 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6255 ;;Total ram usage:        9 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; Hardware stack levels required when called:    5
  6258 ;; This function calls:
  6259 ;;		_RF24_ce_d
  6260 ;;		_RF24_write_payload
  6261 ;; This function is called by:
  6262 ;;		_RF24_writeFast_m
  6263 ;;		_RF24_write_m
  6264 ;;		_RF24_writeBlocking
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           	psect	text33
  6269  0037AE                     __ptext33:
  6270                           	opt stack 0
  6271  0037AE                     _RF24_startFastWrite:
  6272                           	opt stack 18
  6273                           
  6274                           ;RF24_cg.c: 957: RF24_write_payload( buf, len,multicast ? 0xB0 : 0xA0 ) ;
  6275                           
  6276                           ;incstack = 0
  6277  0037AE  5025               	movf	RF24_startFastWrite@multicast,w,c
  6278  0037B0  A4D8               	btfss	status,2,c
  6279  0037B2  D004               	goto	l3524
  6280  0037B4  0E00               	movlw	0
  6281  0037B6  6E2A               	movwf	_RF24_startFastWrite$1976+1,c
  6282  0037B8  0EA0               	movlw	160
  6283  0037BA  D003               	goto	L5
  6284  0037BC                     l3524:
  6285  0037BC  0E00               	movlw	0
  6286  0037BE  6E2A               	movwf	_RF24_startFastWrite$1976+1,c
  6287  0037C0  0EB0               	movlw	176
  6288  0037C2                     L5:
  6289  0037C2  6E29               	movwf	_RF24_startFastWrite$1976,c
  6290  0037C4  C022  F00C         	movff	RF24_startFastWrite@buf,RF24_write_payload@buf
  6291  0037C8  C023  F00D         	movff	RF24_startFastWrite@buf+1,RF24_write_payload@buf+1
  6292  0037CC  C024  F00E         	movff	RF24_startFastWrite@len,RF24_write_payload@data_len
  6293  0037D0  C029  F00F         	movff	_RF24_startFastWrite$1976,RF24_write_payload@writeType
  6294  0037D4  ECA4  F017         	call	_RF24_write_payload	;wreg free
  6295                           
  6296                           ;RF24_cg.c: 958: if(startTx){
  6297  0037D8  5026               	movf	RF24_startFastWrite@startTx,w,c
  6298  0037DA  B4D8               	btfsc	status,2,c
  6299  0037DC  0012               	return	
  6300                           
  6301                           ;RF24_cg.c: 959: RF24_ce_d(1);
  6302  0037DE  0E01               	movlw	1
  6303  0037E0  EC6D  F01D         	call	_RF24_ce_d
  6304  0037E4  0012               	return	
  6305  0037E6                     __end_of_RF24_startFastWrite:
  6306                           	opt stack 0
  6307                           tblptru	equ	0xFF8
  6308                           tblptrh	equ	0xFF7
  6309                           tblptrl	equ	0xFF6
  6310                           tablat	equ	0xFF5
  6311                           prodh	equ	0xFF4
  6312                           prodl	equ	0xFF3
  6313                           intcon	equ	0xFF2
  6314                           indf0	equ	0xFEF
  6315                           postinc0	equ	0xFEE
  6316                           postdec0	equ	0xFED
  6317                           fsr0h	equ	0xFEA
  6318                           fsr0l	equ	0xFE9
  6319                           wreg	equ	0xFE8
  6320                           postinc1	equ	0xFE6
  6321                           indf2	equ	0xFDF
  6322                           postinc2	equ	0xFDE
  6323                           postdec2	equ	0xFDD
  6324                           fsr2h	equ	0xFDA
  6325                           fsr2l	equ	0xFD9
  6326                           status	equ	0xFD8
  6327                           
  6328 ;; *************** function _RF24_writeFast_m *****************
  6329 ;; Defined at:
  6330 ;;		line 909 in file "../../../RF24_c/RF24_cg.c"
  6331 ;; Parameters:    Size  Location     Type
  6332 ;;  buf             2   42[COMRAM] PTR const void 
  6333 ;;		 -> rn.frame_buffer(32), rn(370), 
  6334 ;;  len             1   44[COMRAM] unsigned char 
  6335 ;;  multicast       1   45[COMRAM] const unsigned char 
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;		None
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  1    wreg      unsigned char 
  6340 ;; Registers used:
  6341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;Total ram usage:        5 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:    6
  6354 ;; This function calls:
  6355 ;;		_RF24_get_status
  6356 ;;		_RF24_startFastWrite
  6357 ;;		_RF24_write_register_d
  6358 ;; This function is called by:
  6359 ;;		_RF24N_write_to_pipe
  6360 ;;		_RF24_writeFast
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           	psect	text34
  6365  003674                     __ptext34:
  6366                           	opt stack 0
  6367  003674                     _RF24_writeFast_m:
  6368                           	opt stack 18
  6369                           
  6370                           ;RF24_cg.c: 920: while( ( RF24_get_status() & ( (1<<(0)) ))) {
  6371                           
  6372                           ;incstack = 0
  6373  003674  D00C               	goto	l3550
  6374  003676                     l3542:
  6375                           
  6376                           ;RF24_cg.c: 922: if( RF24_get_status() & (1<<(4))){
  6377  003676  ECE2  F01D         	call	_RF24_get_status	;wreg free
  6378  00367A  6E2F               	movwf	??_RF24_writeFast_m& (0+255),c
  6379  00367C  A82F               	btfss	??_RF24_writeFast_m,4,c
  6380  00367E  D007               	goto	l3550
  6381                           
  6382                           ;RF24_cg.c: 924: RF24_write_register_d(0x07,(1<<(4)) );
  6383  003680  0E10               	movlw	16
  6384  003682  6E0E               	movwf	RF24_write_register_d@value,c
  6385  003684  0E07               	movlw	7
  6386  003686  EC40  F01D         	call	_RF24_write_register_d
  6387                           
  6388                           ;RF24_cg.c: 925: return 0;
  6389  00368A  0E00               	movlw	0
  6390  00368C  0012               	return	
  6391  00368E                     l3550:
  6392  00368E  ECE2  F01D         	call	_RF24_get_status	;wreg free
  6393  003692  6E2F               	movwf	??_RF24_writeFast_m& (0+255),c
  6394  003694  B02F               	btfsc	??_RF24_writeFast_m,0,c
  6395  003696  D7EF               	goto	l3542
  6396                           
  6397                           ;RF24_cg.c: 927: }
  6398                           ;RF24_cg.c: 936: }
  6399                           ;RF24_cg.c: 938: RF24_startFastWrite(buf,len,multicast,1);
  6400  003698  C02B  F022         	movff	RF24_writeFast_m@buf,RF24_startFastWrite@buf
  6401  00369C  C02C  F023         	movff	RF24_writeFast_m@buf+1,RF24_startFastWrite@buf+1
  6402  0036A0  C02D  F024         	movff	RF24_writeFast_m@len,RF24_startFastWrite@len
  6403  0036A4  C02E  F025         	movff	RF24_writeFast_m@multicast,RF24_startFastWrite@multicast
  6404  0036A8  0E01               	movlw	1
  6405  0036AA  6E26               	movwf	RF24_startFastWrite@startTx,c
  6406  0036AC  ECD7  F01B         	call	_RF24_startFastWrite	;wreg free
  6407                           
  6408                           ;RF24_cg.c: 940: return 1;
  6409  0036B0  0E01               	movlw	1
  6410  0036B2  0012               	return	
  6411  0036B4                     __end_of_RF24_writeFast_m:
  6412                           	opt stack 0
  6413                           tblptru	equ	0xFF8
  6414                           tblptrh	equ	0xFF7
  6415                           tblptrl	equ	0xFF6
  6416                           tablat	equ	0xFF5
  6417                           prodh	equ	0xFF4
  6418                           prodl	equ	0xFF3
  6419                           intcon	equ	0xFF2
  6420                           indf0	equ	0xFEF
  6421                           postinc0	equ	0xFEE
  6422                           postdec0	equ	0xFED
  6423                           fsr0h	equ	0xFEA
  6424                           fsr0l	equ	0xFE9
  6425                           wreg	equ	0xFE8
  6426                           postinc1	equ	0xFE6
  6427                           indf2	equ	0xFDF
  6428                           postinc2	equ	0xFDE
  6429                           postdec2	equ	0xFDD
  6430                           fsr2h	equ	0xFDA
  6431                           fsr2l	equ	0xFD9
  6432                           status	equ	0xFD8
  6433                           
  6434 ;; *************** function _RF24_getDynamicPayloadSize *****************
  6435 ;; Defined at:
  6436 ;;		line 1067 in file "../../../RF24_c/RF24_cg.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;		None
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;  result          1   16[COMRAM] unsigned char 
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  1    wreg      unsigned char 
  6443 ;; Registers used:
  6444 ;;		wreg, status,2, status,0, cstack
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6454 ;;Total ram usage:        2 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; Hardware stack levels required when called:    6
  6457 ;; This function calls:
  6458 ;;		_RF24_beginTransaction
  6459 ;;		_RF24_endTransaction
  6460 ;;		_RF24_flush_rx
  6461 ;;		_SPI_transfer
  6462 ;;		_delay
  6463 ;; This function is called by:
  6464 ;;		_RF24N_update
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	text35
  6469  0037E6                     __ptext35:
  6470                           	opt stack 0
  6471  0037E6                     _RF24_getDynamicPayloadSize:
  6472                           	opt stack 20
  6473                           
  6474                           ;RF24_cg.c: 1069: uint8_t result = 0;
  6475                           
  6476                           ;incstack = 0
  6477  0037E6  0E00               	movlw	0
  6478  0037E8  6E11               	movwf	RF24_getDynamicPayloadSize@result,c
  6479                           
  6480                           ;RF24_cg.c: 1079: RF24_beginTransaction();
  6481  0037EA  ECEE  F01D         	call	_RF24_beginTransaction	;wreg free
  6482                           
  6483                           ;RF24_cg.c: 1080: SPI_transfer( 0x60 );
  6484  0037EE  0E60               	movlw	96
  6485  0037F0  ECCE  F01D         	call	_SPI_transfer
  6486                           
  6487                           ;RF24_cg.c: 1081: result = SPI_transfer(0xff);
  6488  0037F4  0EFF               	movlw	255
  6489  0037F6  ECCE  F01D         	call	_SPI_transfer
  6490  0037FA  6E11               	movwf	RF24_getDynamicPayloadSize@result,c
  6491                           
  6492                           ;RF24_cg.c: 1082: RF24_endTransaction();
  6493  0037FC  ECEA  F01D         	call	_RF24_endTransaction	;wreg free
  6494                           
  6495                           ;RF24_cg.c: 1085: if(result > 32) { RF24_flush_rx();; delay(2); return 0; }
  6496  003800  0E20               	movlw	32
  6497  003802  6411               	cpfsgt	RF24_getDynamicPayloadSize@result,c
  6498  003804  D00A               	goto	l3780
  6499  003806  ECE6  F01D         	call	_RF24_flush_rx	;wreg free
  6500  00380A  0E00               	movlw	0
  6501  00380C  6E04               	movwf	delay@val+1,c
  6502  00380E  0E02               	movlw	2
  6503  003810  6E03               	movwf	delay@val,c
  6504  003812  ECD4  F01A         	call	_delay	;wreg free
  6505  003816  0E00               	movlw	0
  6506  003818  0012               	return	
  6507  00381A                     l3780:
  6508                           
  6509                           ;RF24_cg.c: 1086: return result;
  6510  00381A  5011               	movf	RF24_getDynamicPayloadSize@result,w,c
  6511  00381C  0012               	return	
  6512  00381E                     __end_of_RF24_getDynamicPayloadSize:
  6513                           	opt stack 0
  6514                           tblptru	equ	0xFF8
  6515                           tblptrh	equ	0xFF7
  6516                           tblptrl	equ	0xFF6
  6517                           tablat	equ	0xFF5
  6518                           prodh	equ	0xFF4
  6519                           prodl	equ	0xFF3
  6520                           intcon	equ	0xFF2
  6521                           indf0	equ	0xFEF
  6522                           postinc0	equ	0xFEE
  6523                           postdec0	equ	0xFED
  6524                           fsr0h	equ	0xFEA
  6525                           fsr0l	equ	0xFE9
  6526                           wreg	equ	0xFE8
  6527                           postinc1	equ	0xFE6
  6528                           indf2	equ	0xFDF
  6529                           postinc2	equ	0xFDE
  6530                           postdec2	equ	0xFDD
  6531                           fsr2h	equ	0xFDA
  6532                           fsr2l	equ	0xFD9
  6533                           status	equ	0xFD8
  6534                           
  6535 ;; *************** function _RF24_flush_rx *****************
  6536 ;; Defined at:
  6537 ;;		line 341 in file "../../../RF24_c/RF24_cg.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;		None
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;		None
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  1    wreg      unsigned char 
  6544 ;; Registers used:
  6545 ;;		wreg, status,2, status,0, cstack
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6555 ;;Total ram usage:        0 bytes
  6556 ;; Hardware stack levels used:    1
  6557 ;; Hardware stack levels required when called:    5
  6558 ;; This function calls:
  6559 ;;		_RF24_spiTrans
  6560 ;; This function is called by:
  6561 ;;		_RF24_begin
  6562 ;;		_RF24_getDynamicPayloadSize
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           	psect	text36
  6567  003BCC                     __ptext36:
  6568                           	opt stack 0
  6569  003BCC                     _RF24_flush_rx:
  6570                           	opt stack 23
  6571                           
  6572                           ;RF24_cg.c: 343: return RF24_spiTrans( 0xE2 );
  6573                           ;	Return value of _RF24_flush_rx is never used
  6574                           
  6575                           ;incstack = 0
  6576  003BCC  0EE2               	movlw	226
  6577  003BCE  ECBA  F01D         	call	_RF24_spiTrans
  6578  003BD2  0012               	return	
  6579  003BD4                     __end_of_RF24_flush_rx:
  6580                           	opt stack 0
  6581                           tblptru	equ	0xFF8
  6582                           tblptrh	equ	0xFF7
  6583                           tblptrl	equ	0xFF6
  6584                           tablat	equ	0xFF5
  6585                           prodh	equ	0xFF4
  6586                           prodl	equ	0xFF3
  6587                           intcon	equ	0xFF2
  6588                           indf0	equ	0xFEF
  6589                           postinc0	equ	0xFEE
  6590                           postdec0	equ	0xFED
  6591                           fsr0h	equ	0xFEA
  6592                           fsr0l	equ	0xFE9
  6593                           wreg	equ	0xFE8
  6594                           postinc1	equ	0xFE6
  6595                           indf2	equ	0xFDF
  6596                           postinc2	equ	0xFDE
  6597                           postdec2	equ	0xFDD
  6598                           fsr2h	equ	0xFDA
  6599                           fsr2l	equ	0xFD9
  6600                           status	equ	0xFD8
  6601                           
  6602 ;; *************** function _RF24_available_p *****************
  6603 ;; Defined at:
  6604 ;;		line 1098 in file "../../../RF24_c/RF24_cg.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;  pipe_num        2   15[COMRAM] PTR unsigned char 
  6607 ;;		 -> RF24N_update@pipe_num(1), NULL(0), 
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;  status          1   19[COMRAM] unsigned char 
  6610 ;; Return value:  Size  Location     Type
  6611 ;;                  1    wreg      unsigned char 
  6612 ;; Registers used:
  6613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6614 ;; Tracked objects:
  6615 ;;		On entry : 0/0
  6616 ;;		On exit  : 0/0
  6617 ;;		Unchanged: 0/0
  6618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6620 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6622 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;Total ram usage:        5 bytes
  6624 ;; Hardware stack levels used:    1
  6625 ;; Hardware stack levels required when called:    6
  6626 ;; This function calls:
  6627 ;;		_RF24_get_status
  6628 ;;		_RF24_read_register_d
  6629 ;; This function is called by:
  6630 ;;		_RF24N_update
  6631 ;;		_RF24_available
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           	psect	text37
  6636  0038F0                     __ptext37:
  6637                           	opt stack 0
  6638  0038F0                     _RF24_available_p:
  6639                           	opt stack 20
  6640                           
  6641                           ;RF24_cg.c: 1100: if (!( RF24_read_register_d(0x17) & (1<<(0)) )){
  6642                           
  6643                           ;incstack = 0
  6644  0038F0  0E17               	movlw	23
  6645  0038F2  EC50  F01D         	call	_RF24_read_register_d
  6646  0038F6  6E12               	movwf	??_RF24_available_p& (0+255),c
  6647  0038F8  B012               	btfsc	??_RF24_available_p,0,c
  6648  0038FA  D011               	goto	l3796
  6649                           
  6650                           ;RF24_cg.c: 1103: if ( pipe_num ){
  6651  0038FC  5010               	movf	RF24_available_p@pipe_num,w,c
  6652  0038FE  1011               	iorwf	RF24_available_p@pipe_num+1,w,c
  6653  003900  B4D8               	btfsc	status,2,c
  6654  003902  D00B               	goto	l3792
  6655                           
  6656                           ;RF24_cg.c: 1104: uint8_t status = RF24_get_status();
  6657  003904  ECE2  F01D         	call	_RF24_get_status	;wreg free
  6658  003908  6E14               	movwf	RF24_available_p@status,c
  6659                           
  6660                           ;RF24_cg.c: 1105: *pipe_num = ( status >> 1 ) & 0b111;
  6661  00390A  90D8               	bcf	status,0,c
  6662  00390C  3014               	rrcf	RF24_available_p@status,w,c
  6663  00390E  0B07               	andlw	7
  6664  003910  C010  FFD9         	movff	RF24_available_p@pipe_num,fsr2l
  6665  003914  C011  FFDA         	movff	RF24_available_p@pipe_num+1,fsr2h
  6666  003918  6EDF               	movwf	indf2,c
  6667  00391A                     l3792:
  6668                           
  6669                           ;RF24_cg.c: 1106: }
  6670                           ;RF24_cg.c: 1107: return 1;
  6671  00391A  0E01               	movlw	1
  6672  00391C  0012               	return	
  6673  00391E                     l3796:
  6674                           
  6675                           ;RF24_cg.c: 1108: }
  6676                           ;RF24_cg.c: 1111: return 0;
  6677  00391E  0E00               	movlw	0
  6678  003920  0012               	return	
  6679  003922                     __end_of_RF24_available_p:
  6680                           	opt stack 0
  6681                           tblptru	equ	0xFF8
  6682                           tblptrh	equ	0xFF7
  6683                           tblptrl	equ	0xFF6
  6684                           tablat	equ	0xFF5
  6685                           prodh	equ	0xFF4
  6686                           prodl	equ	0xFF3
  6687                           intcon	equ	0xFF2
  6688                           indf0	equ	0xFEF
  6689                           postinc0	equ	0xFEE
  6690                           postdec0	equ	0xFED
  6691                           fsr0h	equ	0xFEA
  6692                           fsr0l	equ	0xFE9
  6693                           wreg	equ	0xFE8
  6694                           postinc1	equ	0xFE6
  6695                           indf2	equ	0xFDF
  6696                           postinc2	equ	0xFDE
  6697                           postdec2	equ	0xFDD
  6698                           fsr2h	equ	0xFDA
  6699                           fsr2l	equ	0xFD9
  6700                           status	equ	0xFD8
  6701                           
  6702 ;; *************** function _RF24_read *****************
  6703 ;; Defined at:
  6704 ;;		line 1118 in file "../../../RF24_c/RF24_cg.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;  buf             2   28[COMRAM] PTR void 
  6707 ;;		 -> rn(370), 
  6708 ;;  len             1   30[COMRAM] unsigned char 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;		None
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  1    wreg      void 
  6713 ;; Registers used:
  6714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6720 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;Total ram usage:        3 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; Hardware stack levels required when called:    5
  6727 ;; This function calls:
  6728 ;;		_RF24_read_payload
  6729 ;;		_RF24_write_register_d
  6730 ;; This function is called by:
  6731 ;;		_RF24N_update
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text38
  6736  003ABE                     __ptext38:
  6737                           	opt stack 0
  6738  003ABE                     _RF24_read:
  6739                           	opt stack 21
  6740                           
  6741                           ;RF24_cg.c: 1121: RF24_read_payload( buf, len );
  6742                           
  6743                           ;incstack = 0
  6744  003ABE  C01D  F00C         	movff	RF24_read@buf,RF24_read_payload@buf
  6745  003AC2  C01E  F00D         	movff	RF24_read@buf+1,RF24_read_payload@buf+1
  6746  003AC6  C01F  F00E         	movff	RF24_read@len,RF24_read_payload@data_len
  6747  003ACA  ECED  F017         	call	_RF24_read_payload	;wreg free
  6748                           
  6749                           ;RF24_cg.c: 1124: RF24_write_register_d(0x07,(1<<(6)) | (1<<(4)) | (1<<(5)) );
  6750  003ACE  0E70               	movlw	112
  6751  003AD0  6E0E               	movwf	RF24_write_register_d@value,c
  6752  003AD2  0E07               	movlw	7
  6753  003AD4  EC40  F01D         	call	_RF24_write_register_d
  6754  003AD8  0012               	return		;funcret
  6755  003ADA                     __end_of_RF24_read:
  6756                           	opt stack 0
  6757                           tblptru	equ	0xFF8
  6758                           tblptrh	equ	0xFF7
  6759                           tblptrl	equ	0xFF6
  6760                           tablat	equ	0xFF5
  6761                           prodh	equ	0xFF4
  6762                           prodl	equ	0xFF3
  6763                           intcon	equ	0xFF2
  6764                           indf0	equ	0xFEF
  6765                           postinc0	equ	0xFEE
  6766                           postdec0	equ	0xFED
  6767                           fsr0h	equ	0xFEA
  6768                           fsr0l	equ	0xFE9
  6769                           wreg	equ	0xFE8
  6770                           postinc1	equ	0xFE6
  6771                           indf2	equ	0xFDF
  6772                           postinc2	equ	0xFDE
  6773                           postdec2	equ	0xFDD
  6774                           fsr2h	equ	0xFDA
  6775                           fsr2l	equ	0xFD9
  6776                           status	equ	0xFD8
  6777                           
  6778 ;; *************** function _RF24_openWritingPipe_d *****************
  6779 ;; Defined at:
  6780 ;;		line 1144 in file "../../../RF24_c/RF24_cg.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;  value_          2   16[COMRAM] PTR const unsigned char 
  6783 ;;		 -> RF24N_write_to_pipe@out_pipe(5), 
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;  value           5   26[COMRAM] unsigned char [5]
  6786 ;;  i               1   31[COMRAM] unsigned char 
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  1    wreg      void 
  6789 ;; Registers used:
  6790 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6797 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6798 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6799 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6800 ;;Total ram usage:       16 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; Hardware stack levels required when called:    5
  6803 ;; This function calls:
  6804 ;;		_RF24_write_register_c_d
  6805 ;;		_RF24_write_register_d
  6806 ;; This function is called by:
  6807 ;;		_RF24N_write_to_pipe
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           	psect	text39
  6812  00315C                     __ptext39:
  6813                           	opt stack 0
  6814  00315C                     _RF24_openWritingPipe_d:
  6815                           	opt stack 19
  6816                           
  6817                           ;RF24_cg.c: 1146: uint8_t i;
  6818                           ;RF24_cg.c: 1147: raddr_t value[5];
  6819                           ;RF24_cg.c: 1148: for(i=0;i<5;i++)
  6820                           
  6821                           ;incstack = 0
  6822  00315C  0E00               	movlw	0
  6823  00315E  6E20               	movwf	RF24_openWritingPipe_d@i,c
  6824  003160                     l3586:
  6825  003160  0E04               	movlw	4
  6826  003162  6420               	cpfsgt	RF24_openWritingPipe_d@i,c
  6827  003164  D001               	goto	l3590
  6828  003166  D01D               	goto	l3596
  6829  003168                     l3590:
  6830                           
  6831                           ;RF24_cg.c: 1149: {
  6832                           ;RF24_cg.c: 1150: value[i]=value_[4-i];
  6833  003168  5020               	movf	RF24_openWritingPipe_d@i,w,c
  6834  00316A  6E13               	movwf	??_RF24_openWritingPipe_d& (0+255),c
  6835  00316C  6A14               	clrf	(??_RF24_openWritingPipe_d+1)& (0+255),c
  6836  00316E  1E13               	comf	??_RF24_openWritingPipe_d,f,c
  6837  003170  1E14               	comf	??_RF24_openWritingPipe_d+1,f,c
  6838  003172  4A13               	infsnz	??_RF24_openWritingPipe_d,f,c
  6839  003174  2A14               	incf	??_RF24_openWritingPipe_d+1,f,c
  6840  003176  0E04               	movlw	4
  6841  003178  2613               	addwf	??_RF24_openWritingPipe_d,f,c
  6842  00317A  0E00               	movlw	0
  6843  00317C  2214               	addwfc	??_RF24_openWritingPipe_d+1,f,c
  6844  00317E  5013               	movf	??_RF24_openWritingPipe_d,w,c
  6845  003180  2411               	addwf	RF24_openWritingPipe_d@value_,w,c
  6846  003182  6ED9               	movwf	fsr2l,c
  6847  003184  5014               	movf	??_RF24_openWritingPipe_d+1,w,c
  6848  003186  2012               	addwfc	RF24_openWritingPipe_d@value_+1,w,c
  6849  003188  6EDA               	movwf	fsr2h,c
  6850  00318A  5020               	movf	RF24_openWritingPipe_d@i,w,c
  6851  00318C  0D01               	mullw	1
  6852  00318E  0E1B               	movlw	low RF24_openWritingPipe_d@value
  6853  003190  24F3               	addwf	prodl,w,c
  6854  003192  6EE9               	movwf	fsr0l,c
  6855  003194  0E00               	movlw	high RF24_openWritingPipe_d@value
  6856  003196  20F4               	addwfc	prodh,w,c
  6857  003198  6EEA               	movwf	fsr0h,c
  6858  00319A  CFDF FFEF          	movff	indf2,indf0
  6859  00319E  2A20               	incf	RF24_openWritingPipe_d@i,f,c
  6860  0031A0  D7DF               	goto	l3586
  6861  0031A2                     l3596:
  6862                           
  6863                           ;RF24_cg.c: 1151: }
  6864                           ;RF24_cg.c: 1153: RF24_write_register_c_d(0x0A, ((uint8_t*)(value)), rf.addr_width);
  6865  0031A2  0E1B               	movlw	low RF24_openWritingPipe_d@value
  6866  0031A4  6E0C               	movwf	RF24_write_register_c_d@buf,c
  6867  0031A6  0E00               	movlw	high RF24_openWritingPipe_d@value
  6868  0031A8  6E0D               	movwf	RF24_write_register_c_d@buf+1,c
  6869  0031AA  C098  F00E         	movff	_rf+12,RF24_write_register_c_d@len
  6870  0031AE  0E0A               	movlw	10
  6871  0031B0  EC45  F01C         	call	_RF24_write_register_c_d
  6872                           
  6873                           ;RF24_cg.c: 1154: RF24_write_register_c_d(0x10, ((uint8_t*)(value)), rf.addr_width);
  6874  0031B4  0E1B               	movlw	low RF24_openWritingPipe_d@value
  6875  0031B6  6E0C               	movwf	RF24_write_register_c_d@buf,c
  6876  0031B8  0E00               	movlw	high RF24_openWritingPipe_d@value
  6877  0031BA  6E0D               	movwf	RF24_write_register_c_d@buf+1,c
  6878  0031BC  C098  F00E         	movff	_rf+12,RF24_write_register_c_d@len
  6879  0031C0  0E10               	movlw	16
  6880  0031C2  EC45  F01C         	call	_RF24_write_register_c_d
  6881                           
  6882                           ;RF24_cg.c: 1159: RF24_write_register_d(0x11,rf.payload_size);
  6883  0031C6  C091  F00E         	movff	_rf+5,RF24_write_register_d@value
  6884  0031CA  0E11               	movlw	17
  6885  0031CC  EC40  F01D         	call	_RF24_write_register_d
  6886  0031D0  0012               	return		;funcret
  6887  0031D2                     __end_of_RF24_openWritingPipe_d:
  6888                           	opt stack 0
  6889                           tblptru	equ	0xFF8
  6890                           tblptrh	equ	0xFF7
  6891                           tblptrl	equ	0xFF6
  6892                           tablat	equ	0xFF5
  6893                           prodh	equ	0xFF4
  6894                           prodl	equ	0xFF3
  6895                           intcon	equ	0xFF2
  6896                           indf0	equ	0xFEF
  6897                           postinc0	equ	0xFEE
  6898                           postdec0	equ	0xFED
  6899                           fsr0h	equ	0xFEA
  6900                           fsr0l	equ	0xFE9
  6901                           wreg	equ	0xFE8
  6902                           postinc1	equ	0xFE6
  6903                           indf2	equ	0xFDF
  6904                           postinc2	equ	0xFDE
  6905                           postdec2	equ	0xFDD
  6906                           fsr2h	equ	0xFDA
  6907                           fsr2l	equ	0xFD9
  6908                           status	equ	0xFD8
  6909                           
  6910 ;; *************** function _RF24N_available *****************
  6911 ;; Defined at:
  6912 ;;		line 679 in file "../../RF24Network_cg.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;		None
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;		None
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  1    wreg      unsigned char 
  6919 ;; Registers used:
  6920 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6930 ;;Total ram usage:        2 bytes
  6931 ;; Hardware stack levels used:    1
  6932 ;; Hardware stack levels required when called:    1
  6933 ;; This function calls:
  6934 ;;		Nothing
  6935 ;; This function is called by:
  6936 ;;		_RF24N_update
  6937 ;;		_RF24N_peek
  6938 ;;		_RF24N_read
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           	psect	text40
  6943  003A5E                     __ptext40:
  6944                           	opt stack 0
  6945  003A5E                     _RF24N_available:
  6946                           	opt stack 25
  6947                           
  6948                           ;RF24Network_cg.c: 685: return (rn.next_frame > rn.frame_queue);
  6949                           
  6950                           ;incstack = 0
  6951  003A5E  EE21  F0A9         	lfsr	2,_rn+212
  6952  003A62  CFDE F003          	movff	postinc2,??_RF24N_available
  6953  003A66  CFDD F004          	movff	postdec2,??_RF24N_available+1
  6954  003A6A  5004               	movf	??_RF24N_available+1,w,c
  6955  003A6C  0801               	sublw	high (_rn+58)
  6956  003A6E  E102               	bnz	u4035
  6957  003A70  5003               	movf	??_RF24N_available,w,c
  6958  003A72  080F               	sublw	low (_rn+58)
  6959  003A74                     u4035:
  6960  003A74  B0D8               	btfsc	status,0,c
  6961  003A76  D002               	goto	u4030
  6962  003A78  0E01               	movlw	1
  6963  003A7A  0012               	return	
  6964  003A7C                     u4030:
  6965  003A7C  0E00               	movlw	0
  6966  003A7E  0012               	return	
  6967  003A80                     __end_of_RF24N_available:
  6968                           	opt stack 0
  6969                           tblptru	equ	0xFF8
  6970                           tblptrh	equ	0xFF7
  6971                           tblptrl	equ	0xFF6
  6972                           tablat	equ	0xFF5
  6973                           prodh	equ	0xFF4
  6974                           prodl	equ	0xFF3
  6975                           intcon	equ	0xFF2
  6976                           indf0	equ	0xFEF
  6977                           postinc0	equ	0xFEE
  6978                           postdec0	equ	0xFED
  6979                           fsr0h	equ	0xFEA
  6980                           fsr0l	equ	0xFE9
  6981                           wreg	equ	0xFE8
  6982                           postinc1	equ	0xFE6
  6983                           indf2	equ	0xFDF
  6984                           postinc2	equ	0xFDE
  6985                           postdec2	equ	0xFDD
  6986                           fsr2h	equ	0xFDA
  6987                           fsr2l	equ	0xFD9
  6988                           status	equ	0xFD8
  6989                           
  6990 ;; *************** function _RF24N_enqueue *****************
  6991 ;; Defined at:
  6992 ;;		line 527 in file "../../RF24Network_cg.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;  header          2   18[COMRAM] PTR struct .
  6995 ;;		 -> rn.frame_buffer(32), rn(370), 
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;  padding         1   35[COMRAM] unsigned char 
  6998 ;;  padding         1   36[COMRAM] unsigned char 
  6999 ;;  message_size    2   39[COMRAM] unsigned int 
  7000 ;;  result          1   38[COMRAM] unsigned char 
  7001 ;;  isFragment      1   34[COMRAM] unsigned char 
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  1    wreg      unsigned char 
  7004 ;; Registers used:
  7005 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7012 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7013 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7014 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7015 ;;Total ram usage:       23 bytes
  7016 ;; Hardware stack levels used:    1
  7017 ;; Hardware stack levels required when called:    7
  7018 ;; This function calls:
  7019 ;;		_RF24_stopListening
  7020 ;;		___lwdiv
  7021 ;;		_memcpy
  7022 ;; This function is called by:
  7023 ;;		_RF24N_update
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           	psect	text41
  7028  00105A                     __ptext41:
  7029                           	opt stack 0
  7030  00105A                     _RF24N_enqueue:
  7031                           	opt stack 19
  7032                           
  7033                           ;RF24Network_cg.c: 529: uint8_t result = 0;
  7034                           
  7035                           ;incstack = 0
  7036  00105A  0E00               	movlw	0
  7037  00105C  6E27               	movwf	RF24N_enqueue@result,c
  7038                           
  7039                           ;RF24Network_cg.c: 530: uint16_t message_size = rn.frame_size - sizeof(RF24NetworkHeader
      +                          );
  7040  00105E  C107  F015         	movff	_rn+50,??_RF24N_enqueue
  7041  001062  0EF8               	movlw	248
  7042  001064  2415               	addwf	??_RF24N_enqueue,w,c
  7043  001066  6E28               	movwf	RF24N_enqueue@message_size,c
  7044  001068  6A29               	clrf	RF24N_enqueue@message_size+1,c
  7045  00106A  0EFF               	movlw	255
  7046  00106C  2229               	addwfc	RF24N_enqueue@message_size+1,f,c
  7047                           
  7048                           ;RF24Network_cg.c: 531: uint8_t isFragment;
  7049                           ;RF24Network_cg.c: 533: ;
  7050                           ;RF24Network_cg.c: 537: isFragment = header->type == 148 || header->type == 149 || heade
      +                          r->type == 150 || header->type == 200 ;
  7051  00106E  0E01               	movlw	1
  7052  001070  6E26               	movwf	_RF24N_enqueue$2295,c
  7053  001072  EE20 F006          	lfsr	2,6
  7054  001076  5013               	movf	RF24N_enqueue@header,w,c
  7055  001078  26D9               	addwf	fsr2l,f,c
  7056  00107A  5014               	movf	RF24N_enqueue@header+1,w,c
  7057  00107C  22DA               	addwfc	fsr2h,f,c
  7058  00107E  0E94               	movlw	148
  7059  001080  18DE               	xorwf	postinc2,w,c
  7060  001082  B4D8               	btfsc	status,2,c
  7061  001084  D020               	goto	l3936
  7062  001086  EE20 F006          	lfsr	2,6
  7063  00108A  5013               	movf	RF24N_enqueue@header,w,c
  7064  00108C  26D9               	addwf	fsr2l,f,c
  7065  00108E  5014               	movf	RF24N_enqueue@header+1,w,c
  7066  001090  22DA               	addwfc	fsr2h,f,c
  7067  001092  0E95               	movlw	149
  7068  001094  18DE               	xorwf	postinc2,w,c
  7069  001096  B4D8               	btfsc	status,2,c
  7070  001098  D016               	goto	l3936
  7071  00109A  EE20 F006          	lfsr	2,6
  7072  00109E  5013               	movf	RF24N_enqueue@header,w,c
  7073  0010A0  26D9               	addwf	fsr2l,f,c
  7074  0010A2  5014               	movf	RF24N_enqueue@header+1,w,c
  7075  0010A4  22DA               	addwfc	fsr2h,f,c
  7076  0010A6  0E96               	movlw	150
  7077  0010A8  18DE               	xorwf	postinc2,w,c
  7078  0010AA  B4D8               	btfsc	status,2,c
  7079  0010AC  D00C               	goto	l3936
  7080  0010AE  EE20 F006          	lfsr	2,6
  7081  0010B2  5013               	movf	RF24N_enqueue@header,w,c
  7082  0010B4  26D9               	addwf	fsr2l,f,c
  7083  0010B6  5014               	movf	RF24N_enqueue@header+1,w,c
  7084  0010B8  22DA               	addwfc	fsr2h,f,c
  7085  0010BA  0EC8               	movlw	200
  7086  0010BC  18DE               	xorwf	postinc2,w,c
  7087  0010BE  B4D8               	btfsc	status,2,c
  7088  0010C0  D002               	goto	l3936
  7089  0010C2  0E00               	movlw	0
  7090  0010C4  6E26               	movwf	_RF24N_enqueue$2295,c
  7091  0010C6                     l3936:
  7092  0010C6  C026  F023         	movff	_RF24N_enqueue$2295,RF24N_enqueue@isFragment
  7093                           
  7094                           ;RF24Network_cg.c: 539: if(isFragment){
  7095  0010CA  5023               	movf	RF24N_enqueue@isFragment,w,c
  7096  0010CC  B4D8               	btfsc	status,2,c
  7097  0010CE  D1D5               	goto	l4046
  7098                           
  7099                           ;RF24Network_cg.c: 541: if(header->type == 148){
  7100  0010D0  EE20 F006          	lfsr	2,6
  7101  0010D4  5013               	movf	RF24N_enqueue@header,w,c
  7102  0010D6  26D9               	addwf	fsr2l,f,c
  7103  0010D8  5014               	movf	RF24N_enqueue@header+1,w,c
  7104  0010DA  22DA               	addwfc	fsr2h,f,c
  7105  0010DC  0E94               	movlw	148
  7106  0010DE  18DE               	xorwf	postinc2,w,c
  7107  0010E0  A4D8               	btfss	status,2,c
  7108  0010E2  D0A3               	goto	l3978
  7109                           
  7110                           ;RF24Network_cg.c: 543: if(header->reserved > (144 + 10-10 / rn.max_frame_payload_size) 
      +                          ){
  7111  0010E4  EE20 F007          	lfsr	2,7
  7112  0010E8  5013               	movf	RF24N_enqueue@header,w,c
  7113  0010EA  26D9               	addwf	fsr2l,f,c
  7114  0010EC  5014               	movf	RF24N_enqueue@header+1,w,c
  7115  0010EE  22DA               	addwfc	fsr2h,f,c
  7116  0010F0  50DF               	movf	indf2,w,c
  7117  0010F2  6E15               	movwf	??_RF24N_enqueue& (0+255),c
  7118  0010F4  0E00               	movlw	0
  7119  0010F6  6E04               	movwf	___lwdiv@dividend+1,c
  7120  0010F8  0E0A               	movlw	10
  7121  0010FA  6E03               	movwf	___lwdiv@dividend,c
  7122  0010FC  C108  F005         	movff	_rn+51,___lwdiv@divisor
  7123  001100  C109  F006         	movff	_rn+52,___lwdiv@divisor+1
  7124  001104  EC39  F01A         	call	___lwdiv	;wreg free
  7125  001108  1E03               	comf	?___lwdiv,f,c
  7126  00110A  1E04               	comf	?___lwdiv+1,f,c
  7127  00110C  4A03               	infsnz	?___lwdiv,f,c
  7128  00110E  2A04               	incf	?___lwdiv+1,f,c
  7129  001110  0E9A               	movlw	154
  7130  001112  2603               	addwf	?___lwdiv,f,c
  7131  001114  0E00               	movlw	0
  7132  001116  2204               	addwfc	?___lwdiv+1,f,c
  7133  001118  5015               	movf	??_RF24N_enqueue,w,c
  7134  00111A  5C03               	subwf	?___lwdiv,w,c
  7135  00111C  0E00               	movlw	0
  7136  00111E  5804               	subwfb	?___lwdiv+1,w,c
  7137  001120  B0D8               	btfsc	status,0,c
  7138  001122  D005               	goto	l3950
  7139                           
  7140                           ;RF24Network_cg.c: 548: rn.frag_queue.header.reserved = 0;
  7141  001124  0E00               	movlw	0
  7142  001126  CFE8 F1B2          	movff	wreg,_rn+221
  7143                           
  7144                           ;RF24Network_cg.c: 549: return 0;
  7145  00112A  0E00               	movlw	0
  7146  00112C  0012               	return	
  7147  00112E                     l3950:
  7148                           
  7149                           ;RF24Network_cg.c: 551: if(rn.frag_queue.header.id == header->id && rn.frag_queue.header
      +                          .from_node == header->from_node){
  7150  00112E  EE20 F004          	lfsr	2,4
  7151  001132  5013               	movf	RF24N_enqueue@header,w,c
  7152  001134  26D9               	addwf	fsr2l,f,c
  7153  001136  5014               	movf	RF24N_enqueue@header+1,w,c
  7154  001138  22DA               	addwfc	fsr2h,f,c
  7155  00113A  EE01  F0AF         	lfsr	0,_rn+218
  7156  00113E  50DE               	movf	postinc2,w,c
  7157  001140  18EE               	xorwf	postinc0,w,c
  7158  001142  E113               	bnz	l3958
  7159  001144  50DE               	movf	postinc2,w,c
  7160  001146  18EE               	xorwf	postinc0,w,c
  7161  001148  A4D8               	btfss	status,2,c
  7162  00114A  D00F               	goto	l3958
  7163  00114C  C013  FFD9         	movff	RF24N_enqueue@header,fsr2l
  7164  001150  C014  FFDA         	movff	RF24N_enqueue@header+1,fsr2h
  7165  001154  EE01  F0AB         	lfsr	0,_rn+214
  7166  001158  50DE               	movf	postinc2,w,c
  7167  00115A  18EE               	xorwf	postinc0,w,c
  7168  00115C  E106               	bnz	l3958
  7169  00115E  50DE               	movf	postinc2,w,c
  7170  001160  18EE               	xorwf	postinc0,w,c
  7171  001162  A4D8               	btfss	status,2,c
  7172  001164  D002               	goto	l3958
  7173                           
  7174                           ;RF24Network_cg.c: 552: return 1;
  7175  001166  0E01               	movlw	1
  7176  001168  0012               	return	
  7177  00116A                     l3958:
  7178                           
  7179                           ;RF24Network_cg.c: 553: }
  7180                           ;RF24Network_cg.c: 555: if( (header->reserved * 24) > (144 + 10-10 - (rn.next_frame-rn.f
      +                          rame_queue)) ){
  7181  00116A  EE20 F007          	lfsr	2,7
  7182  00116E  5013               	movf	RF24N_enqueue@header,w,c
  7183  001170  26D9               	addwf	fsr2l,f,c
  7184  001172  5014               	movf	RF24N_enqueue@header+1,w,c
  7185  001174  22DA               	addwfc	fsr2h,f,c
  7186  001176  50DF               	movf	indf2,w,c
  7187  001178  6E15               	movwf	??_RF24N_enqueue& (0+255),c
  7188  00117A  5015               	movf	??_RF24N_enqueue,w,c
  7189  00117C  0D18               	mullw	24
  7190  00117E  EE21  F0A9         	lfsr	2,_rn+212
  7191  001182  CFDE F016          	movff	postinc2,??_RF24N_enqueue+1
  7192  001186  CFDD F017          	movff	postdec2,??_RF24N_enqueue+2
  7193  00118A  0ED5               	movlw	low _rn
  7194  00118C  6E18               	movwf	(??_RF24N_enqueue+3)& (0+255),c
  7195  00118E  0E00               	movlw	high _rn
  7196  001190  6E19               	movwf	(??_RF24N_enqueue+4)& (0+255),c
  7197  001192  0E3A               	movlw	58
  7198  001194  2618               	addwf	??_RF24N_enqueue+3,f,c
  7199  001196  0E00               	movlw	0
  7200  001198  2219               	addwfc	??_RF24N_enqueue+4,f,c
  7201  00119A  1E18               	comf	??_RF24N_enqueue+3,f,c
  7202  00119C  1E19               	comf	??_RF24N_enqueue+4,f,c
  7203  00119E  4A18               	infsnz	??_RF24N_enqueue+3,f,c
  7204  0011A0  2A19               	incf	??_RF24N_enqueue+4,f,c
  7205  0011A2  5016               	movf	??_RF24N_enqueue+1,w,c
  7206  0011A4  2618               	addwf	??_RF24N_enqueue+3,f,c
  7207  0011A6  5017               	movf	??_RF24N_enqueue+2,w,c
  7208  0011A8  2219               	addwfc	??_RF24N_enqueue+4,f,c
  7209  0011AA  1E18               	comf	??_RF24N_enqueue+3,f,c
  7210  0011AC  1E19               	comf	??_RF24N_enqueue+4,f,c
  7211  0011AE  4A18               	infsnz	??_RF24N_enqueue+3,f,c
  7212  0011B0  2A19               	incf	??_RF24N_enqueue+4,f,c
  7213  0011B2  0E90               	movlw	144
  7214  0011B4  2618               	addwf	??_RF24N_enqueue+3,f,c
  7215  0011B6  0E00               	movlw	0
  7216  0011B8  2219               	addwfc	??_RF24N_enqueue+4,f,c
  7217  0011BA  50F3               	movf	prodl,w,c
  7218  0011BC  5C18               	subwf	??_RF24N_enqueue+3,w,c
  7219  0011BE  5019               	movf	??_RF24N_enqueue+4,w,c
  7220  0011C0  0A80               	xorlw	128
  7221  0011C2  6E1A               	movwf	(??_RF24N_enqueue+5)& (0+255),c
  7222  0011C4  50F4               	movf	prodh,w,c
  7223  0011C6  0A80               	xorlw	128
  7224  0011C8  581A               	subwfb	(??_RF24N_enqueue+5)& (0+255),w,c
  7225  0011CA  B0D8               	btfsc	status,0,c
  7226  0011CC  D007               	goto	l3964
  7227                           
  7228                           ;RF24Network_cg.c: 556: rn.networkFlags |= 1;
  7229  0011CE  C0FF  FFE8         	movff	_rn+42,wreg
  7230  0011D2  0901               	iorlw	1
  7231  0011D4  CFE8 F0FF          	movff	wreg,_rn+42
  7232                           
  7233                           ;RF24Network_cg.c: 557: RF24_stopListening();
  7234  0011D8  EC1E  F019         	call	_RF24_stopListening	;wreg free
  7235  0011DC                     l3964:
  7236                           
  7237                           ;RF24Network_cg.c: 558: }
  7238                           ;RF24Network_cg.c: 560: memcpy(&rn.frag_queue,rn.frame_buffer,8);
  7239  0011DC  0EAB               	movlw	low (_rn+214)
  7240  0011DE  6E03               	movwf	memcpy@d1,c
  7241  0011E0  0E01               	movlw	high (_rn+214)
  7242  0011E2  6E04               	movwf	memcpy@d1+1,c
  7243  0011E4  0EDC               	movlw	low (_rn+7)
  7244  0011E6  6E05               	movwf	memcpy@s1,c
  7245  0011E8  0E00               	movlw	high (_rn+7)
  7246  0011EA  6E06               	movwf	memcpy@s1+1,c
  7247  0011EC  0E00               	movlw	0
  7248  0011EE  6E08               	movwf	memcpy@n+1,c
  7249  0011F0  0E08               	movlw	8
  7250  0011F2  6E07               	movwf	memcpy@n,c
  7251  0011F4  EC5A  F01B         	call	_memcpy	;wreg free
  7252                           
  7253                           ;RF24Network_cg.c: 561: memcpy(rn.frag_queue.message_buffer,rn.frame_buffer+sizeof(RF24N
      +                          etworkHeader),message_size);
  7254  0011F8  C1B5  F003         	movff	_rn+224,memcpy@d1
  7255  0011FC  C1B6  F004         	movff	_rn+225,memcpy@d1+1
  7256  001200  0EE4               	movlw	low (_rn+15)
  7257  001202  6E05               	movwf	memcpy@s1,c
  7258  001204  0E00               	movlw	high (_rn+15)
  7259  001206  6E06               	movwf	memcpy@s1+1,c
  7260  001208  C028  F007         	movff	RF24N_enqueue@message_size,memcpy@n
  7261  00120C  C029  F008         	movff	RF24N_enqueue@message_size+1,memcpy@n+1
  7262  001210  EC5A  F01B         	call	_memcpy	;wreg free
  7263                           
  7264                           ;RF24Network_cg.c: 565: rn.frag_queue.message_size = message_size;
  7265  001214  C028  F1B3         	movff	RF24N_enqueue@message_size,_rn+222
  7266  001218  C029  F1B4         	movff	RF24N_enqueue@message_size+1,_rn+223
  7267                           
  7268                           ;RF24Network_cg.c: 566: --rn.frag_queue.header.reserved;
  7269  00121C  C1B2  FFE8         	movff	_rn+221,wreg
  7270  001220  0FFF               	addlw	-1
  7271  001222  CFE8 F1B2          	movff	wreg,_rn+221
  7272                           
  7273                           ;RF24Network_cg.c: 568: ;
  7274                           ;RF24Network_cg.c: 570: return 1;
  7275  001226  0E01               	movlw	1
  7276  001228  0012               	return	
  7277  00122A                     l3978:
  7278                           
  7279                           ;RF24Network_cg.c: 573: if(header->type == 150 || header->type == 149 || header->type ==
      +                           200){
  7280  00122A  EE20 F006          	lfsr	2,6
  7281  00122E  5013               	movf	RF24N_enqueue@header,w,c
  7282  001230  26D9               	addwf	fsr2l,f,c
  7283  001232  5014               	movf	RF24N_enqueue@header+1,w,c
  7284  001234  22DA               	addwfc	fsr2h,f,c
  7285  001236  0E96               	movlw	150
  7286  001238  18DE               	xorwf	postinc2,w,c
  7287  00123A  B4D8               	btfsc	status,2,c
  7288  00123C  D014               	goto	l3984
  7289  00123E  EE20 F006          	lfsr	2,6
  7290  001242  5013               	movf	RF24N_enqueue@header,w,c
  7291  001244  26D9               	addwf	fsr2l,f,c
  7292  001246  5014               	movf	RF24N_enqueue@header+1,w,c
  7293  001248  22DA               	addwfc	fsr2h,f,c
  7294  00124A  0E95               	movlw	149
  7295  00124C  18DE               	xorwf	postinc2,w,c
  7296  00124E  B4D8               	btfsc	status,2,c
  7297  001250  D00A               	goto	l3984
  7298  001252  EE20 F006          	lfsr	2,6
  7299  001256  5013               	movf	RF24N_enqueue@header,w,c
  7300  001258  26D9               	addwf	fsr2l,f,c
  7301  00125A  5014               	movf	RF24N_enqueue@header+1,w,c
  7302  00125C  22DA               	addwfc	fsr2h,f,c
  7303  00125E  0EC8               	movlw	200
  7304  001260  18DE               	xorwf	postinc2,w,c
  7305  001262  A4D8               	btfss	status,2,c
  7306  001264  D12E               	goto	l4058
  7307  001266                     l3984:
  7308                           
  7309                           ;RF24Network_cg.c: 575: if(rn.frag_queue.message_size + message_size > 144 + 10-10){
  7310  001266  EE21  F0B3         	lfsr	2,_rn+222
  7311  00126A  CFDE F015          	movff	postinc2,??_RF24N_enqueue
  7312  00126E  CFDD F016          	movff	postdec2,??_RF24N_enqueue+1
  7313  001272  5028               	movf	RF24N_enqueue@message_size,w,c
  7314  001274  2615               	addwf	??_RF24N_enqueue,f,c
  7315  001276  5029               	movf	RF24N_enqueue@message_size+1,w,c
  7316  001278  2216               	addwfc	??_RF24N_enqueue+1,f,c
  7317  00127A  5016               	movf	??_RF24N_enqueue+1,w,c
  7318  00127C  E104               	bnz	u4340
  7319  00127E  0E91               	movlw	145
  7320  001280  5C15               	subwf	??_RF24N_enqueue,w,c
  7321  001282  A0D8               	btfss	status,0,c
  7322  001284  D005               	goto	l3992
  7323  001286                     u4340:
  7324                           
  7325                           ;RF24Network_cg.c: 580: rn.frag_queue.header.reserved=0;
  7326  001286  0E00               	movlw	0
  7327  001288  CFE8 F1B2          	movff	wreg,_rn+221
  7328                           
  7329                           ;RF24Network_cg.c: 581: return 0;
  7330  00128C  0E00               	movlw	0
  7331  00128E  0012               	return	
  7332  001290                     l3992:
  7333                           
  7334                           ;RF24Network_cg.c: 582: }
  7335                           ;RF24Network_cg.c: 583: if( rn.frag_queue.header.reserved == 0 || (header->type != 150 &
      +                          & header->reserved != rn.frag_queue.header.reserved ) || rn.frag_queue.header.id != head
      +                          er->id ){
  7336  001290  EE21  F0B2         	lfsr	2,_rn+221
  7337  001294  50DF               	movf	indf2,w,c
  7338  001296  B4D8               	btfsc	status,2,c
  7339  001298  D025               	goto	l4000
  7340  00129A  EE20 F006          	lfsr	2,6
  7341  00129E  5013               	movf	RF24N_enqueue@header,w,c
  7342  0012A0  26D9               	addwf	fsr2l,f,c
  7343  0012A2  5014               	movf	RF24N_enqueue@header+1,w,c
  7344  0012A4  22DA               	addwfc	fsr2h,f,c
  7345  0012A6  0E96               	movlw	150
  7346  0012A8  18DE               	xorwf	postinc2,w,c
  7347  0012AA  B4D8               	btfsc	status,2,c
  7348  0012AC  D00C               	goto	l3998
  7349  0012AE  EE21  F0B2         	lfsr	2,_rn+221
  7350  0012B2  EE00 F007          	lfsr	0,7
  7351  0012B6  5013               	movf	RF24N_enqueue@header,w,c
  7352  0012B8  26E9               	addwf	fsr0l,f,c
  7353  0012BA  5014               	movf	RF24N_enqueue@header+1,w,c
  7354  0012BC  22EA               	addwfc	fsr0h,f,c
  7355  0012BE  50DE               	movf	postinc2,w,c
  7356  0012C0  18EE               	xorwf	postinc0,w,c
  7357  0012C2  A4D8               	btfss	status,2,c
  7358  0012C4  D00F               	goto	l4000
  7359  0012C6                     l3998:
  7360  0012C6  EE20 F004          	lfsr	2,4
  7361  0012CA  5013               	movf	RF24N_enqueue@header,w,c
  7362  0012CC  26D9               	addwf	fsr2l,f,c
  7363  0012CE  5014               	movf	RF24N_enqueue@header+1,w,c
  7364  0012D0  22DA               	addwfc	fsr2h,f,c
  7365  0012D2  EE01  F0AF         	lfsr	0,_rn+218
  7366  0012D6  50DE               	movf	postinc2,w,c
  7367  0012D8  18EE               	xorwf	postinc0,w,c
  7368  0012DA  E104               	bnz	l4000
  7369  0012DC  50DE               	movf	postinc2,w,c
  7370  0012DE  18EE               	xorwf	postinc0,w,c
  7371  0012E0  B4D8               	btfsc	status,2,c
  7372  0012E2  D002               	goto	l4004
  7373  0012E4                     l4000:
  7374                           
  7375                           ;RF24Network_cg.c: 589: return 0;
  7376  0012E4  0E00               	movlw	0
  7377  0012E6  0012               	return	
  7378  0012E8                     l4004:
  7379                           
  7380                           ;RF24Network_cg.c: 590: }
  7381                           ;RF24Network_cg.c: 592: memcpy(rn.frag_queue.message_buffer+rn.frag_queue.message_size,r
      +                          n.frame_buffer+sizeof(RF24NetworkHeader),message_size);
  7382  0012E8  EE21  F0B3         	lfsr	2,_rn+222
  7383  0012EC  CFDE F015          	movff	postinc2,??_RF24N_enqueue
  7384  0012F0  CFDD F016          	movff	postdec2,??_RF24N_enqueue+1
  7385  0012F4  EE21  F0B5         	lfsr	2,_rn+224
  7386  0012F8  CFDE F017          	movff	postinc2,??_RF24N_enqueue+2
  7387  0012FC  CFDD F018          	movff	postdec2,??_RF24N_enqueue+3
  7388  001300  5015               	movf	??_RF24N_enqueue,w,c
  7389  001302  2417               	addwf	??_RF24N_enqueue+2,w,c
  7390  001304  6E03               	movwf	memcpy@d1,c
  7391  001306  5016               	movf	??_RF24N_enqueue+1,w,c
  7392  001308  2018               	addwfc	??_RF24N_enqueue+3,w,c
  7393  00130A  6E04               	movwf	memcpy@d1+1,c
  7394  00130C  0EE4               	movlw	low (_rn+15)
  7395  00130E  6E05               	movwf	memcpy@s1,c
  7396  001310  0E00               	movlw	high (_rn+15)
  7397  001312  6E06               	movwf	memcpy@s1+1,c
  7398  001314  C028  F007         	movff	RF24N_enqueue@message_size,memcpy@n
  7399  001318  C029  F008         	movff	RF24N_enqueue@message_size+1,memcpy@n+1
  7400  00131C  EC5A  F01B         	call	_memcpy	;wreg free
  7401                           
  7402                           ;RF24Network_cg.c: 593: rn.frag_queue.message_size += message_size;
  7403  001320  EE21  F0B3         	lfsr	2,_rn+222
  7404  001324  5028               	movf	RF24N_enqueue@message_size,w,c
  7405  001326  26DE               	addwf	postinc2,f,c
  7406  001328  5029               	movf	RF24N_enqueue@message_size+1,w,c
  7407  00132A  22DD               	addwfc	postdec2,f,c
  7408                           
  7409                           ;RF24Network_cg.c: 595: if(header->type != 150){
  7410  00132C  EE20 F006          	lfsr	2,6
  7411  001330  5013               	movf	RF24N_enqueue@header,w,c
  7412  001332  26D9               	addwf	fsr2l,f,c
  7413  001334  5014               	movf	RF24N_enqueue@header+1,w,c
  7414  001336  22DA               	addwfc	fsr2h,f,c
  7415  001338  0E96               	movlw	150
  7416  00133A  18DE               	xorwf	postinc2,w,c
  7417  00133C  B4D8               	btfsc	status,2,c
  7418  00133E  D007               	goto	l829
  7419                           
  7420                           ;RF24Network_cg.c: 596: --rn.frag_queue.header.reserved;
  7421  001340  C1B2  FFE8         	movff	_rn+221,wreg
  7422  001344  0FFF               	addlw	-1
  7423  001346  CFE8 F1B2          	movff	wreg,_rn+221
  7424                           
  7425                           ;RF24Network_cg.c: 597: return 1;
  7426  00134A  0E01               	movlw	1
  7427  00134C  0012               	return	
  7428  00134E                     l829:
  7429                           
  7430                           ;RF24Network_cg.c: 598: }
  7431                           ;RF24Network_cg.c: 599: rn.frag_queue.header.reserved = 0;
  7432  00134E  0E00               	movlw	0
  7433  001350  CFE8 F1B2          	movff	wreg,_rn+221
  7434                           
  7435                           ;RF24Network_cg.c: 600: rn.frag_queue.header.type = header->reserved;
  7436  001354  EE20 F007          	lfsr	2,7
  7437  001358  5013               	movf	RF24N_enqueue@header,w,c
  7438  00135A  26D9               	addwf	fsr2l,f,c
  7439  00135C  5014               	movf	RF24N_enqueue@header+1,w,c
  7440  00135E  22DA               	addwfc	fsr2h,f,c
  7441  001360  50DF               	movf	indf2,w,c
  7442  001362  6E15               	movwf	??_RF24N_enqueue& (0+255),c
  7443  001364  C015  F1B1         	movff	??_RF24N_enqueue,_rn+220
  7444                           
  7445                           ;RF24Network_cg.c: 602: ;
  7446                           ;RF24Network_cg.c: 603: ;
  7447                           ;RF24Network_cg.c: 606: if(rn.frag_queue.header.type == 131){
  7448  001368  C1B1  FFE8         	movff	_rn+220,wreg
  7449  00136C  0A83               	xorlw	131
  7450  00136E  A4D8               	btfss	status,2,c
  7451  001370  D002               	goto	l4022
  7452                           
  7453                           ;RF24Network_cg.c: 607: return 2;
  7454  001372  0E02               	movlw	2
  7455  001374  0012               	return	
  7456  001376                     l4022:
  7457                           
  7458                           ;RF24Network_cg.c: 608: }
  7459                           ;RF24Network_cg.c: 613: if(144 + 10-10 - (rn.next_frame-rn.frame_queue) >= rn.frag_queue
      +                          .message_size){
  7460  001376  EE21  F0B3         	lfsr	2,_rn+222
  7461  00137A  EE01  F0A9         	lfsr	0,_rn+212
  7462  00137E  CFEE F017          	movff	postinc0,??_RF24N_enqueue+2
  7463  001382  CFED F018          	movff	postdec0,??_RF24N_enqueue+3
  7464  001386  0ED5               	movlw	low _rn
  7465  001388  6E19               	movwf	(??_RF24N_enqueue+4)& (0+255),c
  7466  00138A  0E00               	movlw	high _rn
  7467  00138C  6E1A               	movwf	(??_RF24N_enqueue+5)& (0+255),c
  7468  00138E  0E3A               	movlw	58
  7469  001390  2619               	addwf	??_RF24N_enqueue+4,f,c
  7470  001392  0E00               	movlw	0
  7471  001394  221A               	addwfc	??_RF24N_enqueue+5,f,c
  7472  001396  1E19               	comf	??_RF24N_enqueue+4,f,c
  7473  001398  1E1A               	comf	??_RF24N_enqueue+5,f,c
  7474  00139A  4A19               	infsnz	??_RF24N_enqueue+4,f,c
  7475  00139C  2A1A               	incf	??_RF24N_enqueue+5,f,c
  7476  00139E  5017               	movf	??_RF24N_enqueue+2,w,c
  7477  0013A0  2619               	addwf	??_RF24N_enqueue+4,f,c
  7478  0013A2  5018               	movf	??_RF24N_enqueue+3,w,c
  7479  0013A4  221A               	addwfc	??_RF24N_enqueue+5,f,c
  7480  0013A6  1E19               	comf	??_RF24N_enqueue+4,f,c
  7481  0013A8  1E1A               	comf	??_RF24N_enqueue+5,f,c
  7482  0013AA  4A19               	infsnz	??_RF24N_enqueue+4,f,c
  7483  0013AC  2A1A               	incf	??_RF24N_enqueue+5,f,c
  7484  0013AE  0E90               	movlw	144
  7485  0013B0  2619               	addwf	??_RF24N_enqueue+4,f,c
  7486  0013B2  0E00               	movlw	0
  7487  0013B4  221A               	addwfc	??_RF24N_enqueue+5,f,c
  7488  0013B6  50DE               	movf	postinc2,w,c
  7489  0013B8  5C19               	subwf	??_RF24N_enqueue+4,w,c
  7490  0013BA  501A               	movf	??_RF24N_enqueue+5,w,c
  7491  0013BC  0A80               	xorlw	128
  7492  0013BE  6E1B               	movwf	(??_RF24N_enqueue+6)& (0+255),c
  7493  0013C0  50DE               	movf	postinc2,w,c
  7494  0013C2  0A80               	xorlw	128
  7495  0013C4  581B               	subwfb	(??_RF24N_enqueue+6)& (0+255),w,c
  7496  0013C6  A0D8               	btfss	status,0,c
  7497  0013C8  D04F               	goto	l4038
  7498                           
  7499                           ;RF24Network_cg.c: 614: uint8_t padding;
  7500                           ;RF24Network_cg.c: 615: memcpy(rn.next_frame,&rn.frag_queue,10);
  7501  0013CA  C1A9  F003         	movff	_rn+212,memcpy@d1
  7502  0013CE  C1AA  F004         	movff	_rn+213,memcpy@d1+1
  7503  0013D2  0EAB               	movlw	low (_rn+214)
  7504  0013D4  6E05               	movwf	memcpy@s1,c
  7505  0013D6  0E01               	movlw	high (_rn+214)
  7506  0013D8  6E06               	movwf	memcpy@s1+1,c
  7507  0013DA  0E00               	movlw	0
  7508  0013DC  6E08               	movwf	memcpy@n+1,c
  7509  0013DE  0E0A               	movlw	10
  7510  0013E0  6E07               	movwf	memcpy@n,c
  7511  0013E2  EC5A  F01B         	call	_memcpy	;wreg free
  7512                           
  7513                           ;RF24Network_cg.c: 616: memcpy(rn.next_frame+10,rn.frag_queue.message_buffer,rn.frag_que
      +                          ue.message_size);
  7514  0013E6  EE21  F0A9         	lfsr	2,_rn+212
  7515  0013EA  CFDE F015          	movff	postinc2,??_RF24N_enqueue
  7516  0013EE  CFDD F016          	movff	postdec2,??_RF24N_enqueue+1
  7517  0013F2  0E0A               	movlw	10
  7518  0013F4  2415               	addwf	??_RF24N_enqueue,w,c
  7519  0013F6  6E03               	movwf	memcpy@d1,c
  7520  0013F8  0E00               	movlw	0
  7521  0013FA  2016               	addwfc	??_RF24N_enqueue+1,w,c
  7522  0013FC  6E04               	movwf	memcpy@d1+1,c
  7523  0013FE  C1B5  F005         	movff	_rn+224,memcpy@s1
  7524  001402  C1B6  F006         	movff	_rn+225,memcpy@s1+1
  7525  001406  C1B3  F007         	movff	_rn+222,memcpy@n
  7526  00140A  C1B4  F008         	movff	_rn+223,memcpy@n+1
  7527  00140E  EC5A  F01B         	call	_memcpy	;wreg free
  7528                           
  7529                           ;RF24Network_cg.c: 617: rn.next_frame += (10+rn.frag_queue.message_size);
  7530  001412  EE21  F0B3         	lfsr	2,_rn+222
  7531  001416  CFDE F015          	movff	postinc2,??_RF24N_enqueue
  7532  00141A  CFDD F016          	movff	postdec2,??_RF24N_enqueue+1
  7533  00141E  0E0A               	movlw	10
  7534  001420  2615               	addwf	??_RF24N_enqueue,f,c
  7535  001422  0E00               	movlw	0
  7536  001424  2216               	addwfc	??_RF24N_enqueue+1,f,c
  7537  001426  EE21  F0A9         	lfsr	2,_rn+212
  7538  00142A  5015               	movf	??_RF24N_enqueue,w,c
  7539  00142C  26DE               	addwf	postinc2,f,c
  7540  00142E  5016               	movf	??_RF24N_enqueue+1,w,c
  7541  001430  22DD               	addwfc	postdec2,f,c
  7542                           
  7543                           ;RF24Network_cg.c: 619: if((padding = (rn.frag_queue.message_size+10)%4)){
  7544                           ; multi bank
  7545  001432  0101               	movlb	(_rn+222) shr (0+8)
  7546  001434  51B3               	movf	(_rn+222)& (0+255),w,b
  7547  001436  0F0A               	addlw	10
  7548  001438  0B03               	andlw	3
  7549  00143A  6E24               	movwf	RF24N_enqueue@padding,c
  7550  00143C  5024               	movf	RF24N_enqueue@padding,w,c
  7551  00143E  B4D8               	btfsc	status,2,c
  7552  001440  D011               	goto	l4032
  7553                           
  7554                           ;RF24Network_cg.c: 620: rn.next_frame += 4 - padding;
  7555  001442  5024               	movf	RF24N_enqueue@padding,w,c
  7556  001444  6E15               	movwf	??_RF24N_enqueue& (0+255),c
  7557  001446  6A16               	clrf	(??_RF24N_enqueue+1)& (0+255),c
  7558  001448  1E15               	comf	??_RF24N_enqueue,f,c
  7559  00144A  1E16               	comf	??_RF24N_enqueue+1,f,c
  7560  00144C  4A15               	infsnz	??_RF24N_enqueue,f,c
  7561  00144E  2A16               	incf	??_RF24N_enqueue+1,f,c
  7562  001450  0E04               	movlw	4
  7563  001452  2615               	addwf	??_RF24N_enqueue,f,c
  7564  001454  0E00               	movlw	0
  7565  001456  2216               	addwfc	??_RF24N_enqueue+1,f,c
  7566  001458  EE21  F0A9         	lfsr	2,_rn+212
  7567  00145C  5015               	movf	??_RF24N_enqueue,w,c
  7568  00145E  26DE               	addwf	postinc2,f,c
  7569  001460  5016               	movf	??_RF24N_enqueue+1,w,c
  7570  001462  22DD               	addwfc	postdec2,f,c
  7571  001464                     l4032:
  7572                           
  7573                           ;RF24Network_cg.c: 621: }
  7574                           ;RF24Network_cg.c: 623: ;
  7575                           ;RF24Network_cg.c: 624: return 1;
  7576  001464  0E01               	movlw	1
  7577  001466  0012               	return	
  7578  001468                     l4038:
  7579                           
  7580                           ;RF24Network_cg.c: 626: RF24_stopListening();
  7581  001468  EC1E  F019         	call	_RF24_stopListening	;wreg free
  7582                           
  7583                           ;RF24Network_cg.c: 627: rn.networkFlags |= 1;
  7584  00146C  C0FF  FFE8         	movff	_rn+42,wreg
  7585  001470  0901               	iorlw	1
  7586  001472  CFE8 F0FF          	movff	wreg,_rn+42
  7587                           
  7588                           ;RF24Network_cg.c: 628: }
  7589                           ;RF24Network_cg.c: 629: ;
  7590                           ;RF24Network_cg.c: 630: return 0;
  7591  001476  0E00               	movlw	0
  7592  001478  0012               	return	
  7593  00147A                     l4046:
  7594                           
  7595                           ;RF24Network_cg.c: 640: if(header->type == 131){
  7596  00147A  EE20 F006          	lfsr	2,6
  7597  00147E  5013               	movf	RF24N_enqueue@header,w,c
  7598  001480  26D9               	addwf	fsr2l,f,c
  7599  001482  5014               	movf	RF24N_enqueue@header+1,w,c
  7600  001484  22DA               	addwfc	fsr2h,f,c
  7601  001486  0E83               	movlw	131
  7602  001488  18DE               	xorwf	postinc2,w,c
  7603  00148A  A4D8               	btfss	status,2,c
  7604  00148C  D01A               	goto	l4058
  7605                           
  7606                           ;RF24Network_cg.c: 641: memcpy(&rn.frag_queue,rn.frame_buffer,8);
  7607  00148E  0EAB               	movlw	low (_rn+214)
  7608  001490  6E03               	movwf	memcpy@d1,c
  7609  001492  0E01               	movlw	high (_rn+214)
  7610  001494  6E04               	movwf	memcpy@d1+1,c
  7611  001496  0EDC               	movlw	low (_rn+7)
  7612  001498  6E05               	movwf	memcpy@s1,c
  7613  00149A  0E00               	movlw	high (_rn+7)
  7614  00149C  6E06               	movwf	memcpy@s1+1,c
  7615  00149E  0E00               	movlw	0
  7616  0014A0  6E08               	movwf	memcpy@n+1,c
  7617  0014A2  0E08               	movlw	8
  7618  0014A4  6E07               	movwf	memcpy@n,c
  7619  0014A6  EC5A  F01B         	call	_memcpy	;wreg free
  7620                           
  7621                           ;RF24Network_cg.c: 642: rn.frag_queue.message_buffer = rn.frame_buffer+sizeof(RF24Networ
      +                          kHeader);
  7622  0014AA  0EE4               	movlw	low (_rn+15)
  7623  0014AC  CFE8 F1B5          	movff	wreg,_rn+224
  7624  0014B0  0E00               	movlw	high (_rn+15)
  7625  0014B2  CFE8 F1B6          	movff	wreg,_rn+225
  7626                           
  7627                           ;RF24Network_cg.c: 643: rn.frag_queue.message_size = message_size;
  7628  0014B6  C028  F1B3         	movff	RF24N_enqueue@message_size,_rn+222
  7629  0014BA  C029  F1B4         	movff	RF24N_enqueue@message_size+1,_rn+223
  7630                           
  7631                           ;RF24Network_cg.c: 644: return 2;
  7632  0014BE  0E02               	movlw	2
  7633  0014C0  0012               	return	
  7634  0014C2                     l4058:
  7635                           
  7636                           ;RF24Network_cg.c: 645: }
  7637                           ;RF24Network_cg.c: 651: if(message_size + (rn.next_frame-rn.frame_queue) <= 144 + 10){
  7638  0014C2  EE21  F0A9         	lfsr	2,_rn+212
  7639  0014C6  CFDE F015          	movff	postinc2,??_RF24N_enqueue
  7640  0014CA  CFDD F016          	movff	postdec2,??_RF24N_enqueue+1
  7641  0014CE  0ED5               	movlw	low _rn
  7642  0014D0  6E17               	movwf	(??_RF24N_enqueue+2)& (0+255),c
  7643  0014D2  0E00               	movlw	high _rn
  7644  0014D4  6E18               	movwf	(??_RF24N_enqueue+3)& (0+255),c
  7645  0014D6  0E3A               	movlw	58
  7646  0014D8  2617               	addwf	??_RF24N_enqueue+2,f,c
  7647  0014DA  0E00               	movlw	0
  7648  0014DC  2218               	addwfc	??_RF24N_enqueue+3,f,c
  7649  0014DE  1E17               	comf	??_RF24N_enqueue+2,f,c
  7650  0014E0  1E18               	comf	??_RF24N_enqueue+3,f,c
  7651  0014E2  4A17               	infsnz	??_RF24N_enqueue+2,f,c
  7652  0014E4  2A18               	incf	??_RF24N_enqueue+3,f,c
  7653  0014E6  5015               	movf	??_RF24N_enqueue,w,c
  7654  0014E8  2617               	addwf	??_RF24N_enqueue+2,f,c
  7655  0014EA  5016               	movf	??_RF24N_enqueue+1,w,c
  7656  0014EC  2218               	addwfc	??_RF24N_enqueue+3,f,c
  7657  0014EE  5028               	movf	RF24N_enqueue@message_size,w,c
  7658  0014F0  2617               	addwf	??_RF24N_enqueue+2,f,c
  7659  0014F2  5029               	movf	RF24N_enqueue@message_size+1,w,c
  7660  0014F4  2218               	addwfc	??_RF24N_enqueue+3,f,c
  7661  0014F6  BE18               	btfsc	??_RF24N_enqueue+3,7,c
  7662  0014F8  D006               	goto	l4060
  7663  0014FA  5018               	movf	??_RF24N_enqueue+3,w,c
  7664  0014FC  E164               	bnz	l4070
  7665  0014FE  0E9B               	movlw	155
  7666  001500  5C17               	subwf	??_RF24N_enqueue+2,w,c
  7667  001502  B0D8               	btfsc	status,0,c
  7668  001504  D060               	goto	l4070
  7669  001506                     l4060:
  7670                           
  7671                           ;RF24Network_cg.c: 652: uint8_t padding;
  7672                           ;RF24Network_cg.c: 653: memcpy(rn.next_frame,rn.frame_buffer,8);
  7673  001506  C1A9  F003         	movff	_rn+212,memcpy@d1
  7674  00150A  C1AA  F004         	movff	_rn+213,memcpy@d1+1
  7675  00150E  0EDC               	movlw	low (_rn+7)
  7676  001510  6E05               	movwf	memcpy@s1,c
  7677  001512  0E00               	movlw	high (_rn+7)
  7678  001514  6E06               	movwf	memcpy@s1+1,c
  7679  001516  0E00               	movlw	0
  7680  001518  6E08               	movwf	memcpy@n+1,c
  7681  00151A  0E08               	movlw	8
  7682  00151C  6E07               	movwf	memcpy@n,c
  7683  00151E  EC5A  F01B         	call	_memcpy	;wreg free
  7684                           
  7685                           ;RF24Network_cg.c: 654: memcpy(rn.next_frame+8,&message_size,2);
  7686  001522  EE21  F0A9         	lfsr	2,_rn+212
  7687  001526  CFDE F015          	movff	postinc2,??_RF24N_enqueue
  7688  00152A  CFDD F016          	movff	postdec2,??_RF24N_enqueue+1
  7689  00152E  0E08               	movlw	8
  7690  001530  2415               	addwf	??_RF24N_enqueue,w,c
  7691  001532  6E03               	movwf	memcpy@d1,c
  7692  001534  0E00               	movlw	0
  7693  001536  2016               	addwfc	??_RF24N_enqueue+1,w,c
  7694  001538  6E04               	movwf	memcpy@d1+1,c
  7695  00153A  0E28               	movlw	low RF24N_enqueue@message_size
  7696  00153C  6E05               	movwf	memcpy@s1,c
  7697  00153E  0E00               	movlw	high RF24N_enqueue@message_size
  7698  001540  6E06               	movwf	memcpy@s1+1,c
  7699  001542  0E00               	movlw	0
  7700  001544  6E08               	movwf	memcpy@n+1,c
  7701  001546  0E02               	movlw	2
  7702  001548  6E07               	movwf	memcpy@n,c
  7703  00154A  EC5A  F01B         	call	_memcpy	;wreg free
  7704                           
  7705                           ;RF24Network_cg.c: 655: memcpy(rn.next_frame+10,rn.frame_buffer+8,message_size);
  7706  00154E  EE21  F0A9         	lfsr	2,_rn+212
  7707  001552  CFDE F015          	movff	postinc2,??_RF24N_enqueue
  7708  001556  CFDD F016          	movff	postdec2,??_RF24N_enqueue+1
  7709  00155A  0E0A               	movlw	10
  7710  00155C  2415               	addwf	??_RF24N_enqueue,w,c
  7711  00155E  6E03               	movwf	memcpy@d1,c
  7712  001560  0E00               	movlw	0
  7713  001562  2016               	addwfc	??_RF24N_enqueue+1,w,c
  7714  001564  6E04               	movwf	memcpy@d1+1,c
  7715  001566  0EE4               	movlw	low (_rn+15)
  7716  001568  6E05               	movwf	memcpy@s1,c
  7717  00156A  0E00               	movlw	high (_rn+15)
  7718  00156C  6E06               	movwf	memcpy@s1+1,c
  7719  00156E  C028  F007         	movff	RF24N_enqueue@message_size,memcpy@n
  7720  001572  C029  F008         	movff	RF24N_enqueue@message_size+1,memcpy@n+1
  7721  001576  EC5A  F01B         	call	_memcpy	;wreg free
  7722                           
  7723                           ;RF24Network_cg.c: 659: rn.next_frame += (message_size + 10);
  7724  00157A  0E0A               	movlw	10
  7725  00157C  2428               	addwf	RF24N_enqueue@message_size,w,c
  7726  00157E  6E15               	movwf	??_RF24N_enqueue& (0+255),c
  7727  001580  0E00               	movlw	0
  7728  001582  2029               	addwfc	RF24N_enqueue@message_size+1,w,c
  7729  001584  6E16               	movwf	(??_RF24N_enqueue+1)& (0+255),c
  7730  001586  EE21  F0A9         	lfsr	2,_rn+212
  7731  00158A  5015               	movf	??_RF24N_enqueue,w,c
  7732  00158C  26DE               	addwf	postinc2,f,c
  7733  00158E  5016               	movf	??_RF24N_enqueue+1,w,c
  7734  001590  22DD               	addwfc	postdec2,f,c
  7735                           
  7736                           ;RF24Network_cg.c: 661: if((padding = (message_size+10)%4)){
  7737  001592  5028               	movf	RF24N_enqueue@message_size,w,c
  7738  001594  0F0A               	addlw	10
  7739  001596  0B03               	andlw	3
  7740  001598  6E25               	movwf	RF24N_enqueue@padding_2297,c
  7741  00159A  5025               	movf	RF24N_enqueue@padding_2297,w,c
  7742  00159C  B4D8               	btfsc	status,2,c
  7743  00159E  D011               	goto	l4068
  7744                           
  7745                           ;RF24Network_cg.c: 662: rn.next_frame += 4 - padding;
  7746  0015A0  5025               	movf	RF24N_enqueue@padding_2297,w,c
  7747  0015A2  6E15               	movwf	??_RF24N_enqueue& (0+255),c
  7748  0015A4  6A16               	clrf	(??_RF24N_enqueue+1)& (0+255),c
  7749  0015A6  1E15               	comf	??_RF24N_enqueue,f,c
  7750  0015A8  1E16               	comf	??_RF24N_enqueue+1,f,c
  7751  0015AA  4A15               	infsnz	??_RF24N_enqueue,f,c
  7752  0015AC  2A16               	incf	??_RF24N_enqueue+1,f,c
  7753  0015AE  0E04               	movlw	4
  7754  0015B0  2615               	addwf	??_RF24N_enqueue,f,c
  7755  0015B2  0E00               	movlw	0
  7756  0015B4  2216               	addwfc	??_RF24N_enqueue+1,f,c
  7757  0015B6  EE21  F0A9         	lfsr	2,_rn+212
  7758  0015BA  5015               	movf	??_RF24N_enqueue,w,c
  7759  0015BC  26DE               	addwf	postinc2,f,c
  7760  0015BE  5016               	movf	??_RF24N_enqueue+1,w,c
  7761  0015C0  22DD               	addwfc	postdec2,f,c
  7762  0015C2                     l4068:
  7763                           
  7764                           ;RF24Network_cg.c: 663: }
  7765                           ;RF24Network_cg.c: 667: result = 1;
  7766  0015C2  0E01               	movlw	1
  7767  0015C4  D001               	goto	L6
  7768  0015C6                     l4070:
  7769                           
  7770                           ;RF24Network_cg.c: 669: result = 0;
  7771  0015C6  0E00               	movlw	0
  7772  0015C8                     L6:
  7773  0015C8  6E27               	movwf	RF24N_enqueue@result,c
  7774                           
  7775                           ;RF24Network_cg.c: 671: }
  7776                           ;RF24Network_cg.c: 672: return result;
  7777                           
  7778                           ;RF24Network_cg.c: 670: ;
  7779  0015CA  5027               	movf	RF24N_enqueue@result,w,c
  7780  0015CC  0012               	return	
  7781  0015CE                     __end_of_RF24N_enqueue:
  7782                           	opt stack 0
  7783                           tblptru	equ	0xFF8
  7784                           tblptrh	equ	0xFF7
  7785                           tblptrl	equ	0xFF6
  7786                           tablat	equ	0xFF5
  7787                           prodh	equ	0xFF4
  7788                           prodl	equ	0xFF3
  7789                           intcon	equ	0xFF2
  7790                           indf0	equ	0xFEF
  7791                           postinc0	equ	0xFEE
  7792                           postdec0	equ	0xFED
  7793                           fsr0h	equ	0xFEA
  7794                           fsr0l	equ	0xFE9
  7795                           wreg	equ	0xFE8
  7796                           postinc1	equ	0xFE6
  7797                           indf2	equ	0xFDF
  7798                           postinc2	equ	0xFDE
  7799                           postdec2	equ	0xFDD
  7800                           fsr2h	equ	0xFDA
  7801                           fsr2l	equ	0xFD9
  7802                           status	equ	0xFD8
  7803                           
  7804 ;; *************** function _memcpy *****************
  7805 ;; Defined at:
  7806 ;;		line 11 in file "/opt/microchip/xc8/v1.36/sources/common/memcpy.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;  d1              2    2[COMRAM] PTR void 
  7809 ;;		 -> RF24N_read@bufsize(2), RF24N_peek@msg_size(2), rn.frame_buffer(32), rn.frag_queue_message_buffer(144), 
  7810 ;;		 -> rn.frame_queue(154), rn(370), rf(22), 
  7811 ;;  s1              2    4[COMRAM] PTR const void 
  7812 ;;		 -> rn.header(8), rn.frame_queue.header(8), RF24N_enqueue@message_size(2), rn.frame_buffer(32), 
  7813 ;;		 -> rn.frag_queue_message_buffer(144), rn.frag_queue(13), rn.frame_queue(154), rn(370), 
  7814 ;;		 -> RF24_openReadingPipe_d@address(5), loop@header(8), loop@payload(8), 
  7815 ;;  n               2    6[COMRAM] unsigned int 
  7816 ;; Auto vars:     Size  Location     Type
  7817 ;;  s               2   10[COMRAM] PTR const unsigned char 
  7818 ;;		 -> rn.header(8), rn.frame_queue.header(8), RF24N_enqueue@message_size(2), rn.frame_buffer(32), 
  7819 ;;		 -> rn.frag_queue_message_buffer(144), rn.frag_queue(13), rn.frame_queue(154), rn(370), 
  7820 ;;		 -> RF24_openReadingPipe_d@address(5), loop@header(8), loop@payload(8), 
  7821 ;;  d               2    8[COMRAM] PTR unsigned char 
  7822 ;;		 -> RF24N_read@bufsize(2), RF24N_peek@msg_size(2), rn.frame_buffer(32), rn.frag_queue_message_buffer(144), 
  7823 ;;		 -> rn.frame_queue(154), rn(370), rf(22), 
  7824 ;; Return value:  Size  Location     Type
  7825 ;;                  2    2[COMRAM] PTR void 
  7826 ;; Registers used:
  7827 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7828 ;; Tracked objects:
  7829 ;;		On entry : 0/0
  7830 ;;		On exit  : 0/0
  7831 ;;		Unchanged: 0/0
  7832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7833 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7834 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7836 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7837 ;;Total ram usage:       10 bytes
  7838 ;; Hardware stack levels used:    1
  7839 ;; Hardware stack levels required when called:    1
  7840 ;; This function calls:
  7841 ;;		Nothing
  7842 ;; This function is called by:
  7843 ;;		_RF24_openReadingPipe_d
  7844 ;;		_RF24N_enqueue
  7845 ;;		_RF24N__write
  7846 ;;		_RF24_openReadingPipe
  7847 ;;		_RF24N_peek
  7848 ;;		_RF24N_read
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           	psect	text42
  7853  0036B4                     __ptext42:
  7854                           	opt stack 0
  7855  0036B4                     _memcpy:
  7856                           	opt stack 26
  7857                           
  7858                           ;incstack = 0
  7859  0036B4  C005  F00B         	movff	memcpy@s1,memcpy@s
  7860  0036B8  C006  F00C         	movff	memcpy@s1+1,memcpy@s+1
  7861  0036BC  C003  F009         	movff	memcpy@d1,memcpy@d
  7862  0036C0  C004  F00A         	movff	memcpy@d1+1,memcpy@d+1
  7863  0036C4  D00E               	goto	l3706
  7864  0036C6                     l3700:
  7865  0036C6  C00B  FFD9         	movff	memcpy@s,fsr2l
  7866  0036CA  C00C  FFDA         	movff	memcpy@s+1,fsr2h
  7867  0036CE  C009  FFE9         	movff	memcpy@d,fsr0l
  7868  0036D2  C00A  FFEA         	movff	memcpy@d+1,fsr0h
  7869  0036D6  CFDF FFEF          	movff	indf2,indf0
  7870  0036DA  4A0B               	infsnz	memcpy@s,f,c
  7871  0036DC  2A0C               	incf	memcpy@s+1,f,c
  7872  0036DE  4A09               	infsnz	memcpy@d,f,c
  7873  0036E0  2A0A               	incf	memcpy@d+1,f,c
  7874  0036E2                     l3706:
  7875  0036E2  0607               	decf	memcpy@n,f,c
  7876  0036E4  A0D8               	btfss	status,0,c
  7877  0036E6  0608               	decf	memcpy@n+1,f,c
  7878  0036E8  2807               	incf	memcpy@n,w,c
  7879  0036EA  E1ED               	bnz	l3700
  7880  0036EC  2808               	incf	memcpy@n+1,w,c
  7881  0036EE  B4D8               	btfsc	status,2,c
  7882  0036F0  0012               	return	
  7883  0036F2  D7E9               	goto	l3700
  7884  0036F4                     __end_of_memcpy:
  7885                           	opt stack 0
  7886                           tblptru	equ	0xFF8
  7887                           tblptrh	equ	0xFF7
  7888                           tblptrl	equ	0xFF6
  7889                           tablat	equ	0xFF5
  7890                           prodh	equ	0xFF4
  7891                           prodl	equ	0xFF3
  7892                           intcon	equ	0xFF2
  7893                           indf0	equ	0xFEF
  7894                           postinc0	equ	0xFEE
  7895                           postdec0	equ	0xFED
  7896                           fsr0h	equ	0xFEA
  7897                           fsr0l	equ	0xFE9
  7898                           wreg	equ	0xFE8
  7899                           postinc1	equ	0xFE6
  7900                           indf2	equ	0xFDF
  7901                           postinc2	equ	0xFDE
  7902                           postdec2	equ	0xFDD
  7903                           fsr2h	equ	0xFDA
  7904                           fsr2l	equ	0xFD9
  7905                           status	equ	0xFD8
  7906                           
  7907 ;; *************** function ___lwdiv *****************
  7908 ;; Defined at:
  7909 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwdiv.c"
  7910 ;; Parameters:    Size  Location     Type
  7911 ;;  dividend        2    2[COMRAM] unsigned int 
  7912 ;;  divisor         2    4[COMRAM] unsigned int 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  quotient        2    6[COMRAM] unsigned int 
  7915 ;;  counter         1    8[COMRAM] unsigned char 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  2    2[COMRAM] unsigned int 
  7918 ;; Registers used:
  7919 ;;		wreg, status,2, status,0
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7926 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7928 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7929 ;;Total ram usage:        7 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:    1
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		_RF24N_enqueue
  7936 ;;		_RF24N_write_
  7937 ;; This function uses a non-reentrant model
  7938 ;;
  7939                           
  7940                           	psect	text43
  7941  003472                     __ptext43:
  7942                           	opt stack 0
  7943  003472                     ___lwdiv:
  7944                           	opt stack 26
  7945                           
  7946                           ;incstack = 0
  7947  003472  0E00               	movlw	0
  7948  003474  6E08               	movwf	___lwdiv@quotient+1,c
  7949  003476  0E00               	movlw	0
  7950  003478  6E07               	movwf	___lwdiv@quotient,c
  7951  00347A  5005               	movf	___lwdiv@divisor,w,c
  7952  00347C  1006               	iorwf	___lwdiv@divisor+1,w,c
  7953  00347E  B4D8               	btfsc	status,2,c
  7954  003480  D01C               	goto	l1411
  7955  003482  0E01               	movlw	1
  7956  003484  6E09               	movwf	___lwdiv@counter,c
  7957  003486  D004               	goto	l3748
  7958  003488                     l3746:
  7959  003488  90D8               	bcf	status,0,c
  7960  00348A  3605               	rlcf	___lwdiv@divisor,f,c
  7961  00348C  3606               	rlcf	___lwdiv@divisor+1,f,c
  7962  00348E  2A09               	incf	___lwdiv@counter,f,c
  7963  003490                     l3748:
  7964  003490  AE06               	btfss	___lwdiv@divisor+1,7,c
  7965  003492  D7FA               	goto	l3746
  7966  003494                     l3750:
  7967  003494  90D8               	bcf	status,0,c
  7968  003496  3607               	rlcf	___lwdiv@quotient,f,c
  7969  003498  3608               	rlcf	___lwdiv@quotient+1,f,c
  7970  00349A  5005               	movf	___lwdiv@divisor,w,c
  7971  00349C  5C03               	subwf	___lwdiv@dividend,w,c
  7972  00349E  5006               	movf	___lwdiv@divisor+1,w,c
  7973  0034A0  5804               	subwfb	___lwdiv@dividend+1,w,c
  7974  0034A2  A0D8               	btfss	status,0,c
  7975  0034A4  D005               	goto	l3758
  7976  0034A6  5005               	movf	___lwdiv@divisor,w,c
  7977  0034A8  5E03               	subwf	___lwdiv@dividend,f,c
  7978  0034AA  5006               	movf	___lwdiv@divisor+1,w,c
  7979  0034AC  5A04               	subwfb	___lwdiv@dividend+1,f,c
  7980  0034AE  8007               	bsf	___lwdiv@quotient,0,c
  7981  0034B0                     l3758:
  7982  0034B0  90D8               	bcf	status,0,c
  7983  0034B2  3206               	rrcf	___lwdiv@divisor+1,f,c
  7984  0034B4  3205               	rrcf	___lwdiv@divisor,f,c
  7985  0034B6  2E09               	decfsz	___lwdiv@counter,f,c
  7986  0034B8  D7ED               	goto	l3750
  7987  0034BA                     l1411:
  7988  0034BA  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  7989  0034BE  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7990  0034C2  0012               	return		;funcret
  7991  0034C4                     __end_of___lwdiv:
  7992                           	opt stack 0
  7993                           tblptru	equ	0xFF8
  7994                           tblptrh	equ	0xFF7
  7995                           tblptrl	equ	0xFF6
  7996                           tablat	equ	0xFF5
  7997                           prodh	equ	0xFF4
  7998                           prodl	equ	0xFF3
  7999                           intcon	equ	0xFF2
  8000                           indf0	equ	0xFEF
  8001                           postinc0	equ	0xFEE
  8002                           postdec0	equ	0xFED
  8003                           fsr0h	equ	0xFEA
  8004                           fsr0l	equ	0xFE9
  8005                           wreg	equ	0xFE8
  8006                           postinc1	equ	0xFE6
  8007                           indf2	equ	0xFDF
  8008                           postinc2	equ	0xFDE
  8009                           postdec2	equ	0xFDD
  8010                           fsr2h	equ	0xFDA
  8011                           fsr2l	equ	0xFD9
  8012                           status	equ	0xFD8
  8013                           
  8014 ;; *************** function _RF24N_levelToAddress *****************
  8015 ;; Defined at:
  8016 ;;		line 1346 in file "../../RF24Network_cg.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  level           1    wreg     unsigned char 
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  level           1   10[COMRAM] unsigned char 
  8021 ;;  levelAddr       2   11[COMRAM] unsigned int 
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  2    2[COMRAM] unsigned int 
  8024 ;; Registers used:
  8025 ;;		wreg, status,2, status,0, prodl, prodh
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8032 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8033 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8034 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8035 ;;Total ram usage:       11 bytes
  8036 ;; Hardware stack levels used:    1
  8037 ;; Hardware stack levels required when called:    1
  8038 ;; This function calls:
  8039 ;;		Nothing
  8040 ;; This function is called by:
  8041 ;;		_RF24N_update
  8042 ;;		_RF24N_multicast
  8043 ;;		_RF24N_multicastLevel
  8044 ;; This function uses a non-reentrant model
  8045 ;;
  8046                           
  8047                           	psect	text44
  8048  003512                     __ptext44:
  8049                           	opt stack 0
  8050  003512                     _RF24N_levelToAddress:
  8051                           	opt stack 25
  8052                           
  8053                           ;incstack = 0
  8054                           ;RF24N_levelToAddress@level stored from wreg
  8055  003512  6E0B               	movwf	RF24N_levelToAddress@level,c
  8056                           
  8057                           ;RF24Network_cg.c: 1348: uint16_t levelAddr = 1;
  8058  003514  0E00               	movlw	0
  8059  003516  6E0D               	movwf	RF24N_levelToAddress@levelAddr+1,c
  8060  003518  0E01               	movlw	1
  8061  00351A  6E0C               	movwf	RF24N_levelToAddress@levelAddr,c
  8062                           
  8063                           ;RF24Network_cg.c: 1349: if(level){
  8064  00351C  500B               	movf	RF24N_levelToAddress@level,w,c
  8065  00351E  B4D8               	btfsc	status,2,c
  8066  003520  D014               	goto	l4080
  8067                           
  8068                           ;RF24Network_cg.c: 1350: levelAddr = levelAddr << ((level-1) * 3);
  8069  003522  040B               	decf	RF24N_levelToAddress@level,w,c
  8070  003524  0D03               	mullw	3
  8071  003526  CFF3 F005          	movff	prodl,??_RF24N_levelToAddress
  8072  00352A  C00C  F006         	movff	RF24N_levelToAddress@levelAddr,??_RF24N_levelToAddress+1
  8073  00352E  C00D  F007         	movff	RF24N_levelToAddress@levelAddr+1,??_RF24N_levelToAddress+2
  8074  003532  2A05               	incf	??_RF24N_levelToAddress,f,c
  8075  003534  D003               	goto	u4474
  8076  003536                     u4475:
  8077  003536  90D8               	bcf	status,0,c
  8078  003538  3606               	rlcf	??_RF24N_levelToAddress+1,f,c
  8079  00353A  3607               	rlcf	??_RF24N_levelToAddress+2,f,c
  8080  00353C                     u4474:
  8081  00353C  2E05               	decfsz	??_RF24N_levelToAddress,f,c
  8082  00353E  D7FB               	goto	u4475
  8083  003540  C006  F00C         	movff	??_RF24N_levelToAddress+1,RF24N_levelToAddress@levelAddr
  8084  003544  C007  F00D         	movff	??_RF24N_levelToAddress+2,RF24N_levelToAddress@levelAddr+1
  8085                           
  8086                           ;RF24Network_cg.c: 1351: }else{
  8087  003548  D005               	goto	l971
  8088  00354A                     l4080:
  8089                           
  8090                           ;RF24Network_cg.c: 1352: return 0;
  8091  00354A  0E00               	movlw	0
  8092  00354C  6E04               	movwf	?_RF24N_levelToAddress+1,c
  8093  00354E  0E00               	movlw	0
  8094  003550  6E03               	movwf	?_RF24N_levelToAddress,c
  8095  003552  0012               	return	
  8096  003554                     l971:
  8097                           
  8098                           ;RF24Network_cg.c: 1353: }
  8099                           ;RF24Network_cg.c: 1354: return levelAddr;
  8100  003554  C00C  F003         	movff	RF24N_levelToAddress@levelAddr,?_RF24N_levelToAddress
  8101  003558  C00D  F004         	movff	RF24N_levelToAddress@levelAddr+1,?_RF24N_levelToAddress+1
  8102  00355C  0012               	return		;funcret
  8103  00355E                     __end_of_RF24N_levelToAddress:
  8104                           	opt stack 0
  8105                           tblptru	equ	0xFF8
  8106                           tblptrh	equ	0xFF7
  8107                           tblptrl	equ	0xFF6
  8108                           tablat	equ	0xFF5
  8109                           prodh	equ	0xFF4
  8110                           prodl	equ	0xFF3
  8111                           intcon	equ	0xFF2
  8112                           indf0	equ	0xFEF
  8113                           postinc0	equ	0xFEE
  8114                           postdec0	equ	0xFED
  8115                           fsr0h	equ	0xFEA
  8116                           fsr0l	equ	0xFE9
  8117                           wreg	equ	0xFE8
  8118                           postinc1	equ	0xFE6
  8119                           indf2	equ	0xFDF
  8120                           postinc2	equ	0xFDE
  8121                           postdec2	equ	0xFDD
  8122                           fsr2h	equ	0xFDA
  8123                           fsr2l	equ	0xFD9
  8124                           status	equ	0xFD8
  8125                           
  8126 ;; *************** function _RF24N_logicalToPhysicalAddress *****************
  8127 ;; Defined at:
  8128 ;;		line 1093 in file "../../RF24Network_cg.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;  conversionIn    2   20[COMRAM] PTR struct .
  8131 ;;		 -> RF24N_write@conversion(4), 
  8132 ;; Auto vars:     Size  Location     Type
  8133 ;;  to_node         2   39[COMRAM] PTR unsigned int 
  8134 ;;		 -> conversion.send_node(2), RF24N_write@conversion(4), 
  8135 ;;  directTo        2   36[COMRAM] PTR unsigned char 
  8136 ;;		 -> conversion.send_pipe(1), RF24N_write@conversion(4), 
  8137 ;;  pre_conversi    2   34[COMRAM] unsigned int 
  8138 ;;  multicast       2   32[COMRAM] PTR unsigned char 
  8139 ;;		 -> conversion.multicast(1), RF24N_write@conversion(4), 
  8140 ;;  pre_conversi    1   38[COMRAM] unsigned char 
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  1    wreg      unsigned char 
  8143 ;; Registers used:
  8144 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8151 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8152 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8153 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8154 ;;Total ram usage:       21 bytes
  8155 ;; Hardware stack levels used:    1
  8156 ;; Hardware stack levels required when called:    3
  8157 ;; This function calls:
  8158 ;;		_RF24N_direct_child_route_to
  8159 ;;		_RF24N_is_descendant
  8160 ;;		_RF24N_is_direct_child
  8161 ;; This function is called by:
  8162 ;;		_RF24N_write
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text45
  8167  0029AE                     __ptext45:
  8168                           	opt stack 0
  8169  0029AE                     _RF24N_logicalToPhysicalAddress:
  8170                           	opt stack 22
  8171                           
  8172                           ;RF24Network_cg.c: 1098: uint16_t *to_node = &conversionInfo->send_node;
  8173                           
  8174                           ;incstack = 0
  8175  0029AE  C015  F028         	movff	RF24N_logicalToPhysicalAddress@conversionInfo,RF24N_logicalToPhysicalAddress@to_n
      +                          ode
  8176  0029B2  C016  F029         	movff	RF24N_logicalToPhysicalAddress@conversionInfo+1,RF24N_logicalToPhysicalAddress@to
      +                          _node+1
  8177                           
  8178                           ;RF24Network_cg.c: 1099: uint8_t *directTo = &conversionInfo->send_pipe;
  8179  0029B6  0E02               	movlw	2
  8180  0029B8  2415               	addwf	RF24N_logicalToPhysicalAddress@conversionInfo,w,c
  8181  0029BA  6E25               	movwf	RF24N_logicalToPhysicalAddress@directTo,c
  8182  0029BC  0E00               	movlw	0
  8183  0029BE  2016               	addwfc	RF24N_logicalToPhysicalAddress@conversionInfo+1,w,c
  8184  0029C0  6E26               	movwf	RF24N_logicalToPhysicalAddress@directTo+1,c
  8185                           
  8186                           ;RF24Network_cg.c: 1100: uint8_t *multicast = &conversionInfo->multicast;
  8187  0029C2  0E03               	movlw	3
  8188  0029C4  2415               	addwf	RF24N_logicalToPhysicalAddress@conversionInfo,w,c
  8189  0029C6  6E21               	movwf	RF24N_logicalToPhysicalAddress@multicast,c
  8190  0029C8  0E00               	movlw	0
  8191  0029CA  2016               	addwfc	RF24N_logicalToPhysicalAddress@conversionInfo+1,w,c
  8192  0029CC  6E22               	movwf	RF24N_logicalToPhysicalAddress@multicast+1,c
  8193                           
  8194                           ;RF24Network_cg.c: 1103: uint16_t pre_conversion_send_node = rn.parent_node;
  8195  0029CE  C10A  F023         	movff	_rn+53,RF24N_logicalToPhysicalAddress@pre_conversion_send_node
  8196  0029D2  C10B  F024         	movff	_rn+54,RF24N_logicalToPhysicalAddress@pre_conversion_send_node+1
  8197                           
  8198                           ;RF24Network_cg.c: 1106: uint8_t pre_conversion_send_pipe = rn.parent_pipe;
  8199  0029D6  C10C  F027         	movff	_rn+55,RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe
  8200                           
  8201                           ;RF24Network_cg.c: 1108: if(*directTo > 1 ){
  8202  0029DA  C025  FFD9         	movff	RF24N_logicalToPhysicalAddress@directTo,fsr2l
  8203  0029DE  C026  FFDA         	movff	RF24N_logicalToPhysicalAddress@directTo+1,fsr2h
  8204  0029E2  0E01               	movlw	1
  8205  0029E4  64DF               	cpfsgt	indf2,c
  8206  0029E6  D010               	goto	l4240
  8207                           
  8208                           ;RF24Network_cg.c: 1109: pre_conversion_send_node = *to_node;
  8209  0029E8  C028  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
  8210  0029EC  C029  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
  8211  0029F0  CFDE F023          	movff	postinc2,RF24N_logicalToPhysicalAddress@pre_conversion_send_node
  8212  0029F4  CFDD F024          	movff	postdec2,RF24N_logicalToPhysicalAddress@pre_conversion_send_node+1
  8213                           
  8214                           ;RF24Network_cg.c: 1110: *multicast = 1;
  8215  0029F8  C021  FFD9         	movff	RF24N_logicalToPhysicalAddress@multicast,fsr2l
  8216  0029FC  C022  FFDA         	movff	RF24N_logicalToPhysicalAddress@multicast+1,fsr2h
  8217  002A00  0E01               	movlw	1
  8218  002A02  6EDF               	movwf	indf2,c
  8219                           
  8220                           ;RF24Network_cg.c: 1112: pre_conversion_send_pipe=0;
  8221  002A04  0E00               	movlw	0
  8222  002A06  D016               	goto	L7
  8223  002A08                     l4240:
  8224                           
  8225                           ;RF24Network_cg.c: 1116: else
  8226                           ;RF24Network_cg.c: 1117: if ( RF24N_is_direct_child(*to_node) )
  8227  002A08  C028  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
  8228  002A0C  C029  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
  8229  002A10  CFDE F009          	movff	postinc2,RF24N_is_direct_child@node
  8230  002A14  CFDD F00A          	movff	postdec2,RF24N_is_direct_child@node+1
  8231  002A18  EC51  F019         	call	_RF24N_is_direct_child	;wreg free
  8232  002A1C  0900               	iorlw	0
  8233  002A1E  B4D8               	btfsc	status,2,c
  8234  002A20  D00B               	goto	l4246
  8235                           
  8236                           ;RF24Network_cg.c: 1118: {
  8237                           ;RF24Network_cg.c: 1120: pre_conversion_send_node = *to_node;
  8238  002A22  C028  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
  8239  002A26  C029  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
  8240  002A2A  CFDE F023          	movff	postinc2,RF24N_logicalToPhysicalAddress@pre_conversion_send_node
  8241  002A2E  CFDD F024          	movff	postdec2,RF24N_logicalToPhysicalAddress@pre_conversion_send_node+1
  8242  002A32  D01D               	goto	l4250
  8243  002A34                     L7:
  8244  002A34  6E27               	movwf	RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe,c
  8245                           
  8246                           ;RF24Network_cg.c: 1123: }
  8247  002A36  D01D               	goto	l4252
  8248  002A38                     l4246:
  8249                           
  8250                           ;RF24Network_cg.c: 1127: else if ( RF24N_is_descendant(*to_node) )
  8251  002A38  C028  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
  8252  002A3C  C029  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
  8253  002A40  CFDE F003          	movff	postinc2,RF24N_is_descendant@node
  8254  002A44  CFDD F004          	movff	postdec2,RF24N_is_descendant@node+1
  8255  002A48  EC91  F01C         	call	_RF24N_is_descendant	;wreg free
  8256  002A4C  0900               	iorlw	0
  8257  002A4E  B4D8               	btfsc	status,2,c
  8258  002A50  D010               	goto	l4252
  8259                           
  8260                           ;RF24Network_cg.c: 1128: {
  8261                           ;RF24Network_cg.c: 1129: pre_conversion_send_node = RF24N_direct_child_route_to(*to_node
      +                          );
  8262  002A52  C028  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
  8263  002A56  C029  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
  8264  002A5A  CFDE F003          	movff	postinc2,RF24N_direct_child_route_to@node
  8265  002A5E  CFDD F004          	movff	postdec2,RF24N_direct_child_route_to@node+1
  8266  002A62  EC0F  F01C         	call	_RF24N_direct_child_route_to	;wreg free
  8267  002A66  C003  F023         	movff	?_RF24N_direct_child_route_to,RF24N_logicalToPhysicalAddress@pre_conversion_send_
      +                          node
  8268  002A6A  C004  F024         	movff	?_RF24N_direct_child_route_to+1,RF24N_logicalToPhysicalAddress@pre_conversion_sen
      +                          d_node+1
  8269  002A6E                     l4250:
  8270                           
  8271                           ;RF24Network_cg.c: 1130: pre_conversion_send_pipe = 5;
  8272  002A6E  0E05               	movlw	5
  8273  002A70  D7E1               	goto	L7
  8274  002A72                     l4252:
  8275                           
  8276                           ;RF24Network_cg.c: 1131: }
  8277                           ;RF24Network_cg.c: 1133: *to_node = pre_conversion_send_node;
  8278  002A72  C028  FFD9         	movff	RF24N_logicalToPhysicalAddress@to_node,fsr2l
  8279  002A76  C029  FFDA         	movff	RF24N_logicalToPhysicalAddress@to_node+1,fsr2h
  8280  002A7A  C023  FFDE         	movff	RF24N_logicalToPhysicalAddress@pre_conversion_send_node,postinc2
  8281  002A7E  C024  FFDD         	movff	RF24N_logicalToPhysicalAddress@pre_conversion_send_node+1,postdec2
  8282                           
  8283                           ;RF24Network_cg.c: 1134: *directTo = pre_conversion_send_pipe;
  8284  002A82  C025  FFD9         	movff	RF24N_logicalToPhysicalAddress@directTo,fsr2l
  8285  002A86  C026  FFDA         	movff	RF24N_logicalToPhysicalAddress@directTo+1,fsr2h
  8286  002A8A  C027  FFDF         	movff	RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe,indf2
  8287  002A8E  0012               	return	
  8288  002A90                     __end_of_RF24N_logicalToPhysicalAddress:
  8289                           	opt stack 0
  8290                           tblptru	equ	0xFF8
  8291                           tblptrh	equ	0xFF7
  8292                           tblptrl	equ	0xFF6
  8293                           tablat	equ	0xFF5
  8294                           prodh	equ	0xFF4
  8295                           prodl	equ	0xFF3
  8296                           intcon	equ	0xFF2
  8297                           indf0	equ	0xFEF
  8298                           postinc0	equ	0xFEE
  8299                           postdec0	equ	0xFED
  8300                           fsr0h	equ	0xFEA
  8301                           fsr0l	equ	0xFE9
  8302                           wreg	equ	0xFE8
  8303                           postinc1	equ	0xFE6
  8304                           indf2	equ	0xFDF
  8305                           postinc2	equ	0xFDE
  8306                           postdec2	equ	0xFDD
  8307                           fsr2h	equ	0xFDA
  8308                           fsr2l	equ	0xFD9
  8309                           status	equ	0xFD8
  8310                           
  8311 ;; *************** function _RF24N_is_direct_child *****************
  8312 ;; Defined at:
  8313 ;;		line 1196 in file "../../RF24Network_cg.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;  node            2    8[COMRAM] unsigned int 
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;  child_node_m    2   17[COMRAM] unsigned int 
  8318 ;;  result          1   19[COMRAM] unsigned char 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  1    wreg      unsigned char 
  8321 ;; Registers used:
  8322 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8329 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8330 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8331 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8332 ;;Total ram usage:       12 bytes
  8333 ;; Hardware stack levels used:    1
  8334 ;; Hardware stack levels required when called:    2
  8335 ;; This function calls:
  8336 ;;		_RF24N_is_descendant
  8337 ;; This function is called by:
  8338 ;;		_RF24N_logicalToPhysicalAddress
  8339 ;; This function uses a non-reentrant model
  8340 ;;
  8341                           
  8342                           	psect	text46
  8343  0032A2                     __ptext46:
  8344                           	opt stack 0
  8345  0032A2                     _RF24N_is_direct_child:
  8346                           	opt stack 22
  8347                           
  8348                           ;RF24Network_cg.c: 1198: uint8_t result = 0;
  8349                           
  8350                           ;incstack = 0
  8351  0032A2  0E00               	movlw	0
  8352  0032A4  6E14               	movwf	RF24N_is_direct_child@result,c
  8353                           
  8354                           ;RF24Network_cg.c: 1207: if ( RF24N_is_descendant(node) )
  8355  0032A6  C009  F003         	movff	RF24N_is_direct_child@node,RF24N_is_descendant@node
  8356  0032AA  C00A  F004         	movff	RF24N_is_direct_child@node+1,RF24N_is_descendant@node+1
  8357  0032AE  EC91  F01C         	call	_RF24N_is_descendant	;wreg free
  8358  0032B2  0900               	iorlw	0
  8359  0032B4  B4D8               	btfsc	status,2,c
  8360  0032B6  D025               	goto	l4092
  8361                           
  8362                           ;RF24Network_cg.c: 1208: {
  8363                           ;RF24Network_cg.c: 1210: uint16_t child_node_mask = ( ~ rn.node_mask ) << 3;
  8364  0032B8  EE21  F00D         	lfsr	2,_rn+56
  8365  0032BC  CFDE F00B          	movff	postinc2,??_RF24N_is_direct_child
  8366  0032C0  CFDD F00C          	movff	postdec2,??_RF24N_is_direct_child+1
  8367  0032C4  1C0B               	comf	??_RF24N_is_direct_child,w,c
  8368  0032C6  6E0D               	movwf	(??_RF24N_is_direct_child+2)& (0+255),c
  8369  0032C8  1C0C               	comf	??_RF24N_is_direct_child+1,w,c
  8370  0032CA  6E0E               	movwf	(??_RF24N_is_direct_child+3)& (0+255),c
  8371  0032CC  90D8               	bcf	status,0,c
  8372  0032CE  360D               	rlcf	??_RF24N_is_direct_child+2,f,c
  8373  0032D0  360E               	rlcf	??_RF24N_is_direct_child+3,f,c
  8374  0032D2  90D8               	bcf	status,0,c
  8375  0032D4  360D               	rlcf	??_RF24N_is_direct_child+2,f,c
  8376  0032D6  360E               	rlcf	??_RF24N_is_direct_child+3,f,c
  8377  0032D8  90D8               	bcf	status,0,c
  8378  0032DA  360D               	rlcf	??_RF24N_is_direct_child+2,f,c
  8379  0032DC  360E               	rlcf	??_RF24N_is_direct_child+3,f,c
  8380  0032DE  C00D  F012         	movff	??_RF24N_is_direct_child+2,RF24N_is_direct_child@child_node_mask
  8381  0032E2  C00E  F013         	movff	??_RF24N_is_direct_child+3,RF24N_is_direct_child@child_node_mask+1
  8382                           
  8383                           ;RF24Network_cg.c: 1211: result = ( node & child_node_mask ) == 0 ;
  8384  0032E6  5012               	movf	RF24N_is_direct_child@child_node_mask,w,c
  8385  0032E8  1409               	andwf	RF24N_is_direct_child@node,w,c
  8386  0032EA  6E0B               	movwf	??_RF24N_is_direct_child& (0+255),c
  8387  0032EC  5013               	movf	RF24N_is_direct_child@child_node_mask+1,w,c
  8388  0032EE  140A               	andwf	RF24N_is_direct_child@node+1,w,c
  8389  0032F0  6E0C               	movwf	(??_RF24N_is_direct_child+1)& (0+255),c
  8390  0032F2  500B               	movf	??_RF24N_is_direct_child,w,c
  8391  0032F4  100C               	iorwf	??_RF24N_is_direct_child+1,w,c
  8392  0032F6  A4D8               	btfss	status,2,c
  8393  0032F8  D002               	goto	u4490
  8394  0032FA  0E01               	movlw	1
  8395  0032FC  D001               	goto	u4500
  8396  0032FE                     u4490:
  8397  0032FE  0E00               	movlw	0
  8398  003300                     u4500:
  8399  003300  6E14               	movwf	RF24N_is_direct_child@result,c
  8400  003302                     l4092:
  8401                           
  8402                           ;RF24Network_cg.c: 1212: }
  8403                           ;RF24Network_cg.c: 1213: return result;
  8404  003302  5014               	movf	RF24N_is_direct_child@result,w,c
  8405  003304  0012               	return	
  8406  003306                     __end_of_RF24N_is_direct_child:
  8407                           	opt stack 0
  8408                           tblptru	equ	0xFF8
  8409                           tblptrh	equ	0xFF7
  8410                           tblptrl	equ	0xFF6
  8411                           tablat	equ	0xFF5
  8412                           prodh	equ	0xFF4
  8413                           prodl	equ	0xFF3
  8414                           intcon	equ	0xFF2
  8415                           indf0	equ	0xFEF
  8416                           postinc0	equ	0xFEE
  8417                           postdec0	equ	0xFED
  8418                           fsr0h	equ	0xFEA
  8419                           fsr0l	equ	0xFE9
  8420                           wreg	equ	0xFE8
  8421                           postinc1	equ	0xFE6
  8422                           indf2	equ	0xFDF
  8423                           postinc2	equ	0xFDE
  8424                           postdec2	equ	0xFDD
  8425                           fsr2h	equ	0xFDA
  8426                           fsr2l	equ	0xFD9
  8427                           status	equ	0xFD8
  8428                           
  8429 ;; *************** function _RF24N_is_descendant *****************
  8430 ;; Defined at:
  8431 ;;		line 1218 in file "../../RF24Network_cg.c"
  8432 ;; Parameters:    Size  Location     Type
  8433 ;;  node            2    2[COMRAM] unsigned int 
  8434 ;; Auto vars:     Size  Location     Type
  8435 ;;		None
  8436 ;; Return value:  Size  Location     Type
  8437 ;;                  1    wreg      unsigned char 
  8438 ;; Registers used:
  8439 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  8440 ;; Tracked objects:
  8441 ;;		On entry : 0/0
  8442 ;;		On exit  : 0/0
  8443 ;;		Unchanged: 0/0
  8444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8447 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8448 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8449 ;;Total ram usage:        6 bytes
  8450 ;; Hardware stack levels used:    1
  8451 ;; Hardware stack levels required when called:    1
  8452 ;; This function calls:
  8453 ;;		Nothing
  8454 ;; This function is called by:
  8455 ;;		_RF24N_logicalToPhysicalAddress
  8456 ;;		_RF24N_is_direct_child
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460                           	psect	text47
  8461  003922                     __ptext47:
  8462                           	opt stack 0
  8463  003922                     _RF24N_is_descendant:
  8464                           	opt stack 22
  8465                           
  8466                           ;RF24Network_cg.c: 1220: return ( node & rn.node_mask ) == rn.node_address;
  8467                           
  8468                           ;incstack = 0
  8469  003922  EE21  F005         	lfsr	2,_rn+48
  8470  003926  EE01  F00D         	lfsr	0,_rn+56
  8471  00392A  CFEE F007          	movff	postinc0,??_RF24N_is_descendant+2
  8472  00392E  CFED F008          	movff	postdec0,??_RF24N_is_descendant+3
  8473  003932  5003               	movf	RF24N_is_descendant@node,w,c
  8474  003934  1607               	andwf	??_RF24N_is_descendant+2,f,c
  8475  003936  5004               	movf	RF24N_is_descendant@node+1,w,c
  8476  003938  1608               	andwf	??_RF24N_is_descendant+3,f,c
  8477  00393A  50DE               	movf	postinc2,w,c
  8478  00393C  1807               	xorwf	??_RF24N_is_descendant+2,w,c
  8479  00393E  E106               	bnz	u3910
  8480  003940  50DE               	movf	postinc2,w,c
  8481  003942  1808               	xorwf	??_RF24N_is_descendant+3,w,c
  8482  003944  A4D8               	btfss	status,2,c
  8483  003946  D002               	goto	u3910
  8484  003948  0E01               	movlw	1
  8485  00394A  0012               	return	
  8486  00394C                     u3910:
  8487  00394C  0E00               	movlw	0
  8488  00394E  0012               	return	
  8489  003950                     __end_of_RF24N_is_descendant:
  8490                           	opt stack 0
  8491                           tblptru	equ	0xFF8
  8492                           tblptrh	equ	0xFF7
  8493                           tblptrl	equ	0xFF6
  8494                           tablat	equ	0xFF5
  8495                           prodh	equ	0xFF4
  8496                           prodl	equ	0xFF3
  8497                           intcon	equ	0xFF2
  8498                           indf0	equ	0xFEF
  8499                           postinc0	equ	0xFEE
  8500                           postdec0	equ	0xFED
  8501                           fsr0h	equ	0xFEA
  8502                           fsr0l	equ	0xFE9
  8503                           wreg	equ	0xFE8
  8504                           postinc1	equ	0xFE6
  8505                           indf2	equ	0xFDF
  8506                           postinc2	equ	0xFDE
  8507                           postdec2	equ	0xFDD
  8508                           fsr2h	equ	0xFDA
  8509                           fsr2l	equ	0xFD9
  8510                           status	equ	0xFD8
  8511                           
  8512 ;; *************** function _RF24N_direct_child_route_to *****************
  8513 ;; Defined at:
  8514 ;;		line 1286 in file "../../RF24Network_cg.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;  node            2    2[COMRAM] unsigned int 
  8517 ;; Auto vars:     Size  Location     Type
  8518 ;;  child_mask      2    8[COMRAM] unsigned int 
  8519 ;; Return value:  Size  Location     Type
  8520 ;;                  2    2[COMRAM] unsigned int 
  8521 ;; Registers used:
  8522 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8523 ;; Tracked objects:
  8524 ;;		On entry : 0/0
  8525 ;;		On exit  : 0/0
  8526 ;;		Unchanged: 0/0
  8527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8529 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8531 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8532 ;;Total ram usage:        8 bytes
  8533 ;; Hardware stack levels used:    1
  8534 ;; Hardware stack levels required when called:    1
  8535 ;; This function calls:
  8536 ;;		Nothing
  8537 ;; This function is called by:
  8538 ;;		_RF24N_logicalToPhysicalAddress
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542                           	psect	text48
  8543  00381E                     __ptext48:
  8544                           	opt stack 0
  8545  00381E                     _RF24N_direct_child_route_to:
  8546                           	opt stack 23
  8547                           
  8548                           ;RF24Network_cg.c: 1289: uint16_t child_mask = ( rn.node_mask << 3 ) | 0x07;
  8549                           
  8550                           ;incstack = 0
  8551  00381E  0E07               	movlw	7
  8552  003820  EE21  F00D         	lfsr	2,_rn+56
  8553  003824  CFDE F005          	movff	postinc2,??_RF24N_direct_child_route_to
  8554  003828  CFDD F006          	movff	postdec2,??_RF24N_direct_child_route_to+1
  8555  00382C  90D8               	bcf	status,0,c
  8556  00382E  3605               	rlcf	??_RF24N_direct_child_route_to,f,c
  8557  003830  3606               	rlcf	??_RF24N_direct_child_route_to+1,f,c
  8558  003832  90D8               	bcf	status,0,c
  8559  003834  3605               	rlcf	??_RF24N_direct_child_route_to,f,c
  8560  003836  3606               	rlcf	??_RF24N_direct_child_route_to+1,f,c
  8561  003838  90D8               	bcf	status,0,c
  8562  00383A  3605               	rlcf	??_RF24N_direct_child_route_to,f,c
  8563  00383C  3606               	rlcf	??_RF24N_direct_child_route_to+1,f,c
  8564  00383E  1005               	iorwf	??_RF24N_direct_child_route_to,w,c
  8565  003840  6E09               	movwf	RF24N_direct_child_route_to@child_mask,c
  8566  003842  5006               	movf	??_RF24N_direct_child_route_to+1,w,c
  8567  003844  6E0A               	movwf	RF24N_direct_child_route_to@child_mask+1,c
  8568                           
  8569                           ;RF24Network_cg.c: 1290: return node & child_mask;
  8570  003846  5009               	movf	RF24N_direct_child_route_to@child_mask,w,c
  8571  003848  1403               	andwf	RF24N_direct_child_route_to@node,w,c
  8572  00384A  6E03               	movwf	?_RF24N_direct_child_route_to,c
  8573  00384C  500A               	movf	RF24N_direct_child_route_to@child_mask+1,w,c
  8574  00384E  1404               	andwf	RF24N_direct_child_route_to@node+1,w,c
  8575  003850  6E04               	movwf	?_RF24N_direct_child_route_to+1,c
  8576  003852  0012               	return	
  8577  003854                     __end_of_RF24N_direct_child_route_to:
  8578                           	opt stack 0
  8579                           tblptru	equ	0xFF8
  8580                           tblptrh	equ	0xFF7
  8581                           tblptrl	equ	0xFF6
  8582                           tablat	equ	0xFF5
  8583                           prodh	equ	0xFF4
  8584                           prodl	equ	0xFF3
  8585                           intcon	equ	0xFF2
  8586                           indf0	equ	0xFEF
  8587                           postinc0	equ	0xFEE
  8588                           postdec0	equ	0xFED
  8589                           fsr0h	equ	0xFEA
  8590                           fsr0l	equ	0xFE9
  8591                           wreg	equ	0xFE8
  8592                           postinc1	equ	0xFE6
  8593                           indf2	equ	0xFDF
  8594                           postinc2	equ	0xFDE
  8595                           postdec2	equ	0xFDD
  8596                           fsr2h	equ	0xFDA
  8597                           fsr2l	equ	0xFD9
  8598                           status	equ	0xFD8
  8599                           
  8600 ;; *************** function _RF24N_write_to_pipe *****************
  8601 ;; Defined at:
  8602 ;;		line 1143 in file "../../RF24Network_cg.c"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;  node            2   47[COMRAM] unsigned int 
  8605 ;;  pipe            1   49[COMRAM] unsigned char 
  8606 ;;  multicast       1   50[COMRAM] unsigned char 
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;  out_pipe        5   57[COMRAM] unsigned char [5]
  8609 ;;  ok              1   62[COMRAM] unsigned char 
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  1    wreg      unsigned char 
  8612 ;; Registers used:
  8613 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8619 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8620 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8622 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8623 ;;Total ram usage:       16 bytes
  8624 ;; Hardware stack levels used:    1
  8625 ;; Hardware stack levels required when called:    8
  8626 ;; This function calls:
  8627 ;;		_RF24N_pipe_address
  8628 ;;		_RF24_openWritingPipe_d
  8629 ;;		_RF24_setAutoAck_p
  8630 ;;		_RF24_stopListening
  8631 ;;		_RF24_txStandBy_t
  8632 ;;		_RF24_writeFast_m
  8633 ;; This function is called by:
  8634 ;;		_RF24N_write
  8635 ;; This function uses a non-reentrant model
  8636 ;;
  8637                           
  8638                           	psect	text49
  8639  002EB4                     __ptext49:
  8640                           	opt stack 0
  8641  002EB4                     _RF24N_write_to_pipe:
  8642                           	opt stack 17
  8643                           
  8644                           ;RF24Network_cg.c: 1145: uint8_t ok = 0;
  8645                           
  8646                           ;incstack = 0
  8647  002EB4  0E00               	movlw	0
  8648  002EB6  6E3F               	movwf	RF24N_write_to_pipe@ok,c
  8649                           
  8650                           ;RF24Network_cg.c: 1146: raddr_t out_pipe[5];
  8651                           ;RF24Network_cg.c: 1147: RF24N_pipe_address( node, pipe, out_pipe);
  8652  002EB8  C030  F003         	movff	RF24N_write_to_pipe@node,RF24N_pipe_address@node
  8653  002EBC  C031  F004         	movff	RF24N_write_to_pipe@node+1,RF24N_pipe_address@node+1
  8654  002EC0  C032  F005         	movff	RF24N_write_to_pipe@pipe,RF24N_pipe_address@pipe
  8655  002EC4  0E3A               	movlw	low RF24N_write_to_pipe@out_pipe
  8656  002EC6  6E06               	movwf	RF24N_pipe_address@address,c
  8657  002EC8  0E00               	movlw	high RF24N_write_to_pipe@out_pipe
  8658  002ECA  6E07               	movwf	RF24N_pipe_address@address+1,c
  8659  002ECC  ECBF  F013         	call	_RF24N_pipe_address	;wreg free
  8660                           
  8661                           ;RF24Network_cg.c: 1153: if(!(rn.networkFlags & 4)){
  8662  002ED0  EE20  F0FF         	lfsr	2,_rn+42
  8663  002ED4  A4DF               	btfss	indf2,2,c
  8664                           
  8665                           ;RF24Network_cg.c: 1154: RF24_stopListening();
  8666  002ED6  EC1E  F019         	call	_RF24_stopListening	;wreg free
  8667                           
  8668                           ;RF24Network_cg.c: 1155: }
  8669                           ;RF24Network_cg.c: 1157: if(multicast){ RF24_setAutoAck_p(0,0);}else{RF24_setAutoAck_p(0
      +                          ,1);}
  8670  002EDA  5033               	movf	RF24N_write_to_pipe@multicast,w,c
  8671  002EDC  B4D8               	btfsc	status,2,c
  8672  002EDE  D006               	goto	l3720
  8673  002EE0  0E00               	movlw	0
  8674  002EE2  6E11               	movwf	RF24_setAutoAck_p@enable,c
  8675  002EE4  0E00               	movlw	0
  8676  002EE6  EC0E  F01A         	call	_RF24_setAutoAck_p
  8677  002EEA  D005               	goto	l3722
  8678  002EEC                     l3720:
  8679  002EEC  0E01               	movlw	1
  8680  002EEE  6E11               	movwf	RF24_setAutoAck_p@enable,c
  8681  002EF0  0E00               	movlw	0
  8682  002EF2  EC0E  F01A         	call	_RF24_setAutoAck_p
  8683  002EF6                     l3722:
  8684                           
  8685                           ;RF24Network_cg.c: 1159: RF24_openWritingPipe_d(out_pipe);
  8686  002EF6  0E3A               	movlw	low RF24N_write_to_pipe@out_pipe
  8687  002EF8  6E11               	movwf	RF24_openWritingPipe_d@value_,c
  8688  002EFA  0E00               	movlw	high RF24N_write_to_pipe@out_pipe
  8689  002EFC  6E12               	movwf	RF24_openWritingPipe_d@value_+1,c
  8690  002EFE  ECAE  F018         	call	_RF24_openWritingPipe_d	;wreg free
  8691                           
  8692                           ;RF24Network_cg.c: 1161: ok = RF24_writeFast_m(rn.frame_buffer, rn.frame_size,0);
  8693  002F02  0EDC               	movlw	low (_rn+7)
  8694  002F04  6E2B               	movwf	RF24_writeFast_m@buf,c
  8695  002F06  0E00               	movlw	high (_rn+7)
  8696  002F08  6E2C               	movwf	RF24_writeFast_m@buf+1,c
  8697  002F0A  C107  F02D         	movff	_rn+50,RF24_writeFast_m@len
  8698  002F0E  0E00               	movlw	0
  8699  002F10  6E2E               	movwf	RF24_writeFast_m@multicast,c
  8700  002F12  EC3A  F01B         	call	_RF24_writeFast_m	;wreg free
  8701  002F16  6E3F               	movwf	RF24N_write_to_pipe@ok,c
  8702                           
  8703                           ;RF24Network_cg.c: 1163: if(!(rn.networkFlags & 4)){
  8704  002F18  EE20  F0FF         	lfsr	2,_rn+42
  8705  002F1C  B4DF               	btfsc	indf2,2,c
  8706  002F1E  D012               	goto	l3732
  8707                           
  8708                           ;RF24Network_cg.c: 1164: ok = RF24_txStandBy_t(rn.txTimeout,0);
  8709  002F20  C0D6  F013         	movff	_rn+1,RF24_txStandBy_t@timeout
  8710  002F24  C0D7  F014         	movff	_rn+2,RF24_txStandBy_t@timeout+1
  8711  002F28  C0D8  F015         	movff	_rn+3,RF24_txStandBy_t@timeout+2
  8712  002F2C  C0D9  F016         	movff	_rn+4,RF24_txStandBy_t@timeout+3
  8713  002F30  0E00               	movlw	0
  8714  002F32  6E17               	movwf	RF24_txStandBy_t@startTx,c
  8715  002F34  ECFC  F016         	call	_RF24_txStandBy_t	;wreg free
  8716  002F38  6E3F               	movwf	RF24N_write_to_pipe@ok,c
  8717                           
  8718                           ;RF24Network_cg.c: 1165: RF24_setAutoAck_p(0,0);
  8719  002F3A  0E00               	movlw	0
  8720  002F3C  6E11               	movwf	RF24_setAutoAck_p@enable,c
  8721  002F3E  0E00               	movlw	0
  8722  002F40  EC0E  F01A         	call	_RF24_setAutoAck_p
  8723  002F44                     l3732:
  8724                           
  8725                           ;RF24Network_cg.c: 1166: }
  8726                           ;RF24Network_cg.c: 1181: return ok;
  8727  002F44  503F               	movf	RF24N_write_to_pipe@ok,w,c
  8728  002F46  0012               	return	
  8729  002F48                     __end_of_RF24N_write_to_pipe:
  8730                           	opt stack 0
  8731                           tblptru	equ	0xFF8
  8732                           tblptrh	equ	0xFF7
  8733                           tblptrl	equ	0xFF6
  8734                           tablat	equ	0xFF5
  8735                           prodh	equ	0xFF4
  8736                           prodl	equ	0xFF3
  8737                           intcon	equ	0xFF2
  8738                           indf0	equ	0xFEF
  8739                           postinc0	equ	0xFEE
  8740                           postdec0	equ	0xFED
  8741                           fsr0h	equ	0xFEA
  8742                           fsr0l	equ	0xFE9
  8743                           wreg	equ	0xFE8
  8744                           postinc1	equ	0xFE6
  8745                           indf2	equ	0xFDF
  8746                           postinc2	equ	0xFDE
  8747                           postdec2	equ	0xFDD
  8748                           fsr2h	equ	0xFDA
  8749                           fsr2l	equ	0xFD9
  8750                           status	equ	0xFD8
  8751                           
  8752 ;; *************** function _SPI_transfer *****************
  8753 ;; Defined at:
  8754 ;;		line 250 in file "../../../RF24_c/utility/XC8/spi.c"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;  data            1    wreg     unsigned char 
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;  data            1    2[COMRAM] unsigned char 
  8759 ;; Return value:  Size  Location     Type
  8760 ;;                  1    wreg      unsigned char 
  8761 ;; Registers used:
  8762 ;;		wreg, status,2
  8763 ;; Tracked objects:
  8764 ;;		On entry : 0/0
  8765 ;;		On exit  : 0/0
  8766 ;;		Unchanged: 0/0
  8767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8771 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8772 ;;Total ram usage:        1 bytes
  8773 ;; Hardware stack levels used:    1
  8774 ;; Hardware stack levels required when called:    1
  8775 ;; This function calls:
  8776 ;;		Nothing
  8777 ;; This function is called by:
  8778 ;;		_RF24_read_register_d
  8779 ;;		_RF24_write_register_c_d
  8780 ;;		_RF24_write_register_d
  8781 ;;		_RF24_write_payload
  8782 ;;		_RF24_read_payload
  8783 ;;		_RF24_spiTrans
  8784 ;;		_RF24_getDynamicPayloadSize
  8785 ;;		_RF24_toggle_features_d
  8786 ;;		_RF24_read_register_m_d
  8787 ;;		_RF24_writeAckPayload
  8788 ;; This function uses a non-reentrant model
  8789 ;;
  8790                           
  8791                           	psect	text50
  8792  003B9C                     __ptext50:
  8793                           	opt stack 0
  8794  003B9C                     _SPI_transfer:
  8795                           	opt stack 26
  8796                           
  8797                           ;incstack = 0
  8798                           ;SPI_transfer@data stored from wreg
  8799  003B9C  6E03               	movwf	SPI_transfer@data,c
  8800                           
  8801                           ;spi.c: 252: SSPSTATbits.BF = 0;
  8802  003B9E  90C7               	bcf	4039,0,c	;volatile
  8803                           
  8804                           ;spi.c: 253: SSPBUF = data;
  8805  003BA0  C003  FFC9         	movff	SPI_transfer@data,4041	;volatile
  8806  003BA4                     l312:
  8807  003BA4  A0C7               	btfss	4039,0,c	;volatile
  8808  003BA6  D7FE               	goto	l312
  8809                           
  8810                           ;spi.c: 255: return SSPBUF;
  8811  003BA8  50C9               	movf	4041,w,c	;volatile
  8812  003BAA  0012               	return		;funcret
  8813  003BAC                     __end_of_SPI_transfer:
  8814                           	opt stack 0
  8815                           tblptru	equ	0xFF8
  8816                           tblptrh	equ	0xFF7
  8817                           tblptrl	equ	0xFF6
  8818                           tablat	equ	0xFF5
  8819                           prodh	equ	0xFF4
  8820                           prodl	equ	0xFF3
  8821                           intcon	equ	0xFF2
  8822                           indf0	equ	0xFEF
  8823                           postinc0	equ	0xFEE
  8824                           postdec0	equ	0xFED
  8825                           fsr0h	equ	0xFEA
  8826                           fsr0l	equ	0xFE9
  8827                           wreg	equ	0xFE8
  8828                           postinc1	equ	0xFE6
  8829                           indf2	equ	0xFDF
  8830                           postinc2	equ	0xFDE
  8831                           postdec2	equ	0xFDD
  8832                           fsr2h	equ	0xFDA
  8833                           fsr2l	equ	0xFD9
  8834                           status	equ	0xFD8
  8835                           
  8836 ;; *************** function _RF24_endTransaction *****************
  8837 ;; Defined at:
  8838 ;;		line 84 in file "../../../RF24_c/RF24_cg.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;		None
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;		None
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  1    wreg      void 
  8845 ;; Registers used:
  8846 ;;		wreg, status,2, status,0, cstack
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8856 ;;Total ram usage:        0 bytes
  8857 ;; Hardware stack levels used:    1
  8858 ;; Hardware stack levels required when called:    3
  8859 ;; This function calls:
  8860 ;;		_RF24_csn_d
  8861 ;; This function is called by:
  8862 ;;		_RF24_read_register_d
  8863 ;;		_RF24_write_register_c_d
  8864 ;;		_RF24_write_register_d
  8865 ;;		_RF24_write_payload
  8866 ;;		_RF24_read_payload
  8867 ;;		_RF24_spiTrans
  8868 ;;		_RF24_getDynamicPayloadSize
  8869 ;;		_RF24_toggle_features_d
  8870 ;;		_RF24_read_register_m_d
  8871 ;;		_RF24_writeAckPayload
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           	psect	text51
  8876  003BD4                     __ptext51:
  8877                           	opt stack 0
  8878  003BD4                     _RF24_endTransaction:
  8879                           	opt stack 24
  8880                           
  8881                           ;RF24_cg.c: 85: RF24_csn_d(1);
  8882                           
  8883                           ;incstack = 0
  8884  003BD4  0E01               	movlw	1
  8885  003BD6  ECA3  F01D         	call	_RF24_csn_d
  8886  003BDA  0012               	return		;funcret
  8887  003BDC                     __end_of_RF24_endTransaction:
  8888                           	opt stack 0
  8889                           tblptru	equ	0xFF8
  8890                           tblptrh	equ	0xFF7
  8891                           tblptrl	equ	0xFF6
  8892                           tablat	equ	0xFF5
  8893                           prodh	equ	0xFF4
  8894                           prodl	equ	0xFF3
  8895                           intcon	equ	0xFF2
  8896                           indf0	equ	0xFEF
  8897                           postinc0	equ	0xFEE
  8898                           postdec0	equ	0xFED
  8899                           fsr0h	equ	0xFEA
  8900                           fsr0l	equ	0xFE9
  8901                           wreg	equ	0xFE8
  8902                           postinc1	equ	0xFE6
  8903                           indf2	equ	0xFDF
  8904                           postinc2	equ	0xFDE
  8905                           postdec2	equ	0xFDD
  8906                           fsr2h	equ	0xFDA
  8907                           fsr2l	equ	0xFD9
  8908                           status	equ	0xFD8
  8909                           
  8910 ;; *************** function _RF24_beginTransaction *****************
  8911 ;; Defined at:
  8912 ;;		line 75 in file "../../../RF24_c/RF24_cg.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;		None
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;		None
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  1    wreg      void 
  8919 ;; Registers used:
  8920 ;;		wreg, status,2, status,0, cstack
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8930 ;;Total ram usage:        0 bytes
  8931 ;; Hardware stack levels used:    1
  8932 ;; Hardware stack levels required when called:    3
  8933 ;; This function calls:
  8934 ;;		_RF24_csn_d
  8935 ;; This function is called by:
  8936 ;;		_RF24_read_register_d
  8937 ;;		_RF24_write_register_c_d
  8938 ;;		_RF24_write_register_d
  8939 ;;		_RF24_write_payload
  8940 ;;		_RF24_read_payload
  8941 ;;		_RF24_spiTrans
  8942 ;;		_RF24_getDynamicPayloadSize
  8943 ;;		_RF24_toggle_features_d
  8944 ;;		_RF24_read_register_m_d
  8945 ;;		_RF24_writeAckPayload
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           
  8949                           	psect	text52
  8950  003BDC                     __ptext52:
  8951                           	opt stack 0
  8952  003BDC                     _RF24_beginTransaction:
  8953                           	opt stack 24
  8954                           
  8955                           ;RF24_cg.c: 79: RF24_csn_d(0);
  8956                           
  8957                           ;incstack = 0
  8958  003BDC  0E00               	movlw	0
  8959  003BDE  ECA3  F01D         	call	_RF24_csn_d
  8960  003BE2  0012               	return		;funcret
  8961  003BE4                     __end_of_RF24_beginTransaction:
  8962                           	opt stack 0
  8963                           tblptru	equ	0xFF8
  8964                           tblptrh	equ	0xFF7
  8965                           tblptrl	equ	0xFF6
  8966                           tablat	equ	0xFF5
  8967                           prodh	equ	0xFF4
  8968                           prodl	equ	0xFF3
  8969                           intcon	equ	0xFF2
  8970                           indf0	equ	0xFEF
  8971                           postinc0	equ	0xFEE
  8972                           postdec0	equ	0xFED
  8973                           fsr0h	equ	0xFEA
  8974                           fsr0l	equ	0xFE9
  8975                           wreg	equ	0xFE8
  8976                           postinc1	equ	0xFE6
  8977                           indf2	equ	0xFDF
  8978                           postinc2	equ	0xFDE
  8979                           postdec2	equ	0xFDD
  8980                           fsr2h	equ	0xFDA
  8981                           fsr2l	equ	0xFD9
  8982                           status	equ	0xFD8
  8983                           
  8984 ;; *************** function _RF24_csn_d *****************
  8985 ;; Defined at:
  8986 ;;		line 22 in file "../../../RF24_c/RF24_cg.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  mode            1    wreg     unsigned char 
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;  mode            1   10[COMRAM] unsigned char 
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  1    wreg      void 
  8993 ;; Registers used:
  8994 ;;		wreg, status,2, status,0, cstack
  8995 ;; Tracked objects:
  8996 ;;		On entry : 0/0
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9001 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9004 ;;Total ram usage:        2 bytes
  9005 ;; Hardware stack levels used:    1
  9006 ;; Hardware stack levels required when called:    2
  9007 ;; This function calls:
  9008 ;;		_delayMicroseconds
  9009 ;;		_digitalWrite
  9010 ;; This function is called by:
  9011 ;;		_RF24_beginTransaction
  9012 ;;		_RF24_endTransaction
  9013 ;;		_RF24_begin
  9014 ;; This function uses a non-reentrant model
  9015 ;;
  9016                           
  9017                           	psect	text53
  9018  003B46                     __ptext53:
  9019                           	opt stack 0
  9020  003B46                     _RF24_csn_d:
  9021                           	opt stack 24
  9022                           
  9023                           ;incstack = 0
  9024                           ;RF24_csn_d@mode stored from wreg
  9025  003B46  6E0B               	movwf	RF24_csn_d@mode,c
  9026                           
  9027                           ;RF24_cg.c: 59: digitalWrite(rf.csn_pin,mode);
  9028  003B48  C00B  F003         	movff	RF24_csn_d@mode,digitalWrite@mode
  9029  003B4C  0100               	movlb	0	; () banked
  9030  003B4E  518D               	movf	(_rf+1)& (0+255),w,b
  9031  003B50  ECD8  F011         	call	_digitalWrite
  9032                           
  9033                           ;RF24_cg.c: 60: delayMicroseconds(rf.csDelay);
  9034  003B54  0100               	movlb	0	; () banked
  9035  003B56  519D               	movf	(_rf+17)& (0+255),w,b
  9036  003B58  EC7A  F01B         	call	_delayMicroseconds
  9037  003B5C  0012               	return		;funcret
  9038  003B5E                     __end_of_RF24_csn_d:
  9039                           	opt stack 0
  9040                           tblptru	equ	0xFF8
  9041                           tblptrh	equ	0xFF7
  9042                           tblptrl	equ	0xFF6
  9043                           tablat	equ	0xFF5
  9044                           prodh	equ	0xFF4
  9045                           prodl	equ	0xFF3
  9046                           intcon	equ	0xFF2
  9047                           indf0	equ	0xFEF
  9048                           postinc0	equ	0xFEE
  9049                           postdec0	equ	0xFED
  9050                           fsr0h	equ	0xFEA
  9051                           fsr0l	equ	0xFE9
  9052                           wreg	equ	0xFE8
  9053                           postinc1	equ	0xFE6
  9054                           indf2	equ	0xFDF
  9055                           postinc2	equ	0xFDE
  9056                           postdec2	equ	0xFDD
  9057                           fsr2h	equ	0xFDA
  9058                           fsr2l	equ	0xFD9
  9059                           status	equ	0xFD8
  9060                           
  9061 ;; *************** function _RF24_write_register_c_d *****************
  9062 ;; Defined at:
  9063 ;;		line 162 in file "../../../RF24_c/RF24_cg.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;  reg             1    wreg     unsigned char 
  9066 ;;  buf             2   11[COMRAM] PTR const unsigned char 
  9067 ;;		 -> RF24_openReadingPipe_d@address(5), RF24_openWritingPipe_d@value(5), rf.pipe0_reading_address(5), rf(22), 
  9068 ;;  len             1   13[COMRAM] unsigned char 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;  reg             1   15[COMRAM] unsigned char 
  9071 ;;  status          1   14[COMRAM] unsigned char 
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      unsigned char 
  9074 ;; Registers used:
  9075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9081 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9082 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9084 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9085 ;;Total ram usage:        5 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; Hardware stack levels required when called:    4
  9088 ;; This function calls:
  9089 ;;		_RF24_beginTransaction
  9090 ;;		_RF24_endTransaction
  9091 ;;		_SPI_transfer
  9092 ;; This function is called by:
  9093 ;;		_RF24_startListening
  9094 ;;		_RF24_openWritingPipe_d
  9095 ;;		_RF24_openReadingPipe_d
  9096 ;;		_RF24_openWritingPipe
  9097 ;;		_RF24_openReadingPipe
  9098 ;; This function uses a non-reentrant model
  9099 ;;
  9100                           
  9101                           	psect	text54
  9102  00388A                     __ptext54:
  9103                           	opt stack 0
  9104  00388A                     _RF24_write_register_c_d:
  9105                           	opt stack 23
  9106                           
  9107                           ;incstack = 0
  9108                           ;RF24_write_register_c_d@reg stored from wreg
  9109  00388A  6E10               	movwf	RF24_write_register_c_d@reg,c
  9110                           
  9111                           ;RF24_cg.c: 164: uint8_t status;
  9112                           ;RF24_cg.c: 181: RF24_beginTransaction();
  9113  00388C  ECEE  F01D         	call	_RF24_beginTransaction	;wreg free
  9114                           
  9115                           ;RF24_cg.c: 182: status = SPI_transfer( 0x20 | ( 0x1F & reg ) );
  9116  003890  5010               	movf	RF24_write_register_c_d@reg,w,c
  9117  003892  0B1F               	andlw	31
  9118  003894  0920               	iorlw	32
  9119  003896  ECCE  F01D         	call	_SPI_transfer
  9120  00389A  6E0F               	movwf	RF24_write_register_c_d@status,c
  9121                           
  9122                           ;RF24_cg.c: 183: while ( len-- )
  9123  00389C  D009               	goto	l3504
  9124  00389E                     l3500:
  9125                           
  9126                           ;RF24_cg.c: 184: SPI_transfer(*buf++);
  9127  00389E  C00C  FFD9         	movff	RF24_write_register_c_d@buf,fsr2l
  9128  0038A2  C00D  FFDA         	movff	RF24_write_register_c_d@buf+1,fsr2h
  9129  0038A6  50DF               	movf	indf2,w,c
  9130  0038A8  ECCE  F01D         	call	_SPI_transfer
  9131  0038AC  4A0C               	infsnz	RF24_write_register_c_d@buf,f,c
  9132  0038AE  2A0D               	incf	RF24_write_register_c_d@buf+1,f,c
  9133  0038B0                     l3504:
  9134  0038B0  060E               	decf	RF24_write_register_c_d@len,f,c
  9135  0038B2  280E               	incf	RF24_write_register_c_d@len,w,c
  9136  0038B4  A4D8               	btfss	status,2,c
  9137  0038B6  D7F3               	goto	l3500
  9138                           
  9139                           ;RF24_cg.c: 185: RF24_endTransaction();
  9140  0038B8  ECEA  F01D         	call	_RF24_endTransaction	;wreg free
  9141  0038BC  0012               	return	
  9142  0038BE                     __end_of_RF24_write_register_c_d:
  9143                           	opt stack 0
  9144                           tblptru	equ	0xFF8
  9145                           tblptrh	equ	0xFF7
  9146                           tblptrl	equ	0xFF6
  9147                           tablat	equ	0xFF5
  9148                           prodh	equ	0xFF4
  9149                           prodl	equ	0xFF3
  9150                           intcon	equ	0xFF2
  9151                           indf0	equ	0xFEF
  9152                           postinc0	equ	0xFEE
  9153                           postdec0	equ	0xFED
  9154                           fsr0h	equ	0xFEA
  9155                           fsr0l	equ	0xFE9
  9156                           wreg	equ	0xFE8
  9157                           postinc1	equ	0xFE6
  9158                           indf2	equ	0xFDF
  9159                           postinc2	equ	0xFDE
  9160                           postdec2	equ	0xFDD
  9161                           fsr2h	equ	0xFDA
  9162                           fsr2l	equ	0xFD9
  9163                           status	equ	0xFD8
  9164                           
  9165 ;; *************** function _RF24N_pipe_address *****************
  9166 ;; Defined at:
  9167 ;;		line 1359 in file "../../RF24Network_cg.c"
  9168 ;; Parameters:    Size  Location     Type
  9169 ;;  node            2    2[COMRAM] unsigned int 
  9170 ;;  pipe            1    4[COMRAM] unsigned char 
  9171 ;;  address         2    5[COMRAM] PTR unsigned char 
  9172 ;;		 -> RF24N_multicastLevel@addr(5), RF24N_write_to_pipe@out_pipe(5), RF24N_begin_d@addr(5), 
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;  result          5   22[COMRAM] unsigned char [5]
  9175 ;;  out             2   30[COMRAM] PTR unsigned char 
  9176 ;;		 -> RF24N_pipe_address@result(5), 
  9177 ;;  dec             2   27[COMRAM] unsigned int 
  9178 ;;  i               1   32[COMRAM] unsigned char 
  9179 ;;  count           1   29[COMRAM] unsigned char 
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  1    wreg      void 
  9182 ;; Registers used:
  9183 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9189 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9192 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;Total ram usage:       31 bytes
  9194 ;; Hardware stack levels used:    1
  9195 ;; Hardware stack levels required when called:    1
  9196 ;; This function calls:
  9197 ;;		Nothing
  9198 ;; This function is called by:
  9199 ;;		_RF24N_begin_d
  9200 ;;		_RF24N_write_to_pipe
  9201 ;;		_RF24N_multicastLevel
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           	psect	text55
  9206  00277E                     __ptext55:
  9207                           	opt stack 0
  9208  00277E                     _RF24N_pipe_address:
  9209                           	opt stack 27
  9210                           
  9211                           ;RF24Network_cg.c: 1362: static uint8_t address_translation[] = { 0xc3,0x3c,0x33,0xce,0x
      +                          3e,0xe3,0xec };
  9212                           ;RF24Network_cg.c: 1363: raddr_t result[5] = {0xCC,0xCC,0xCC,0xCC,0xCC};
  9213                           
  9214                           ;incstack = 0
  9215  00277E  EE20  F0D0         	lfsr	2,RF24N_pipe_address@F3842
  9216  002782  EE00  F017         	lfsr	0,RF24N_pipe_address@result
  9217  002786  0E04               	movlw	4
  9218  002788                     u3731:
  9219  002788  CFDB FFEB          	movff	plusw2,plusw0
  9220  00278C  06E8               	decf	wreg,f,c
  9221  00278E  E2FC               	bc	u3731
  9222                           
  9223                           ;RF24Network_cg.c: 1364: uint8_t* out = (uint8_t*)(result);
  9224  002790  0E17               	movlw	low RF24N_pipe_address@result
  9225  002792  6E1F               	movwf	RF24N_pipe_address@out,c
  9226  002794  0E00               	movlw	high RF24N_pipe_address@result
  9227  002796  6E20               	movwf	RF24N_pipe_address@out+1,c
  9228                           
  9229                           ;RF24Network_cg.c: 1366: uint8_t i;
  9230                           ;RF24Network_cg.c: 1369: uint8_t count = 1; uint16_t dec = node;
  9231  002798  0E01               	movlw	1
  9232  00279A  6E1E               	movwf	RF24N_pipe_address@count,c
  9233  00279C  C003  F01C         	movff	RF24N_pipe_address@node,RF24N_pipe_address@dec
  9234  0027A0  C004  F01D         	movff	RF24N_pipe_address@node+1,RF24N_pipe_address@dec+1
  9235                           
  9236                           ;RF24Network_cg.c: 1371: while(dec){
  9237  0027A4  D027               	goto	l3630
  9238  0027A6                     l3620:
  9239                           
  9240                           ;RF24Network_cg.c: 1373: if(pipe != 0 || !node)
  9241  0027A6  5005               	movf	RF24N_pipe_address@pipe,w,c
  9242  0027A8  A4D8               	btfss	status,2,c
  9243  0027AA  D004               	goto	l3624
  9244  0027AC  5003               	movf	RF24N_pipe_address@node,w,c
  9245  0027AE  1004               	iorwf	RF24N_pipe_address@node+1,w,c
  9246  0027B0  A4D8               	btfss	status,2,c
  9247  0027B2  D016               	goto	l3626
  9248  0027B4                     l3624:
  9249                           
  9250                           ;RF24Network_cg.c: 1375: out[count]=address_translation[(dec % 8)];
  9251  0027B4  0E07               	movlw	7
  9252  0027B6  141C               	andwf	RF24N_pipe_address@dec,w,c
  9253  0027B8  6E08               	movwf	??_RF24N_pipe_address& (0+255),c
  9254  0027BA  0E00               	movlw	0
  9255  0027BC  141D               	andwf	RF24N_pipe_address@dec+1,w,c
  9256  0027BE  6E09               	movwf	(??_RF24N_pipe_address+1)& (0+255),c
  9257  0027C0  0EC9               	movlw	low RF24N_pipe_address@address_translation
  9258  0027C2  2408               	addwf	??_RF24N_pipe_address,w,c
  9259  0027C4  6ED9               	movwf	fsr2l,c
  9260  0027C6  0E00               	movlw	high RF24N_pipe_address@address_translation
  9261  0027C8  2009               	addwfc	??_RF24N_pipe_address+1,w,c
  9262  0027CA  6EDA               	movwf	fsr2h,c
  9263  0027CC  501E               	movf	RF24N_pipe_address@count,w,c
  9264  0027CE  0D01               	mullw	1
  9265  0027D0  50F3               	movf	prodl,w,c
  9266  0027D2  241F               	addwf	RF24N_pipe_address@out,w,c
  9267  0027D4  6EE9               	movwf	fsr0l,c
  9268  0027D6  50F4               	movf	prodh,w,c
  9269  0027D8  2020               	addwfc	RF24N_pipe_address@out+1,w,c
  9270  0027DA  6EEA               	movwf	fsr0h,c
  9271  0027DC  CFDF FFEF          	movff	indf2,indf0
  9272  0027E0                     l3626:
  9273                           
  9274                           ;RF24Network_cg.c: 1377: dec /= 8;
  9275  0027E0  90D8               	bcf	status,0,c
  9276  0027E2  321D               	rrcf	RF24N_pipe_address@dec+1,f,c
  9277  0027E4  321C               	rrcf	RF24N_pipe_address@dec,f,c
  9278  0027E6  90D8               	bcf	status,0,c
  9279  0027E8  321D               	rrcf	RF24N_pipe_address@dec+1,f,c
  9280  0027EA  321C               	rrcf	RF24N_pipe_address@dec,f,c
  9281  0027EC  90D8               	bcf	status,0,c
  9282  0027EE  321D               	rrcf	RF24N_pipe_address@dec+1,f,c
  9283  0027F0  321C               	rrcf	RF24N_pipe_address@dec,f,c
  9284                           
  9285                           ;RF24Network_cg.c: 1378: count++;
  9286  0027F2  2A1E               	incf	RF24N_pipe_address@count,f,c
  9287  0027F4                     l3630:
  9288  0027F4  501C               	movf	RF24N_pipe_address@dec,w,c
  9289  0027F6  101D               	iorwf	RF24N_pipe_address@dec+1,w,c
  9290  0027F8  A4D8               	btfss	status,2,c
  9291  0027FA  D7D5               	goto	l3620
  9292                           
  9293                           ;RF24Network_cg.c: 1379: }
  9294                           ;RF24Network_cg.c: 1382: if(pipe != 0 || !node)
  9295  0027FC  5005               	movf	RF24N_pipe_address@pipe,w,c
  9296  0027FE  A4D8               	btfss	status,2,c
  9297  002800  D004               	goto	l3636
  9298  002802  5003               	movf	RF24N_pipe_address@node,w,c
  9299  002804  1004               	iorwf	RF24N_pipe_address@node+1,w,c
  9300  002806  A4D8               	btfss	status,2,c
  9301  002808  D00D               	goto	l3638
  9302  00280A                     l3636:
  9303                           
  9304                           ;RF24Network_cg.c: 1384: out[0] = address_translation[pipe];
  9305  00280A  5005               	movf	RF24N_pipe_address@pipe,w,c
  9306  00280C  0D01               	mullw	1
  9307  00280E  0EC9               	movlw	low RF24N_pipe_address@address_translation
  9308  002810  24F3               	addwf	prodl,w,c
  9309  002812  6ED9               	movwf	fsr2l,c
  9310  002814  0E00               	movlw	high RF24N_pipe_address@address_translation
  9311  002816  20F4               	addwfc	prodh,w,c
  9312  002818  6EDA               	movwf	fsr2h,c
  9313  00281A  C01F  FFE9         	movff	RF24N_pipe_address@out,fsr0l
  9314  00281E  C020  FFEA         	movff	RF24N_pipe_address@out+1,fsr0h
  9315  002822  D017               	goto	L8
  9316  002824                     l3638:
  9317                           
  9318                           ;RF24Network_cg.c: 1386: else
  9319                           ;RF24Network_cg.c: 1387: out[1] = address_translation[count-1];
  9320  002824  0EFF               	movlw	255
  9321  002826  6E08               	movwf	??_RF24N_pipe_address& (0+255),c
  9322  002828  0EFF               	movlw	255
  9323  00282A  6E09               	movwf	(??_RF24N_pipe_address+1)& (0+255),c
  9324  00282C  501E               	movf	RF24N_pipe_address@count,w,c
  9325  00282E  6E0A               	movwf	(??_RF24N_pipe_address+2)& (0+255),c
  9326  002830  6A0B               	clrf	(??_RF24N_pipe_address+3)& (0+255),c
  9327  002832  5008               	movf	??_RF24N_pipe_address,w,c
  9328  002834  260A               	addwf	??_RF24N_pipe_address+2,f,c
  9329  002836  5009               	movf	??_RF24N_pipe_address+1,w,c
  9330  002838  220B               	addwfc	??_RF24N_pipe_address+3,f,c
  9331  00283A  0EC9               	movlw	low RF24N_pipe_address@address_translation
  9332  00283C  240A               	addwf	??_RF24N_pipe_address+2,w,c
  9333  00283E  6ED9               	movwf	fsr2l,c
  9334  002840  0E00               	movlw	high RF24N_pipe_address@address_translation
  9335  002842  200B               	addwfc	??_RF24N_pipe_address+3,w,c
  9336  002844  6EDA               	movwf	fsr2h,c
  9337  002846  EE00 F001          	lfsr	0,1
  9338  00284A  501F               	movf	RF24N_pipe_address@out,w,c
  9339  00284C  26E9               	addwf	fsr0l,f,c
  9340  00284E  5020               	movf	RF24N_pipe_address@out+1,w,c
  9341  002850  22EA               	addwfc	fsr0h,f,c
  9342  002852                     L8:
  9343  002852  CFDF FFEF          	movff	indf2,indf0
  9344                           
  9345                           ;RF24Network_cg.c: 1395: ;
  9346                           ;RF24Network_cg.c: 1399: for(i=0;i<5;i++)
  9347  002856  0E00               	movlw	0
  9348  002858  6E21               	movwf	RF24N_pipe_address@i,c
  9349  00285A                     l3642:
  9350  00285A  0E04               	movlw	4
  9351  00285C  6421               	cpfsgt	RF24N_pipe_address@i,c
  9352  00285E  D001               	goto	l3646
  9353  002860  0012               	return	
  9354  002862                     l3646:
  9355                           
  9356                           ;RF24Network_cg.c: 1400: {
  9357                           ;RF24Network_cg.c: 1401: address[i]=result[4-i];
  9358  002862  5021               	movf	RF24N_pipe_address@i,w,c
  9359  002864  6E08               	movwf	??_RF24N_pipe_address& (0+255),c
  9360  002866  6A09               	clrf	(??_RF24N_pipe_address+1)& (0+255),c
  9361  002868  1E08               	comf	??_RF24N_pipe_address,f,c
  9362  00286A  1E09               	comf	??_RF24N_pipe_address+1,f,c
  9363  00286C  4A08               	infsnz	??_RF24N_pipe_address,f,c
  9364  00286E  2A09               	incf	??_RF24N_pipe_address+1,f,c
  9365  002870  0E04               	movlw	4
  9366  002872  2608               	addwf	??_RF24N_pipe_address,f,c
  9367  002874  0E00               	movlw	0
  9368  002876  2209               	addwfc	??_RF24N_pipe_address+1,f,c
  9369  002878  0E17               	movlw	low RF24N_pipe_address@result
  9370  00287A  2408               	addwf	??_RF24N_pipe_address,w,c
  9371  00287C  6ED9               	movwf	fsr2l,c
  9372  00287E  0E00               	movlw	high RF24N_pipe_address@result
  9373  002880  2009               	addwfc	??_RF24N_pipe_address+1,w,c
  9374  002882  6EDA               	movwf	fsr2h,c
  9375  002884  5021               	movf	RF24N_pipe_address@i,w,c
  9376  002886  0D01               	mullw	1
  9377  002888  50F3               	movf	prodl,w,c
  9378  00288A  2406               	addwf	RF24N_pipe_address@address,w,c
  9379  00288C  6EE9               	movwf	fsr0l,c
  9380  00288E  50F4               	movf	prodh,w,c
  9381  002890  2007               	addwfc	RF24N_pipe_address@address+1,w,c
  9382  002892  6EEA               	movwf	fsr0h,c
  9383  002894  CFDF FFEF          	movff	indf2,indf0
  9384  002898  2A21               	incf	RF24N_pipe_address@i,f,c
  9385  00289A  D7DF               	goto	l3642
  9386  00289C                     __end_of_RF24N_pipe_address:
  9387                           	opt stack 0
  9388                           tblptru	equ	0xFF8
  9389                           tblptrh	equ	0xFF7
  9390                           tblptrl	equ	0xFF6
  9391                           tablat	equ	0xFF5
  9392                           prodh	equ	0xFF4
  9393                           prodl	equ	0xFF3
  9394                           intcon	equ	0xFF2
  9395                           indf0	equ	0xFEF
  9396                           postinc0	equ	0xFEE
  9397                           postdec0	equ	0xFED
  9398                           plusw0	equ	0xFEB
  9399                           fsr0h	equ	0xFEA
  9400                           fsr0l	equ	0xFE9
  9401                           wreg	equ	0xFE8
  9402                           postinc1	equ	0xFE6
  9403                           indf2	equ	0xFDF
  9404                           postinc2	equ	0xFDE
  9405                           postdec2	equ	0xFDD
  9406                           plusw2	equ	0xFDB
  9407                           fsr2h	equ	0xFDA
  9408                           fsr2l	equ	0xFD9
  9409                           status	equ	0xFD8
  9410                           
  9411 ;; *************** function _delayMicroseconds *****************
  9412 ;; Defined at:
  9413 ;;		line 210 in file "../../../RF24_c/utility/XC8/spi.c"
  9414 ;; Parameters:    Size  Location     Type
  9415 ;;  d               1    wreg     unsigned char 
  9416 ;; Auto vars:     Size  Location     Type
  9417 ;;  d               1    4[COMRAM] unsigned char 
  9418 ;;  j               2    7[COMRAM] unsigned int 
  9419 ;;  i               2    5[COMRAM] unsigned int 
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  1    wreg      void 
  9422 ;; Registers used:
  9423 ;;		wreg, status,2, status,0
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9430 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9431 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9432 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9433 ;;Total ram usage:        7 bytes
  9434 ;; Hardware stack levels used:    1
  9435 ;; Hardware stack levels required when called:    1
  9436 ;; This function calls:
  9437 ;;		Nothing
  9438 ;; This function is called by:
  9439 ;;		_RF24_csn_d
  9440 ;;		_RF24_stopListening
  9441 ;;		_RF24N_write_
  9442 ;;		_RF24_startWrite
  9443 ;; This function uses a non-reentrant model
  9444 ;;
  9445                           
  9446                           	psect	text56
  9447  0036F4                     __ptext56:
  9448                           	opt stack 0
  9449  0036F4                     _delayMicroseconds:
  9450                           	opt stack 24
  9451                           
  9452                           ;incstack = 0
  9453                           ;delayMicroseconds@d stored from wreg
  9454  0036F4  6E05               	movwf	delayMicroseconds@d,c
  9455                           
  9456                           ;spi.c: 212: unsigned int i,j;
  9457                           ;spi.c: 213: for(i=0;i<d;i++)
  9458  0036F6  0E00               	movlw	0
  9459  0036F8  6E07               	movwf	delayMicroseconds@i+1,c
  9460  0036FA  0E00               	movlw	0
  9461  0036FC  6E06               	movwf	delayMicroseconds@i,c
  9462  0036FE  D010               	goto	l3400
  9463  003700                     l3388:
  9464                           
  9465                           ;spi.c: 214: for (j =0 ; j < (32000000/(4000000l)); j++)
  9466  003700  0E00               	movlw	0
  9467  003702  6E09               	movwf	delayMicroseconds@j+1,c
  9468  003704  0E00               	movlw	0
  9469  003706  6E08               	movwf	delayMicroseconds@j,c
  9470  003708                     l3390:
  9471  003708  5009               	movf	delayMicroseconds@j+1,w,c
  9472  00370A  E108               	bnz	l3398
  9473  00370C  0E08               	movlw	8
  9474  00370E  5C08               	subwf	delayMicroseconds@j,w,c
  9475  003710  B0D8               	btfsc	status,0,c
  9476  003712  D004               	goto	l3398
  9477  003714  F000               	nop		;# 
  9478  003716  4A08               	infsnz	delayMicroseconds@j,f,c
  9479  003718  2A09               	incf	delayMicroseconds@j+1,f,c
  9480  00371A  D7F6               	goto	l3390
  9481  00371C                     l3398:
  9482  00371C  4A06               	infsnz	delayMicroseconds@i,f,c
  9483  00371E  2A07               	incf	delayMicroseconds@i+1,f,c
  9484  003720                     l3400:
  9485  003720  5005               	movf	delayMicroseconds@d,w,c
  9486  003722  6E03               	movwf	??_delayMicroseconds& (0+255),c
  9487  003724  6A04               	clrf	(??_delayMicroseconds+1)& (0+255),c
  9488  003726  5003               	movf	??_delayMicroseconds,w,c
  9489  003728  5C06               	subwf	delayMicroseconds@i,w,c
  9490  00372A  5004               	movf	??_delayMicroseconds+1,w,c
  9491  00372C  5807               	subwfb	delayMicroseconds@i+1,w,c
  9492  00372E  B0D8               	btfsc	status,0,c
  9493  003730  0012               	return	
  9494  003732  D7E6               	goto	l3388
  9495  003734                     __end_of_delayMicroseconds:
  9496                           	opt stack 0
  9497                           tblptru	equ	0xFF8
  9498                           tblptrh	equ	0xFF7
  9499                           tblptrl	equ	0xFF6
  9500                           tablat	equ	0xFF5
  9501                           prodh	equ	0xFF4
  9502                           prodl	equ	0xFF3
  9503                           intcon	equ	0xFF2
  9504                           indf0	equ	0xFEF
  9505                           postinc0	equ	0xFEE
  9506                           postdec0	equ	0xFED
  9507                           plusw0	equ	0xFEB
  9508                           fsr0h	equ	0xFEA
  9509                           fsr0l	equ	0xFE9
  9510                           wreg	equ	0xFE8
  9511                           postinc1	equ	0xFE6
  9512                           indf2	equ	0xFDF
  9513                           postinc2	equ	0xFDE
  9514                           postdec2	equ	0xFDD
  9515                           plusw2	equ	0xFDB
  9516                           fsr2h	equ	0xFDA
  9517                           fsr2l	equ	0xFD9
  9518                           status	equ	0xFD8
  9519                           
  9520 ;; *************** function _RF24_ce_d *****************
  9521 ;; Defined at:
  9522 ;;		line 67 in file "../../../RF24_c/RF24_cg.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;  level           1    wreg     unsigned char 
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;  level           1    6[COMRAM] unsigned char 
  9527 ;; Return value:  Size  Location     Type
  9528 ;;                  1    wreg      void 
  9529 ;; Registers used:
  9530 ;;		wreg, status,2, status,0, cstack
  9531 ;; Tracked objects:
  9532 ;;		On entry : 0/0
  9533 ;;		On exit  : 0/0
  9534 ;;		Unchanged: 0/0
  9535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9537 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9539 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9540 ;;Total ram usage:        2 bytes
  9541 ;; Hardware stack levels used:    1
  9542 ;; Hardware stack levels required when called:    2
  9543 ;; This function calls:
  9544 ;;		_digitalWrite
  9545 ;; This function is called by:
  9546 ;;		_RF24_begin
  9547 ;;		_RF24_startListening
  9548 ;;		_RF24_stopListening
  9549 ;;		_RF24_startFastWrite
  9550 ;;		_RF24_txStandBy_t
  9551 ;;		_RF24_powerDown
  9552 ;;		_RF24_write_m
  9553 ;;		_RF24_reUseTX
  9554 ;;		_RF24_startWrite
  9555 ;;		_RF24_txStandBy
  9556 ;; This function uses a non-reentrant model
  9557 ;;
  9558                           
  9559                           	psect	text57
  9560  003ADA                     __ptext57:
  9561                           	opt stack 0
  9562  003ADA                     _RF24_ce_d:
  9563                           	opt stack 26
  9564                           
  9565                           ;incstack = 0
  9566                           ;RF24_ce_d@level stored from wreg
  9567  003ADA  6E07               	movwf	RF24_ce_d@level,c
  9568                           
  9569                           ;RF24_cg.c: 70: if (rf.ce_pin != rf.csn_pin) digitalWrite(rf.ce_pin,level);
  9570  003ADC  0100               	movlb	0	; () banked
  9571  003ADE  518C               	movf	_rf& (0+255),w,b
  9572  003AE0  0100               	movlb	0	; () banked
  9573  003AE2  198D               	xorwf	(_rf+1)& (0+255),w,b
  9574  003AE4  B4D8               	btfsc	status,2,c
  9575  003AE6  0012               	return	
  9576                           
  9577                           ; BSR set to: 0
  9578  003AE8  C007  F003         	movff	RF24_ce_d@level,digitalWrite@mode
  9579  003AEC  0100               	movlb	0	; () banked
  9580  003AEE  518C               	movf	_rf& (0+255),w,b
  9581  003AF0  ECD8  F011         	call	_digitalWrite
  9582  003AF4  0012               	return	
  9583  003AF6                     __end_of_RF24_ce_d:
  9584                           	opt stack 0
  9585                           tblptru	equ	0xFF8
  9586                           tblptrh	equ	0xFF7
  9587                           tblptrl	equ	0xFF6
  9588                           tablat	equ	0xFF5
  9589                           prodh	equ	0xFF4
  9590                           prodl	equ	0xFF3
  9591                           intcon	equ	0xFF2
  9592                           indf0	equ	0xFEF
  9593                           postinc0	equ	0xFEE
  9594                           postdec0	equ	0xFED
  9595                           plusw0	equ	0xFEB
  9596                           fsr0h	equ	0xFEA
  9597                           fsr0l	equ	0xFE9
  9598                           wreg	equ	0xFE8
  9599                           postinc1	equ	0xFE6
  9600                           indf2	equ	0xFDF
  9601                           postinc2	equ	0xFDE
  9602                           postdec2	equ	0xFDD
  9603                           plusw2	equ	0xFDB
  9604                           fsr2h	equ	0xFDA
  9605                           fsr2l	equ	0xFD9
  9606                           status	equ	0xFD8
  9607                           
  9608 ;; *************** function _RF24_flush_tx *****************
  9609 ;; Defined at:
  9610 ;;		line 348 in file "../../../RF24_c/RF24_cg.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;		None
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;		None
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  1    wreg      unsigned char 
  9617 ;; Registers used:
  9618 ;;		wreg, status,2, status,0, cstack
  9619 ;; Tracked objects:
  9620 ;;		On entry : 0/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9628 ;;Total ram usage:        0 bytes
  9629 ;; Hardware stack levels used:    1
  9630 ;; Hardware stack levels required when called:    5
  9631 ;; This function calls:
  9632 ;;		_RF24_spiTrans
  9633 ;; This function is called by:
  9634 ;;		_RF24_begin
  9635 ;;		_RF24_startListening
  9636 ;;		_RF24_stopListening
  9637 ;;		_RF24_txStandBy_t
  9638 ;;		_RF24_write_m
  9639 ;;		_RF24_txStandBy
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           	psect	text58
  9644  003BE4                     __ptext58:
  9645                           	opt stack 0
  9646  003BE4                     _RF24_flush_tx:
  9647                           	opt stack 23
  9648                           
  9649                           ;RF24_cg.c: 350: return RF24_spiTrans( 0xE1 );
  9650                           ;	Return value of _RF24_flush_tx is never used
  9651                           
  9652                           ;incstack = 0
  9653  003BE4  0EE1               	movlw	225
  9654  003BE6  ECBA  F01D         	call	_RF24_spiTrans
  9655  003BEA  0012               	return	
  9656  003BEC                     __end_of_RF24_flush_tx:
  9657                           	opt stack 0
  9658                           tblptru	equ	0xFF8
  9659                           tblptrh	equ	0xFF7
  9660                           tblptrl	equ	0xFF6
  9661                           tablat	equ	0xFF5
  9662                           prodh	equ	0xFF4
  9663                           prodl	equ	0xFF3
  9664                           intcon	equ	0xFF2
  9665                           indf0	equ	0xFEF
  9666                           postinc0	equ	0xFEE
  9667                           postdec0	equ	0xFED
  9668                           plusw0	equ	0xFEB
  9669                           fsr0h	equ	0xFEA
  9670                           fsr0l	equ	0xFE9
  9671                           wreg	equ	0xFE8
  9672                           postinc1	equ	0xFE6
  9673                           indf2	equ	0xFDF
  9674                           postinc2	equ	0xFDE
  9675                           postdec2	equ	0xFDD
  9676                           plusw2	equ	0xFDB
  9677                           fsr2h	equ	0xFDA
  9678                           fsr2l	equ	0xFD9
  9679                           status	equ	0xFD8
  9680                           
  9681 ;; *************** function _RF24_powerUp *****************
  9682 ;; Defined at:
  9683 ;;		line 791 in file "../../../RF24_c/RF24_cg.c"
  9684 ;; Parameters:    Size  Location     Type
  9685 ;;		None
  9686 ;; Auto vars:     Size  Location     Type
  9687 ;;  cfg             1   17[COMRAM] unsigned char 
  9688 ;; Return value:  Size  Location     Type
  9689 ;;                  1    wreg      void 
  9690 ;; Registers used:
  9691 ;;		wreg, status,2, status,0, cstack
  9692 ;; Tracked objects:
  9693 ;;		On entry : 0/0
  9694 ;;		On exit  : 0/0
  9695 ;;		Unchanged: 0/0
  9696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9698 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9700 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9701 ;;Total ram usage:        2 bytes
  9702 ;; Hardware stack levels used:    1
  9703 ;; Hardware stack levels required when called:    5
  9704 ;; This function calls:
  9705 ;;		_RF24_read_register_d
  9706 ;;		_RF24_write_register_d
  9707 ;;		_delay
  9708 ;; This function is called by:
  9709 ;;		_RF24_begin
  9710 ;;		_RF24_startListening
  9711 ;; This function uses a non-reentrant model
  9712 ;;
  9713                           
  9714                           	psect	text59
  9715  003A16                     __ptext59:
  9716                           	opt stack 0
  9717  003A16                     _RF24_powerUp:
  9718                           	opt stack 23
  9719                           
  9720                           ;RF24_cg.c: 793: uint8_t cfg = RF24_read_register_d(0x00);
  9721                           
  9722                           ;incstack = 0
  9723  003A16  0E00               	movlw	0
  9724  003A18  EC50  F01D         	call	_RF24_read_register_d
  9725  003A1C  6E12               	movwf	RF24_powerUp@cfg,c
  9726                           
  9727                           ;RF24_cg.c: 796: if (!(cfg & (1<<(1)))){
  9728  003A1E  B212               	btfsc	RF24_powerUp@cfg,1,c
  9729  003A20  0012               	return	
  9730                           
  9731                           ;RF24_cg.c: 797: RF24_write_register_d(0x00, cfg | (1<<(1)));
  9732  003A22  5012               	movf	RF24_powerUp@cfg,w,c
  9733  003A24  0902               	iorlw	2
  9734  003A26  6E0E               	movwf	RF24_write_register_d@value,c
  9735  003A28  0E00               	movlw	0
  9736  003A2A  EC40  F01D         	call	_RF24_write_register_d
  9737                           
  9738                           ;RF24_cg.c: 802: delay(5);
  9739  003A2E  0E00               	movlw	0
  9740  003A30  6E04               	movwf	delay@val+1,c
  9741  003A32  0E05               	movlw	5
  9742  003A34  6E03               	movwf	delay@val,c
  9743  003A36  ECD4  F01A         	call	_delay	;wreg free
  9744  003A3A  0012               	return	
  9745  003A3C                     __end_of_RF24_powerUp:
  9746                           	opt stack 0
  9747                           tblptru	equ	0xFF8
  9748                           tblptrh	equ	0xFF7
  9749                           tblptrl	equ	0xFF6
  9750                           tablat	equ	0xFF5
  9751                           prodh	equ	0xFF4
  9752                           prodl	equ	0xFF3
  9753                           intcon	equ	0xFF2
  9754                           indf0	equ	0xFEF
  9755                           postinc0	equ	0xFEE
  9756                           postdec0	equ	0xFED
  9757                           plusw0	equ	0xFEB
  9758                           fsr0h	equ	0xFEA
  9759                           fsr0l	equ	0xFE9
  9760                           wreg	equ	0xFE8
  9761                           postinc1	equ	0xFE6
  9762                           indf2	equ	0xFDF
  9763                           postinc2	equ	0xFDE
  9764                           postdec2	equ	0xFDD
  9765                           plusw2	equ	0xFDB
  9766                           fsr2h	equ	0xFDA
  9767                           fsr2l	equ	0xFD9
  9768                           status	equ	0xFD8
  9769                           
  9770 ;; *************** function _RF24_isValid *****************
  9771 ;; Defined at:
  9772 ;;		line 1420 in file "../../../RF24_c/RF24_cg.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;		None
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;		None
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  1    wreg      unsigned char 
  9779 ;; Registers used:
  9780 ;;		wreg, status,2, status,0
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9789 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9790 ;;Total ram usage:        2 bytes
  9791 ;; Hardware stack levels used:    1
  9792 ;; Hardware stack levels required when called:    1
  9793 ;; This function calls:
  9794 ;;		Nothing
  9795 ;; This function is called by:
  9796 ;;		_RF24N_begin_d
  9797 ;;		_RF24N_update
  9798 ;; This function uses a non-reentrant model
  9799 ;;
  9800                           
  9801                           	psect	text60
  9802  003AF6                     __ptext60:
  9803                           	opt stack 0
  9804  003AF6                     _RF24_isValid:
  9805                           	opt stack 27
  9806                           
  9807                           ;RF24_cg.c: 1422: return rf.ce_pin != 0xff && rf.csn_pin != 0xff;
  9808                           
  9809                           ;incstack = 0
  9810  003AF6  0E00               	movlw	0
  9811  003AF8  6E04               	movwf	_RF24_isValid$2052,c
  9812  003AFA  0100               	movlb	0	; () banked
  9813  003AFC  298C               	incf	_rf& (0+255),w,b
  9814  003AFE  B4D8               	btfsc	status,2,c
  9815  003B00  D006               	goto	l643
  9816                           
  9817                           ; BSR set to: 0
  9818  003B02  0100               	movlb	0	; () banked
  9819  003B04  298D               	incf	(_rf+1)& (0+255),w,b
  9820  003B06  B4D8               	btfsc	status,2,c
  9821  003B08  D002               	goto	l643
  9822                           
  9823                           ; BSR set to: 0
  9824  003B0A  0E01               	movlw	1
  9825  003B0C  6E04               	movwf	_RF24_isValid$2052,c
  9826  003B0E                     l643:
  9827                           
  9828                           ; BSR set to: 0
  9829  003B0E  5004               	movf	_RF24_isValid$2052,w,c
  9830  003B10  0012               	return	
  9831  003B12                     __end_of_RF24_isValid:
  9832                           	opt stack 0
  9833                           tblptru	equ	0xFF8
  9834                           tblptrh	equ	0xFF7
  9835                           tblptrl	equ	0xFF6
  9836                           tablat	equ	0xFF5
  9837                           prodh	equ	0xFF4
  9838                           prodl	equ	0xFF3
  9839                           intcon	equ	0xFF2
  9840                           indf0	equ	0xFEF
  9841                           postinc0	equ	0xFEE
  9842                           postdec0	equ	0xFED
  9843                           plusw0	equ	0xFEB
  9844                           fsr0h	equ	0xFEA
  9845                           fsr0l	equ	0xFE9
  9846                           wreg	equ	0xFE8
  9847                           postinc1	equ	0xFE6
  9848                           indf2	equ	0xFDF
  9849                           postinc2	equ	0xFDE
  9850                           postdec2	equ	0xFDD
  9851                           plusw2	equ	0xFDB
  9852                           fsr2h	equ	0xFDA
  9853                           fsr2l	equ	0xFD9
  9854                           status	equ	0xFD8
  9855                           
  9856 ;; *************** function _RF24N_is_valid_address *****************
  9857 ;; Defined at:
  9858 ;;		line 1312 in file "../../RF24Network_cg.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;  node            2    2[COMRAM] unsigned int 
  9861 ;; Auto vars:     Size  Location     Type
  9862 ;;  digit           1    6[COMRAM] unsigned char 
  9863 ;;  result          1    7[COMRAM] unsigned char 
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  1    wreg      unsigned char 
  9866 ;; Registers used:
  9867 ;;		wreg, status,2, status,0
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/0
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9874 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;Total ram usage:        6 bytes
  9878 ;; Hardware stack levels used:    1
  9879 ;; Hardware stack levels required when called:    1
  9880 ;; This function calls:
  9881 ;;		Nothing
  9882 ;; This function is called by:
  9883 ;;		_RF24N_begin_d
  9884 ;;		_RF24N_update
  9885 ;;		_RF24N_write
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           	psect	text61
  9890  003854                     __ptext61:
  9891                           	opt stack 0
  9892  003854                     _RF24N_is_valid_address:
  9893                           	opt stack 27
  9894                           
  9895                           ;RF24Network_cg.c: 1314: uint8_t result = 1;
  9896                           
  9897                           ; BSR set to: 0
  9898                           ;incstack = 0
  9899  003854  0E01               	movlw	1
  9900  003856  6E08               	movwf	RF24N_is_valid_address@result,c
  9901                           
  9902                           ;RF24Network_cg.c: 1316: while(node)
  9903  003858  D012               	goto	l3822
  9904  00385A                     l3816:
  9905                           
  9906                           ;RF24Network_cg.c: 1317: {
  9907                           ;RF24Network_cg.c: 1318: uint8_t digit = node & 0x07;
  9908  00385A  5003               	movf	RF24N_is_valid_address@node,w,c
  9909  00385C  0B07               	andlw	7
  9910  00385E  6E07               	movwf	RF24N_is_valid_address@digit,c
  9911                           
  9912                           ;RF24Network_cg.c: 1322: if ( (digit > 5))
  9913  003860  0E05               	movlw	5
  9914  003862  6407               	cpfsgt	RF24N_is_valid_address@digit,c
  9915  003864  D003               	goto	l3820
  9916                           
  9917                           ;RF24Network_cg.c: 1324: {
  9918                           ;RF24Network_cg.c: 1325: result = 0;
  9919  003866  0E00               	movlw	0
  9920  003868  6E08               	movwf	RF24N_is_valid_address@result,c
  9921                           
  9922                           ;RF24Network_cg.c: 1326: ;
  9923                           ;RF24Network_cg.c: 1327: break;
  9924  00386A  D00D               	goto	l3824
  9925  00386C                     l3820:
  9926                           
  9927                           ;RF24Network_cg.c: 1328: }
  9928                           ;RF24Network_cg.c: 1329: node >>= 3;
  9929  00386C  90D8               	bcf	status,0,c
  9930  00386E  3204               	rrcf	RF24N_is_valid_address@node+1,f,c
  9931  003870  3203               	rrcf	RF24N_is_valid_address@node,f,c
  9932  003872  90D8               	bcf	status,0,c
  9933  003874  3204               	rrcf	RF24N_is_valid_address@node+1,f,c
  9934  003876  3203               	rrcf	RF24N_is_valid_address@node,f,c
  9935  003878  90D8               	bcf	status,0,c
  9936  00387A  3204               	rrcf	RF24N_is_valid_address@node+1,f,c
  9937  00387C  3203               	rrcf	RF24N_is_valid_address@node,f,c
  9938  00387E                     l3822:
  9939  00387E  5003               	movf	RF24N_is_valid_address@node,w,c
  9940  003880  1004               	iorwf	RF24N_is_valid_address@node+1,w,c
  9941  003882  A4D8               	btfss	status,2,c
  9942  003884  D7EA               	goto	l3816
  9943  003886                     l3824:
  9944                           
  9945                           ;RF24Network_cg.c: 1330: }
  9946                           ;RF24Network_cg.c: 1332: return result;
  9947  003886  5008               	movf	RF24N_is_valid_address@result,w,c
  9948  003888  0012               	return	
  9949  00388A                     __end_of_RF24N_is_valid_address:
  9950                           	opt stack 0
  9951                           tblptru	equ	0xFF8
  9952                           tblptrh	equ	0xFF7
  9953                           tblptrl	equ	0xFF6
  9954                           tablat	equ	0xFF5
  9955                           prodh	equ	0xFF4
  9956                           prodl	equ	0xFF3
  9957                           intcon	equ	0xFF2
  9958                           indf0	equ	0xFEF
  9959                           postinc0	equ	0xFEE
  9960                           postdec0	equ	0xFED
  9961                           plusw0	equ	0xFEB
  9962                           fsr0h	equ	0xFEA
  9963                           fsr0l	equ	0xFE9
  9964                           wreg	equ	0xFE8
  9965                           postinc1	equ	0xFE6
  9966                           indf2	equ	0xFDF
  9967                           postinc2	equ	0xFDE
  9968                           postdec2	equ	0xFDD
  9969                           plusw2	equ	0xFDB
  9970                           fsr2h	equ	0xFDA
  9971                           fsr2l	equ	0xFD9
  9972                           status	equ	0xFD8
  9973                           
  9974 ;; *************** function _RF24N_update *****************
  9975 ;; Defined at:
  9976 ;;		line 226 in file "../../RF24Network_cg.c"
  9977 ;; Parameters:    Size  Location     Type
  9978 ;;		None
  9979 ;; Auto vars:     Size  Location     Type
  9980 ;;  val             1  [STACK] unsigned char 
  9981 ;;  requester       2    0        unsigned int 
  9982 ;;  header          2  [STACK] PTR struct .
  9983 ;;		 -> rn.frame_buffer(32), rn(370), 
  9984 ;;  returnVal       1  [STACK] unsigned char 
  9985 ;;  pipe_num        1  [STACK] unsigned char 
  9986 ;; Return value:  Size  Location     Type
  9987 ;;                  1  [STACK] unsigned char 
  9988 ;; Registers used:
  9989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  9990 ;; Tracked objects:
  9991 ;;		On entry : 0/0
  9992 ;;		On exit  : 0/0
  9993 ;;		Unchanged: 0/0
  9994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9999 ;;Total ram usage:        0 bytes
 10000 ;; Hardware stack levels used:    1
 10001 ;; Hardware stack levels required when called:   10
 10002 ;; This function calls:
 10003 ;;		_RF24N_available
 10004 ;;		_RF24N_enqueue
 10005 ;;		_RF24N_is_valid_address
 10006 ;;		_RF24N_levelToAddress
 10007 ;;		_RF24N_write
 10008 ;;		_RF24_available_p
 10009 ;;		_RF24_getDynamicPayloadSize
 10010 ;;		_RF24_isValid
 10011 ;;		_RF24_read
 10012 ;;		_delay
 10013 ;; This function is called by:
 10014 ;;		_loop
 10015 ;;		_RF24N_write_
 10016 ;;		_RF24N_write
 10017 ;; This function uses a recursive model
 10018 ;;
 10019                           
 10020                           	psect	text62
 10021  0015CE                     __ptext62:
 10022                           	opt stack 0
 10023  0015CE                     _RF24N_update:
 10024                           	opt stack 17
 10025                           
 10026                           ;incstack = 0
 10027  0015CE  0E05               	movlw	5
 10028  0015D0  26E1               	addwf	fsr1l,f,c
 10029  0015D2  0E00               	movlw	0
 10030  0015D4  22E2               	addwfc	fsr1h,f,c
 10031                           
 10032                           ;RF24Network_cg.c: 229: uint8_t pipe_num;
 10033                           ;RF24Network_cg.c: 230: uint8_t returnVal = 0;
 10034                           ;stkvar	RF24N_update@returnVal @ sp[(-5)+3]
 10035  0015D6  0EFE               	movlw	-2
 10036  0015D8  6AE3               	clrf	plusw1,c
 10037                           
 10038                           ;RF24Network_cg.c: 237: if(!(rn.networkFlags & 2)){
 10039  0015DA  EE20  F0FF         	lfsr	2,_rn+42
 10040  0015DE  B2DF               	btfsc	indf2,1,c
 10041  0015E0  D285               	goto	l4218
 10042                           
 10043                           ;RF24Network_cg.c: 238: if( (rn.networkFlags & 1) || (rn.next_frame-rn.frame_queue) + 34
      +                           > 144 + 10 ){
 10044  0015E2  EE20  F0FF         	lfsr	2,_rn+42
 10045  0015E6  B0DF               	btfsc	indf2,0,c
 10046  0015E8  D01E               	goto	l4110
 10047  0015EA  EE21  F0A9         	lfsr	2,_rn+212
 10048  0015EE  CFDE F06B          	movff	postinc2,btemp+1
 10049  0015F2  CFDD F06C          	movff	postdec2,btemp+2
 10050  0015F6  0ED5               	movlw	low _rn
 10051  0015F8  6E74               	movwf	btemp+10,c
 10052  0015FA  0E00               	movlw	high _rn
 10053  0015FC  6E75               	movwf	btemp+11,c
 10054  0015FE  0EE8               	movlw	232
 10055  001600  6E72               	movwf	btemp+8,c
 10056  001602  0EFF               	movlw	255
 10057  001604  6E73               	movwf	btemp+9,c
 10058  001606  5074               	movf	btemp+10,w,c
 10059  001608  5E72               	subwf	btemp+8,f,c
 10060  00160A  5075               	movf	btemp+11,w,c
 10061  00160C  5A73               	subwfb	btemp+9,f,c
 10062  00160E  506B               	movf	btemp+1,w,c
 10063  001610  2672               	addwf	btemp+8,f,c
 10064  001612  506C               	movf	btemp+2,w,c
 10065  001614  2273               	addwfc	btemp+9,f,c
 10066  001616  BE73               	btfsc	btemp+9,7,c
 10067  001618  D269               	goto	l4218
 10068  00161A  5073               	movf	btemp+9,w,c
 10069  00161C  E104               	bnz	u4530
 10070  00161E  0E9B               	movlw	155
 10071  001620  5C72               	subwf	btemp+8,w,c
 10072  001622  A0D8               	btfss	status,0,c
 10073  001624  D263               	goto	l4218
 10074  001626                     u4530:
 10075  001626                     l4110:
 10076                           
 10077                           ;RF24Network_cg.c: 239: if(!RF24N_available()){
 10078  001626  EC2F  F01D         	call	_RF24N_available	;wreg free
 10079  00162A  0900               	iorlw	0
 10080  00162C  A4D8               	btfss	status,2,c
 10081  00162E  D006               	goto	l4114
 10082                           
 10083                           ;RF24Network_cg.c: 240: rn.networkFlags &= ~1;
 10084  001630  C0FF  FFE8         	movff	_rn+42,wreg
 10085  001634  0BFE               	andlw	254
 10086  001636  CFE8 F0FF          	movff	wreg,_rn+42
 10087                           
 10088                           ;RF24Network_cg.c: 241: }else{
 10089  00163A  D258               	goto	l4218
 10090  00163C                     l4114:
 10091                           
 10092                           ;RF24Network_cg.c: 242: return 0;
 10093  00163C  0E00               	movlw	0
 10094  00163E  D19B               	goto	L9
 10095  001640                     l4118:
 10096                           
 10097                           ;RF24Network_cg.c: 249: RF24NetworkHeader *header;
 10098                           ;RF24Network_cg.c: 252: if( (rn.frame_size = RF24_getDynamicPayloadSize() ) < sizeof(RF2
      +                          4NetworkHeader)){
 10099  001640  ECF3  F01B         	call	_RF24_getDynamicPayloadSize	;wreg free
 10100  001644  EE21  F007         	lfsr	2,_rn+50
 10101  001648  6EDF               	movwf	indf2,c
 10102  00164A  0E08               	movlw	8
 10103  00164C  60DF               	cpfslt	indf2,c
 10104  00164E  D007               	goto	l4122
 10105                           
 10106                           ;RF24Network_cg.c: 253: delay(10);
 10107  001650  0E00               	movlw	0
 10108  001652  6E04               	movwf	delay@val+1,c
 10109  001654  0E0A               	movlw	10
 10110  001656  6E03               	movwf	delay@val,c
 10111  001658  ECD4  F01A         	call	_delay	;wreg free
 10112                           
 10113                           ;RF24Network_cg.c: 254: continue;
 10114  00165C  D247               	goto	l4218
 10115  00165E                     l4122:
 10116                           
 10117                           ;RF24Network_cg.c: 255: }
 10118                           ;RF24Network_cg.c: 261: RF24_read(rn.frame_buffer, rn.frame_size );
 10119  00165E  0EDC               	movlw	low (_rn+7)
 10120  001660  6E1D               	movwf	RF24_read@buf,c
 10121  001662  0E00               	movlw	high (_rn+7)
 10122  001664  6E1E               	movwf	RF24_read@buf+1,c
 10123  001666  C107  F01F         	movff	_rn+50,RF24_read@len
 10124  00166A  EC5F  F01D         	call	_RF24_read	;wreg free
 10125                           
 10126                           ;RF24Network_cg.c: 264: header = (RF24NetworkHeader*)(rn.frame_buffer);
 10127                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10128  00166E  0E00               	movlw	high (_rn+7)
 10129  001670  6E6A               	movwf	btemp,c
 10130  001672  0EFD               	movlw	-3
 10131  001674  C06A  FFE3         	movff	btemp,plusw1
 10132  001678  0EDC               	movlw	low (_rn+7)
 10133  00167A  6E6A               	movwf	btemp,c
 10134  00167C  0EFC               	movlw	-4
 10135  00167E  C06A  FFE3         	movff	btemp,plusw1
 10136                           
 10137                           ;RF24Network_cg.c: 273: ;
 10138                           ;RF24Network_cg.c: 274: ;
 10139                           ;RF24Network_cg.c: 278: if ( !RF24N_is_valid_address( header->to_node) ){
 10140                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10141  001682  0EFC               	movlw	-4
 10142  001684  CFE3 F06B          	movff	plusw1,btemp+1
 10143  001688  0EFD               	movlw	-3
 10144  00168A  CFE3 F06C          	movff	plusw1,btemp+2
 10145  00168E  0E02               	movlw	2
 10146  001690  246B               	addwf	btemp+1,w,c
 10147  001692  6ED9               	movwf	fsr2l,c
 10148  001694  0E00               	movlw	0
 10149  001696  206C               	addwfc	btemp+2,w,c
 10150  001698  6EDA               	movwf	fsr2h,c
 10151  00169A  CFDE F003          	movff	postinc2,RF24N_is_valid_address@node
 10152  00169E  CFDD F004          	movff	postdec2,RF24N_is_valid_address@node+1
 10153  0016A2  EC2A  F01C         	call	_RF24N_is_valid_address	;wreg free
 10154  0016A6  0900               	iorlw	0
 10155  0016A8  B4D8               	btfsc	status,2,c
 10156  0016AA  D220               	goto	l4218
 10157                           
 10158                           ;RF24Network_cg.c: 280: }
 10159                           ;RF24Network_cg.c: 282: returnVal = header->type;
 10160                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10161  0016AC  0EFC               	movlw	-4
 10162  0016AE  CFE3 F06B          	movff	plusw1,btemp+1
 10163  0016B2  0EFD               	movlw	-3
 10164  0016B4  CFE3 F06C          	movff	plusw1,btemp+2
 10165  0016B8  0E06               	movlw	6
 10166  0016BA  246B               	addwf	btemp+1,w,c
 10167  0016BC  6ED9               	movwf	fsr2l,c
 10168  0016BE  0E00               	movlw	0
 10169  0016C0  206C               	addwfc	btemp+2,w,c
 10170  0016C2  6EDA               	movwf	fsr2h,c
 10171  0016C4  50DF               	movf	indf2,w,c
 10172  0016C6  6E75               	movwf	btemp+11,c
 10173                           
 10174                           ;stkvar	RF24N_update@returnVal @ sp[(-5)+3]
 10175  0016C8  0EFE               	movlw	-2
 10176  0016CA  C075  FFE3         	movff	btemp+11,plusw1
 10177                           
 10178                           ;RF24Network_cg.c: 285: if ( header->to_node == rn.node_address ){
 10179  0016CE  EE21  F005         	lfsr	2,_rn+48
 10180                           
 10181                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10182  0016D2  0EFC               	movlw	-4
 10183  0016D4  CFE3 F06B          	movff	plusw1,btemp+1
 10184  0016D8  0EFD               	movlw	-3
 10185  0016DA  CFE3 F06C          	movff	plusw1,btemp+2
 10186  0016DE  0E02               	movlw	2
 10187  0016E0  246B               	addwf	btemp+1,w,c
 10188  0016E2  6EE9               	movwf	fsr0l,c
 10189  0016E4  0E00               	movlw	0
 10190  0016E6  206C               	addwfc	btemp+2,w,c
 10191  0016E8  6EEA               	movwf	fsr0h,c
 10192  0016EA  50DE               	movf	postinc2,w,c
 10193  0016EC  18EE               	xorwf	postinc0,w,c
 10194  0016EE  E103               	bnz	u4571
 10195  0016F0  50DE               	movf	postinc2,w,c
 10196  0016F2  18EE               	xorwf	postinc0,w,c
 10197  0016F4  A4D8               	btfss	status,2,c
 10198  0016F6                     u4571:
 10199  0016F6  D141               	goto	l4188
 10200                           
 10201                           ;RF24Network_cg.c: 287: if(header->type == 130){
 10202                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10203  0016F8  0EFC               	movlw	-4
 10204  0016FA  CFE3 F06B          	movff	plusw1,btemp+1
 10205  0016FE  0EFD               	movlw	-3
 10206  001700  CFE3 F06C          	movff	plusw1,btemp+2
 10207  001704  0E06               	movlw	6
 10208  001706  246B               	addwf	btemp+1,w,c
 10209  001708  6ED9               	movwf	fsr2l,c
 10210  00170A  0E00               	movlw	0
 10211  00170C  206C               	addwfc	btemp+2,w,c
 10212  00170E  6EDA               	movwf	fsr2h,c
 10213  001710  0E82               	movlw	130
 10214  001712  18DE               	xorwf	postinc2,w,c
 10215  001714  B4D8               	btfsc	status,2,c
 10216  001716  D1EA               	goto	l4218
 10217                           
 10218                           ;RF24Network_cg.c: 289: }
 10219                           ;RF24Network_cg.c: 290: if(header->type == 128 ){
 10220                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10221  001718  0EFC               	movlw	-4
 10222  00171A  CFE3 F06B          	movff	plusw1,btemp+1
 10223  00171E  0EFD               	movlw	-3
 10224  001720  CFE3 F06C          	movff	plusw1,btemp+2
 10225  001724  0E06               	movlw	6
 10226  001726  246B               	addwf	btemp+1,w,c
 10227  001728  6ED9               	movwf	fsr2l,c
 10228  00172A  0E00               	movlw	0
 10229  00172C  206C               	addwfc	btemp+2,w,c
 10230  00172E  6EDA               	movwf	fsr2h,c
 10231  001730  0E80               	movlw	128
 10232  001732  18DE               	xorwf	postinc2,w,c
 10233  001734  A4D8               	btfss	status,2,c
 10234  001736  D050               	goto	l4152
 10235                           
 10236                           ;RF24Network_cg.c: 292: if(requester != rn.node_address){
 10237  001738  EE21  F005         	lfsr	2,_rn+48
 10238  00173C  0E24               	movlw	36
 10239  00173E  18DE               	xorwf	postinc2,w,c
 10240  001740  E104               	bnz	u4600
 10241  001742  0E09               	movlw	9
 10242  001744  18DE               	xorwf	postinc2,w,c
 10243  001746  B4D8               	btfsc	status,2,c
 10244  001748  D047               	goto	l4152
 10245  00174A                     u4600:
 10246                           
 10247                           ;RF24Network_cg.c: 293: header->to_node = requester;
 10248                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10249  00174A  0EFC               	movlw	-4
 10250  00174C  CFE3 F06B          	movff	plusw1,btemp+1
 10251  001750  0EFD               	movlw	-3
 10252  001752  CFE3 F06C          	movff	plusw1,btemp+2
 10253  001756  0E02               	movlw	2
 10254  001758  246B               	addwf	btemp+1,w,c
 10255  00175A  6ED9               	movwf	fsr2l,c
 10256  00175C  0E00               	movlw	0
 10257  00175E  206C               	addwfc	btemp+2,w,c
 10258  001760  6EDA               	movwf	fsr2h,c
 10259  001762  0E24               	movlw	36
 10260  001764  6EDE               	movwf	postinc2,c
 10261  001766  0E09               	movlw	9
 10262  001768  6EDD               	movwf	postdec2,c
 10263                           
 10264                           ;RF24Network_cg.c: 294: RF24N_write(header->to_node,2);
 10265  00176A  0E02               	movlw	2
 10266  00176C  6EE6               	movwf	postinc1,c
 10267                           
 10268                           ;stkvar	RF24N_update@header @ sp[(-6)+1]
 10269  00176E  0EFB               	movlw	-5
 10270  001770  CFE3 F06B          	movff	plusw1,btemp+1
 10271  001774  0EFC               	movlw	-4
 10272  001776  CFE3 F06C          	movff	plusw1,btemp+2
 10273  00177A  0E02               	movlw	2
 10274  00177C  246B               	addwf	btemp+1,w,c
 10275  00177E  6ED9               	movwf	fsr2l,c
 10276  001780  0E00               	movlw	0
 10277  001782  206C               	addwfc	btemp+2,w,c
 10278  001784  6EDA               	movwf	fsr2h,c
 10279  001786  CFDE F06B          	movff	postinc2,btemp+1
 10280  00178A  CFDD F06C          	movff	postdec2,btemp+2
 10281  00178E  C06B  FFE6         	movff	btemp+1,postinc1
 10282  001792  C06C  FFE6         	movff	btemp+2,postinc1
 10283  001796  EC90  F00D         	call	_RF24N_write	;wreg free
 10284                           
 10285                           ;RF24Network_cg.c: 295: delay(10);
 10286  00179A  0E00               	movlw	0
 10287  00179C  6E04               	movwf	delay@val+1,c
 10288  00179E  0E0A               	movlw	10
 10289  0017A0  6E03               	movwf	delay@val,c
 10290  0017A2  ECD4  F01A         	call	_delay	;wreg free
 10291                           
 10292                           ;RF24Network_cg.c: 296: RF24N_write(header->to_node,2);
 10293  0017A6  0E02               	movlw	2
 10294  0017A8  6EE6               	movwf	postinc1,c
 10295                           
 10296                           ;stkvar	RF24N_update@header @ sp[(-6)+1]
 10297  0017AA  0EFB               	movlw	-5
 10298  0017AC  CFE3 F06B          	movff	plusw1,btemp+1
 10299  0017B0  0EFC               	movlw	-4
 10300  0017B2  CFE3 F06C          	movff	plusw1,btemp+2
 10301  0017B6  0E02               	movlw	2
 10302  0017B8  246B               	addwf	btemp+1,w,c
 10303  0017BA  6ED9               	movwf	fsr2l,c
 10304  0017BC  0E00               	movlw	0
 10305  0017BE  206C               	addwfc	btemp+2,w,c
 10306  0017C0  6EDA               	movwf	fsr2h,c
 10307  0017C2  CFDE F06B          	movff	postinc2,btemp+1
 10308  0017C6  CFDD F06C          	movff	postdec2,btemp+2
 10309  0017CA  C06B  FFE6         	movff	btemp+1,postinc1
 10310  0017CE  C06C  FFE6         	movff	btemp+2,postinc1
 10311  0017D2  EC90  F00D         	call	_RF24N_write	;wreg free
 10312                           
 10313                           ;RF24Network_cg.c: 298: continue;
 10314  0017D6  D18A               	goto	l4218
 10315  0017D8                     l4152:
 10316                           
 10317                           ;RF24Network_cg.c: 299: }
 10318                           ;RF24Network_cg.c: 300: }
 10319                           ;RF24Network_cg.c: 301: if(header->type == 195 && rn.node_address){
 10320                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10321  0017D8  0EFC               	movlw	-4
 10322  0017DA  CFE3 F06B          	movff	plusw1,btemp+1
 10323  0017DE  0EFD               	movlw	-3
 10324  0017E0  CFE3 F06C          	movff	plusw1,btemp+2
 10325  0017E4  0E06               	movlw	6
 10326  0017E6  246B               	addwf	btemp+1,w,c
 10327  0017E8  6ED9               	movwf	fsr2l,c
 10328  0017EA  0E00               	movlw	0
 10329  0017EC  206C               	addwfc	btemp+2,w,c
 10330  0017EE  6EDA               	movwf	fsr2h,c
 10331  0017F0  0EC3               	movlw	195
 10332  0017F2  18DE               	xorwf	postinc2,w,c
 10333  0017F4  A4D8               	btfss	status,2,c
 10334  0017F6  D03B               	goto	l4162
 10335  0017F8  EE21  F005         	lfsr	2,_rn+48
 10336  0017FC  50DE               	movf	postinc2,w,c
 10337  0017FE  10DE               	iorwf	postinc2,w,c
 10338  001800  B4D8               	btfsc	status,2,c
 10339  001802  D035               	goto	l4162
 10340                           
 10341                           ;RF24Network_cg.c: 303: header->from_node = rn.node_address;
 10342  001804  EE21  F005         	lfsr	2,_rn+48
 10343                           
 10344                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10345  001808  0EFC               	movlw	-4
 10346  00180A  CFE3 FFE9          	movff	plusw1,fsr0l
 10347  00180E  0EFD               	movlw	-3
 10348  001810  CFE3 FFEA          	movff	plusw1,fsr0h
 10349  001814  CFDE FFEE          	movff	postinc2,postinc0
 10350  001818  CFDD FFED          	movff	postdec2,postdec0
 10351                           
 10352                           ;RF24Network_cg.c: 304: header->to_node = 0;
 10353                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10354  00181C  0EFC               	movlw	-4
 10355  00181E  CFE3 F06B          	movff	plusw1,btemp+1
 10356  001822  0EFD               	movlw	-3
 10357  001824  CFE3 F06C          	movff	plusw1,btemp+2
 10358  001828  0E02               	movlw	2
 10359  00182A  246B               	addwf	btemp+1,w,c
 10360  00182C  6ED9               	movwf	fsr2l,c
 10361  00182E  0E00               	movlw	0
 10362  001830  206C               	addwfc	btemp+2,w,c
 10363  001832  6EDA               	movwf	fsr2h,c
 10364  001834  0E00               	movlw	0
 10365  001836  6EDE               	movwf	postinc2,c
 10366  001838  0E00               	movlw	0
 10367  00183A  6EDD               	movwf	postdec2,c
 10368                           
 10369                           ;RF24Network_cg.c: 305: RF24N_write(header->to_node,0);
 10370  00183C  0E00               	movlw	0
 10371  00183E  6EE6               	movwf	postinc1,c
 10372                           
 10373                           ;stkvar	RF24N_update@header @ sp[(-6)+1]
 10374  001840  0EFB               	movlw	-5
 10375  001842  CFE3 F06B          	movff	plusw1,btemp+1
 10376  001846  0EFC               	movlw	-4
 10377  001848  CFE3 F06C          	movff	plusw1,btemp+2
 10378  00184C  0E02               	movlw	2
 10379  00184E  246B               	addwf	btemp+1,w,c
 10380  001850  6ED9               	movwf	fsr2l,c
 10381  001852  0E00               	movlw	0
 10382  001854  206C               	addwfc	btemp+2,w,c
 10383  001856  6EDA               	movwf	fsr2h,c
 10384  001858  CFDE F06B          	movff	postinc2,btemp+1
 10385  00185C  CFDD F06C          	movff	postdec2,btemp+2
 10386  001860  C06B  FFE6         	movff	btemp+1,postinc1
 10387  001864  C06C  FFE6         	movff	btemp+2,postinc1
 10388  001868  EC90  F00D         	call	_RF24N_write	;wreg free
 10389                           
 10390                           ;RF24Network_cg.c: 306: continue;
 10391  00186C  D13F               	goto	l4218
 10392  00186E                     l4162:
 10393                           
 10394                           ;RF24Network_cg.c: 307: }
 10395                           ;RF24Network_cg.c: 309: if( (rn.returnSysMsgs && header->type > 127) || header->type == 
      +                          193 ){
 10396  00186E  EE20  F0FE         	lfsr	2,_rn+41
 10397  001872  50DF               	movf	indf2,w,c
 10398  001874  B4D8               	btfsc	status,2,c
 10399  001876  D00F               	goto	l4166
 10400                           
 10401                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10402  001878  0EFC               	movlw	-4
 10403  00187A  CFE3 F06B          	movff	plusw1,btemp+1
 10404  00187E  0EFD               	movlw	-3
 10405  001880  CFE3 F06C          	movff	plusw1,btemp+2
 10406  001884  0E06               	movlw	6
 10407  001886  246B               	addwf	btemp+1,w,c
 10408  001888  6ED9               	movwf	fsr2l,c
 10409  00188A  0E00               	movlw	0
 10410  00188C  206C               	addwfc	btemp+2,w,c
 10411  00188E  6EDA               	movwf	fsr2h,c
 10412  001890  0E80               	movlw	128
 10413  001892  60DF               	cpfslt	indf2,c
 10414  001894  D010               	goto	l4168
 10415  001896                     l4166:
 10416                           
 10417                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10418  001896  0EFC               	movlw	-4
 10419  001898  CFE3 F06B          	movff	plusw1,btemp+1
 10420  00189C  0EFD               	movlw	-3
 10421  00189E  CFE3 F06C          	movff	plusw1,btemp+2
 10422  0018A2  0E06               	movlw	6
 10423  0018A4  246B               	addwf	btemp+1,w,c
 10424  0018A6  6ED9               	movwf	fsr2l,c
 10425  0018A8  0E00               	movlw	0
 10426  0018AA  206C               	addwfc	btemp+2,w,c
 10427  0018AC  6EDA               	movwf	fsr2h,c
 10428  0018AE  0EC1               	movlw	193
 10429  0018B0  18DE               	xorwf	postinc2,w,c
 10430  0018B2  A4D8               	btfss	status,2,c
 10431  0018B4  D054               	goto	l4182
 10432  0018B6                     l4168:
 10433                           
 10434                           ;RF24Network_cg.c: 310: ;
 10435                           ;RF24Network_cg.c: 312: if( header->type != 148 && header->type != 149 && header->type !
      +                          = 200 && header->type != 131 && header->type!= 150){
 10436                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10437  0018B6  0EFC               	movlw	-4
 10438  0018B8  CFE3 F06B          	movff	plusw1,btemp+1
 10439  0018BC  0EFD               	movlw	-3
 10440  0018BE  CFE3 F06C          	movff	plusw1,btemp+2
 10441  0018C2  0E06               	movlw	6
 10442  0018C4  246B               	addwf	btemp+1,w,c
 10443  0018C6  6ED9               	movwf	fsr2l,c
 10444  0018C8  0E00               	movlw	0
 10445  0018CA  206C               	addwfc	btemp+2,w,c
 10446  0018CC  6EDA               	movwf	fsr2h,c
 10447  0018CE  0E94               	movlw	148
 10448  0018D0  18DE               	xorwf	postinc2,w,c
 10449  0018D2  B4D8               	btfsc	status,2,c
 10450  0018D4  D044               	goto	l4182
 10451                           
 10452                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10453  0018D6  0EFC               	movlw	-4
 10454  0018D8  CFE3 F06B          	movff	plusw1,btemp+1
 10455  0018DC  0EFD               	movlw	-3
 10456  0018DE  CFE3 F06C          	movff	plusw1,btemp+2
 10457  0018E2  0E06               	movlw	6
 10458  0018E4  246B               	addwf	btemp+1,w,c
 10459  0018E6  6ED9               	movwf	fsr2l,c
 10460  0018E8  0E00               	movlw	0
 10461  0018EA  206C               	addwfc	btemp+2,w,c
 10462  0018EC  6EDA               	movwf	fsr2h,c
 10463  0018EE  0E95               	movlw	149
 10464  0018F0  18DE               	xorwf	postinc2,w,c
 10465  0018F2  B4D8               	btfsc	status,2,c
 10466  0018F4  D034               	goto	l4182
 10467                           
 10468                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10469  0018F6  0EFC               	movlw	-4
 10470  0018F8  CFE3 F06B          	movff	plusw1,btemp+1
 10471  0018FC  0EFD               	movlw	-3
 10472  0018FE  CFE3 F06C          	movff	plusw1,btemp+2
 10473  001902  0E06               	movlw	6
 10474  001904  246B               	addwf	btemp+1,w,c
 10475  001906  6ED9               	movwf	fsr2l,c
 10476  001908  0E00               	movlw	0
 10477  00190A  206C               	addwfc	btemp+2,w,c
 10478  00190C  6EDA               	movwf	fsr2h,c
 10479  00190E  0EC8               	movlw	200
 10480  001910  18DE               	xorwf	postinc2,w,c
 10481  001912  B4D8               	btfsc	status,2,c
 10482  001914  D024               	goto	l4182
 10483                           
 10484                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10485  001916  0EFC               	movlw	-4
 10486  001918  CFE3 F06B          	movff	plusw1,btemp+1
 10487  00191C  0EFD               	movlw	-3
 10488  00191E  CFE3 F06C          	movff	plusw1,btemp+2
 10489  001922  0E06               	movlw	6
 10490  001924  246B               	addwf	btemp+1,w,c
 10491  001926  6ED9               	movwf	fsr2l,c
 10492  001928  0E00               	movlw	0
 10493  00192A  206C               	addwfc	btemp+2,w,c
 10494  00192C  6EDA               	movwf	fsr2h,c
 10495  00192E  0E83               	movlw	131
 10496  001930  18DE               	xorwf	postinc2,w,c
 10497  001932  B4D8               	btfsc	status,2,c
 10498  001934  D014               	goto	l4182
 10499                           
 10500                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10501  001936  0EFC               	movlw	-4
 10502  001938  CFE3 F06B          	movff	plusw1,btemp+1
 10503  00193C  0EFD               	movlw	-3
 10504  00193E  CFE3 F06C          	movff	plusw1,btemp+2
 10505  001942  0E06               	movlw	6
 10506  001944  246B               	addwf	btemp+1,w,c
 10507  001946  6ED9               	movwf	fsr2l,c
 10508  001948  0E00               	movlw	0
 10509  00194A  206C               	addwfc	btemp+2,w,c
 10510  00194C  6EDA               	movwf	fsr2h,c
 10511  00194E  0E96               	movlw	150
 10512  001950  18DE               	xorwf	postinc2,w,c
 10513  001952  B4D8               	btfsc	status,2,c
 10514  001954  D004               	goto	l4182
 10515  001956                     l4178:
 10516                           
 10517                           ;RF24Network_cg.c: 313: return returnVal;
 10518                           ;stkvar	RF24N_update@returnVal @ sp[(-5)+3]
 10519  001956  0EFE               	movlw	-2
 10520  001958  CFE3 F06A          	movff	plusw1,btemp
 10521  00195C  D0DC               	goto	l781
 10522  00195E                     l4182:
 10523                           
 10524                           ;RF24Network_cg.c: 314: }
 10525                           ;RF24Network_cg.c: 315: }
 10526                           ;RF24Network_cg.c: 317: if( RF24N_enqueue(header) == 2 ){
 10527                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10528  00195E  0EFC               	movlw	-4
 10529  001960  CFE3 F013          	movff	plusw1,RF24N_enqueue@header
 10530  001964  0EFD               	movlw	-3
 10531  001966  CFE3 F014          	movff	plusw1,RF24N_enqueue@header+1
 10532  00196A  EC2D  F008         	call	_RF24N_enqueue	;wreg free
 10533  00196E  0A02               	xorlw	2
 10534  001970  A4D8               	btfss	status,2,c
 10535  001972  D0BC               	goto	l4218
 10536                           
 10537                           ;RF24Network_cg.c: 321: return 131;
 10538  001974  0E83               	movlw	131
 10539  001976                     L9:
 10540  001976  6E6A               	movwf	btemp,c
 10541  001978  D0CE               	goto	l781
 10542  00197A                     l4188:
 10543                           
 10544                           ;RF24Network_cg.c: 327: if( header->to_node == 0100){
 10545                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10546  00197A  0EFC               	movlw	-4
 10547  00197C  CFE3 F06B          	movff	plusw1,btemp+1
 10548  001980  0EFD               	movlw	-3
 10549  001982  CFE3 F06C          	movff	plusw1,btemp+2
 10550  001986  0E02               	movlw	2
 10551  001988  246B               	addwf	btemp+1,w,c
 10552  00198A  6ED9               	movwf	fsr2l,c
 10553  00198C  0E00               	movlw	0
 10554  00198E  206C               	addwfc	btemp+2,w,c
 10555  001990  6EDA               	movwf	fsr2h,c
 10556  001992  0E40               	movlw	64
 10557  001994  18DE               	xorwf	postinc2,w,c
 10558  001996  10DE               	iorwf	postinc2,w,c
 10559  001998  A4D8               	btfss	status,2,c
 10560  00199A  D090               	goto	l4216
 10561                           
 10562                           ;RF24Network_cg.c: 328: uint8_t val;
 10563                           ;RF24Network_cg.c: 330: if(header->type == 194 ){
 10564                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10565  00199C  0EFC               	movlw	-4
 10566  00199E  CFE3 F06B          	movff	plusw1,btemp+1
 10567  0019A2  0EFD               	movlw	-3
 10568  0019A4  CFE3 F06C          	movff	plusw1,btemp+2
 10569  0019A8  0E06               	movlw	6
 10570  0019AA  246B               	addwf	btemp+1,w,c
 10571  0019AC  6ED9               	movwf	fsr2l,c
 10572  0019AE  0E00               	movlw	0
 10573  0019B0  206C               	addwfc	btemp+2,w,c
 10574  0019B2  6EDA               	movwf	fsr2h,c
 10575  0019B4  0EC2               	movlw	194
 10576  0019B6  18DE               	xorwf	postinc2,w,c
 10577  0019B8  A4D8               	btfss	status,2,c
 10578  0019BA  D04F               	goto	l4204
 10579                           
 10580                           ;RF24Network_cg.c: 331: if( !(rn.networkFlags & 8) && rn.node_address != 04444 ){
 10581  0019BC  EE20  F0FF         	lfsr	2,_rn+42
 10582  0019C0  B6DF               	btfsc	indf2,3,c
 10583  0019C2  D094               	goto	l4218
 10584  0019C4  EE21  F005         	lfsr	2,_rn+48
 10585  0019C8  0E24               	movlw	36
 10586  0019CA  18DE               	xorwf	postinc2,w,c
 10587  0019CC  E104               	bnz	u4750
 10588  0019CE  0E09               	movlw	9
 10589  0019D0  18DE               	xorwf	postinc2,w,c
 10590  0019D2  B4D8               	btfsc	status,2,c
 10591  0019D4  D08B               	goto	l4218
 10592  0019D6                     u4750:
 10593                           
 10594                           ;RF24Network_cg.c: 332: header->to_node = header->from_node;
 10595                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10596  0019D6  0EFC               	movlw	-4
 10597  0019D8  CFE3 FFD9          	movff	plusw1,fsr2l
 10598  0019DC  0EFD               	movlw	-3
 10599  0019DE  CFE3 FFDA          	movff	plusw1,fsr2h
 10600                           
 10601                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10602  0019E2  0EFC               	movlw	-4
 10603  0019E4  CFE3 F06B          	movff	plusw1,btemp+1
 10604  0019E8  0EFD               	movlw	-3
 10605  0019EA  CFE3 F06C          	movff	plusw1,btemp+2
 10606  0019EE  0E02               	movlw	2
 10607  0019F0  246B               	addwf	btemp+1,w,c
 10608  0019F2  6EE9               	movwf	fsr0l,c
 10609  0019F4  0E00               	movlw	0
 10610  0019F6  206C               	addwfc	btemp+2,w,c
 10611  0019F8  6EEA               	movwf	fsr0h,c
 10612  0019FA  CFDE FFEE          	movff	postinc2,postinc0
 10613  0019FE  CFDD FFED          	movff	postdec2,postdec0
 10614                           
 10615                           ;RF24Network_cg.c: 333: header->from_node = rn.node_address;
 10616  001A02  EE21  F005         	lfsr	2,_rn+48
 10617                           
 10618                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10619  001A06  0EFC               	movlw	-4
 10620  001A08  CFE3 FFE9          	movff	plusw1,fsr0l
 10621  001A0C  0EFD               	movlw	-3
 10622  001A0E  CFE3 FFEA          	movff	plusw1,fsr0h
 10623  001A12  CFDE FFEE          	movff	postinc2,postinc0
 10624  001A16  CFDD FFED          	movff	postdec2,postdec0
 10625                           
 10626                           ;RF24Network_cg.c: 334: delay(rn.parent_pipe);
 10627  001A1A  EE21  F00C         	lfsr	2,_rn+55
 10628  001A1E  50DF               	movf	indf2,w,c
 10629  001A20  6E03               	movwf	delay@val,c
 10630  001A22  6A04               	clrf	delay@val+1,c
 10631  001A24  ECD4  F01A         	call	_delay	;wreg free
 10632                           
 10633                           ;RF24Network_cg.c: 335: RF24N_write(header->to_node,2);
 10634  001A28  0E02               	movlw	2
 10635  001A2A  6EE6               	movwf	postinc1,c
 10636                           
 10637                           ;stkvar	RF24N_update@header @ sp[(-6)+1]
 10638  001A2C  0EFB               	movlw	-5
 10639  001A2E  CFE3 F06B          	movff	plusw1,btemp+1
 10640  001A32  0EFC               	movlw	-4
 10641  001A34  CFE3 F06C          	movff	plusw1,btemp+2
 10642  001A38  0E02               	movlw	2
 10643  001A3A  246B               	addwf	btemp+1,w,c
 10644  001A3C  6ED9               	movwf	fsr2l,c
 10645  001A3E  0E00               	movlw	0
 10646  001A40  206C               	addwfc	btemp+2,w,c
 10647  001A42  6EDA               	movwf	fsr2h,c
 10648  001A44  CFDE F06B          	movff	postinc2,btemp+1
 10649  001A48  CFDD F06C          	movff	postdec2,btemp+2
 10650  001A4C  C06B  FFE6         	movff	btemp+1,postinc1
 10651  001A50  C06C  FFE6         	movff	btemp+2,postinc1
 10652  001A54  EC90  F00D         	call	_RF24N_write	;wreg free
 10653  001A58  D049               	goto	l4218
 10654  001A5A                     l4204:
 10655                           
 10656                           ;RF24Network_cg.c: 338: }
 10657                           ;RF24Network_cg.c: 339: val = RF24N_enqueue(header);
 10658                           ;stkvar	RF24N_update@header @ sp[(-5)+1]
 10659  001A5A  0EFC               	movlw	-4
 10660  001A5C  CFE3 F013          	movff	plusw1,RF24N_enqueue@header
 10661  001A60  0EFD               	movlw	-3
 10662  001A62  CFE3 F014          	movff	plusw1,RF24N_enqueue@header+1
 10663  001A66  EC2D  F008         	call	_RF24N_enqueue	;wreg free
 10664  001A6A  6E75               	movwf	btemp+11,c
 10665                           
 10666                           ;stkvar	RF24N_update@val @ sp[(-5)+0]
 10667  001A6C  0EFB               	movlw	-5
 10668  001A6E  C075  FFE3         	movff	btemp+11,plusw1
 10669                           
 10670                           ;RF24Network_cg.c: 341: if(rn.multicastRelay){
 10671  001A72  EE20  F0D5         	lfsr	2,_rn
 10672  001A76  50DF               	movf	indf2,w,c
 10673  001A78  B4D8               	btfsc	status,2,c
 10674  001A7A  D01A               	goto	l4210
 10675                           
 10676                           ;RF24Network_cg.c: 342: ;
 10677                           ;RF24Network_cg.c: 343: RF24N_write(RF24N_levelToAddress(rn.multicast_level)<<3,4);
 10678  001A7C  0E04               	movlw	4
 10679  001A7E  6EE6               	movwf	postinc1,c
 10680  001A80  EE21  F004         	lfsr	2,_rn+47
 10681  001A84  50DF               	movf	indf2,w,c
 10682  001A86  EC89  F01A         	call	_RF24N_levelToAddress
 10683  001A8A  C003  F06B         	movff	?_RF24N_levelToAddress,btemp+1
 10684  001A8E  C004  F06C         	movff	?_RF24N_levelToAddress+1,btemp+2
 10685  001A92  90D8               	bcf	status,0,c
 10686  001A94  366B               	rlcf	btemp+1,f,c
 10687  001A96  366C               	rlcf	btemp+2,f,c
 10688  001A98  90D8               	bcf	status,0,c
 10689  001A9A  366B               	rlcf	btemp+1,f,c
 10690  001A9C  366C               	rlcf	btemp+2,f,c
 10691  001A9E  90D8               	bcf	status,0,c
 10692  001AA0  366B               	rlcf	btemp+1,f,c
 10693  001AA2  366C               	rlcf	btemp+2,f,c
 10694  001AA4  C06B  FFE6         	movff	btemp+1,postinc1
 10695  001AA8  C06C  FFE6         	movff	btemp+2,postinc1
 10696  001AAC  EC90  F00D         	call	_RF24N_write	;wreg free
 10697  001AB0                     l4210:
 10698                           
 10699                           ;RF24Network_cg.c: 344: }
 10700                           ;RF24Network_cg.c: 345: if( val == 2 ){
 10701                           ;stkvar	RF24N_update@val @ sp[(-5)+0]
 10702  001AB0  0EFB               	movlw	-5
 10703  001AB2  CFE3 F06A          	movff	plusw1,btemp
 10704  001AB6  0E02               	movlw	2
 10705  001AB8  186A               	xorwf	btemp,w,c
 10706  001ABA  D75A               	goto	L10
 10707  001ABC                     l4216:
 10708                           
 10709                           ;RF24Network_cg.c: 351: RF24N_write(header->to_node,1);
 10710  001ABC  0E01               	movlw	1
 10711  001ABE  6EE6               	movwf	postinc1,c
 10712                           
 10713                           ;stkvar	RF24N_update@header @ sp[(-6)+1]
 10714  001AC0  0EFB               	movlw	-5
 10715  001AC2  CFE3 F06B          	movff	plusw1,btemp+1
 10716  001AC6  0EFC               	movlw	-4
 10717  001AC8  CFE3 F06C          	movff	plusw1,btemp+2
 10718  001ACC  0E02               	movlw	2
 10719  001ACE  246B               	addwf	btemp+1,w,c
 10720  001AD0  6ED9               	movwf	fsr2l,c
 10721  001AD2  0E00               	movlw	0
 10722  001AD4  206C               	addwfc	btemp+2,w,c
 10723  001AD6  6EDA               	movwf	fsr2h,c
 10724  001AD8  CFDE F06B          	movff	postinc2,btemp+1
 10725  001ADC  CFDD F06C          	movff	postdec2,btemp+2
 10726  001AE0  C06B  FFE6         	movff	btemp+1,postinc1
 10727  001AE4  C06C  FFE6         	movff	btemp+2,postinc1
 10728  001AE8  EC90  F00D         	call	_RF24N_write	;wreg free
 10729  001AEC                     l4218:
 10730  001AEC  EC7B  F01D         	call	_RF24_isValid	;wreg free
 10731  001AF0  0900               	iorlw	0
 10732  001AF2  B4D8               	btfsc	status,2,c
 10733  001AF4  D730               	goto	l4178
 10734                           
 10735                           ;stkvar	RF24N_update@pipe_num @ sp[(-5)+4]
 10736  001AF6  0EFF               	movlw	255
 10737  001AF8  24E1               	addwf	fsr1l,w,c
 10738  001AFA  6E6B               	movwf	btemp+1,c
 10739  001AFC  0EFF               	movlw	255
 10740  001AFE  20E2               	addwfc	fsr1h,w,c
 10741  001B00  6E6C               	movwf	btemp+2,c
 10742  001B02  C06B  F010         	movff	btemp+1,RF24_available_p@pipe_num
 10743  001B06  C06C  F011         	movff	btemp+2,RF24_available_p@pipe_num+1
 10744  001B0A  EC78  F01C         	call	_RF24_available_p	;wreg free
 10745  001B0E  0900               	iorlw	0
 10746  001B10  B4D8               	btfsc	status,2,c
 10747  001B12  D721               	goto	l4178
 10748  001B14  D595               	goto	l4118
 10749  001B16                     l781:
 10750                           
 10751                           ; _RF24N_update: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10752  001B16  0EFB               	movlw	251
 10753  001B18  26E1               	addwf	fsr1l,f,c
 10754  001B1A  0EFF               	movlw	255
 10755  001B1C  22E2               	addwfc	fsr1h,f,c
 10756  001B1E  0012               	return		;funcret
 10757  001B20                     __end_of_RF24N_update:
 10758                           	opt stack 0
 10759                           tblptru	equ	0xFF8
 10760                           tblptrh	equ	0xFF7
 10761                           tblptrl	equ	0xFF6
 10762                           tablat	equ	0xFF5
 10763                           prodh	equ	0xFF4
 10764                           prodl	equ	0xFF3
 10765                           intcon	equ	0xFF2
 10766                           indf0	equ	0xFEF
 10767                           postinc0	equ	0xFEE
 10768                           postdec0	equ	0xFED
 10769                           plusw0	equ	0xFEB
 10770                           fsr0h	equ	0xFEA
 10771                           fsr0l	equ	0xFE9
 10772                           wreg	equ	0xFE8
 10773                           postinc1	equ	0xFE6
 10774                           plusw1	equ	0xFE3
 10775                           fsr1h	equ	0xFE2
 10776                           fsr1l	equ	0xFE1
 10777                           indf2	equ	0xFDF
 10778                           postinc2	equ	0xFDE
 10779                           postdec2	equ	0xFDD
 10780                           plusw2	equ	0xFDB
 10781                           fsr2h	equ	0xFDA
 10782                           fsr2l	equ	0xFD9
 10783                           status	equ	0xFD8
 10784                           
 10785 ;; *************** function _delay *****************
 10786 ;; Defined at:
 10787 ;;		line 181 in file "../../../RF24_c/utility/XC8/spi.c"
 10788 ;; Parameters:    Size  Location     Type
 10789 ;;  val             2    2[COMRAM] unsigned int 
 10790 ;; Auto vars:     Size  Location     Type
 10791 ;;  j               2    6[COMRAM] unsigned int 
 10792 ;;  i               2    4[COMRAM] unsigned int 
 10793 ;; Return value:  Size  Location     Type
 10794 ;;                  1    wreg      void 
 10795 ;; Registers used:
 10796 ;;		wreg, status,2, status,0
 10797 ;; Tracked objects:
 10798 ;;		On entry : 0/0
 10799 ;;		On exit  : 0/0
 10800 ;;		Unchanged: 0/0
 10801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10802 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10803 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10805 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10806 ;;Total ram usage:        6 bytes
 10807 ;; Hardware stack levels used:    1
 10808 ;; Hardware stack levels required when called:    1
 10809 ;; This function calls:
 10810 ;;		Nothing
 10811 ;; This function is called by:
 10812 ;;		_RF24_begin
 10813 ;;		_RF24_powerUp
 10814 ;;		_RF24_getDynamicPayloadSize
 10815 ;;		_RF24N_update
 10816 ;;		_RF24N_write_
 10817 ;;		_Serial_rx
 10818 ;; This function uses a non-reentrant model
 10819 ;;
 10820                           
 10821                           	psect	text63
 10822  0035A8                     __ptext63:
 10823                           	opt stack 0
 10824  0035A8                     _delay:
 10825                           	opt stack 27
 10826                           
 10827                           ;spi.c: 183: unsigned int i;
 10828                           ;spi.c: 184: unsigned int j;
 10829                           ;spi.c: 186: for (i =0; i< val; i++)
 10830                           
 10831                           ;incstack = 0
 10832  0035A8  0E00               	movlw	0
 10833  0035AA  6E06               	movwf	delay@i+1,c
 10834  0035AC  0E00               	movlw	0
 10835  0035AE  6E05               	movwf	delay@i,c
 10836  0035B0  D019               	goto	l3496
 10837  0035B2                     l3484:
 10838                           
 10839                           ;spi.c: 187: {
 10840                           ;spi.c: 189: for (j =0 ; j < (32000000/(4000l*10)); j++)
 10841  0035B2  0E00               	movlw	0
 10842  0035B4  6E08               	movwf	delay@j+1,c
 10843  0035B6  0E00               	movlw	0
 10844  0035B8  6E07               	movwf	delay@j,c
 10845  0035BA                     l3486:
 10846  0035BA  0E20               	movlw	32
 10847  0035BC  5C07               	subwf	delay@j,w,c
 10848  0035BE  0E03               	movlw	3
 10849  0035C0  5808               	subwfb	delay@j+1,w,c
 10850  0035C2  B0D8               	btfsc	status,0,c
 10851  0035C4  D00D               	goto	l3494
 10852  0035C6  F000               	nop		;# 
 10853  0035C8  F000               	nop		;# 
 10854  0035CA  F000               	nop		;# 
 10855  0035CC  F000               	nop		;# 
 10856  0035CE  F000               	nop		;# 
 10857  0035D0  F000               	nop		;# 
 10858  0035D2  F000               	nop		;# 
 10859  0035D4  F000               	nop		;# 
 10860  0035D6  F000               	nop		;# 
 10861  0035D8  F000               	nop		;# 
 10862  0035DA  4A07               	infsnz	delay@j,f,c
 10863  0035DC  2A08               	incf	delay@j+1,f,c
 10864  0035DE  D7ED               	goto	l3486
 10865  0035E0                     l3494:
 10866  0035E0  4A05               	infsnz	delay@i,f,c
 10867  0035E2  2A06               	incf	delay@i+1,f,c
 10868  0035E4                     l3496:
 10869  0035E4  5003               	movf	delay@val,w,c
 10870  0035E6  5C05               	subwf	delay@i,w,c
 10871  0035E8  5004               	movf	delay@val+1,w,c
 10872  0035EA  5806               	subwfb	delay@i+1,w,c
 10873  0035EC  B0D8               	btfsc	status,0,c
 10874  0035EE  0012               	return	
 10875  0035F0  D7E0               	goto	l3484
 10876  0035F2                     __end_of_delay:
 10877                           	opt stack 0
 10878                           tblptru	equ	0xFF8
 10879                           tblptrh	equ	0xFF7
 10880                           tblptrl	equ	0xFF6
 10881                           tablat	equ	0xFF5
 10882                           prodh	equ	0xFF4
 10883                           prodl	equ	0xFF3
 10884                           intcon	equ	0xFF2
 10885                           indf0	equ	0xFEF
 10886                           postinc0	equ	0xFEE
 10887                           postdec0	equ	0xFED
 10888                           plusw0	equ	0xFEB
 10889                           fsr0h	equ	0xFEA
 10890                           fsr0l	equ	0xFE9
 10891                           wreg	equ	0xFE8
 10892                           postinc1	equ	0xFE6
 10893                           plusw1	equ	0xFE3
 10894                           fsr1h	equ	0xFE2
 10895                           fsr1l	equ	0xFE1
 10896                           indf2	equ	0xFDF
 10897                           postinc2	equ	0xFDE
 10898                           postdec2	equ	0xFDD
 10899                           plusw2	equ	0xFDB
 10900                           fsr2h	equ	0xFDA
 10901                           fsr2l	equ	0xFD9
 10902                           status	equ	0xFD8
 10903                           
 10904 ;; *************** function _RF24N_write *****************
 10905 ;; Defined at:
 10906 ;;		line 981 in file "../../RF24Network_cg.c"
 10907 ;; Parameters:    Size  Location     Type
 10908 ;;  to_node         2  [STACK] unsigned int 
 10909 ;;  directTo        1  [STACK] unsigned char 
 10910 ;; Auto vars:     Size  Location     Type
 10911 ;;  header          2  [STACK] PTR struct .
 10912 ;;		 -> rn.frame_buffer(32), rn(370), 
 10913 ;;  conversion      4  [STACK] struct .
 10914 ;;  reply_time      4  [STACK] unsigned long 
 10915 ;;  ok              1  [STACK] unsigned char 
 10916 ;;  isAckType       1  [STACK] unsigned char 
 10917 ;; Return value:  Size  Location     Type
 10918 ;;                  1  [STACK] unsigned char 
 10919 ;; Registers used:
 10920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10930 ;;Total ram usage:        0 bytes
 10931 ;; Hardware stack levels used:    1
 10932 ;; Hardware stack levels required when called:    9
 10933 ;; This function calls:
 10934 ;;		_RF24N_is_valid_address
 10935 ;;		_RF24N_logicalToPhysicalAddress
 10936 ;;		_RF24N_update
 10937 ;;		_RF24N_write_to_pipe
 10938 ;;		_RF24_setAutoAck_p
 10939 ;;		_RF24_startListening
 10940 ;;		_RF24_txStandBy_t
 10941 ;;		_millis
 10942 ;; This function is called by:
 10943 ;;		_RF24N_update
 10944 ;;		_RF24N__write
 10945 ;; This function uses a recursive model
 10946 ;;
 10947                           
 10948                           	psect	text64
 10949  001B20                     __ptext64:
 10950                           	opt stack 0
 10951  001B20                     _RF24N_write:
 10952                           	opt stack 17
 10953                           
 10954                           ;incstack = 0
 10955  001B20  0E0C               	movlw	12
 10956  001B22  26E1               	addwf	fsr1l,f,c
 10957  001B24  0E00               	movlw	0
 10958  001B26  22E2               	addwfc	fsr1h,f,c
 10959                           
 10960                           ;RF24Network_cg.c: 984: uint8_t isAckType = 0;
 10961                           ;stkvar	RF24N_write@isAckType @ sp[(-12)+11]
 10962  001B28  0EFF               	movlw	-1
 10963  001B2A  6AE3               	clrf	plusw1,c
 10964                           
 10965                           ;RF24Network_cg.c: 985: uint32_t reply_time ;
 10966                           ;RF24Network_cg.c: 986: logicalToPhysicalStruct conversion;
 10967                           ;RF24Network_cg.c: 988: if(rn.frame_buffer[6] > 64 && rn.frame_buffer[6] < 192 ){ isAckT
      +                          ype=1; }
 10968  001B2C  EE20  F0E2         	lfsr	2,_rn+13
 10969  001B30  0E40               	movlw	64
 10970  001B32  64DF               	cpfsgt	indf2,c
 10971  001B34  D008               	goto	l3840
 10972  001B36  EE20  F0E2         	lfsr	2,_rn+13
 10973  001B3A  0EC0               	movlw	192
 10974  001B3C  60DF               	cpfslt	indf2,c
 10975  001B3E  D003               	goto	l3840
 10976                           
 10977                           ;stkvar	RF24N_write@isAckType @ sp[(-12)+11]
 10978  001B40  0EFF               	movlw	-1
 10979  001B42  6AE3               	clrf	plusw1,c
 10980  001B44  2AE3               	incf	plusw1,f,c
 10981  001B46                     l3840:
 10982                           
 10983                           ;RF24Network_cg.c: 995: if ( !RF24N_is_valid_address(to_node) )
 10984                           ;stkvar	RF24N_write@to_node @ sp[(-12)+-2]
 10985  001B46  0EF2               	movlw	-14
 10986  001B48  CFE3 F003          	movff	plusw1,RF24N_is_valid_address@node
 10987  001B4C  0EF3               	movlw	-13
 10988  001B4E  CFE3 F004          	movff	plusw1,RF24N_is_valid_address@node+1
 10989  001B52  EC2A  F01C         	call	_RF24N_is_valid_address	;wreg free
 10990  001B56  0900               	iorlw	0
 10991  001B58  A4D8               	btfss	status,2,c
 10992  001B5A  D003               	goto	l3846
 10993                           
 10994                           ;RF24Network_cg.c: 996: return 0;
 10995  001B5C  0E00               	movlw	0
 10996  001B5E  6E6A               	movwf	btemp,c
 10997  001B60  D165               	goto	l906
 10998  001B62                     l3846:
 10999                           
 11000                           ;RF24Network_cg.c: 999: conversion.send_node= to_node;
 11001                           ;stkvar	RF24N_write@to_node @ sp[(-12)+-2]
 11002                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11003  001B62  0EF2               	movlw	-14
 11004  001B64  CFE3 F06A          	movff	plusw1,btemp
 11005  001B68  0EF6               	movlw	-10
 11006  001B6A  C06A  FFE3         	movff	btemp,plusw1
 11007  001B6E  0EF3               	movlw	-13
 11008  001B70  CFE3 F06A          	movff	plusw1,btemp
 11009  001B74  0EF7               	movlw	-9
 11010  001B76  C06A  FFE3         	movff	btemp,plusw1
 11011                           
 11012                           ;RF24Network_cg.c: 1000: conversion.send_pipe=directTo;
 11013                           ;stkvar	RF24N_write@directTo @ sp[(-12)+-3]
 11014                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11015  001B7A  0EF8               	movlw	248
 11016  001B7C  24E1               	addwf	fsr1l,w,c
 11017  001B7E  6ED9               	movwf	fsr2l,c
 11018  001B80  0EFF               	movlw	255
 11019  001B82  20E2               	addwfc	fsr1h,w,c
 11020  001B84  6EDA               	movwf	fsr2h,c
 11021  001B86  0EF1               	movlw	-15
 11022  001B88  CFE3 FFDF          	movff	plusw1,indf2
 11023                           
 11024                           ;RF24Network_cg.c: 1001: conversion.multicast=0;
 11025                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11026  001B8C  0EF9               	movlw	249
 11027  001B8E  24E1               	addwf	fsr1l,w,c
 11028  001B90  6ED9               	movwf	fsr2l,c
 11029  001B92  0EFF               	movlw	255
 11030  001B94  20E2               	addwfc	fsr1h,w,c
 11031  001B96  6EDA               	movwf	fsr2h,c
 11032  001B98  0E00               	movlw	0
 11033  001B9A  6EDF               	movwf	indf2,c
 11034                           
 11035                           ;RF24Network_cg.c: 1002: RF24N_logicalToPhysicalAddress( &conversion);
 11036                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11037  001B9C  0EF6               	movlw	246
 11038  001B9E  24E1               	addwf	fsr1l,w,c
 11039  001BA0  6E6B               	movwf	btemp+1,c
 11040  001BA2  0EFF               	movlw	255
 11041  001BA4  20E2               	addwfc	fsr1h,w,c
 11042  001BA6  6E6C               	movwf	btemp+2,c
 11043  001BA8  C06B  F015         	movff	btemp+1,RF24N_logicalToPhysicalAddress@conversionInfo
 11044  001BAC  C06C  F016         	movff	btemp+2,RF24N_logicalToPhysicalAddress@conversionInfo+1
 11045  001BB0  ECD7  F014         	call	_RF24N_logicalToPhysicalAddress	;wreg free
 11046                           
 11047                           ;RF24Network_cg.c: 1007: ;
 11048                           ;RF24Network_cg.c: 1010: ok=RF24N_write_to_pipe(conversion.send_node, conversion.send_pi
      +                          pe, conversion.multicast);
 11049                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11050  001BB4  0EF6               	movlw	-10
 11051  001BB6  CFE3 F030          	movff	plusw1,RF24N_write_to_pipe@node
 11052  001BBA  0EF7               	movlw	-9
 11053  001BBC  CFE3 F031          	movff	plusw1,RF24N_write_to_pipe@node+1
 11054                           
 11055                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11056  001BC0  0EF8               	movlw	248
 11057  001BC2  24E1               	addwf	fsr1l,w,c
 11058  001BC4  6ED9               	movwf	fsr2l,c
 11059  001BC6  0EFF               	movlw	255
 11060  001BC8  20E2               	addwfc	fsr1h,w,c
 11061  001BCA  6EDA               	movwf	fsr2h,c
 11062  001BCC  50DF               	movf	indf2,w,c
 11063  001BCE  6E32               	movwf	RF24N_write_to_pipe@pipe,c
 11064                           
 11065                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11066  001BD0  0EF9               	movlw	249
 11067  001BD2  24E1               	addwf	fsr1l,w,c
 11068  001BD4  6ED9               	movwf	fsr2l,c
 11069  001BD6  0EFF               	movlw	255
 11070  001BD8  20E2               	addwfc	fsr1h,w,c
 11071  001BDA  6EDA               	movwf	fsr2h,c
 11072  001BDC  50DF               	movf	indf2,w,c
 11073  001BDE  6E33               	movwf	RF24N_write_to_pipe@multicast,c
 11074  001BE0  EC5A  F017         	call	_RF24N_write_to_pipe	;wreg free
 11075  001BE4  6E75               	movwf	btemp+11,c
 11076                           
 11077                           ;stkvar	RF24N_write@ok @ sp[(-12)+10]
 11078  001BE6  0EFE               	movlw	-2
 11079  001BE8  C075  FFE3         	movff	btemp+11,plusw1
 11080                           
 11081                           ;RF24Network_cg.c: 1019: }
 11082                           ;RF24Network_cg.c: 1022: if( directTo == 1 && ok && conversion.send_node == to_node && i
      +                          sAckType){
 11083                           ;stkvar	RF24N_write@directTo @ sp[(-12)+-3]
 11084  001BEC  0EF1               	movlw	-15
 11085  001BEE  04E3               	decf	plusw1,w,c
 11086  001BF0  A4D8               	btfss	status,2,c
 11087  001BF2  D089               	goto	l3884
 11088                           
 11089                           ;stkvar	RF24N_write@ok @ sp[(-12)+10]
 11090  001BF4  0EFE               	movlw	-2
 11091  001BF6  50E3               	movf	plusw1,w,c
 11092  001BF8  B4D8               	btfsc	status,2,c
 11093  001BFA  D085               	goto	l3884
 11094                           
 11095                           ;stkvar	RF24N_write@to_node @ sp[(-12)+-2]
 11096                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11097  001BFC  50E1               	movf	fsr1l,w,c
 11098  001BFE  0FF6               	addlw	-10
 11099  001C00  6ED9               	movwf	fsr2l,c
 11100  001C02  50E2               	movf	fsr1h,w,c
 11101  001C04  6EDA               	movwf	fsr2h,c
 11102  001C06  0EFF               	movlw	255
 11103  001C08  22DA               	addwfc	fsr2h,f,c
 11104  001C0A  0EF2               	movlw	-14
 11105  001C0C  50E3               	movf	plusw1,w,c
 11106  001C0E  18DE               	xorwf	postinc2,w,c
 11107  001C10  E17A               	bnz	l3884
 11108  001C12  0EF3               	movlw	-13
 11109  001C14  50E3               	movf	plusw1,w,c
 11110  001C16  18DE               	xorwf	postinc2,w,c
 11111  001C18  A4D8               	btfss	status,2,c
 11112  001C1A  D075               	goto	l3884
 11113                           
 11114                           ;stkvar	RF24N_write@isAckType @ sp[(-12)+11]
 11115  001C1C  0EFF               	movlw	-1
 11116  001C1E  50E3               	movf	plusw1,w,c
 11117  001C20  B4D8               	btfsc	status,2,c
 11118  001C22  D071               	goto	l3884
 11119                           
 11120                           ;RF24Network_cg.c: 1024: RF24NetworkHeader* header = (RF24NetworkHeader*)rn.frame_buffer
      +                          ;
 11121                           ;stkvar	RF24N_write@header @ sp[(-12)+0]
 11122  001C24  0E00               	movlw	high (_rn+7)
 11123  001C26  6E6A               	movwf	btemp,c
 11124  001C28  0EF5               	movlw	-11
 11125  001C2A  C06A  FFE3         	movff	btemp,plusw1
 11126  001C2E  0EDC               	movlw	low (_rn+7)
 11127  001C30  6E6A               	movwf	btemp,c
 11128  001C32  0EF4               	movlw	-12
 11129  001C34  C06A  FFE3         	movff	btemp,plusw1
 11130                           
 11131                           ;RF24Network_cg.c: 1025: header->type = 193;
 11132                           ;stkvar	RF24N_write@header @ sp[(-12)+0]
 11133  001C38  0EF4               	movlw	-12
 11134  001C3A  CFE3 F06B          	movff	plusw1,btemp+1
 11135  001C3E  0EF5               	movlw	-11
 11136  001C40  CFE3 F06C          	movff	plusw1,btemp+2
 11137  001C44  0E06               	movlw	6
 11138  001C46  246B               	addwf	btemp+1,w,c
 11139  001C48  6ED9               	movwf	fsr2l,c
 11140  001C4A  0E00               	movlw	0
 11141  001C4C  206C               	addwfc	btemp+2,w,c
 11142  001C4E  6EDA               	movwf	fsr2h,c
 11143  001C50  0EC1               	movlw	193
 11144  001C52  6EDF               	movwf	indf2,c
 11145                           
 11146                           ;RF24Network_cg.c: 1026: header->to_node = header->from_node;
 11147                           ;stkvar	RF24N_write@header @ sp[(-12)+0]
 11148  001C54  0EF4               	movlw	-12
 11149  001C56  CFE3 FFD9          	movff	plusw1,fsr2l
 11150  001C5A  0EF5               	movlw	-11
 11151  001C5C  CFE3 FFDA          	movff	plusw1,fsr2h
 11152                           
 11153                           ;stkvar	RF24N_write@header @ sp[(-12)+0]
 11154  001C60  0EF4               	movlw	-12
 11155  001C62  CFE3 F06B          	movff	plusw1,btemp+1
 11156  001C66  0EF5               	movlw	-11
 11157  001C68  CFE3 F06C          	movff	plusw1,btemp+2
 11158  001C6C  0E02               	movlw	2
 11159  001C6E  246B               	addwf	btemp+1,w,c
 11160  001C70  6EE9               	movwf	fsr0l,c
 11161  001C72  0E00               	movlw	0
 11162  001C74  206C               	addwfc	btemp+2,w,c
 11163  001C76  6EEA               	movwf	fsr0h,c
 11164  001C78  CFDE FFEE          	movff	postinc2,postinc0
 11165  001C7C  CFDD FFED          	movff	postdec2,postdec0
 11166                           
 11167                           ;RF24Network_cg.c: 1028: conversion.send_node = header->from_node;
 11168                           ;stkvar	RF24N_write@header @ sp[(-12)+0]
 11169                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11170  001C80  0EF4               	movlw	-12
 11171  001C82  CFE3 FFE9          	movff	plusw1,fsr0l
 11172  001C86  0EF5               	movlw	-11
 11173  001C88  CFE3 FFEA          	movff	plusw1,fsr0h
 11174  001C8C  0EF6               	movlw	-10
 11175  001C8E  CFEE FFE3          	movff	postinc0,plusw1
 11176  001C92  0EF7               	movlw	-9
 11177  001C94  CFED FFE3          	movff	postdec0,plusw1
 11178                           
 11179                           ;RF24Network_cg.c: 1029: conversion.send_pipe = 1;
 11180                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11181  001C98  0EF8               	movlw	248
 11182  001C9A  24E1               	addwf	fsr1l,w,c
 11183  001C9C  6ED9               	movwf	fsr2l,c
 11184  001C9E  0EFF               	movlw	255
 11185  001CA0  20E2               	addwfc	fsr1h,w,c
 11186  001CA2  6EDA               	movwf	fsr2h,c
 11187  001CA4  0E01               	movlw	1
 11188  001CA6  6EDF               	movwf	indf2,c
 11189                           
 11190                           ;RF24Network_cg.c: 1030: conversion.multicast = 0;
 11191                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11192  001CA8  0EF9               	movlw	249
 11193  001CAA  24E1               	addwf	fsr1l,w,c
 11194  001CAC  6ED9               	movwf	fsr2l,c
 11195  001CAE  0EFF               	movlw	255
 11196  001CB0  20E2               	addwfc	fsr1h,w,c
 11197  001CB2  6EDA               	movwf	fsr2h,c
 11198  001CB4  0E00               	movlw	0
 11199  001CB6  6EDF               	movwf	indf2,c
 11200                           
 11201                           ;RF24Network_cg.c: 1031: RF24N_logicalToPhysicalAddress(&conversion);
 11202                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11203  001CB8  0EF6               	movlw	246
 11204  001CBA  24E1               	addwf	fsr1l,w,c
 11205  001CBC  6E6B               	movwf	btemp+1,c
 11206  001CBE  0EFF               	movlw	255
 11207  001CC0  20E2               	addwfc	fsr1h,w,c
 11208  001CC2  6E6C               	movwf	btemp+2,c
 11209  001CC4  C06B  F015         	movff	btemp+1,RF24N_logicalToPhysicalAddress@conversionInfo
 11210  001CC8  C06C  F016         	movff	btemp+2,RF24N_logicalToPhysicalAddress@conversionInfo+1
 11211  001CCC  ECD7  F014         	call	_RF24N_logicalToPhysicalAddress	;wreg free
 11212                           
 11213                           ;RF24Network_cg.c: 1034: rn.frame_size = sizeof(RF24NetworkHeader);
 11214  001CD0  0E08               	movlw	8
 11215  001CD2  CFE8 F107          	movff	wreg,_rn+50
 11216                           
 11217                           ;RF24Network_cg.c: 1035: RF24N_write_to_pipe(conversion.send_node, conversion.send_pipe,
      +                           conversion.multicast);
 11218                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11219  001CD6  0EF6               	movlw	-10
 11220  001CD8  CFE3 F030          	movff	plusw1,RF24N_write_to_pipe@node
 11221  001CDC  0EF7               	movlw	-9
 11222  001CDE  CFE3 F031          	movff	plusw1,RF24N_write_to_pipe@node+1
 11223                           
 11224                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11225  001CE2  0EF8               	movlw	248
 11226  001CE4  24E1               	addwf	fsr1l,w,c
 11227  001CE6  6ED9               	movwf	fsr2l,c
 11228  001CE8  0EFF               	movlw	255
 11229  001CEA  20E2               	addwfc	fsr1h,w,c
 11230  001CEC  6EDA               	movwf	fsr2h,c
 11231  001CEE  50DF               	movf	indf2,w,c
 11232  001CF0  6E32               	movwf	RF24N_write_to_pipe@pipe,c
 11233                           
 11234                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11235  001CF2  0EF9               	movlw	249
 11236  001CF4  24E1               	addwf	fsr1l,w,c
 11237  001CF6  6ED9               	movwf	fsr2l,c
 11238  001CF8  0EFF               	movlw	255
 11239  001CFA  20E2               	addwfc	fsr1h,w,c
 11240  001CFC  6EDA               	movwf	fsr2h,c
 11241  001CFE  50DF               	movf	indf2,w,c
 11242  001D00  6E33               	movwf	RF24N_write_to_pipe@multicast,c
 11243  001D02  EC5A  F017         	call	_RF24N_write_to_pipe	;wreg free
 11244  001D06                     l3884:
 11245                           
 11246                           ;RF24Network_cg.c: 1043: }
 11247                           ;RF24Network_cg.c: 1047: if( ok && conversion.send_node != to_node && (directTo==0 || di
      +                          rectTo==3) && isAckType){
 11248                           ;stkvar	RF24N_write@ok @ sp[(-12)+10]
 11249  001D06  0EFE               	movlw	-2
 11250  001D08  50E3               	movf	plusw1,w,c
 11251  001D0A  B4D8               	btfsc	status,2,c
 11252  001D0C  D087               	goto	l3912
 11253                           
 11254                           ;stkvar	RF24N_write@to_node @ sp[(-12)+-2]
 11255                           ;stkvar	RF24N_write@conversion @ sp[(-12)+2]
 11256  001D0E  50E1               	movf	fsr1l,w,c
 11257  001D10  0FF6               	addlw	-10
 11258  001D12  6ED9               	movwf	fsr2l,c
 11259  001D14  50E2               	movf	fsr1h,w,c
 11260  001D16  6EDA               	movwf	fsr2h,c
 11261  001D18  0EFF               	movlw	255
 11262  001D1A  22DA               	addwfc	fsr2h,f,c
 11263  001D1C  0EF2               	movlw	-14
 11264  001D1E  50E3               	movf	plusw1,w,c
 11265  001D20  18DE               	xorwf	postinc2,w,c
 11266  001D22  E105               	bnz	u4130
 11267  001D24  0EF3               	movlw	-13
 11268  001D26  50E3               	movf	plusw1,w,c
 11269  001D28  18DE               	xorwf	postinc2,w,c
 11270  001D2A  B4D8               	btfsc	status,2,c
 11271  001D2C  D077               	goto	l3912
 11272  001D2E                     u4130:
 11273                           
 11274                           ;stkvar	RF24N_write@directTo @ sp[(-12)+-3]
 11275  001D2E  0EF1               	movlw	-15
 11276  001D30  50E3               	movf	plusw1,w,c
 11277  001D32  B4D8               	btfsc	status,2,c
 11278  001D34  D007               	goto	l3892
 11279                           
 11280                           ;stkvar	RF24N_write@directTo @ sp[(-12)+-3]
 11281  001D36  0EF1               	movlw	-15
 11282  001D38  CFE3 F06A          	movff	plusw1,btemp
 11283  001D3C  0E03               	movlw	3
 11284  001D3E  186A               	xorwf	btemp,w,c
 11285  001D40  A4D8               	btfss	status,2,c
 11286  001D42  D06C               	goto	l3912
 11287  001D44                     l3892:
 11288                           
 11289                           ;stkvar	RF24N_write@isAckType @ sp[(-12)+11]
 11290  001D44  0EFF               	movlw	-1
 11291  001D46  50E3               	movf	plusw1,w,c
 11292  001D48  B4D8               	btfsc	status,2,c
 11293  001D4A  D068               	goto	l3912
 11294                           
 11295                           ;RF24Network_cg.c: 1050: if(rn.networkFlags & 4){
 11296  001D4C  EE20  F0FF         	lfsr	2,_rn+42
 11297  001D50  A4DF               	btfss	indf2,2,c
 11298  001D52  D016               	goto	l3902
 11299                           
 11300                           ;RF24Network_cg.c: 1051: RF24_txStandBy_t(rn.txTimeout,0);
 11301  001D54  C0D6  F013         	movff	_rn+1,RF24_txStandBy_t@timeout
 11302  001D58  C0D7  F014         	movff	_rn+2,RF24_txStandBy_t@timeout+1
 11303  001D5C  C0D8  F015         	movff	_rn+3,RF24_txStandBy_t@timeout+2
 11304  001D60  C0D9  F016         	movff	_rn+4,RF24_txStandBy_t@timeout+3
 11305  001D64  0E00               	movlw	0
 11306  001D66  6E17               	movwf	RF24_txStandBy_t@startTx,c
 11307  001D68  ECFC  F016         	call	_RF24_txStandBy_t	;wreg free
 11308                           
 11309                           ;RF24Network_cg.c: 1052: rn.networkFlags &= ~4;
 11310  001D6C  C0FF  FFE8         	movff	_rn+42,wreg
 11311  001D70  0BFB               	andlw	251
 11312  001D72  CFE8 F0FF          	movff	wreg,_rn+42
 11313                           
 11314                           ;RF24Network_cg.c: 1053: RF24_setAutoAck_p(0,0);
 11315  001D76  0E00               	movlw	0
 11316  001D78  6E11               	movwf	RF24_setAutoAck_p@enable,c
 11317  001D7A  0E00               	movlw	0
 11318  001D7C  EC0E  F01A         	call	_RF24_setAutoAck_p
 11319  001D80                     l3902:
 11320                           
 11321                           ;RF24Network_cg.c: 1054: }
 11322                           ;RF24Network_cg.c: 1055: RF24_startListening();
 11323  001D80  ECE2  F019         	call	_RF24_startListening	;wreg free
 11324                           
 11325                           ;RF24Network_cg.c: 1057: reply_time = millis();
 11326  001D84  ECC5  F01D         	call	_millis	;wreg free
 11327  001D88  C003  F072         	movff	?_millis,btemp+8
 11328  001D8C  C004  F073         	movff	?_millis+1,btemp+9
 11329  001D90  C005  F074         	movff	?_millis+2,btemp+10
 11330  001D94  C006  F075         	movff	?_millis+3,btemp+11
 11331                           
 11332                           ;stkvar	RF24N_write@reply_time @ sp[(-12)+6]
 11333  001D98  0EFA               	movlw	-6
 11334  001D9A  C072  FFE3         	movff	btemp+8,plusw1
 11335  001D9E  0EFB               	movlw	-5
 11336  001DA0  C073  FFE3         	movff	btemp+9,plusw1
 11337  001DA4  0EFC               	movlw	-4
 11338  001DA6  C074  FFE3         	movff	btemp+10,plusw1
 11339  001DAA  0EFD               	movlw	-3
 11340  001DAC  C075  FFE3         	movff	btemp+11,plusw1
 11341                           
 11342                           ;RF24Network_cg.c: 1059: while( RF24N_update() != 193){
 11343  001DB0  D02F               	goto	l3910
 11344  001DB2                     l3906:
 11345                           
 11346                           ;RF24Network_cg.c: 1063: if(millis() - reply_time > rn.routeTimeout){
 11347                           ;stkvar	RF24N_write@reply_time @ sp[(-12)+6]
 11348  001DB2  ECC5  F01D         	call	_millis	;wreg free
 11349  001DB6  C003  F072         	movff	?_millis,btemp+8
 11350  001DBA  C004  F073         	movff	?_millis+1,btemp+9
 11351  001DBE  C005  F074         	movff	?_millis+2,btemp+10
 11352  001DC2  C006  F075         	movff	?_millis+3,btemp+11
 11353  001DC6  0EFA               	movlw	-6
 11354  001DC8  50E3               	movf	plusw1,w,c
 11355  001DCA  5E72               	subwf	btemp+8,f,c
 11356  001DCC  0EFB               	movlw	-5
 11357  001DCE  50E3               	movf	plusw1,w,c
 11358  001DD0  5A73               	subwfb	btemp+9,f,c
 11359  001DD2  0EFC               	movlw	-4
 11360  001DD4  50E3               	movf	plusw1,w,c
 11361  001DD6  5A74               	subwfb	btemp+10,f,c
 11362  001DD8  0EFD               	movlw	-3
 11363  001DDA  50E3               	movf	plusw1,w,c
 11364  001DDC  5A75               	subwfb	btemp+11,f,c
 11365  001DDE  EE20  F0DA         	lfsr	2,_rn+5
 11366  001DE2  CFDE F070          	movff	postinc2,btemp+6
 11367  001DE6  CFDD F071          	movff	postdec2,btemp+7
 11368  001DEA  5070               	movf	btemp+6,w,c
 11369  001DEC  6E6A               	movwf	btemp,c
 11370  001DEE  5071               	movf	btemp+7,w,c
 11371  001DF0  6E6B               	movwf	btemp+1,c
 11372  001DF2  6A6C               	clrf	btemp+2,c
 11373  001DF4  6A6D               	clrf	btemp+3,c
 11374  001DF6  5072               	movf	btemp+8,w,c
 11375  001DF8  5C6A               	subwf	btemp,w,c
 11376  001DFA  5073               	movf	btemp+9,w,c
 11377  001DFC  586B               	subwfb	btemp+1,w,c
 11378  001DFE  5074               	movf	btemp+10,w,c
 11379  001E00  586C               	subwfb	btemp+2,w,c
 11380  001E02  5075               	movf	btemp+11,w,c
 11381  001E04  586D               	subwfb	btemp+3,w,c
 11382  001E06  B0D8               	btfsc	status,0,c
 11383  001E08  D003               	goto	l3910
 11384                           
 11385                           ;RF24Network_cg.c: 1067: ;
 11386                           ;RF24Network_cg.c: 1069: ok=0;
 11387                           ;stkvar	RF24N_write@ok @ sp[(-12)+10]
 11388  001E0A  0EFE               	movlw	-2
 11389  001E0C  6AE3               	clrf	plusw1,c
 11390                           
 11391                           ;RF24Network_cg.c: 1070: break;
 11392  001E0E  D006               	goto	l3912
 11393  001E10                     l3910:
 11394  001E10  ECE7  F00A         	call	_RF24N_update	;wreg free
 11395  001E14  0EC1               	movlw	193
 11396  001E16  186A               	xorwf	btemp,w,c
 11397  001E18  A4D8               	btfss	status,2,c
 11398  001E1A  D7CB               	goto	l3906
 11399  001E1C                     l3912:
 11400                           
 11401                           ;RF24Network_cg.c: 1071: }
 11402                           ;RF24Network_cg.c: 1072: }
 11403                           ;RF24Network_cg.c: 1073: }
 11404                           ;RF24Network_cg.c: 1074: if( !(rn.networkFlags & 4) ){
 11405  001E1C  EE20  F0FF         	lfsr	2,_rn+42
 11406  001E20  A4DF               	btfss	indf2,2,c
 11407                           
 11408                           ;RF24Network_cg.c: 1077: RF24_startListening();
 11409  001E22  ECE2  F019         	call	_RF24_startListening	;wreg free
 11410                           
 11411                           ;RF24Network_cg.c: 1079: }
 11412                           ;RF24Network_cg.c: 1087: return ok;
 11413                           ;stkvar	RF24N_write@ok @ sp[(-12)+10]
 11414  001E26  0EFE               	movlw	-2
 11415  001E28  CFE3 F06A          	movff	plusw1,btemp
 11416  001E2C                     l906:
 11417                           
 11418                           ; _RF24N_write: autosize = 12, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, 
      +                          argsize = 3, vargsize = 0
 11419  001E2C  0EF1               	movlw	241
 11420  001E2E  26E1               	addwf	fsr1l,f,c
 11421  001E30  0EFF               	movlw	255
 11422  001E32  22E2               	addwfc	fsr1h,f,c
 11423  001E34  0012               	return		;funcret
 11424  001E36                     __end_of_RF24N_write:
 11425                           	opt stack 0
 11426                           tblptru	equ	0xFF8
 11427                           tblptrh	equ	0xFF7
 11428                           tblptrl	equ	0xFF6
 11429                           tablat	equ	0xFF5
 11430                           prodh	equ	0xFF4
 11431                           prodl	equ	0xFF3
 11432                           intcon	equ	0xFF2
 11433                           indf0	equ	0xFEF
 11434                           postinc0	equ	0xFEE
 11435                           postdec0	equ	0xFED
 11436                           plusw0	equ	0xFEB
 11437                           fsr0h	equ	0xFEA
 11438                           fsr0l	equ	0xFE9
 11439                           wreg	equ	0xFE8
 11440                           postinc1	equ	0xFE6
 11441                           plusw1	equ	0xFE3
 11442                           fsr1h	equ	0xFE2
 11443                           fsr1l	equ	0xFE1
 11444                           indf2	equ	0xFDF
 11445                           postinc2	equ	0xFDE
 11446                           postdec2	equ	0xFDD
 11447                           plusw2	equ	0xFDB
 11448                           fsr2h	equ	0xFDA
 11449                           fsr2l	equ	0xFD9
 11450                           status	equ	0xFD8
 11451                           
 11452 ;; *************** function _RF24_txStandBy_t *****************
 11453 ;; Defined at:
 11454 ;;		line 1018 in file "../../../RF24_c/RF24_cg.c"
 11455 ;; Parameters:    Size  Location     Type
 11456 ;;  timeout         4   18[COMRAM] unsigned long 
 11457 ;;  startTx         1   22[COMRAM] unsigned char 
 11458 ;; Auto vars:     Size  Location     Type
 11459 ;;  start           4   31[COMRAM] unsigned long 
 11460 ;; Return value:  Size  Location     Type
 11461 ;;                  1    wreg      unsigned char 
 11462 ;; Registers used:
 11463 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11464 ;; Tracked objects:
 11465 ;;		On entry : 0/0
 11466 ;;		On exit  : 0/0
 11467 ;;		Unchanged: 0/0
 11468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11469 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11470 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11471 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11472 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11473 ;;Total ram usage:       17 bytes
 11474 ;; Hardware stack levels used:    1
 11475 ;; Hardware stack levels required when called:    7
 11476 ;; This function calls:
 11477 ;;		_RF24_ce_d
 11478 ;;		_RF24_flush_tx
 11479 ;;		_RF24_get_status
 11480 ;;		_RF24_read_register_d
 11481 ;;		_RF24_stopListening
 11482 ;;		_RF24_write_register_d
 11483 ;;		_millis
 11484 ;; This function is called by:
 11485 ;;		_RF24N_write_
 11486 ;;		_RF24N_write
 11487 ;;		_RF24N_write_to_pipe
 11488 ;; This function uses a non-reentrant model
 11489 ;;
 11490                           
 11491                           	psect	text65
 11492  002DF8                     __ptext65:
 11493                           	opt stack 0
 11494  002DF8                     _RF24_txStandBy_t:
 11495                           	opt stack 20
 11496                           
 11497                           ;RF24_cg.c: 1019: uint32_t start;
 11498                           ;RF24_cg.c: 1021: if(startTx){
 11499                           
 11500                           ;incstack = 0
 11501  002DF8  5017               	movf	RF24_txStandBy_t@startTx,w,c
 11502  002DFA  B4D8               	btfsc	status,2,c
 11503  002DFC  D005               	goto	l3564
 11504                           
 11505                           ;RF24_cg.c: 1022: RF24_stopListening();
 11506  002DFE  EC1E  F019         	call	_RF24_stopListening	;wreg free
 11507                           
 11508                           ;RF24_cg.c: 1023: RF24_ce_d(1);
 11509  002E02  0E01               	movlw	1
 11510  002E04  EC6D  F01D         	call	_RF24_ce_d
 11511  002E08                     l3564:
 11512                           
 11513                           ;RF24_cg.c: 1024: }
 11514                           ;RF24_cg.c: 1026: start = millis();
 11515  002E08  ECC5  F01D         	call	_millis	;wreg free
 11516  002E0C  C003  F020         	movff	?_millis,RF24_txStandBy_t@start
 11517  002E10  C004  F021         	movff	?_millis+1,RF24_txStandBy_t@start+1
 11518  002E14  C005  F022         	movff	?_millis+2,RF24_txStandBy_t@start+2
 11519  002E18  C006  F023         	movff	?_millis+3,RF24_txStandBy_t@start+3
 11520                           
 11521                           ;RF24_cg.c: 1028: while( ! (RF24_read_register_d(0x17) & (1<<(4))) ){
 11522  002E1C  D040               	goto	l3576
 11523  002E1E                     l3566:
 11524                           
 11525                           ;RF24_cg.c: 1029: if( RF24_get_status() & (1<<(4))){
 11526  002E1E  ECE2  F01D         	call	_RF24_get_status	;wreg free
 11527  002E22  6E18               	movwf	??_RF24_txStandBy_t& (0+255),c
 11528  002E24  A818               	btfss	??_RF24_txStandBy_t,4,c
 11529  002E26  D03B               	goto	l3576
 11530                           
 11531                           ;RF24_cg.c: 1030: RF24_write_register_d(0x07,(1<<(4)) );
 11532  002E28  0E10               	movlw	16
 11533  002E2A  6E0E               	movwf	RF24_write_register_d@value,c
 11534  002E2C  0E07               	movlw	7
 11535  002E2E  EC40  F01D         	call	_RF24_write_register_d
 11536                           
 11537                           ;RF24_cg.c: 1031: RF24_ce_d(0);
 11538  002E32  0E00               	movlw	0
 11539  002E34  EC6D  F01D         	call	_RF24_ce_d
 11540                           
 11541                           ;RF24_cg.c: 1032: RF24_ce_d(1);
 11542  002E38  0E01               	movlw	1
 11543  002E3A  EC6D  F01D         	call	_RF24_ce_d
 11544                           
 11545                           ;RF24_cg.c: 1033: if(millis() - start >= timeout){
 11546  002E3E  C020  F018         	movff	RF24_txStandBy_t@start,??_RF24_txStandBy_t
 11547  002E42  C021  F019         	movff	RF24_txStandBy_t@start+1,??_RF24_txStandBy_t+1
 11548  002E46  C022  F01A         	movff	RF24_txStandBy_t@start+2,??_RF24_txStandBy_t+2
 11549  002E4A  C023  F01B         	movff	RF24_txStandBy_t@start+3,??_RF24_txStandBy_t+3
 11550  002E4E  1E18               	comf	??_RF24_txStandBy_t,f,c
 11551  002E50  1E19               	comf	??_RF24_txStandBy_t+1,f,c
 11552  002E52  1E1A               	comf	??_RF24_txStandBy_t+2,f,c
 11553  002E54  1E1B               	comf	??_RF24_txStandBy_t+3,f,c
 11554  002E56  2A18               	incf	??_RF24_txStandBy_t,f,c
 11555  002E58  0E00               	movlw	0
 11556  002E5A  2219               	addwfc	??_RF24_txStandBy_t+1,f,c
 11557  002E5C  221A               	addwfc	??_RF24_txStandBy_t+2,f,c
 11558  002E5E  221B               	addwfc	??_RF24_txStandBy_t+3,f,c
 11559  002E60  ECC5  F01D         	call	_millis	;wreg free
 11560  002E64  5018               	movf	??_RF24_txStandBy_t,w,c
 11561  002E66  2403               	addwf	?_millis,w,c
 11562  002E68  6E1C               	movwf	(??_RF24_txStandBy_t+4)& (0+255),c
 11563  002E6A  5019               	movf	??_RF24_txStandBy_t+1,w,c
 11564  002E6C  2004               	addwfc	?_millis+1,w,c
 11565  002E6E  6E1D               	movwf	(??_RF24_txStandBy_t+5)& (0+255),c
 11566  002E70  501A               	movf	??_RF24_txStandBy_t+2,w,c
 11567  002E72  2005               	addwfc	?_millis+2,w,c
 11568  002E74  6E1E               	movwf	(??_RF24_txStandBy_t+6)& (0+255),c
 11569  002E76  501B               	movf	??_RF24_txStandBy_t+3,w,c
 11570  002E78  2006               	addwfc	?_millis+3,w,c
 11571  002E7A  6E1F               	movwf	(??_RF24_txStandBy_t+7)& (0+255),c
 11572  002E7C  5013               	movf	RF24_txStandBy_t@timeout,w,c
 11573  002E7E  5C1C               	subwf	??_RF24_txStandBy_t+4,w,c
 11574  002E80  5014               	movf	RF24_txStandBy_t@timeout+1,w,c
 11575  002E82  581D               	subwfb	??_RF24_txStandBy_t+5,w,c
 11576  002E84  5015               	movf	RF24_txStandBy_t@timeout+2,w,c
 11577  002E86  581E               	subwfb	??_RF24_txStandBy_t+6,w,c
 11578  002E88  5016               	movf	RF24_txStandBy_t@timeout+3,w,c
 11579  002E8A  581F               	subwfb	??_RF24_txStandBy_t+7,w,c
 11580  002E8C  A0D8               	btfss	status,0,c
 11581  002E8E  D007               	goto	l3576
 11582                           
 11583                           ;RF24_cg.c: 1034: RF24_ce_d(0); RF24_flush_tx();; return 0;
 11584  002E90  0E00               	movlw	0
 11585  002E92  EC6D  F01D         	call	_RF24_ce_d
 11586  002E96  ECF2  F01D         	call	_RF24_flush_tx	;wreg free
 11587  002E9A  0E00               	movlw	0
 11588  002E9C  0012               	return	
 11589  002E9E                     l3576:
 11590  002E9E  0E17               	movlw	23
 11591  002EA0  EC50  F01D         	call	_RF24_read_register_d
 11592  002EA4  6E18               	movwf	??_RF24_txStandBy_t& (0+255),c
 11593  002EA6  A818               	btfss	??_RF24_txStandBy_t,4,c
 11594  002EA8  D7BA               	goto	l3566
 11595                           
 11596                           ;RF24_cg.c: 1035: }
 11597                           ;RF24_cg.c: 1036: }
 11598                           ;RF24_cg.c: 1045: }
 11599                           ;RF24_cg.c: 1048: RF24_ce_d(0);
 11600  002EAA  0E00               	movlw	0
 11601  002EAC  EC6D  F01D         	call	_RF24_ce_d
 11602                           
 11603                           ;RF24_cg.c: 1049: return 1;
 11604  002EB0  0E01               	movlw	1
 11605  002EB2  0012               	return	
 11606  002EB4                     __end_of_RF24_txStandBy_t:
 11607                           	opt stack 0
 11608                           tblptru	equ	0xFF8
 11609                           tblptrh	equ	0xFF7
 11610                           tblptrl	equ	0xFF6
 11611                           tablat	equ	0xFF5
 11612                           prodh	equ	0xFF4
 11613                           prodl	equ	0xFF3
 11614                           intcon	equ	0xFF2
 11615                           indf0	equ	0xFEF
 11616                           postinc0	equ	0xFEE
 11617                           postdec0	equ	0xFED
 11618                           plusw0	equ	0xFEB
 11619                           fsr0h	equ	0xFEA
 11620                           fsr0l	equ	0xFE9
 11621                           wreg	equ	0xFE8
 11622                           postinc1	equ	0xFE6
 11623                           plusw1	equ	0xFE3
 11624                           fsr1h	equ	0xFE2
 11625                           fsr1l	equ	0xFE1
 11626                           indf2	equ	0xFDF
 11627                           postinc2	equ	0xFDE
 11628                           postdec2	equ	0xFDD
 11629                           plusw2	equ	0xFDB
 11630                           fsr2h	equ	0xFDA
 11631                           fsr2l	equ	0xFD9
 11632                           status	equ	0xFD8
 11633                           
 11634 ;; *************** function _millis *****************
 11635 ;; Defined at:
 11636 ;;		line 173 in file "../../../RF24_c/utility/XC8/spi.c"
 11637 ;; Parameters:    Size  Location     Type
 11638 ;;		None
 11639 ;; Auto vars:     Size  Location     Type
 11640 ;;		None
 11641 ;; Return value:  Size  Location     Type
 11642 ;;                  4    2[COMRAM] long 
 11643 ;; Registers used:
 11644 ;;		None
 11645 ;; Tracked objects:
 11646 ;;		On entry : 0/0
 11647 ;;		On exit  : 0/0
 11648 ;;		Unchanged: 0/0
 11649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11653 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11654 ;;Total ram usage:        4 bytes
 11655 ;; Hardware stack levels used:    1
 11656 ;; Hardware stack levels required when called:    1
 11657 ;; This function calls:
 11658 ;;		Nothing
 11659 ;; This function is called by:
 11660 ;;		_loop
 11661 ;;		_RF24_txStandBy_t
 11662 ;;		_RF24N_write_
 11663 ;;		_RF24N_write
 11664 ;;		_RF24_writeBlocking
 11665 ;; This function uses a non-reentrant model
 11666 ;;
 11667                           
 11668                           	psect	text66
 11669  003B8A                     __ptext66:
 11670                           	opt stack 0
 11671  003B8A                     _millis:
 11672                           	opt stack 28
 11673                           
 11674                           ;spi.c: 175: return mtime;
 11675                           
 11676                           ;incstack = 0
 11677  003B8A  C084  F003         	movff	_mtime,?_millis
 11678  003B8E  C085  F004         	movff	_mtime+1,?_millis+1
 11679  003B92  C086  F005         	movff	_mtime+2,?_millis+2
 11680  003B96  C087  F006         	movff	_mtime+3,?_millis+3
 11681  003B9A  0012               	return		;funcret
 11682  003B9C                     __end_of_millis:
 11683                           	opt stack 0
 11684                           tblptru	equ	0xFF8
 11685                           tblptrh	equ	0xFF7
 11686                           tblptrl	equ	0xFF6
 11687                           tablat	equ	0xFF5
 11688                           prodh	equ	0xFF4
 11689                           prodl	equ	0xFF3
 11690                           intcon	equ	0xFF2
 11691                           indf0	equ	0xFEF
 11692                           postinc0	equ	0xFEE
 11693                           postdec0	equ	0xFED
 11694                           plusw0	equ	0xFEB
 11695                           fsr0h	equ	0xFEA
 11696                           fsr0l	equ	0xFE9
 11697                           wreg	equ	0xFE8
 11698                           postinc1	equ	0xFE6
 11699                           plusw1	equ	0xFE3
 11700                           fsr1h	equ	0xFE2
 11701                           fsr1l	equ	0xFE1
 11702                           indf2	equ	0xFDF
 11703                           postinc2	equ	0xFDE
 11704                           postdec2	equ	0xFDD
 11705                           plusw2	equ	0xFDB
 11706                           fsr2h	equ	0xFDA
 11707                           fsr2l	equ	0xFD9
 11708                           status	equ	0xFD8
 11709                           
 11710 ;; *************** function _RF24_write_register_d *****************
 11711 ;; Defined at:
 11712 ;;		line 194 in file "../../../RF24_c/RF24_cg.c"
 11713 ;; Parameters:    Size  Location     Type
 11714 ;;  reg             1    wreg     unsigned char 
 11715 ;;  value           1   13[COMRAM] unsigned char 
 11716 ;; Auto vars:     Size  Location     Type
 11717 ;;  reg             1   14[COMRAM] unsigned char 
 11718 ;;  status          1   15[COMRAM] unsigned char 
 11719 ;; Return value:  Size  Location     Type
 11720 ;;                  1    wreg      unsigned char 
 11721 ;; Registers used:
 11722 ;;		wreg, status,2, status,0, cstack
 11723 ;; Tracked objects:
 11724 ;;		On entry : 0/0
 11725 ;;		On exit  : 0/0
 11726 ;;		Unchanged: 0/0
 11727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11728 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11729 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11731 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11732 ;;Total ram usage:        3 bytes
 11733 ;; Hardware stack levels used:    1
 11734 ;; Hardware stack levels required when called:    4
 11735 ;; This function calls:
 11736 ;;		_RF24_beginTransaction
 11737 ;;		_RF24_endTransaction
 11738 ;;		_SPI_transfer
 11739 ;; This function is called by:
 11740 ;;		_RF24_setChannel
 11741 ;;		_RF24_begin
 11742 ;;		_RF24_startListening
 11743 ;;		_RF24_stopListening
 11744 ;;		_RF24_powerUp
 11745 ;;		_RF24_writeFast_m
 11746 ;;		_RF24_txStandBy_t
 11747 ;;		_RF24_read
 11748 ;;		_RF24_openWritingPipe_d
 11749 ;;		_RF24_openReadingPipe_d
 11750 ;;		_RF24_closeReadingPipe
 11751 ;;		_RF24_enableDynamicPayloads
 11752 ;;		_RF24_setAutoAck_p
 11753 ;;		_RF24_setDataRate
 11754 ;;		_RF24_setRetries
 11755 ;;		_RF24_powerDown
 11756 ;;		_RF24_write_m
 11757 ;;		_RF24_reUseTX
 11758 ;;		_RF24_txStandBy
 11759 ;;		_RF24_maskIRQ
 11760 ;;		_RF24_whatHappened
 11761 ;;		_RF24_openWritingPipe
 11762 ;;		_RF24_setAddressWidth
 11763 ;;		_RF24_openReadingPipe
 11764 ;;		_RF24_enableAckPayload
 11765 ;;		_RF24_enableDynamicAck
 11766 ;;		_RF24_setAutoAck
 11767 ;;		_RF24_setPALevel
 11768 ;;		_RF24_setCRCLength
 11769 ;;		_RF24_disableCRC
 11770 ;; This function uses a non-reentrant model
 11771 ;;
 11772                           
 11773                           	psect	text67
 11774  003A80                     __ptext67:
 11775                           	opt stack 0
 11776  003A80                     _RF24_write_register_d:
 11777                           	opt stack 24
 11778                           
 11779                           ;incstack = 0
 11780                           ;RF24_write_register_d@reg stored from wreg
 11781  003A80  6E0F               	movwf	RF24_write_register_d@reg,c
 11782                           
 11783                           ;RF24_cg.c: 196: uint8_t status;
 11784                           ;RF24_cg.c: 198: ;
 11785                           ;RF24_cg.c: 212: RF24_beginTransaction();
 11786  003A82  ECEE  F01D         	call	_RF24_beginTransaction	;wreg free
 11787                           
 11788                           ;RF24_cg.c: 213: status = SPI_transfer( 0x20 | ( 0x1F & reg ) );
 11789  003A86  500F               	movf	RF24_write_register_d@reg,w,c
 11790  003A88  0B1F               	andlw	31
 11791  003A8A  0920               	iorlw	32
 11792  003A8C  ECCE  F01D         	call	_SPI_transfer
 11793  003A90  6E10               	movwf	RF24_write_register_d@status,c
 11794                           
 11795                           ;RF24_cg.c: 214: SPI_transfer(value);
 11796  003A92  500E               	movf	RF24_write_register_d@value,w,c
 11797  003A94  ECCE  F01D         	call	_SPI_transfer
 11798                           
 11799                           ;RF24_cg.c: 215: RF24_endTransaction();
 11800  003A98  ECEA  F01D         	call	_RF24_endTransaction	;wreg free
 11801                           
 11802                           ;RF24_cg.c: 219: return status;
 11803  003A9C  5010               	movf	RF24_write_register_d@status,w,c
 11804  003A9E  0012               	return	
 11805  003AA0                     __end_of_RF24_write_register_d:
 11806                           	opt stack 0
 11807                           tblptru	equ	0xFF8
 11808                           tblptrh	equ	0xFF7
 11809                           tblptrl	equ	0xFF6
 11810                           tablat	equ	0xFF5
 11811                           prodh	equ	0xFF4
 11812                           prodl	equ	0xFF3
 11813                           intcon	equ	0xFF2
 11814                           indf0	equ	0xFEF
 11815                           postinc0	equ	0xFEE
 11816                           postdec0	equ	0xFED
 11817                           plusw0	equ	0xFEB
 11818                           fsr0h	equ	0xFEA
 11819                           fsr0l	equ	0xFE9
 11820                           wreg	equ	0xFE8
 11821                           postinc1	equ	0xFE6
 11822                           plusw1	equ	0xFE3
 11823                           fsr1h	equ	0xFE2
 11824                           fsr1l	equ	0xFE1
 11825                           indf2	equ	0xFDF
 11826                           postinc2	equ	0xFDE
 11827                           postdec2	equ	0xFDD
 11828                           plusw2	equ	0xFDB
 11829                           fsr2h	equ	0xFDA
 11830                           fsr2l	equ	0xFD9
 11831                           status	equ	0xFD8
 11832                           
 11833 ;; *************** function _RF24_stopListening *****************
 11834 ;; Defined at:
 11835 ;;		line 754 in file "../../../RF24_c/RF24_cg.c"
 11836 ;; Parameters:    Size  Location     Type
 11837 ;;		None
 11838 ;; Auto vars:     Size  Location     Type
 11839 ;;		None
 11840 ;; Return value:  Size  Location     Type
 11841 ;;                  1    wreg      void 
 11842 ;; Registers used:
 11843 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11844 ;; Tracked objects:
 11845 ;;		On entry : 0/0
 11846 ;;		On exit  : 0/0
 11847 ;;		Unchanged: 0/0
 11848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11851 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11852 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11853 ;;Total ram usage:        2 bytes
 11854 ;; Hardware stack levels used:    1
 11855 ;; Hardware stack levels required when called:    6
 11856 ;; This function calls:
 11857 ;;		_RF24_ce_d
 11858 ;;		_RF24_flush_tx
 11859 ;;		_RF24_read_register_d
 11860 ;;		_RF24_write_register_d
 11861 ;;		_delayMicroseconds
 11862 ;; This function is called by:
 11863 ;;		_RF24_txStandBy_t
 11864 ;;		_RF24N_enqueue
 11865 ;;		_RF24N_write_
 11866 ;;		_RF24N_write_to_pipe
 11867 ;; This function uses a non-reentrant model
 11868 ;;
 11869                           
 11870                           	psect	text68
 11871  00323C                     __ptext68:
 11872                           	opt stack 0
 11873  00323C                     _RF24_stopListening:
 11874                           	opt stack 20
 11875                           
 11876                           ;RF24_cg.c: 756: RF24_ce_d(0);
 11877                           
 11878                           ;incstack = 0
 11879  00323C  0E00               	movlw	0
 11880  00323E  EC6D  F01D         	call	_RF24_ce_d
 11881                           
 11882                           ;RF24_cg.c: 758: delayMicroseconds(rf.txDelay);
 11883  003242  0100               	movlb	0	; () banked
 11884  003244  5199               	movf	(_rf+13)& (0+255),w,b
 11885  003246  EC7A  F01B         	call	_delayMicroseconds
 11886                           
 11887                           ;RF24_cg.c: 760: if(RF24_read_register_d(0x1D) & (1<<(1))){
 11888  00324A  0E1D               	movlw	29
 11889  00324C  EC50  F01D         	call	_RF24_read_register_d
 11890  003250  6E11               	movwf	??_RF24_stopListening& (0+255),c
 11891  003252  A211               	btfss	??_RF24_stopListening,1,c
 11892  003254  D006               	goto	l465
 11893                           
 11894                           ;RF24_cg.c: 761: delayMicroseconds(rf.txDelay);
 11895  003256  0100               	movlb	0	; () banked
 11896  003258  5199               	movf	(_rf+13)& (0+255),w,b
 11897  00325A  EC7A  F01B         	call	_delayMicroseconds
 11898                           
 11899                           ;RF24_cg.c: 762: RF24_flush_tx();
 11900  00325E  ECF2  F01D         	call	_RF24_flush_tx	;wreg free
 11901  003262                     l465:
 11902                           
 11903                           ;RF24_cg.c: 763: }
 11904                           ;RF24_cg.c: 765: RF24_write_register_d(0x00, ( RF24_read_register_d(0x00) ) & ~(1<<(0)) 
      +                          );
 11905  003262  0E00               	movlw	0
 11906  003264  EC50  F01D         	call	_RF24_read_register_d
 11907  003268  0BFE               	andlw	254
 11908  00326A  6E0E               	movwf	RF24_write_register_d@value,c
 11909  00326C  0E00               	movlw	0
 11910  00326E  EC40  F01D         	call	_RF24_write_register_d
 11911                           
 11912                           ;RF24_cg.c: 774: RF24_write_register_d(0x02,RF24_read_register_d(0x02) | (1<<((*(&child_
      +                          pipe_enable[0])))));
 11913  003272  0E0D               	movlw	low _child_pipe_enable
 11914  003274  6EF6               	movwf	tblptrl,c
 11915  003276                     	if	1	;There is more than 1 active tblptr byte
 11916  003276  0E10               	movlw	high _child_pipe_enable
 11917  003278  6EF7               	movwf	tblptrh,c
 11918  00327A                     	endif
 11919  00327A                     	if	0	;There are less than 3 active tblptr bytes
 11920  00327A                     	endif
 11921  00327A  0008               	tblrd		*
 11922  00327C  CFF5 F011          	movff	tablat,??_RF24_stopListening
 11923  003280  0E01               	movlw	1
 11924  003282  6E12               	movwf	(??_RF24_stopListening+1)& (0+255),c
 11925  003284  2A11               	incf	??_RF24_stopListening,f,c
 11926  003286  D002               	goto	u3564
 11927  003288                     u3565:
 11928  003288  90D8               	bcf	status,0,c
 11929  00328A  3612               	rlcf	??_RF24_stopListening+1,f,c
 11930  00328C                     u3564:
 11931  00328C  2E11               	decfsz	??_RF24_stopListening,f,c
 11932  00328E  D7FC               	goto	u3565
 11933  003290  0E02               	movlw	2
 11934  003292  EC50  F01D         	call	_RF24_read_register_d
 11935  003296  1012               	iorwf	??_RF24_stopListening+1,w,c
 11936  003298  6E0E               	movwf	RF24_write_register_d@value,c
 11937  00329A  0E02               	movlw	2
 11938  00329C  EC40  F01D         	call	_RF24_write_register_d
 11939  0032A0  0012               	return		;funcret
 11940  0032A2                     __end_of_RF24_stopListening:
 11941                           	opt stack 0
 11942                           tblptru	equ	0xFF8
 11943                           tblptrh	equ	0xFF7
 11944                           tblptrl	equ	0xFF6
 11945                           tablat	equ	0xFF5
 11946                           prodh	equ	0xFF4
 11947                           prodl	equ	0xFF3
 11948                           intcon	equ	0xFF2
 11949                           indf0	equ	0xFEF
 11950                           postinc0	equ	0xFEE
 11951                           postdec0	equ	0xFED
 11952                           plusw0	equ	0xFEB
 11953                           fsr0h	equ	0xFEA
 11954                           fsr0l	equ	0xFE9
 11955                           wreg	equ	0xFE8
 11956                           postinc1	equ	0xFE6
 11957                           plusw1	equ	0xFE3
 11958                           fsr1h	equ	0xFE2
 11959                           fsr1l	equ	0xFE1
 11960                           indf2	equ	0xFDF
 11961                           postinc2	equ	0xFDE
 11962                           postdec2	equ	0xFDD
 11963                           plusw2	equ	0xFDB
 11964                           fsr2h	equ	0xFDA
 11965                           fsr2l	equ	0xFD9
 11966                           status	equ	0xFD8
 11967                           
 11968 ;; *************** function _RF24_startListening *****************
 11969 ;; Defined at:
 11970 ;;		line 723 in file "../../../RF24_c/RF24_cg.c"
 11971 ;; Parameters:    Size  Location     Type
 11972 ;;		None
 11973 ;; Auto vars:     Size  Location     Type
 11974 ;;		None
 11975 ;; Return value:  Size  Location     Type
 11976 ;;                  1    wreg      void 
 11977 ;; Registers used:
 11978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11979 ;; Tracked objects:
 11980 ;;		On entry : 0/0
 11981 ;;		On exit  : 0/0
 11982 ;;		Unchanged: 0/0
 11983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11986 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11987 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11988 ;;Total ram usage:        1 bytes
 11989 ;; Hardware stack levels used:    1
 11990 ;; Hardware stack levels required when called:    6
 11991 ;; This function calls:
 11992 ;;		_RF24_ce_d
 11993 ;;		_RF24_closeReadingPipe
 11994 ;;		_RF24_flush_tx
 11995 ;;		_RF24_powerUp
 11996 ;;		_RF24_read_register_d
 11997 ;;		_RF24_write_register_c_d
 11998 ;;		_RF24_write_register_d
 11999 ;; This function is called by:
 12000 ;;		_RF24N_begin_d
 12001 ;;		_RF24N_write_
 12002 ;;		_RF24N_write
 12003 ;; This function uses a non-reentrant model
 12004 ;;
 12005                           
 12006                           	psect	text69
 12007  0033C4                     __ptext69:
 12008                           	opt stack 0
 12009  0033C4                     _RF24_startListening:
 12010                           	opt stack 22
 12011                           
 12012                           ;RF24_cg.c: 726: RF24_powerUp();
 12013                           
 12014                           ;incstack = 0
 12015  0033C4  EC0B  F01D         	call	_RF24_powerUp	;wreg free
 12016                           
 12017                           ;RF24_cg.c: 728: RF24_write_register_d(0x00, RF24_read_register_d(0x00) | (1<<(0)));
 12018  0033C8  0E00               	movlw	0
 12019  0033CA  EC50  F01D         	call	_RF24_read_register_d
 12020  0033CE  0901               	iorlw	1
 12021  0033D0  6E0E               	movwf	RF24_write_register_d@value,c
 12022  0033D2  0E00               	movlw	0
 12023  0033D4  EC40  F01D         	call	_RF24_write_register_d
 12024                           
 12025                           ;RF24_cg.c: 729: RF24_write_register_d(0x07, (1<<(6)) | (1<<(5)) | (1<<(4)) );
 12026  0033D8  0E70               	movlw	112
 12027  0033DA  6E0E               	movwf	RF24_write_register_d@value,c
 12028  0033DC  0E07               	movlw	7
 12029  0033DE  EC40  F01D         	call	_RF24_write_register_d
 12030                           
 12031                           ;RF24_cg.c: 730: RF24_ce_d(1);
 12032  0033E2  0E01               	movlw	1
 12033  0033E4  EC6D  F01D         	call	_RF24_ce_d
 12034                           
 12035                           ;RF24_cg.c: 732: if (rf.pipe0_reading_address[0] > 0){
 12036  0033E8  0100               	movlb	0	; () banked
 12037  0033EA  5193               	movf	(_rf+7)& (0+255),w,b
 12038  0033EC  B4D8               	btfsc	status,2,c
 12039  0033EE  D00A               	goto	l3692
 12040                           
 12041                           ; BSR set to: 0
 12042                           ;RF24_cg.c: 733: RF24_write_register_c_d(0x0A, rf.pipe0_reading_address, rf.addr_width);
 12043  0033F0  0E93               	movlw	low (_rf+7)
 12044  0033F2  6E0C               	movwf	RF24_write_register_c_d@buf,c
 12045  0033F4  0E00               	movlw	high (_rf+7)
 12046  0033F6  6E0D               	movwf	RF24_write_register_c_d@buf+1,c
 12047  0033F8  C098  F00E         	movff	_rf+12,RF24_write_register_c_d@len
 12048  0033FC  0E0A               	movlw	10
 12049  0033FE  EC45  F01C         	call	_RF24_write_register_c_d
 12050                           
 12051                           ;RF24_cg.c: 734: }else{
 12052  003402  D003               	goto	l3694
 12053  003404                     l3692:
 12054                           
 12055                           ;RF24_cg.c: 735: RF24_closeReadingPipe(0);
 12056  003404  0E00               	movlw	0
 12057  003406  EC1A  F01B         	call	_RF24_closeReadingPipe
 12058  00340A                     l3694:
 12059                           
 12060                           ;RF24_cg.c: 736: }
 12061                           ;RF24_cg.c: 740: if(RF24_read_register_d(0x1D) & (1<<(1))){
 12062  00340A  0E1D               	movlw	29
 12063  00340C  EC50  F01D         	call	_RF24_read_register_d
 12064  003410  6E16               	movwf	??_RF24_startListening& (0+255),c
 12065  003412  A216               	btfss	??_RF24_startListening,1,c
 12066  003414  0012               	return	
 12067                           
 12068                           ;RF24_cg.c: 741: RF24_flush_tx();
 12069  003416  ECF2  F01D         	call	_RF24_flush_tx	;wreg free
 12070  00341A  0012               	return	
 12071  00341C                     __end_of_RF24_startListening:
 12072                           	opt stack 0
 12073                           tblptru	equ	0xFF8
 12074                           tblptrh	equ	0xFF7
 12075                           tblptrl	equ	0xFF6
 12076                           tablat	equ	0xFF5
 12077                           prodh	equ	0xFF4
 12078                           prodl	equ	0xFF3
 12079                           intcon	equ	0xFF2
 12080                           indf0	equ	0xFEF
 12081                           postinc0	equ	0xFEE
 12082                           postdec0	equ	0xFED
 12083                           plusw0	equ	0xFEB
 12084                           fsr0h	equ	0xFEA
 12085                           fsr0l	equ	0xFE9
 12086                           wreg	equ	0xFE8
 12087                           postinc1	equ	0xFE6
 12088                           plusw1	equ	0xFE3
 12089                           fsr1h	equ	0xFE2
 12090                           fsr1l	equ	0xFE1
 12091                           indf2	equ	0xFDF
 12092                           postinc2	equ	0xFDE
 12093                           postdec2	equ	0xFDD
 12094                           plusw2	equ	0xFDB
 12095                           fsr2h	equ	0xFDA
 12096                           fsr2l	equ	0xFD9
 12097                           status	equ	0xFD8
 12098                           
 12099 ;; *************** function _RF24_read_register_d *****************
 12100 ;; Defined at:
 12101 ;;		line 131 in file "../../../RF24_c/RF24_cg.c"
 12102 ;; Parameters:    Size  Location     Type
 12103 ;;  reg             1    wreg     unsigned char 
 12104 ;; Auto vars:     Size  Location     Type
 12105 ;;  reg             1   11[COMRAM] unsigned char 
 12106 ;;  result          1   12[COMRAM] unsigned char 
 12107 ;; Return value:  Size  Location     Type
 12108 ;;                  1    wreg      unsigned char 
 12109 ;; Registers used:
 12110 ;;		wreg, status,2, status,0, cstack
 12111 ;; Tracked objects:
 12112 ;;		On entry : 0/0
 12113 ;;		On exit  : 0/0
 12114 ;;		Unchanged: 0/0
 12115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12117 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12120 ;;Total ram usage:        2 bytes
 12121 ;; Hardware stack levels used:    1
 12122 ;; Hardware stack levels required when called:    4
 12123 ;; This function calls:
 12124 ;;		_RF24_beginTransaction
 12125 ;;		_RF24_endTransaction
 12126 ;;		_SPI_transfer
 12127 ;; This function is called by:
 12128 ;;		_RF24_begin
 12129 ;;		_RF24_startListening
 12130 ;;		_RF24_stopListening
 12131 ;;		_RF24_powerUp
 12132 ;;		_RF24_txStandBy_t
 12133 ;;		_RF24_available_p
 12134 ;;		_RF24_openReadingPipe_d
 12135 ;;		_RF24_closeReadingPipe
 12136 ;;		_RF24_enableDynamicPayloads
 12137 ;;		_RF24_setAutoAck_p
 12138 ;;		_RF24_setDataRate
 12139 ;;		_RF24_getChannel
 12140 ;;		_RF24_powerDown
 12141 ;;		_RF24_rxFifoFull
 12142 ;;		_RF24_txStandBy
 12143 ;;		_RF24_maskIRQ
 12144 ;;		_RF24_openReadingPipe
 12145 ;;		_RF24_enableAckPayload
 12146 ;;		_RF24_enableDynamicAck
 12147 ;;		_RF24_isAckPayloadAvailable
 12148 ;;		_RF24_testCarrier
 12149 ;;		_RF24_testRPD
 12150 ;;		_RF24_setPALevel
 12151 ;;		_RF24_getPALevel
 12152 ;;		_RF24_getDataRate
 12153 ;;		_RF24_setCRCLength
 12154 ;;		_RF24_getCRCLength
 12155 ;;		_RF24_disableCRC
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text70
 12160  003AA0                     __ptext70:
 12161                           	opt stack 0
 12162  003AA0                     _RF24_read_register_d:
 12163                           	opt stack 23
 12164                           
 12165                           ;incstack = 0
 12166                           ;RF24_read_register_d@reg stored from wreg
 12167  003AA0  6E0C               	movwf	RF24_read_register_d@reg,c
 12168                           
 12169                           ;RF24_cg.c: 133: uint8_t result;
 12170                           ;RF24_cg.c: 150: RF24_beginTransaction();
 12171  003AA2  ECEE  F01D         	call	_RF24_beginTransaction	;wreg free
 12172                           
 12173                           ;RF24_cg.c: 151: SPI_transfer( 0x00 | ( 0x1F & reg ) );
 12174  003AA6  500C               	movf	RF24_read_register_d@reg,w,c
 12175  003AA8  0B1F               	andlw	31
 12176  003AAA  ECCE  F01D         	call	_SPI_transfer
 12177                           
 12178                           ;RF24_cg.c: 152: result = SPI_transfer(0xff);
 12179  003AAE  0EFF               	movlw	255
 12180  003AB0  ECCE  F01D         	call	_SPI_transfer
 12181  003AB4  6E0D               	movwf	RF24_read_register_d@result,c
 12182                           
 12183                           ;RF24_cg.c: 153: RF24_endTransaction();
 12184  003AB6  ECEA  F01D         	call	_RF24_endTransaction	;wreg free
 12185                           
 12186                           ;RF24_cg.c: 157: return result;
 12187  003ABA  500D               	movf	RF24_read_register_d@result,w,c
 12188  003ABC  0012               	return	
 12189  003ABE                     __end_of_RF24_read_register_d:
 12190                           	opt stack 0
 12191                           tblptru	equ	0xFF8
 12192                           tblptrh	equ	0xFF7
 12193                           tblptrl	equ	0xFF6
 12194                           tablat	equ	0xFF5
 12195                           prodh	equ	0xFF4
 12196                           prodl	equ	0xFF3
 12197                           intcon	equ	0xFF2
 12198                           indf0	equ	0xFEF
 12199                           postinc0	equ	0xFEE
 12200                           postdec0	equ	0xFED
 12201                           plusw0	equ	0xFEB
 12202                           fsr0h	equ	0xFEA
 12203                           fsr0l	equ	0xFE9
 12204                           wreg	equ	0xFE8
 12205                           postinc1	equ	0xFE6
 12206                           plusw1	equ	0xFE3
 12207                           fsr1h	equ	0xFE2
 12208                           fsr1l	equ	0xFE1
 12209                           indf2	equ	0xFDF
 12210                           postinc2	equ	0xFDE
 12211                           postdec2	equ	0xFDD
 12212                           plusw2	equ	0xFDB
 12213                           fsr2h	equ	0xFDA
 12214                           fsr2l	equ	0xFD9
 12215                           status	equ	0xFD8
 12216                           
 12217 ;; *************** function _RF24_setAutoAck_p *****************
 12218 ;; Defined at:
 12219 ;;		line 1387 in file "../../../RF24_c/RF24_cg.c"
 12220 ;; Parameters:    Size  Location     Type
 12221 ;;  pipe            1    wreg     unsigned char 
 12222 ;;  enable          1   16[COMRAM] unsigned char 
 12223 ;; Auto vars:     Size  Location     Type
 12224 ;;  pipe            1   20[COMRAM] unsigned char 
 12225 ;;  en_aa           1   19[COMRAM] unsigned char 
 12226 ;; Return value:  Size  Location     Type
 12227 ;;                  1    wreg      void 
 12228 ;; Registers used:
 12229 ;;		wreg, status,2, status,0, cstack
 12230 ;; Tracked objects:
 12231 ;;		On entry : 0/0
 12232 ;;		On exit  : 0/0
 12233 ;;		Unchanged: 0/0
 12234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12235 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12236 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12237 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12238 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12239 ;;Total ram usage:        5 bytes
 12240 ;; Hardware stack levels used:    1
 12241 ;; Hardware stack levels required when called:    5
 12242 ;; This function calls:
 12243 ;;		_RF24_read_register_d
 12244 ;;		_RF24_write_register_d
 12245 ;; This function is called by:
 12246 ;;		_RF24N_begin_d
 12247 ;;		_RF24N_write_
 12248 ;;		_RF24N_write
 12249 ;;		_RF24N_write_to_pipe
 12250 ;; This function uses a non-reentrant model
 12251 ;;
 12252                           
 12253                           	psect	text71
 12254  00341C                     __ptext71:
 12255                           	opt stack 0
 12256  00341C                     _RF24_setAutoAck_p:
 12257                           	opt stack 23
 12258                           
 12259                           ;incstack = 0
 12260                           ;RF24_setAutoAck_p@pipe stored from wreg
 12261  00341C  6E15               	movwf	RF24_setAutoAck_p@pipe,c
 12262                           
 12263                           ;RF24_cg.c: 1389: if ( pipe <= 6 )
 12264  00341E  0E07               	movlw	7
 12265  003420  6015               	cpfslt	RF24_setAutoAck_p@pipe,c
 12266  003422  0012               	return	
 12267                           
 12268                           ;RF24_cg.c: 1390: {
 12269                           ;RF24_cg.c: 1391: uint8_t en_aa = RF24_read_register_d( 0x01 ) ;
 12270  003424  0E01               	movlw	1
 12271  003426  EC50  F01D         	call	_RF24_read_register_d
 12272  00342A  6E14               	movwf	RF24_setAutoAck_p@en_aa,c
 12273                           
 12274                           ;RF24_cg.c: 1392: if( enable )
 12275  00342C  5011               	movf	RF24_setAutoAck_p@enable,w,c
 12276  00342E  B4D8               	btfsc	status,2,c
 12277  003430  D00D               	goto	l3608
 12278                           
 12279                           ;RF24_cg.c: 1393: {
 12280                           ;RF24_cg.c: 1394: en_aa |= (1<<(pipe)) ;
 12281  003432  C015  F012         	movff	RF24_setAutoAck_p@pipe,??_RF24_setAutoAck_p
 12282  003436  0E01               	movlw	1
 12283  003438  6E13               	movwf	(??_RF24_setAutoAck_p+1)& (0+255),c
 12284  00343A  2A12               	incf	??_RF24_setAutoAck_p,f,c
 12285  00343C  D002               	goto	u3714
 12286  00343E                     u3715:
 12287  00343E  90D8               	bcf	status,0,c
 12288  003440  3613               	rlcf	??_RF24_setAutoAck_p+1,f,c
 12289  003442                     u3714:
 12290  003442  2E12               	decfsz	??_RF24_setAutoAck_p,f,c
 12291  003444  D7FC               	goto	u3715
 12292  003446  5013               	movf	??_RF24_setAutoAck_p+1,w,c
 12293  003448  1214               	iorwf	RF24_setAutoAck_p@en_aa,f,c
 12294                           
 12295                           ;RF24_cg.c: 1395: }
 12296  00344A  D00D               	goto	l3610
 12297  00344C                     l3608:
 12298                           
 12299                           ;RF24_cg.c: 1396: else
 12300                           ;RF24_cg.c: 1397: {
 12301                           ;RF24_cg.c: 1398: en_aa &= ~(1<<(pipe)) ;
 12302  00344C  C015  F012         	movff	RF24_setAutoAck_p@pipe,??_RF24_setAutoAck_p
 12303  003450  0E01               	movlw	1
 12304  003452  6E13               	movwf	(??_RF24_setAutoAck_p+1)& (0+255),c
 12305  003454  2A12               	incf	??_RF24_setAutoAck_p,f,c
 12306  003456  D002               	goto	u3724
 12307  003458                     u3725:
 12308  003458  90D8               	bcf	status,0,c
 12309  00345A  3613               	rlcf	??_RF24_setAutoAck_p+1,f,c
 12310  00345C                     u3724:
 12311  00345C  2E12               	decfsz	??_RF24_setAutoAck_p,f,c
 12312  00345E  D7FC               	goto	u3725
 12313  003460  5013               	movf	??_RF24_setAutoAck_p+1,w,c
 12314  003462  0AFF               	xorlw	255
 12315  003464  1614               	andwf	RF24_setAutoAck_p@en_aa,f,c
 12316  003466                     l3610:
 12317                           
 12318                           ;RF24_cg.c: 1399: }
 12319                           ;RF24_cg.c: 1400: RF24_write_register_d( 0x01, en_aa ) ;
 12320  003466  C014  F00E         	movff	RF24_setAutoAck_p@en_aa,RF24_write_register_d@value
 12321  00346A  0E01               	movlw	1
 12322  00346C  EC40  F01D         	call	_RF24_write_register_d
 12323  003470  0012               	return	
 12324  003472                     __end_of_RF24_setAutoAck_p:
 12325                           	opt stack 0
 12326                           tblptru	equ	0xFF8
 12327                           tblptrh	equ	0xFF7
 12328                           tblptrl	equ	0xFF6
 12329                           tablat	equ	0xFF5
 12330                           prodh	equ	0xFF4
 12331                           prodl	equ	0xFF3
 12332                           intcon	equ	0xFF2
 12333                           indf0	equ	0xFEF
 12334                           postinc0	equ	0xFEE
 12335                           postdec0	equ	0xFED
 12336                           plusw0	equ	0xFEB
 12337                           fsr0h	equ	0xFEA
 12338                           fsr0l	equ	0xFE9
 12339                           wreg	equ	0xFE8
 12340                           postinc1	equ	0xFE6
 12341                           plusw1	equ	0xFE3
 12342                           fsr1h	equ	0xFE2
 12343                           fsr1l	equ	0xFE1
 12344                           indf2	equ	0xFDF
 12345                           postinc2	equ	0xFDE
 12346                           postdec2	equ	0xFDD
 12347                           plusw2	equ	0xFDB
 12348                           fsr2h	equ	0xFDA
 12349                           fsr2l	equ	0xFD9
 12350                           status	equ	0xFD8
 12351                           
 12352 ;; *************** function _isr *****************
 12353 ;; Defined at:
 12354 ;;		line 13 in file "pic_main.c"
 12355 ;; Parameters:    Size  Location     Type
 12356 ;;		None
 12357 ;; Auto vars:     Size  Location     Type
 12358 ;;		None
 12359 ;; Return value:  Size  Location     Type
 12360 ;;                  1    wreg      void 
 12361 ;; Registers used:
 12362 ;;		wreg, status,2, status,0
 12363 ;; Tracked objects:
 12364 ;;		On entry : 0/0
 12365 ;;		On exit  : 0/0
 12366 ;;		Unchanged: 0/0
 12367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12370 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12371 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12372 ;;Total ram usage:        2 bytes
 12373 ;; Hardware stack levels used:    1
 12374 ;; This function calls:
 12375 ;;		Nothing
 12376 ;; This function is called by:
 12377 ;;		Interrupt level 2
 12378 ;; This function uses a non-reentrant model
 12379 ;;
 12380                           
 12381                           	psect	intcode
 12382  000008                     __pintcode:
 12383                           	opt stack 0
 12384  000008                     _isr:
 12385                           	opt stack 15
 12386                           
 12387                           ;incstack = 0
 12388  000008  CFE1 F001          	movff	fsr1l,??_isr
 12389  00000C  CFE2 F002          	movff	fsr1h,??_isr+1
 12390  000010  EDA8  F01C         	call	int_func,f	;refresh shadow registers
 12391                           tblptru	equ	0xFF8
 12392                           tblptrh	equ	0xFF7
 12393                           tblptrl	equ	0xFF6
 12394                           tablat	equ	0xFF5
 12395                           prodh	equ	0xFF4
 12396                           prodl	equ	0xFF3
 12397                           intcon	equ	0xFF2
 12398                           indf0	equ	0xFEF
 12399                           postinc0	equ	0xFEE
 12400                           postdec0	equ	0xFED
 12401                           plusw0	equ	0xFEB
 12402                           fsr0h	equ	0xFEA
 12403                           fsr0l	equ	0xFE9
 12404                           wreg	equ	0xFE8
 12405                           postinc1	equ	0xFE6
 12406                           plusw1	equ	0xFE3
 12407                           fsr1h	equ	0xFE2
 12408                           fsr1l	equ	0xFE1
 12409                           indf2	equ	0xFDF
 12410                           postinc2	equ	0xFDE
 12411                           postdec2	equ	0xFDD
 12412                           plusw2	equ	0xFDB
 12413                           fsr2h	equ	0xFDA
 12414                           fsr2l	equ	0xFD9
 12415                           status	equ	0xFD8
 12416                           
 12417                           	psect	intcode_body
 12418  003950                     __pintcode_body:
 12419                           	opt stack 15
 12420  003950                     int_func:
 12421                           	opt stack 15
 12422  003950  0006               	pop		; remove dummy address from shadow register refresh
 12423  003952  EE16  F0B0         	lfsr	1,___inthi_sp
 12424                           
 12425                           ;pic_main.c: 18: if(INTCONbits.TMR0IF)
 12426  003956  A4F2               	btfss	intcon,2,c	;volatile
 12427  003958  D00C               	goto	i2l59
 12428                           
 12429                           ;pic_main.c: 19: {
 12430                           ;pic_main.c: 20: TMR0H=(65536l-(32000000/4000l)&0xFF00)>>8;
 12431  00395A  0EE0               	movlw	224
 12432  00395C  6ED7               	movwf	4055,c	;volatile
 12433                           
 12434                           ;pic_main.c: 21: TMR0L=(65536l-(32000000/4000l)&0x00FF);
 12435  00395E  0EC0               	movlw	192
 12436  003960  6ED6               	movwf	4054,c	;volatile
 12437                           
 12438                           ;pic_main.c: 22: mtime++;
 12439  003962  0E01               	movlw	1
 12440  003964  0100               	movlb	0	; () banked
 12441  003966  2784               	addwf	_mtime& (0+255),f,b
 12442  003968  0E00               	movlw	0
 12443  00396A  2385               	addwfc	(_mtime+1)& (0+255),f,b
 12444  00396C  2386               	addwfc	(_mtime+2)& (0+255),f,b
 12445  00396E  2387               	addwfc	(_mtime+3)& (0+255),f,b
 12446                           
 12447                           ; BSR set to: 0
 12448                           ;pic_main.c: 23: INTCONbits.TMR0IF=0;
 12449  003970  94F2               	bcf	intcon,2,c	;volatile
 12450  003972                     i2l59:
 12451  003972  C002  FFE2         	movff	??_isr+1,fsr1h
 12452  003976  C001  FFE1         	movff	??_isr,fsr1l
 12453  00397A  0011               	retfie		f
 12454  00397C                     __end_of_isr:
 12455                           	opt stack 0
 12456                           tblptru	equ	0xFF8
 12457                           tblptrh	equ	0xFF7
 12458                           tblptrl	equ	0xFF6
 12459                           tablat	equ	0xFF5
 12460                           prodh	equ	0xFF4
 12461                           prodl	equ	0xFF3
 12462                           intcon	equ	0xFF2
 12463                           indf0	equ	0xFEF
 12464                           postinc0	equ	0xFEE
 12465                           postdec0	equ	0xFED
 12466                           plusw0	equ	0xFEB
 12467                           fsr0h	equ	0xFEA
 12468                           fsr0l	equ	0xFE9
 12469                           wreg	equ	0xFE8
 12470                           postinc1	equ	0xFE6
 12471                           plusw1	equ	0xFE3
 12472                           fsr1h	equ	0xFE2
 12473                           fsr1l	equ	0xFE1
 12474                           indf2	equ	0xFDF
 12475                           postinc2	equ	0xFDE
 12476                           postdec2	equ	0xFDD
 12477                           plusw2	equ	0xFDB
 12478                           fsr2h	equ	0xFDA
 12479                           fsr2l	equ	0xFD9
 12480                           status	equ	0xFD8
 12481                           tblptru	equ	0xFF8
 12482                           tblptrh	equ	0xFF7
 12483                           tblptrl	equ	0xFF6
 12484                           tablat	equ	0xFF5
 12485                           prodh	equ	0xFF4
 12486                           prodl	equ	0xFF3
 12487                           intcon	equ	0xFF2
 12488                           indf0	equ	0xFEF
 12489                           postinc0	equ	0xFEE
 12490                           postdec0	equ	0xFED
 12491                           plusw0	equ	0xFEB
 12492                           fsr0h	equ	0xFEA
 12493                           fsr0l	equ	0xFE9
 12494                           wreg	equ	0xFE8
 12495                           postinc1	equ	0xFE6
 12496                           plusw1	equ	0xFE3
 12497                           fsr1h	equ	0xFE2
 12498                           fsr1l	equ	0xFE1
 12499                           indf2	equ	0xFDF
 12500                           postinc2	equ	0xFDE
 12501                           postdec2	equ	0xFDD
 12502                           plusw2	equ	0xFDB
 12503                           fsr2h	equ	0xFDA
 12504                           fsr2l	equ	0xFD9
 12505                           status	equ	0xFD8
 12506                           
 12507                           	psect	rparam
 12508  0000                     tblptru	equ	0xFF8
 12509                           tblptrh	equ	0xFF7
 12510                           tblptrl	equ	0xFF6
 12511                           tablat	equ	0xFF5
 12512                           prodh	equ	0xFF4
 12513                           prodl	equ	0xFF3
 12514                           intcon	equ	0xFF2
 12515                           indf0	equ	0xFEF
 12516                           postinc0	equ	0xFEE
 12517                           postdec0	equ	0xFED
 12518                           plusw0	equ	0xFEB
 12519                           fsr0h	equ	0xFEA
 12520                           fsr0l	equ	0xFE9
 12521                           wreg	equ	0xFE8
 12522                           postinc1	equ	0xFE6
 12523                           plusw1	equ	0xFE3
 12524                           fsr1h	equ	0xFE2
 12525                           fsr1l	equ	0xFE1
 12526                           indf2	equ	0xFDF
 12527                           postinc2	equ	0xFDE
 12528                           postdec2	equ	0xFDD
 12529                           plusw2	equ	0xFDB
 12530                           fsr2h	equ	0xFDA
 12531                           fsr2l	equ	0xFD9
 12532                           status	equ	0xFD8
 12533                           
 12534                           	psect	temp
 12535  00006A                     btemp:
 12536                           	opt stack 0
 12537  00006A                     	ds	12
 12538                           tblptru	equ	0xFF8
 12539                           tblptrh	equ	0xFF7
 12540                           tblptrl	equ	0xFF6
 12541                           tablat	equ	0xFF5
 12542                           prodh	equ	0xFF4
 12543                           prodl	equ	0xFF3
 12544                           intcon	equ	0xFF2
 12545                           indf0	equ	0xFEF
 12546                           postinc0	equ	0xFEE
 12547                           postdec0	equ	0xFED
 12548                           plusw0	equ	0xFEB
 12549                           fsr0h	equ	0xFEA
 12550                           fsr0l	equ	0xFE9
 12551                           wreg	equ	0xFE8
 12552                           postinc1	equ	0xFE6
 12553                           plusw1	equ	0xFE3
 12554                           fsr1h	equ	0xFE2
 12555                           fsr1l	equ	0xFE1
 12556                           indf2	equ	0xFDF
 12557                           postinc2	equ	0xFDE
 12558                           postdec2	equ	0xFDD
 12559                           plusw2	equ	0xFDB
 12560                           fsr2h	equ	0xFDA
 12561                           fsr2l	equ	0xFD9
 12562                           status	equ	0xFD8


Data Sizes:
    Strings     62
    Constant    26
    Data        14
    BSS         414
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          115    105     107
    BANK0           128     29      85
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    rn.message_buffer	PTR unsigned char  size(2) Largest target is 0
		 -> rn(BIGRAM[370]), 

    rn.frame_queue.message_buffer	PTR unsigned char  size(2) Largest target is 0
		 -> rn(BIGRAM[370]), 

    memcpy@d1	PTR void  size(2) Largest target is 373
		 -> RF24N_read@bufsize(COMRAM[2]), RF24N_peek@msg_size(COMRAM[2]), rn.frame_buffer(BIGRAM[32]), rn.frag_queue_message_buffer(BIGRAM[144]), 
		 -> rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), rf(BANK0[22]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 373
		 -> RF24N_read@bufsize(COMRAM[2]), RF24N_peek@msg_size(COMRAM[2]), rn.frame_buffer(BIGRAM[32]), rn.frag_queue_message_buffer(BIGRAM[144]), 
		 -> rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), rf(BANK0[22]), 

    memcpy@s1	PTR const void  size(2) Largest target is 373
		 -> rn.header(BIGRAM[8]), rn.frame_queue.header(BIGRAM[8]), RF24N_enqueue@message_size(COMRAM[2]), rn.frame_buffer(BIGRAM[32]), 
		 -> rn.frag_queue_message_buffer(BIGRAM[144]), rn.frag_queue(BIGRAM[13]), rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), 
		 -> RF24_openReadingPipe_d@address(COMRAM[5]), loop@header(BANK0[8]), loop@payload(BANK0[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 373
		 -> rn.header(BIGRAM[8]), rn.frame_queue.header(BIGRAM[8]), RF24N_enqueue@message_size(COMRAM[2]), rn.frame_buffer(BIGRAM[32]), 
		 -> rn.frag_queue_message_buffer(BIGRAM[144]), rn.frag_queue(BIGRAM[13]), rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), 
		 -> RF24_openReadingPipe_d@address(COMRAM[5]), loop@header(BANK0[8]), loop@payload(BANK0[8]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    RF24N_pipe_address@address	PTR unsigned char  size(2) Largest target is 5
		 -> RF24N_multicastLevel@addr(COMRAM[5]), RF24N_write_to_pipe@out_pipe(COMRAM[5]), RF24N_begin_d@addr(COMRAM[5]), 

    RF24N_pipe_address@out	PTR unsigned char  size(2) Largest target is 5
		 -> RF24N_pipe_address@result(COMRAM[5]), 

    RF24N_logicalToPhysicalAddress@multicast	PTR unsigned char  size(2) Largest target is 4
		 -> conversion.multicast(COMRAM[1]), RF24N_write@conversion(UNKNOWN), 

    RF24N_logicalToPhysicalAddress@directTo	PTR unsigned char  size(2) Largest target is 4
		 -> conversion.send_pipe(COMRAM[1]), RF24N_write@conversion(UNKNOWN), 

    RF24N_logicalToPhysicalAddress@conversionInfo	PTR struct . size(2) Largest target is 4
		 -> RF24N_write@conversion(UNKNOWN), 

    RF24N_logicalToPhysicalAddress@to_node	PTR unsigned int  size(2) Largest target is 4
		 -> conversion.send_node(COMRAM[2]), RF24N_write@conversion(UNKNOWN), 

    RF24N_write@header	PTR struct . size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24N__write@message	PTR const void  size(2) Largest target is 8
		 -> loop@payload(BANK0[8]), 

    RF24N__write@header	PTR struct . size(2) Largest target is 8
		 -> loop@header(BANK0[8]), 

    RF24N_write_@message	PTR const void  size(2) Largest target is 8
		 -> loop@payload(BANK0[8]), 

    RF24N_write_@header	PTR struct . size(2) Largest target is 8
		 -> loop@header(BANK0[8]), 

    RF24N_write_m@message	PTR const void  size(2) Largest target is 8
		 -> loop@payload(BANK0[8]), 

    RF24N_write_m@header	PTR struct . size(2) Largest target is 8
		 -> loop@header(BANK0[8]), 

    sp__memmove	PTR void  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24N_peek@frame.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24N_enqueue@header	PTR struct . size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24N_update@header	PTR struct . size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    rn.frag_ptr.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24NH_init@rnh	PTR struct . size(2) Largest target is 8
		 -> loop@header(BANK0[8]), 

    S2082$message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    rn.frag_queue.message_buffer	PTR unsigned char  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn.frag_queue_message_buffer(BIGRAM[144]), rn(BIGRAM[370]), 

    S2086$next_frame	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    rn.next_frame	PTR unsigned char  size(2) Largest target is 373
		 -> rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), 

    S2086$frag_ptr	PTR struct . size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    rn.frag_ptr	PTR struct . size(2) Largest target is 373
		 -> rn.frag_queue(BIGRAM[13]), rn(BIGRAM[370]), 

    sp__memcpy	PTR void  size(2) Largest target is 373
		 -> RF24N_read@bufsize(COMRAM[2]), RF24N_peek@msg_size(COMRAM[2]), rn.frame_buffer(BIGRAM[32]), rn.frag_queue_message_buffer(BIGRAM[144]), 
		 -> rn.frame_queue(BIGRAM[154]), rn(BIGRAM[370]), rf(BANK0[22]), 

    RF24_openReadingPipe_d@address_	PTR const unsigned char  size(2) Largest target is 5
		 -> RF24N_multicastLevel@addr(COMRAM[5]), RF24N_begin_d@addr(COMRAM[5]), 

    RF24_openWritingPipe_d@value_	PTR const unsigned char  size(2) Largest target is 5
		 -> RF24N_write_to_pipe@out_pipe(COMRAM[5]), 

    RF24_read@buf	PTR void  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24_available_p@pipe_num	PTR unsigned char  size(2) Largest target is 1
		 -> RF24N_update@pipe_num(UNKNOWN), NULL(NULL[0]), 

    RF24_startFastWrite@buf	PTR const void  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24_writeFast_m@buf	PTR const void  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24_read_payload@buf	PTR void  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24_read_payload@current	PTR unsigned char  size(2) Largest target is 373
		 -> rn(BIGRAM[370]), 

    RF24_write_payload@buf	PTR const void  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24_write_payload@current	PTR const unsigned char  size(2) Largest target is 373
		 -> rn.frame_buffer(BIGRAM[32]), rn(BIGRAM[370]), 

    RF24_write_register_c_d@buf	PTR const unsigned char  size(2) Largest target is 22
		 -> RF24_openReadingPipe_d@address(COMRAM[5]), RF24_openWritingPipe_d@value(COMRAM[5]), rf.pipe0_reading_address(BANK0[5]), rf(BANK0[22]), 

    sp__itoa_	PTR const unsigned char  size(2) Largest target is 10
		 -> buff(BANK0[10]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 10
		 -> buff(BANK0[10]), 

    Serial_println@val	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_4(CODE[8]), STR_3(CODE[4]), STR_1(CODE[36]), 

    Serial_print@val	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_5(CODE[3]), STR_4(CODE[8]), STR_3(CODE[4]), STR_2(CODE[11]), 
		 -> STR_1(CODE[36]), 


Critical Paths under _main in COMRAM

    _setup->_RF24N_begin_d
    _Serial_begin->___lldiv
    _RF24_begin->_RF24_setChannel
    _RF24_begin->_RF24_setRetries
    _RF24_setDataRate->_RF24_write_register_d
    _RF24N_begin_d->_RF24N_pipe_address
    _RF24_setRetries->_RF24_write_register_d
    _RF24_setChannel->_RF24_write_register_d
    _RF24_openReadingPipe_d->_RF24_write_register_c_d
    _RF24_openReadingPipe_d->_RF24_write_register_d
    _RF24_enableDynamicPayloads->_RF24_write_register_d
    _loop->_RF24N_write_m
    _Serial_println->_Serial_print
    _Serial_print->_Serial_tx
    _RF24N_write_m->_RF24N_write_
    _RF24N_write_->_RF24N__write
    _RF24_get_status->_RF24_spiTrans
    _RF24_closeReadingPipe->_RF24_write_register_d
    _RF24_startFastWrite->_RF24_write_payload
    _RF24_writeFast_m->_RF24_startFastWrite
    _RF24_startFastWrite->_RF24_write_payload
    _RF24_flush_rx->_RF24_spiTrans
    _RF24_read->_RF24_read_payload
    _RF24_openWritingPipe_d->_RF24_write_register_c_d
    _RF24_openWritingPipe_d->_RF24_write_register_d
    _RF24N_enqueue->_RF24_stopListening
    _RF24N_logicalToPhysicalAddress->_RF24N_is_direct_child
    _RF24N_is_direct_child->_RF24N_is_descendant
    _RF24N_write_to_pipe->_RF24_writeFast_m
    _RF24_writeFast_m->_RF24_startFastWrite
    _RF24_get_status->_RF24_spiTrans
    _RF24_endTransaction->_RF24_csn_d
    _RF24_beginTransaction->_RF24_csn_d
    _RF24_csn_d->_delayMicroseconds
    _RF24_openWritingPipe_d->_RF24_write_register_c_d
    _RF24_openWritingPipe_d->_RF24_write_register_d
    _RF24N_is_direct_child->_RF24N_is_descendant
    _RF24_csn_d->_delayMicroseconds
    _RF24_ce_d->_digitalWrite
    _RF24_flush_rx->_RF24_spiTrans
    _RF24_flush_tx->_RF24_spiTrans
    _RF24_powerUp->_RF24_write_register_d
    _RF24_read->_RF24_read_payload
    _RF24N_write->_RF24N_write_to_pipe
    _RF24_txStandBy_t->_RF24_stopListening
    _RF24_write_register_d->_RF24_read_register_d
    _RF24_stopListening->_RF24_write_register_d
    _RF24_ce_d->_digitalWrite
    _RF24_startListening->_RF24_closeReadingPipe
    _RF24_powerUp->_RF24_write_register_d
    _RF24_flush_tx->_RF24_spiTrans
    _RF24_closeReadingPipe->_RF24_write_register_d
    _RF24_setAutoAck_p->_RF24_write_register_d
    _RF24N_write_to_pipe->_RF24_writeFast_m
    _RF24N_logicalToPhysicalAddress->_RF24N_is_direct_child
    _RF24N_enqueue->_RF24_stopListening

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_loop

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 4376159
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0  242303
                      _RF24N_begin_d
                         _RF24N_init
                         _RF24_begin
                          _RF24_init
                       _Serial_begin
                     _Serial_println
 ---------------------------------------------------------------------------------
 (2) _Serial_begin                                         8     4      4     629
                                             15 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     498
                                              2 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _RF24_init                                            2     1      1     108
                                              2 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _RF24_begin                                           2     2      0  101812
                                             20 COMRAM     2     2      0
                          _RF24_ce_d
                         _RF24_csn_d
                      _RF24_flush_rx
                      _RF24_flush_tx
                       _RF24_powerUp
               _RF24_read_register_d
                    _RF24_setChannel
                   _RF24_setDataRate
                    _RF24_setRetries
             _RF24_toggle_features_d
              _RF24_write_register_d
                          _SPI_begin
                              _delay
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              2     1      1     920
                                              2 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _SPI_begin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RF24_toggle_features_d                               0     0      0    4114
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _RF24_setDataRate                                     3     3      0   11080
                                             16 COMRAM     3     3      0
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (2) _RF24N_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RF24N_begin_d                                       10     8      2  139236
                                             33 COMRAM    10     8      2
             _RF24N_is_valid_address
                 _RF24N_pipe_address
                _RF24N_setup_address
         _RF24_enableDynamicPayloads
                       _RF24_isValid
             _RF24_openReadingPipe_d
                  _RF24_setAutoAck_p
                    _RF24_setChannel
                    _RF24_setRetries
                _RF24_startListening
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _RF24_setRetries                                      4     3      1    6977
                                             16 COMRAM     4     3      1
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24_setChannel                                      4     4      0    6918
                                             16 COMRAM     4     4      0
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24_openReadingPipe_d                              11     9      2   20366
                                             16 COMRAM    11     9      2
               _RF24_read_register_d
            _RF24_write_register_c_d
              _RF24_write_register_d
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _RF24_enableDynamicPayloads                           0     0      0   10964
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24N_setup_address                                 11    11      0     163
                                              2 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 (1) _loop                                                29    29      0 4133856
                                              0 BANK0     29    29      0
                        _RF24NH_init
                       _RF24N_update
                      _RF24N_write_m
                       _Serial_print
                     _Serial_println
                             _millis
 ---------------------------------------------------------------------------------
 (2) _Serial_println                                       2     0      2     518
                                              9 COMRAM     2     0      2
                       _Serial_print
 ---------------------------------------------------------------------------------
 (3) _Serial_print                                         6     4      2     304
                                              3 COMRAM     6     4      2
                          _Serial_tx
 ---------------------------------------------------------------------------------
 (4) _Serial_tx                                            1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RF24N_write_m                                        6     0      6 2487591
                                             99 COMRAM     6     0      6
                       _RF24N_write_
 ---------------------------------------------------------------------------------
 (3) _RF24N_write_                                        25    17      8 2487333
                                             74 COMRAM    25    17      8
                       _RF24N__write
                       _RF24N_update
                  _RF24_setAutoAck_p
                _RF24_startListening
                 _RF24_stopListening
                   _RF24_txStandBy_t
                            ___lwdiv
                            ___lwmod
                             ___wmul
                              _delay
                  _delayMicroseconds
                             _millis
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     415
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     415
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _RF24N__write                                        11     3      8  642579
                                             63 COMRAM    11     3      8
                        _RF24N_write
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _RF24NH_init                                          5     0      5     302
                                              2 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (6) _digitalWrite                                         2     1      1     920
                                              2 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (9) _RF24_write_payload                                  14    10      4    8847
                                             11 COMRAM    22    18      4
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (6) _RF24_read_payload                                   11     8      3    8523
                                             11 COMRAM    17    14      3
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _RF24_spiTrans                                        2     2      0    8273
                                             11 COMRAM     4     4      0
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (5) _RF24_get_status                                      0     0      0   16546
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (4) _RF24_closeReadingPipe                                4     4      0   21950
                                             16 COMRAM     5     5      0
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (8) _RF24_startFastWrite                                  7     2      5   22298
                                             33 COMRAM     9     4      5
                          _RF24_ce_d
                 _RF24_write_payload
 ---------------------------------------------------------------------------------
 (9) _RF24_write_payload                                  14    10      4    8847
                                             11 COMRAM    22    18      4
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (7) _RF24_writeFast_m                                     5     1      4   91748
                                             42 COMRAM     5     1      4
                    _RF24_get_status
                _RF24_startFastWrite
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (8) _RF24_startFastWrite                                  7     2      5   22298
                                             33 COMRAM     9     4      5
                          _RF24_ce_d
                 _RF24_write_payload
 ---------------------------------------------------------------------------------
 (5) _RF24_getDynamicPayloadSize                           1     1      0   42574
                                             15 COMRAM     2     2      0
              _RF24_beginTransaction
                _RF24_endTransaction
                      _RF24_flush_rx
                       _SPI_transfer
                              _delay
 ---------------------------------------------------------------------------------
 (3) _RF24_flush_rx                                        0     0      0   16546
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (5) _RF24_available_p                                     4     2      2   41605
                                             15 COMRAM     5     3      2
                    _RF24_get_status
               _RF24_read_register_d
 ---------------------------------------------------------------------------------
 (5) _RF24_read                                            3     0      3   30828
                                             28 COMRAM     3     0      3
                  _RF24_read_payload
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (6) _RF24_read_payload                                   11     8      3    8523
                                             11 COMRAM    17    14      3
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (7) _RF24_openWritingPipe_d                              10     8      2   24535
                                             16 COMRAM    16    14      2
            _RF24_write_register_c_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (5) _RF24N_available                                      2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _RF24N_enqueue                                       16    14      2   67802
                                             18 COMRAM    23    21      2
                 _RF24_stopListening
                            ___lwdiv
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6    3576
                                              2 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     418
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _RF24N_levelToAddress                                 8     6      2      90
                                              2 COMRAM    11     9      2
 ---------------------------------------------------------------------------------
 (6) _RF24N_logicalToPhysicalAddress                      12    10      2    1875
                                             20 COMRAM    21    19      2
        _RF24N_direct_child_route_to
                _RF24N_is_descendant
              _RF24N_is_direct_child
 ---------------------------------------------------------------------------------
 (7) _RF24N_is_direct_child                                9     7      2     455
                                              8 COMRAM    12    10      2
                _RF24N_is_descendant
 ---------------------------------------------------------------------------------
 (8) _RF24N_is_descendant                                  6     4      2     150
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _RF24N_direct_child_route_to                          6     4      2     109
                                              2 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (6) _RF24N_write_to_pipe                                 10     6      4  468666
                                             47 COMRAM    16    12      4
                 _RF24N_pipe_address
             _RF24_openWritingPipe_d
                  _RF24_setAutoAck_p
                 _RF24_stopListening
                   _RF24_txStandBy_t
                   _RF24_writeFast_m
 ---------------------------------------------------------------------------------
 (7) _RF24_writeFast_m                                     5     1      4   91748
                                             42 COMRAM     5     1      4
                    _RF24_get_status
                _RF24_startFastWrite
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (5) _RF24_get_status                                      0     0      0   16546
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (4) _RF24_spiTrans                                        2     2      0    8273
                                             11 COMRAM     4     4      0
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _SPI_transfer                                         1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RF24_endTransaction                                  0     0      0    2046
                         _RF24_csn_d
 ---------------------------------------------------------------------------------
 (4) _RF24_beginTransaction                                0     0      0    2046
                         _RF24_csn_d
 ---------------------------------------------------------------------------------
 (5) _RF24_csn_d                                           1     1      0    2046
                                              9 COMRAM     2     2      0
                  _delayMicroseconds
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (7) _RF24_openWritingPipe_d                              10     8      2   24535
                                             16 COMRAM    16    14      2
            _RF24_write_register_c_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (4) _RF24_write_register_c_d                              5     2      3    5340
                                             11 COMRAM     5     2      3
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _RF24N_pipe_address                                  20    15      5    1031
                                              2 COMRAM    31    26      5
 ---------------------------------------------------------------------------------
 (7) _RF24N_is_direct_child                                9     7      2     455
                                              8 COMRAM    12    10      2
                _RF24N_is_descendant
 ---------------------------------------------------------------------------------
 (8) _RF24N_is_descendant                                  6     4      2     150
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _RF24N_direct_child_route_to                          6     4      2     109
                                              2 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _RF24_csn_d                                           1     1      0    2046
                                              9 COMRAM     2     2      0
                  _delayMicroseconds
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _digitalWrite                                         2     1      1     920
                                              2 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (6) _delayMicroseconds                                    7     7      0      92
                                              2 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (3) _RF24_ce_d                                            1     1      0    1862
                                              5 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _RF24_flush_rx                                        0     0      0   16546
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (3) _RF24_flush_tx                                        0     0      0   16546
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (3) _RF24_powerUp                                         1     1      0   23181
                                             16 COMRAM     2     2      0
               _RF24_read_register_d
              _RF24_write_register_d
                              _delay
 ---------------------------------------------------------------------------------
 (3) _RF24_isValid                                         1     1      0      24
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _RF24N_is_valid_address                               4     2      2     284
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _RF24N_pipe_address                                  20    15      5    1031
                                              2 COMRAM    31    26      5
 ---------------------------------------------------------------------------------
 (4) _RF24N_update                                         7     7      0 1644825
                    _RF24N_available
                      _RF24N_enqueue
             _RF24N_is_valid_address
               _RF24N_levelToAddress
                        _RF24N_write
                   _RF24_available_p
         _RF24_getDynamicPayloadSize
                       _RF24_isValid
                          _RF24_read
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                6     4      2     604
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _RF24_read                                            3     0      3   30828
                                             28 COMRAM     3     0      3
                  _RF24_read_payload
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24_isValid                                         1     1      0      24
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _RF24_getDynamicPayloadSize                           1     1      0   42574
                                             15 COMRAM     2     2      0
              _RF24_beginTransaction
                _RF24_endTransaction
                      _RF24_flush_rx
                       _SPI_transfer
                              _delay
 ---------------------------------------------------------------------------------
 (5) _RF24_available_p                                     4     2      2   41605
                                             15 COMRAM     5     3      2
                    _RF24_get_status
               _RF24_read_register_d
 ---------------------------------------------------------------------------------
 (5) _RF24N_write                                         15    12      3  638224
             _RF24N_is_valid_address
     _RF24N_logicalToPhysicalAddress
                       _RF24N_update
                _RF24N_write_to_pipe
                  _RF24_setAutoAck_p
                _RF24_startListening
                   _RF24_txStandBy_t
                             _millis
 ---------------------------------------------------------------------------------
 (4) _RF24_txStandBy_t                                    17    12      5   75833
                                             18 COMRAM    17    12      5
                          _RF24_ce_d
                      _RF24_flush_tx
                    _RF24_get_status
               _RF24_read_register_d
                 _RF24_stopListening
              _RF24_write_register_d
                             _millis
 ---------------------------------------------------------------------------------
 (2) _millis                                               4     0      4       0
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _RF24_write_register_d                                3     2      1    6805
                                             13 COMRAM     3     2      1
              _RF24_beginTransaction
                _RF24_endTransaction
               _RF24_read_register_d (ARG)
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (5) _RF24_stopListening                                   2     2      0   29464
                                             16 COMRAM     2     2      0
                          _RF24_ce_d
                      _RF24_flush_tx
               _RF24_read_register_d
              _RF24_write_register_d
                  _delayMicroseconds
 ---------------------------------------------------------------------------------
 (3) _RF24_ce_d                                            1     1      0    1862
                                              5 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _RF24_startListening                                  1     1      0   79843
                                             21 COMRAM     1     1      0
                          _RF24_ce_d
              _RF24_closeReadingPipe
                      _RF24_flush_tx
                       _RF24_powerUp
               _RF24_read_register_d
            _RF24_write_register_c_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (4) _RF24_read_register_d                                 2     2      0    4159
                                             11 COMRAM     2     2      0
              _RF24_beginTransaction
                _RF24_endTransaction
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _RF24_powerUp                                         1     1      0   23181
                                             16 COMRAM     2     2      0
               _RF24_read_register_d
              _RF24_write_register_d
                              _delay
 ---------------------------------------------------------------------------------
 (3) _RF24_flush_tx                                        0     0      0   16546
                      _RF24_spiTrans
 ---------------------------------------------------------------------------------
 (4) _RF24_closeReadingPipe                                4     4      0   21950
                                             16 COMRAM     5     5      0
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (3) _RF24_setAutoAck_p                                    5     4      1   11461
                                             16 COMRAM     5     4      1
               _RF24_read_register_d
              _RF24_write_register_d
 ---------------------------------------------------------------------------------
 (6) _RF24N_write_to_pipe                                 10     6      4  468666
                                             47 COMRAM    16    12      4
                 _RF24N_pipe_address
             _RF24_openWritingPipe_d
                  _RF24_setAutoAck_p
                 _RF24_stopListening
                   _RF24_txStandBy_t
                   _RF24_writeFast_m
 ---------------------------------------------------------------------------------
 (4) _RF24N_update                                         7     7      0 1644825
                    _RF24N_available
                      _RF24N_enqueue
             _RF24N_is_valid_address
               _RF24N_levelToAddress
                        _RF24N_write
                   _RF24_available_p
         _RF24_getDynamicPayloadSize
                       _RF24_isValid
                          _RF24_read
                              _delay
 ---------------------------------------------------------------------------------
 (6) _RF24N_logicalToPhysicalAddress                      12    10      2    1875
                                             20 COMRAM    21    19      2
        _RF24N_direct_child_route_to
                _RF24N_is_descendant
              _RF24N_is_direct_child
 ---------------------------------------------------------------------------------
 (3) _RF24N_is_valid_address                               4     2      2     284
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _RF24N_levelToAddress                                 8     6      2      90
                                              2 COMRAM    11     9      2
 ---------------------------------------------------------------------------------
 (5) _RF24N_enqueue                                       16    14      2   67802
                                             18 COMRAM    23    21      2
                 _RF24_stopListening
                            ___lwdiv
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _RF24N_available                                      2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _isr                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _RF24NH_init
     _RF24N_update
       _RF24N_available
       _RF24N_enqueue
         _RF24_stopListening
           _RF24_ce_d
             _digitalWrite
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
           _delayMicroseconds
         ___lwdiv
         _memcpy
       _RF24N_is_valid_address
       _RF24N_levelToAddress
       _RF24N_write
         _RF24N_is_valid_address
         _RF24N_logicalToPhysicalAddress
           _RF24N_direct_child_route_to
           _RF24N_is_descendant
           _RF24N_is_direct_child
             _RF24N_is_descendant
         _RF24N_write_to_pipe
           _RF24N_pipe_address
           _RF24_openWritingPipe_d
             _RF24_write_register_c_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
           _RF24_setAutoAck_p
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
           _RF24_stopListening
             _RF24_ce_d
               _digitalWrite
             _RF24_flush_tx
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _delayMicroseconds
           _RF24_txStandBy_t
             _RF24_ce_d
               _digitalWrite
             _RF24_flush_tx
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_get_status
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_stopListening
               _RF24_ce_d
                 _digitalWrite
               _RF24_flush_tx
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
               _delayMicroseconds
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _millis
           _RF24_writeFast_m
             _RF24_get_status
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_startFastWrite
               _RF24_ce_d
                 _digitalWrite
               _RF24_write_payload
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
         _RF24_setAutoAck_p
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
         _RF24_startListening
           _RF24_ce_d
             _digitalWrite
           _RF24_closeReadingPipe
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_powerUp
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _delay
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_c_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
         _RF24_txStandBy_t
           _RF24_ce_d
             _digitalWrite
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_get_status
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_stopListening
             _RF24_ce_d
               _digitalWrite
             _RF24_flush_tx
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _delayMicroseconds
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
           _millis
         _millis
       _RF24_available_p
         _RF24_get_status
           _RF24_spiTrans
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
       _RF24_getDynamicPayloadSize
         _RF24_beginTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_endTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_flush_rx
           _RF24_spiTrans
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
         _SPI_transfer
         _delay
       _RF24_isValid
       _RF24_read
         _RF24_read_payload
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _delay
     _RF24N_write_m
       _RF24N_write_
         _RF24N__write
           _RF24N_write
             _RF24N_is_valid_address
             _RF24N_logicalToPhysicalAddress
               _RF24N_direct_child_route_to
               _RF24N_is_descendant
               _RF24N_is_direct_child
                 _RF24N_is_descendant
             _RF24N_update
               _RF24N_available
               _RF24N_enqueue
                 _RF24_stopListening
                   _RF24_ce_d
                     _digitalWrite
                   _RF24_flush_tx
                     _RF24_spiTrans
                       _RF24_beginTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _RF24_endTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _SPI_transfer
                   _RF24_read_register_d
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _RF24_write_register_d
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_read_register_d (ARG)
                       _RF24_beginTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _RF24_endTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _SPI_transfer
                     _SPI_transfer (ARG)
                   _delayMicroseconds
                 ___lwdiv
                 _memcpy
               _RF24N_is_valid_address
               _RF24N_levelToAddress
               _RF24_available_p
                 _RF24_get_status
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_getDynamicPayloadSize
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_flush_rx
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _SPI_transfer
                 _delay
               _RF24_isValid
               _RF24_read
                 _RF24_read_payload
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
               _delay
             _RF24N_write_to_pipe
               _RF24N_pipe_address
               _RF24_openWritingPipe_d
                 _RF24_write_register_c_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
               _RF24_setAutoAck_p
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
               _RF24_stopListening
                 _RF24_ce_d
                   _digitalWrite
                 _RF24_flush_tx
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
                 _delayMicroseconds
               _RF24_txStandBy_t
                 _RF24_ce_d
                   _digitalWrite
                 _RF24_flush_tx
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_get_status
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_stopListening
                   _RF24_ce_d
                     _digitalWrite
                   _RF24_flush_tx
                     _RF24_spiTrans
                       _RF24_beginTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _RF24_endTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _SPI_transfer
                   _RF24_read_register_d
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _RF24_write_register_d
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_read_register_d (ARG)
                       _RF24_beginTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _RF24_endTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _SPI_transfer
                     _SPI_transfer (ARG)
                   _delayMicroseconds
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
                 _millis
               _RF24_writeFast_m
                 _RF24_get_status
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_startFastWrite
                   _RF24_ce_d
                     _digitalWrite
                   _RF24_write_payload
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
             _RF24_setAutoAck_p
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
             _RF24_startListening
               _RF24_ce_d
                 _digitalWrite
               _RF24_closeReadingPipe
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
               _RF24_flush_tx
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_powerUp
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
                 _delay
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_c_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
             _RF24_txStandBy_t
               _RF24_ce_d
                 _digitalWrite
               _RF24_flush_tx
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_get_status
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_stopListening
                 _RF24_ce_d
                   _digitalWrite
                 _RF24_flush_tx
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
                 _delayMicroseconds
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
               _millis
             _millis
           _memcpy
         _RF24N_update
           _RF24N_available
           _RF24N_enqueue
             _RF24_stopListening
               _RF24_ce_d
                 _digitalWrite
               _RF24_flush_tx
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
               _delayMicroseconds
             ___lwdiv
             _memcpy
           _RF24N_is_valid_address
           _RF24N_levelToAddress
           _RF24N_write
             _RF24N_is_valid_address
             _RF24N_logicalToPhysicalAddress
               _RF24N_direct_child_route_to
               _RF24N_is_descendant
               _RF24N_is_direct_child
                 _RF24N_is_descendant
             _RF24N_write_to_pipe
               _RF24N_pipe_address
               _RF24_openWritingPipe_d
                 _RF24_write_register_c_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
               _RF24_setAutoAck_p
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
               _RF24_stopListening
                 _RF24_ce_d
                   _digitalWrite
                 _RF24_flush_tx
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
                 _delayMicroseconds
               _RF24_txStandBy_t
                 _RF24_ce_d
                   _digitalWrite
                 _RF24_flush_tx
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_get_status
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_stopListening
                   _RF24_ce_d
                     _digitalWrite
                   _RF24_flush_tx
                     _RF24_spiTrans
                       _RF24_beginTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _RF24_endTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _SPI_transfer
                   _RF24_read_register_d
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _RF24_write_register_d
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_read_register_d (ARG)
                       _RF24_beginTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _RF24_endTransaction
                         _RF24_csn_d
                           _delayMicroseconds
                           _digitalWrite
                       _SPI_transfer
                     _SPI_transfer (ARG)
                   _delayMicroseconds
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
                 _millis
               _RF24_writeFast_m
                 _RF24_get_status
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_startFastWrite
                   _RF24_ce_d
                     _digitalWrite
                   _RF24_write_payload
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
             _RF24_setAutoAck_p
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
             _RF24_startListening
               _RF24_ce_d
                 _digitalWrite
               _RF24_closeReadingPipe
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
               _RF24_flush_tx
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_powerUp
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
                 _delay
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_c_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
             _RF24_txStandBy_t
               _RF24_ce_d
                 _digitalWrite
               _RF24_flush_tx
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_get_status
                 _RF24_spiTrans
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
               _RF24_read_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _RF24_stopListening
                 _RF24_ce_d
                   _digitalWrite
                 _RF24_flush_tx
                   _RF24_spiTrans
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                 _RF24_read_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _RF24_write_register_d
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_read_register_d (ARG)
                     _RF24_beginTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _RF24_endTransaction
                       _RF24_csn_d
                         _delayMicroseconds
                         _digitalWrite
                     _SPI_transfer
                   _SPI_transfer (ARG)
                 _delayMicroseconds
               _RF24_write_register_d
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_read_register_d (ARG)
                   _RF24_beginTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _RF24_endTransaction
                     _RF24_csn_d
                       _delayMicroseconds
                       _digitalWrite
                   _SPI_transfer
                 _SPI_transfer (ARG)
               _millis
             _millis
           _RF24_available_p
             _RF24_get_status
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_getDynamicPayloadSize
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_flush_rx
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _SPI_transfer
             _delay
           _RF24_isValid
           _RF24_read
             _RF24_read_payload
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
           _delay
         _RF24_setAutoAck_p
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
         _RF24_startListening
           _RF24_ce_d
             _digitalWrite
           _RF24_closeReadingPipe
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_powerUp
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _delay
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_c_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
         _RF24_stopListening
           _RF24_ce_d
             _digitalWrite
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
           _delayMicroseconds
         _RF24_txStandBy_t
           _RF24_ce_d
             _digitalWrite
           _RF24_flush_tx
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_get_status
             _RF24_spiTrans
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_stopListening
             _RF24_ce_d
               _digitalWrite
             _RF24_flush_tx
               _RF24_spiTrans
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
             _RF24_read_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _RF24_write_register_d
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_read_register_d (ARG)
                 _RF24_beginTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _RF24_endTransaction
                   _RF24_csn_d
                     _delayMicroseconds
                     _digitalWrite
                 _SPI_transfer
               _SPI_transfer (ARG)
             _delayMicroseconds
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
           _millis
         ___lwdiv
         ___lwmod
         ___wmul
         _delay
         _delayMicroseconds
         _millis
     _Serial_print
       _Serial_tx
     _Serial_println
       _Serial_print
         _Serial_tx
     _millis
   _setup
     _RF24N_begin_d
       _RF24N_is_valid_address
       _RF24N_pipe_address
       _RF24N_setup_address
       _RF24_enableDynamicPayloads
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_isValid
       _RF24_openReadingPipe_d
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_c_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
         _memcpy
       _RF24_setAutoAck_p
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_setChannel
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_setRetries
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_startListening
         _RF24_ce_d
           _digitalWrite
         _RF24_closeReadingPipe
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
         _RF24_flush_tx
           _RF24_spiTrans
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
         _RF24_powerUp
           _RF24_read_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _RF24_write_register_d
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_read_register_d (ARG)
               _RF24_beginTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _RF24_endTransaction
                 _RF24_csn_d
                   _delayMicroseconds
                   _digitalWrite
               _SPI_transfer
             _SPI_transfer (ARG)
           _delay
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_c_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       ___lwmod
       ___wmul
     _RF24N_init
     _RF24_begin
       _RF24_ce_d
         _digitalWrite
       _RF24_csn_d
         _delayMicroseconds
         _digitalWrite
       _RF24_flush_rx
         _RF24_spiTrans
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
       _RF24_flush_tx
         _RF24_spiTrans
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
       _RF24_powerUp
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
         _delay
       _RF24_read_register_d
         _RF24_beginTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_endTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _SPI_transfer
       _RF24_setChannel
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_setDataRate
         _RF24_read_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_setRetries
         _RF24_write_register_d
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_read_register_d (ARG)
             _RF24_beginTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _RF24_endTransaction
               _RF24_csn_d
                 _delayMicroseconds
                 _digitalWrite
             _SPI_transfer
           _SPI_transfer (ARG)
       _RF24_toggle_features_d
         _RF24_beginTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_endTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _SPI_transfer
       _RF24_write_register_d
         _RF24_beginTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_endTransaction
           _RF24_csn_d
             _delayMicroseconds
             _digitalWrite
         _RF24_read_register_d (ARG)
           _RF24_beginTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _RF24_endTransaction
             _RF24_csn_d
               _delayMicroseconds
               _digitalWrite
           _SPI_transfer
         _SPI_transfer (ARG)
       _SPI_begin
       _delay
       _pinMode
     _RF24_init
     _Serial_begin
       ___lldiv
     _Serial_println
       _Serial_print
         _Serial_tx

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0     172      37        9.3%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1D      55       5       66.4%
BITCOMRAM           73      0       0       0        0.0%
COMRAM              73     69      6B       1       93.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       3       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C0      34        0.0%
DATA                 0      0     235       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Dec  3 00:01:52 2016

                          __size_of_RF24N_write_to_pipe 0094  
                                         ?_RF24_powerUp 0001  
                                       ??_RF24N_begin_d 0024  
                                        ?_RF24_spiTrans 0001  
                                        ??_RF24N__write 0048  
                                           _SSPSTATbits 000FC7  
                                                    l93 3BBE  
                            RF24_read_register_d@result 000D  
                                                    _rf 008C  
                                                    _rn 00D5  
                                   RF24N__write@message 0042  
                                   ___wmul@multiplicand 0005  
                                           __CFG_BORV$3 000000  
                                          __CFG_CP0$OFF 000000  
                                       ??_RF24N_enqueue 0015  
                                        ??_RF24N_write_ 0053  
                                          __CFG_CP1$OFF 000000  
                                          __CFG_CP2$OFF 000000  
                                          __CFG_CP3$OFF 000000  
                                _RF24_openReadingPipe_d 289C  
                                                   l200 22B6  
                                                   l201 22C2  
                                                   l210 23C0  
                                                   l202 22CE  
                                                   l211 23CC  
                                                   l220 2438  
                                                   l212 23D8  
                                                   l221 2444  
                                                   l213 23E4  
                                                   l230 24B0  
                                                   l222 2450  
                                                   l214 23F0  
                                                   l231 24BC  
                                                   l223 245C  
                                                   l215 23FC  
                                                   l312 3BA4  
                                                   l240 2528  
                                                   l232 24C8  
                                                   l224 2468  
                                                   l216 2408  
                                                   l208 23B4  
                                                   l241 2534  
                                                   l233 24D4  
                                                   l225 2474  
                                                   l217 2414  
                                                   l242 2540  
                                                   l234 24E0  
                                                   l226 2480  
                                                   l218 2420  
                                                   l170 214E  
                                                   l243 254C  
                                                   l235 24EC  
                                                   l227 248C  
                                                   l219 242C  
                                                   l171 215A  
                                                   l236 24F8  
                                                   l228 2498  
                                                   l180 21C6  
                                                   l172 2166  
                                                   l237 2504  
                                                   l229 24A4  
                                                   l181 21D2  
                                                   l173 2172  
                                                   l238 2510  
                                                   l430 39B8  
                                                   l190 223E  
                                                   l182 21DE  
                                                   l174 217E  
                                                   l239 251C  
                                                   l191 224A  
                                                   l183 21EA  
                                                   l175 218A  
                                                   l167 2136  
                                                   l192 2256  
                                                   l184 21F6  
                                                   l176 2196  
                                                   l193 2262  
                                                   l185 2202  
                                                   l177 21A2  
                                                   l169 2142  
                                                   l194 226E  
                                                   l186 220E  
                                                   l178 21AE  
                                                   l195 227A  
                                                   l187 221A  
                                                   l179 21BA  
                                                   l196 2286  
                                                   l188 2226  
                                                   l197 2292  
                                                   l189 2232  
                                                   l198 229E  
                                                   l199 22AA  
                                                   l384 2F60  
                                                   l465 3262  
                                                   l643 3B0E  
                                                   l906 1E2C  
                                                   l658 3238  
                                                   l781 1B16  
                                                   l829 134E  
                                                   l769 2C7C  
                                                   l971 3554  
                                                   l887 2054  
                                                   l889 20A8  
                                ??_RF24_read_register_d 000C  
                                          __CFG_CPB$OFF 000000  
                                          __CFG_CPD$OFF 000000  
                            __end_of_child_payload_size 1007  
                                                   _isr 0008  
                                 _RF24_write_register_d 3A80  
                                                   prod 000FF3  
                                                   wreg 000FE8  
                                  RF24N__write@sendType 004A  
                         ??_RF24N_direct_child_route_to 0005  
                                       ??_RF24N_write_m 006A  
                                          __CFG_LVP$OFF 000000  
                                   _RF24N_is_descendant 3922  
                                          __CFG_WDT$OFF 000000  
                                 __size_of_SPI_transfer 0010  
                                                  l1411 34BA  
                                                  l1421 362A  
                                                  l4000 12E4  
                                                  l1344 30D0  
                                                  l4004 12E8  
                                                  l4110 1626  
                                                  l4022 1376  
                                                  l3400 3720  
                                                  l4032 1464  
                                                  l4210 1AB0  
                                                  l4122 165E  
                                                  l4114 163C  
                                                  l4204 1A5A  
                                                  l3500 389E  
                                                  l4060 1506  
                                                  l4300 3608  
                                RF24_startFastWrite@buf 0022  
                                                  l4118 1640  
                                                  l4070 15C6  
                                                  l4038 1468  
                                                  l4046 147A  
                                                  l4302 360C  
                                                  l4216 1ABC  
                                                  l4152 17D8  
                                                  l3504 38B0  
                                                  l4240 2A08  
                                                  l4080 354A  
                                                  l4312 3568  
                                                  l3610 3466  
                                                  l4162 186E  
                                                  l4218 1AEC  
                                                  l4250 2A6E  
                                                  l4058 14C2  
                                                  l4306 3620  
                                                  l4410 2B78  
                                                  l4322 22DA  
                                                  l3620 27A6  
                                                  l4092 3302  
                                                  l4252 2A72  
                                                  l3700 36C6  
                                                  l4068 15C2  
                                                  l3524 37BC  
                                                  l4316 3588  
                                                  l4412 2B8C  
                                                  l4182 195E  
                                                  l4166 1896  
                                                  l3390 3708  
                                                  l3630 27F4  
                                                  l4246 2A38  
                                                  l3542 3676  
                                                  l3550 368E  
                                                  l3470 2FCC  
                                                  l3462 2FAA  
                                                  l3454 2F90  
                                                  l3608 344C  
                                                  l4168 18B6  
                                                  l3624 27B4  
                                                  l3720 2EEC  
                                                  l3456 2F98  
                                                  l3384 2558  
                                                  l4280 2DBC  
                                                  l4520 20BC  
                                                  l4440 1E92  
                                                  l4360 321E  
                                                  l4178 1956  
                                                  l3642 285A  
                                                  l3626 27E0  
                                                  l3722 2EF6  
                                                  l3706 36E2  
                                                  l3466 2FBC  
                                                  l4530 20FC  
                                                  l4434 1E38  
                                                  l5162 2770  
                                                  l4426 2C14  
                                                  l4354 3204  
                                                  l3564 2E08  
                                                  l3484 35B2  
                                                  l4188 197A  
                                                  l3820 386C  
                                                  l3388 3700  
                                                  l3636 280A  
                                                  l3732 2F44  
                                                  l3660 3014  
                                                  l3468 2FC6  
                                                  l4276 2D9E  
                                                  l4284 2DD0  
                                                  l4268 2D76  
                                                  l4508 20A0  
                                                  l4452 1EE2  
                                                  l4428 2C38  
                                                  l4380 28AA  
                                RF24_startFastWrite@len 0024  
                                                  l3566 2E1E  
                                                  l3910 1E10  
                                                  l3902 1D80  
                                                  l3494 35E0  
                                                  l3486 35BA  
                                                  l3822 387E  
                                                  l3398 371C  
                                                  l3646 2862  
                                                  l3638 2824  
                                                  l3750 3494  
                                                  l3590 3168  
                                                  l3662 301C  
                                                  l4518 20B6  
                                                  l4438 1E44  
                                                  l4390 2904  
                                                  l4622 2AAC  
                                                  l5182 38EA  
                                                  l3576 2E9E  
                                                  l3912 1E1C  
                                                  l3840 1B46  
                                                  l3496 35E4  
                                                  l3824 3886  
                                                  l3816 385A  
                                                  l3672 3042  
                                                  l4480 1F8E  
                                                  l4464 1F0A  
                                                  l4376 28A2  
                                                  l4560 3092  
                                                  l3906 1DB2  
                                                  l3746 3488  
                                                  l3586 3160  
                                                  l3674 304C  
                                                  l4298 3600  
                                                  l4546 212E  
                                                  l4538 2110  
                                                  l4490 1FDC  
                                                  l4474 1F74  
                                                  l4458 1EFA  
                                                  l4386 28E4  
                                                  l4642 2B06  
                                                  l4626 2AC4  
                                                  l3692 3404  
                                                  l3748 3490  
                                                  l3596 31A2  
                                                  l3780 381A  
                                                  l3676 3052  
                                                  l3668 302E  
                                                  l4492 1FEC  
                                                  l4396 2936  
                                                  l4556 3082  
                                                  l3694 340A  
                                                  l3846 1B62  
                                                  l3758 34B0  
                                                  l3950 112E  
                                                  l4486 1FC6  
                                                  l4398 295A  
                                                  l4558 308E  
                                                  l3936 10C6  
                                                  l3792 391A  
                                                  l4568 30C2  
                                                  l4498 2038  
                                                  l3892 1D44  
                                                  l3884 1D06  
                                                  l3964 11DC  
                                                  l3796 391E  
                                                  l3958 116A  
                                                  l4694 2CEE  
                                                  l3992 1290  
                                                  l3984 1266  
                                                  l3978 122A  
                                                  l4698 2D14  
                                                  ?_isr 0001  
                                                  l3998 12C6  
                                                  STR_1 101B  
                                                  STR_2 103F  
                                                  STR_3 1052  
                                                  STR_4 104A  
                                                  STR_5 1056  
                                                  u3105 23E0  
                                                  u3106 23E2  
                                                  u3115 23EC  
                                                  u3116 23EE  
                                                  u3205 2458  
                                                  u3125 23F8  
                                                  u4030 3A7C  
                                                  u3206 245A  
                                                  u3126 23FA  
                                                  u3215 2464  
                                                  u3135 2404  
                                                  u3216 2466  
                                                  u3136 2406  
                                                  u3305 24D0  
                                                  u3225 2470  
                                                  u3145 2410  
                                                  u4130 1D2E  
                                                  u3306 24D2  
                                                  u3226 2472  
                                                  u3146 2412  
                                                  u4035 3A74  
                                                  u3315 24DC  
                                                  u3235 247C  
                                                  u3155 241C  
                                                  u3075 23BC  
                                                  u3316 24DE  
                                                  u3236 247E  
                                                  u3156 241E  
                                                  u3076 23BE  
                                                  u3405 2548  
                                                  u3325 24E8  
                                                  u3245 2488  
                                                  u3165 2428  
                                                  u3085 23C8  
                                                  u5005 219E  
                                                  u3406 254A  
                                                  u3326 24EA  
                                                  u3246 248A  
                                                  u3166 242A  
                                                  u3086 23CA  
                                                  u5006 21A0  
                                                  u3415 2554  
                                                  u3335 24F4  
                                                  u3255 2494  
                                                  u3175 2434  
                                                  u3095 23D4  
                                                  u5015 21AA  
                                                  u3416 2556  
                                                  u3336 24F6  
                                                  u3256 2496  
                                                  u3176 2436  
                                                  u3096 23D6  
                                                  u5016 21AC  
                                                  u3345 2500  
                                                  u3265 24A0  
                                                  u3185 2440  
                                                  u5105 2216  
                                                  u5025 21B6  
                                                  u3346 2502  
                                                  u3266 24A2  
                                                  u3186 2442  
                                                  u5106 2218  
                                                  u5026 21B8  
                                                  u3355 250C  
                                                  u3275 24AC  
                                                  u3195 244C  
                                                  u5115 2222  
                                                  u5035 21C2  
                                                  u4500 3300  
                                                  u4340 1286  
                                                  u3604 3658  
                                                  u3356 250E  
                                                  u3276 24AE  
                                                  u3196 244E  
                                                  u5116 2224  
                                                  u5036 21C4  
                                                  u3605 3654  
                                                  u3365 2518  
                                                  u3285 24B8  
                                                  u5205 228E  
                                                  u5125 222E  
                                                  u5045 21CE  
                                                  u3366 251A  
                                                  u3286 24BA  
                                                  u5206 2290  
                                                  u5126 2230  
                                                  u5046 21D0  
                            __size_of_RF24_read_payload 0086  
                                                  u3375 2524  
                                                  u3295 24C4  
                                                  u5215 229A  
                                                  u5135 223A  
                                                  u5055 21DA  
                                                  u4600 174A  
                                                  u3376 2526  
                                                  u3296 24C6  
                                                  u5216 229C  
                                                  u5136 223C  
                                                  u5056 21DC  
                                                  u3385 2530  
                                                  u5225 22A6  
                                                  u5145 2246  
                                                  u5065 21E6  
                                                  u3714 3442  
                                                  u4530 1626  
                                                  u3386 2532  
                                                  u5226 22A8  
                                                  u5146 2248  
                                                  u5066 21E8  
                                                  u3715 343E  
                                                  u3731 2788  
                                                  u3395 253C  
                                                  u5235 22B2  
                                                  u5155 2252  
                                                  u5075 21F2  
                                                  u3724 345C  
                                                  u3564 328C  
                                                  u3396 253E  
                                                  u5236 22B4  
                                                  u5156 2254  
                                                  u5076 21F4  
                                                  u3725 3458  
                                                  u3565 3288  
                                                  u5245 22BE  
                                                  u5165 225E  
                                                  u5085 21FE  
                                                  u3910 394C  
                                                  u5430 1F06  
                                                  u5246 22C0  
                                                  u5166 2260  
                                                  u5086 2200  
                                                  u5255 22CA  
                                                  u5175 226A  
                                                  u5095 220A  
                                                  u5440 1F46  
                                                  u5256 22CC  
                                                  u5176 226C  
                                                  u5096 220C  
                                                  u5265 22D6  
                                                  u5185 2276  
                                                  u4490 32FE  
                                                  u4474 353C  
                                                  u5450 1F48  
                                                  u5266 22D8  
                                                  u5186 2278  
                                                  u4571 16F6  
                                                  u4475 3536  
                                                  u5195 2282  
                                                  u5364 2998  
                                                  u5196 2284  
                                                  u5365 2994  
                                                  u5605 3108  
                                                  u4750 19D6  
                                   RF24_writeFast_m@buf 002B  
                                                  u4925 213E  
                                                  u4926 2140  
                                                  u4935 214A  
                                                  u4936 214C  
                                                  u4945 2156  
                                                  u4946 2158  
                                                  i2l59 3972  
                                                  u4955 2162  
                                                  u4956 2164  
                                                  u4965 216E  
                                                  u4966 2170  
                                                  u4975 217A  
                                                  u4976 217C  
                                                  u4985 2186  
                                                  u4986 2188  
                                                  u4995 2192  
                                                  u4996 2194  
                                   RF24_writeFast_m@len 002D  
                                 RF24N_write_to_pipe@ok 003F  
                                     ??_RF24N_available 0003  
                           RF24_write_register_d@status 0010  
                                          __CFG_PWRT$ON 000000  
                          RF24N_is_valid_address@result 0008  
                                    __size_of_RF24_ce_d 001C  
                                    __size_of_RF24_init 003C  
                                    __size_of_RF24_read 001C  
                                                  _buff 00A2  
                                                  _main 38BE  
                                        ??_RF24_isValid 0003  
                                                  _loop 262E  
                                                  fsr0h 000FEA  
                                                  fsr1h 000FE2  
                                                  indf0 000FEF  
                                                  fsr0l 000FE9  
                                                  fsr2h 000FDA  
                                                  fsr1l 000FE1  
                                                  indf2 000FDF  
                                                  fsr2l 000FD9  
                                                  btemp 006A  
                           ?_RF24_enableDynamicPayloads 0001  
                                          RF24_read@buf 001D  
                                                  prodh 000FF4  
                                                  prodl 000FF3  
                                          RF24_read@len 001F  
                                                  start 0014  
                                         __CFG_IESO$OFF 000000  
                                         __CFG_MCLRE$ON 000000  
                                        ??_RF24_powerUp 0011  
                                          ___param_bank 000010  
                              ??_RF24N_is_valid_address 0005  
                                _RF24_openWritingPipe_d 315C  
                                  ?_RF24N_is_descendant 0003  
                                   RF24_spiTrans@status 000F  
                          __end_of_RF24N_levelToAddress 355E  
                                                 ??_isr 0001  
                                ?_RF24_closeReadingPipe 0001  
                               _RF24_write_payload$1900 001D  
                               _RF24_write_payload$1901 001F  
                                                 ?_main 0001  
                                                 ?_loop 0001  
                                       __end_of___lldiv 30E2  
                           __size_of_RF24N_pipe_address 011E  
                                       __end_of___lwdiv 34C4  
                                       __end_of___lwmod 3634  
                                      SPI_transfer@data 0003  
                                                 _RCREG 000FAE  
                                 RF24N_begin_d@_channel 002A  
                                   __size_of_RF24N_init 005C  
                                          _SPI_transfer 3B9C  
                                                 _TMR0H 000FD7  
                                                 _TMR0L 000FD6  
                                                 _SPBRG 000FAF  
                                                 _TXREG 000FAD  
                                     ?_RF24_txStandBy_t 0013  
                                         __CFG_WRT0$OFF 000000  
                                         __CFG_WRT1$OFF 000000  
                                         __CFG_WRT2$OFF 000000  
                                         __CFG_WRT3$OFF 000000  
                             __size_of_RF24_available_p 0032  
                                        __CFG_EBTR0$OFF 000000  
                                        __CFG_FCMEN$OFF 000000  
                                        __CFG_EBTR1$OFF 000000  
                                        __CFG_EBTR2$OFF 000000  
                                        __CFG_EBTR3$OFF 000000  
                                   __size_of_RF24_begin 00DE  
                                         __CFG_WRTB$OFF 000000  
                                         __CFG_WRTC$OFF 000000  
                                         __CFG_WRTD$OFF 000000  
                                   __size_of_RF24_csn_d 0018  
                          ??_RF24_getDynamicPayloadSize 0010  
                                    ??_RF24_txStandBy_t 0018  
                                        __CFG_EBTRB$OFF 000000  
                                                 _delay 35A8  
                                        RF24_ce_d@level 0007  
                                   RF24N_pipe_address@i 0021  
                                                 _mtime 0084  
                                       __end_of_pinMode 23B0  
                                                 _setup 34C4  
                                        __CFG_BOREN$OFF 000000  
                                                 tablat 000FF5  
                                       ??_RF24_flush_rx 0010  
                                       ??_RF24_flush_tx 0010  
                               _RF24_write_register_c_d 388A  
                                                 plusw0 000FEB  
                                                 plusw1 000FE3  
                                                 plusw2 000FDB  
                          RF24_startFastWrite@multicast 0025  
                                                 status 000FD8  
                                    __size_of_SPI_begin 001A  
                       __size_of_RF24_toggle_features_d 0016  
                  __size_of_RF24N_direct_child_route_to 0036  
                                       ??_RF24_spiTrans 000C  
                                  __end_of_digitalWrite 262E  
                                       __initialization 3306  
                            __size_of_RF24_setAutoAck_p 0056  
                                 ??_RF24N_is_descendant 0005  
                           __size_of_RF24_write_payload 0092  
                                          __end_of_main 38F0  
                                          __end_of_loop 277E  
RF24N_logicalToPhysicalAddress@pre_conversion_send_node 0023  
RF24N_logicalToPhysicalAddress@pre_conversion_send_pipe 0027  
                  RF24N_is_direct_child@child_node_mask 0012  
                                 RF24N_begin_d@retryVar 0029  
                                        __CFG_OSC$HSPLL 000000  
                   __size_of_RF24_getDynamicPayloadSize 0038  
                                     __end_of_RF24_ce_d 3AF6  
                                                ??_main 006A  
                                     __end_of_RF24_init 37AE  
                               RF24_setAutoAck_p@enable 0011  
                                     __end_of_RF24_read 3ADA  
                                                ??_loop 00AC  
                                         __activetblptr 000002  
                 RF24N_pipe_address@address_translation 00C9  
                                ?_RF24_write_register_d 000E  
                           __end_of_RF24N_setup_address 2C4A  
                                     _child_pipe_enable 100D  
                                        _Serial_println 3B2C  
                                  __size_of_RF24NH_init 003E  
                                                ?_delay 0003  
                                                ?_setup 0001  
                                     ?_RF24_writeFast_m 002B  
                                  __end_of_RF24N__write 2DF8  
                                    delayMicroseconds@d 0005  
                                    delayMicroseconds@i 0006  
                                    delayMicroseconds@j 0008  
                              RF24_available_p@pipe_num 0010  
                                    ??_RF24_writeFast_m 002F  
                                                _SPBRGH 000FB0  
                                  __end_of_RF24N_update 1B20  
                                                _SSPBUF 000FC9  
                                  __size_of_RF24N_write 0316  
                                  __end_of_RF24N_write_ 2132  
                             RF24N_is_direct_child@node 0009  
                               RF24N_write_to_pipe@node 0030  
                               RF24N_write_to_pipe@pipe 0032  
                                 RF24_write_payload@buf 000C  
                                        __CFG_XINST$OFF 000000  
                                        RF24_csn_d@mode 000B  
                       __size_of_RF24N_is_valid_address 0036  
                                                ___wmul 39F0  
                        RF24_openReadingPipe_d@address_ 0011  
                                   _RF24_endTransaction 3BD4  
                                             ??___lldiv 000B  
                                             ??___lwdiv 0007  
                                             ??___lwmod 0007  
                           __end_of_RF24_startFastWrite 37E6  
                                                _memcpy 36B4  
                                                delay@i 0005  
                                                delay@j 0007  
                                                _millis 3B8A  
                                                clear_0 330E  
                                                clear_1 3320  
                                    __size_of_Serial_tx 000C  
                                      __end_of_interval 1017  
                             __end_of_child_pipe_enable 1013  
                                __end_of_Serial_println 3B46  
                                _RF24_toggle_features_d 3B5E  
                                  __end_of_RF24_isValid 3B12  
                                     __end_of_SPI_begin 3B2C  
                                          __pdataCOMRAM 0076  
                                  RF24_read_payload@buf 000C  
                                             ??_pinMode 0004  
                                                loop@ok 00B4  
                                 _RF24N_is_direct_child 32A2  
                                          __mediumconst 0000  
                                 _RF24_beginTransaction 3BDC  
                                                tblptrh 000FF7  
                                                tblptrl 000FF6  
                                                tblptru 000FF8  
                                  __end_of_RF24_powerUp 3A3C  
                                   _RF24N_write_to_pipe 2EB4  
                             ??_RF24_write_register_c_d 000F  
                                  ?_RF24_endTransaction 0001  
                                      Serial_begin@baud 0010  
                                  _RF24N_levelToAddress 3512  
                            __end_of_RF24_stopListening 32A2  
                 RF24N_direct_child_route_to@child_mask 0009  
                                            __accesstop 0080  
                               __end_of__initialization 335E  
                                          ??_RF24N_init 0003  
                          RF24_openWritingPipe_d@value_ 0011  
                                       __CFG_PBADEN$OFF 000000  
                                 RF24_setDataRate@speed 0012  
                                 RF24_setDataRate@setup 0013  
                             __size_of_RF24_setDataRate 006A  
                           __end_of_RF24_startListening 341C  
                                      RF24_spiTrans@cmd 000E  
                                         ___rparam_used 000001  
                                          ??_RF24_begin 0015  
                                          ??_RF24_csn_d 000A  
                                           pinMode@mode 0003  
                                       RF24_begin@setup 0016  
                                        __pcstackCOMRAM 0001  
                                            ___inthi_sp 06B0  
                       RF24N_direct_child_route_to@node 0003  
                                  ?_RF24N_write_to_pipe 0030  
                                          __pidataBANK0 3BAC  
                              __size_of_RF24_get_status 0008  
                                         __end_of_delay 35F2  
                               ?_RF24_openReadingPipe_d 0011  
                                         __end_of_setup 3512  
                                       ?_Serial_println 000A  
                                 RF24_setAutoAck_p@pipe 0015  
                                  _RF24_setChannel$1923 0011  
                                       _RF24N_available 3A5E  
                                _RF24_read_payload$1908 001A  
                                    __end_of_RF24N_init 33C4  
                                      _RF24_available_p 38F0  
                    __end_of_RF24_getDynamicPayloadSize 381E  
                            _RF24_getDynamicPayloadSize 37E6  
                                RF24_available_p@status 0014  
                                _RF24N_is_valid_address 3854  
                                 ??_RF24_endTransaction 000C  
                                    __end_of_RF24_begin 2B6E  
                                               ??_delay 0005  
                                    __end_of_RF24_csn_d 3B5E  
                                  RF24N_write_@msgCount 005F  
                                               ??_setup 002C  
                                 ?_RF24N_levelToAddress 0003  
                                            __pbssBANK0 0080  
                                           loop@payload 00B9  
                                         ?_Serial_begin 0010  
                                    _child_payload_size 1001  
                                     __end_of_Serial_tx 3BC4  
                                 __size_of_digitalWrite 027E  
                                         ?_Serial_print 0004  
                             RF24_closeReadingPipe@pipe 0015  
                               ?_RF24_openWritingPipe_d 0011  
                                            _child_pipe 1007  
                              __size_of_RF24_setChannel 0026  
                                 ??_RF24N_write_to_pipe 0034  
                        __end_of_RF24_openReadingPipe_d 29AE  
                               ??_RF24_closeReadingPipe 0011  
                                               ?___wmul 0003  
          RF24N_logicalToPhysicalAddress@conversionInfo 0015  
                                 __end_of_RF24N_begin_d 2D22  
                                               ?_memcpy 0003  
                                               ?_millis 0003  
                            RF24_write_payload@data_len 000E  
                                   RF24N_enqueue@header 0013  
                              __size_of_RF24_setRetries 0022  
                                ?_RF24N_is_direct_child 0009  
                                 __end_of_RF24N_enqueue 15CE  
                                ?_RF24_beginTransaction 0001  
                                   RF24N_enqueue@result 0027  
                                 __size_of_RF24N__write 00D6  
                         __size_of_RF24_read_register_d 001E  
                            RF24N_is_valid_address@node 0003  
                                          _digitalWrite 23B0  
                                 __size_of_RF24N_update 0552  
                                 __size_of_RF24N_write_ 02FC  
                                 __end_of_RF24N_write_m 39F0  
                               RF24N_write_@fragmentLen 005C  
                               RF24N_write_@fragment_id 0063  
                                        ??_Serial_begin 0014  
                                        ??_Serial_print 0006  
                        __end_of_RF24_openWritingPipe_d 31D2  
                          RF24N_write_to_pipe@multicast 0033  
                             __size_of_RF24_txStandBy_t 00BC  
                                               __Hparam 0000  
                                               __Lparam 0000  
                           RF24N_write_to_pipe@out_pipe 003A  
                                  RF24N_write_m@message 0066  
                                               ___lldiv 3060  
                                       __size_of___wmul 0026  
                      ??_RF24N_logicalToPhysicalAddress 0017  
                       ?_RF24N_logicalToPhysicalAddress 0015  
                               __end_of_RF24N_available 3A80  
                                               ___lwdiv 3472  
                                 __size_of_RF24_isValid 001C  
                                               ___lwmod 35F2  
                                          __psmallconst 1000  
                               ??_RF24_write_register_d 000F  
                            __end_of_RF24N_pipe_address 289C  
                                          _RF24N__write 2D22  
                                       __CFG_STVREN$OFF 000000  
                                               __pcinit 3306  
                                       __size_of_memcpy 0040  
                         RF24_write_register_c_d@status 000F  
                                       __size_of_millis 0012  
                                               __ramtop 1000  
                                               __ptext0 38BE  
                                               __ptext1 34C4  
                                               __ptext2 30E2  
                                               __ptext3 3060  
                                               __ptext4 3772  
                                               __ptext5 2A90  
                                               __ptext6 2132  
                                               __ptext7 3B12  
                                               __ptext8 3B5E  
                                               __ptext9 31D2  
                                          _RF24N_update 15CE  
                                             _T0CONbits 000FD5  
                                     ??_RF24_get_status 0010  
                                          _RF24N_write_ 1E36  
                   __end_of_RF24N_direct_child_route_to 3854  
                           _RF24N_direct_child_route_to 381E  
                                 __size_of_RF24_powerUp 0026  
                                          __size_of_isr 3974  
                                               _pinMode 2132  
                                         Serial_print@i 0008  
                                 RF24N_pipe_address@dec 001C  
                                             _RF24_ce_d 3ADA  
                                               _next_id 0076  
                                 RF24N_pipe_address@out 001F  
                                             _RF24_init 3772  
                                             _RF24_read 3ABE  
                             RF24N_enqueue@padding_2297 0025  
                                ??_RF24N_levelToAddress 0005  
                                        __pintcode_body 3950  
                                     RF24N_begin_d@addr 0024  
                                  end_of_initialization 335E  
                                  RF24_setRetries@delay 0014  
                                  RF24_setRetries@count 0011  
                               RF24N__write@writeDirect 0046  
                                               memcpy@d 0009  
                                               memcpy@n 0007  
                                               memcpy@s 000B  
                                         __Lmediumconst 0000  
                                               int_func 3950  
                                      RF24NH_init@_type 0007  
                                 __end_of_RF24_flush_rx 3BD4  
                                 __end_of_RF24_flush_tx 3BEC  
                                      _RF24_setDataRate 31D2  
                                       RF24_init@_cepin 0004  
                           __end_of_RF24N_is_descendant 3950  
                              RF24N_pipe_address@result 0017  
                                       RF24_init@_cspin 0003  
                                               loop@now 00B5  
                      RF24_getDynamicPayloadSize@result 0011  
                                          _RF24_isValid 3AF6  
                            __end_of_RF24_write_payload 2FDA  
                                     __end_of_this_node 101B  
                                       ___lldiv@divisor 0007  
                                       ___lldiv@counter 000F  
                                             _RCSTAbits 000FAB  
                                               postdec0 000FED  
                                               postdec2 000FDD  
                                               postinc0 000FEE  
                                               postinc1 000FE6  
                                               postinc2 000FDE  
                                 __end_of_RF24_spiTrans 3B8A  
                             __size_of_RF24_writeFast_m 0040  
                                          _RF24_powerUp 3A16  
                               ?_RF24_toggle_features_d 0001  
                             RF24N_pipe_address@address 0006  
                                            _other_node 1017  
                                     ??_RF24_setChannel 0011  
                                             _PORTAbits 000F80  
                                             _PORTBbits 000F81  
                                             _PORTCbits 000F82  
                                             _PORTDbits 000F83  
                                             _PORTEbits 000F84  
                                         ??_RF24NH_init 0008  
                                    _RF24N_enqueue$2295 0026  
                                            ?_RF24_ce_d 0001  
                                             _TRISAbits 000F92  
                                             _TRISBbits 000F93  
                                             _TRISCbits 000F94  
                                            ?_RF24_init 0003  
                                            ?_RF24_read 001D  
                                             _TRISDbits 000F95  
                                             _TRISEbits 000F96  
                                    RF24N__write@header 0040  
                 RF24N_logicalToPhysicalAddress@to_node 0028  
                              _RF24_startFastWrite$1976 0029  
                                     ??_RF24_setRetries 0012  
                                             _SPI_begin 3B12  
                                RF24_setDataRate@result 0011  
                          __size_of_RF24N_setup_address 00DC  
                                             _TXSTAbits 000FAC  
                            RF24_write_register_d@value 000E  
                            RF24_write_register_c_d@buf 000C  
                            RF24_write_register_c_d@len 000E  
                            RF24_write_register_c_d@reg 0010  
                              __end_of_RF24_available_p 3922  
                                      ??_Serial_println 000C  
                        __end_of_RF24_toggle_features_d 3B74  
                            RF24_setChannel@max_channel 0014  
                                    _RF24_stopListening 323C  
                                      ?_RF24N_available 0001  
                            RF24N_begin_d@_node_address 0022  
                                        __end_of___wmul 3A16  
                                  RF24N_setup_address@i 0005  
                                  RF24N_setup_address@m 0007  
                                           _BAUDCONbits 000FB8  
                                         __pidataCOMRAM 3BEC  
                                  __end_of_Serial_begin 315C  
                                        __end_of_memcpy 36F4  
                              RF24_write_payload@status 001A  
                                        __end_of_millis 3B9C  
                                  __end_of_Serial_print 35A8  
                                   ?_RF24_stopListening 0001  
                               ?_RF24N_is_valid_address 0003  
                                   start_initialization 3306  
                          __size_of_RF24_startFastWrite 0038  
                           ?_RF24_getDynamicPayloadSize 0001  
                                           __end_of_isr 397C  
                                       _RF24_begin$1938 0015  
                                            ?_SPI_begin 0001  
                                   __end_of_RF24NH_init 3772  
                                RF24_setAutoAck_p@en_aa 0014  
                             RF24_writeFast_m@multicast 002E  
                             RF24N_enqueue@message_size 0028  
                              RF24_write_register_d@reg 000F  
                                  ??_RF24_stopListening 0011  
                                      _RF24_txStandBy_t 2DF8  
                                   __end_of_RF24N_write 1E36  
                          ??_RF24_enableDynamicPayloads 0011  
               RF24N_logicalToPhysicalAddress@multicast 0021  
                                             _Serial_tx 3BB8  
                                              ??___wmul 0007  
                                          _packets_sent 0088  
                        __size_of_RF24_closeReadingPipe 0040  
                          __size_of_RF24_startListening 0058  
                         __end_of_RF24_closeReadingPipe 3674  
                                           __pdataBANK0 00C9  
                                      __CFG_LPT1OSC$OFF 000000  
                                        RF24NH_init@_to 0005  
                               ??_RF24N_is_direct_child 000B  
                                              ??_memcpy 0009  
                                        RF24NH_init@rnh 0003  
                                              ??_millis 0007  
                               ??_RF24_beginTransaction 000C  
                        __end_of_RF24N_is_valid_address 388A  
                           __end_of_RF24_endTransaction 3BDC  
                                         ?_SPI_transfer 0001  
                                           __pbssBIGRAM 00D5  
                              ?_RF24_write_register_c_d 000C  
                                           ??_RF24_ce_d 0006  
                                         __pcstackBANK0 00AC  
                                           ??_RF24_init 0004  
                                           ??_RF24_read 0020  
                              RF24_read_payload@current 0018  
                                            pinMode@pin 0004  
                                     _delayMicroseconds 36F4  
                   __size_of_RF24_enableDynamicPayloads 0028  
                                    ?_delayMicroseconds 0001  
                               RF24_openReadingPipe_d@i 001A  
                                            loop@header 00C1  
                           __end_of_RF24N_write_to_pipe 2F48  
                                   RF24N_write_@message 004D  
                                       RF24_powerUp@cfg 0012  
                           RF24_openReadingPipe_d@child 001B  
                                   ??_delayMicroseconds 0003  
                          __end_of_RF24_read_register_d 3ABE  
                                      ___lwdiv@dividend 0003  
                                            ?_Serial_tx 0001  
                                     _RF24_isValid$2052 0004  
                            RF24_read_payload@blank_len 001C  
                                     __CFG_CCP2MX$PORTC 000000  
                                       _RF24_get_status 3BC4  
                             RF24N_levelToAddress@level 000B  
                                             __pintcode 0008  
                                      _RF24_writeFast_m 3674  
                                              ?___lldiv 0003  
                                              ?___lwdiv 0003  
                                              ?___lwmod 0003  
                               RF24N_enqueue@isFragment 0023  
                        __size_of_RF24_write_register_d 0020  
                             RF24_write_payload@current 001B  
                                        ??_SPI_transfer 0003  
                         __end_of_RF24_write_register_d 3AA0  
                                       RF24N__write@len 0044  
                              __end_of_RF24_setDataRate 323C  
                                           __smallconst 1000  
                                           _RF24NH_init 3734  
                             __end_of_delayMicroseconds 3734  
                                              ?_pinMode 0003  
                                   RF24N_write_m@header 0064  
                           RF24_write_payload@blank_len 0021  
                               RF24N_write_@writeDirect 0051  
                               RF24N_pipe_address@F3842 00D0  
                                             _last_sent 0080  
                __end_of_RF24N_logicalToPhysicalAddress 2A90  
               __size_of_RF24N_logicalToPhysicalAddress 00E2  
                        _RF24N_logicalToPhysicalAddress 29AE  
                                           ??_SPI_begin 0003  
                                      ___lwdiv@quotient 0007  
                                        __size_of_delay 004A  
                                    _RF24N_pipe_address 277E  
                                      RF24N_write_@type 005E  
                                        __size_of_setup 004E  
                    RF24N_setup_address@node_mask_check 000C  
                                           _RF24N_write 1B20  
                                      RF24N_write_m@len 0068  
                                          Serial_tx@val 0003  
                                  RF24N_enqueue@padding 0024  
                                       Serial_print@val 0004  
                                __size_of_RF24N_begin_d 00D8  
                                        ___wmul@product 0007  
                                              _LATAbits 000F89  
                                              _LATBbits 000F8A  
                                              _LATCbits 000F8B  
                                              _LATDbits 000F8C  
                                              _LATEbits 000F8D  
                                   ?_RF24N_pipe_address 0003  
                            RF24N_write_@retriesPerFrag 005B  
                               RF24N_pipe_address@count 001E  
                           RF24N_is_valid_address@digit 0007  
                                       _RF24_setChannel 39A4  
                                __size_of_RF24N_enqueue 0574  
                                              _PIR1bits 000F9E  
                                 __size_of_Serial_begin 007A  
                                      __CFG_WDTPS$32768 000000  
                                             _this_node 1019  
                                 __size_of_Serial_print 004A  
                                   _RF24N_setup_address 2B6E  
                       __end_of_RF24_write_register_c_d 38BE  
                                       _RF24_setRetries 3A3C  
                                __size_of_RF24N_write_m 0026  
                                    _RF24_write_payload 2F48  
                                  ??_RF24N_pipe_address 0008  
                                     ___wmul@multiplier 0003  
                           RF24N_is_direct_child@result 0014  
                              RF24N_setup_address@count 0009  
                                RF24_setChannel@channel 0013  
                                   ?_RF24_write_payload 000C  
                                    __end_of_child_pipe 100D  
                                             copy_data0 333A  
                                  ?_RF24N_setup_address 0001  
                         __size_of_RF24N_levelToAddress 004C  
                               __end_of_RF24_get_status 3BCC  
                                          _Serial_begin 30E2  
                              ??_RF24_openReadingPipe_d 0013  
                    __end_of_RF24_enableDynamicPayloads 39A4  
                            _RF24_enableDynamicPayloads 397C  
                                          _Serial_print 355E  
                                              __Hrparam 0000  
                                   _RF24_startFastWrite 37AE  
                                           ??_Serial_tx 0003  
                                              __Lrparam 0000  
                                     ?_RF24_available_p 0010  
                                  ??_RF24_write_payload 0010  
                                        RF24N_begin_d@i 002B  
                          __size_of_RF24N_is_descendant 002E  
                         RF24_openReadingPipe_d@address 0015  
                                    ??_RF24_available_p 0012  
                           RF24_write_payload@writeType 000F  
                                      __size_of___lldiv 0082  
                                      __size_of___lwdiv 0052  
                                      __size_of___lwmod 0042  
                                         _RF24N_begin_d 2C4A  
                                    RF24N_write_@header 004B  
                               RF24_read_payload@status 0017  
                              __end_of_RF24_txStandBy_t 2EB4  
                            __size_of_delayMicroseconds 0040  
                                __size_of_RF24_flush_rx 0008  
                                __size_of_RF24_flush_tx 0008  
                                    RF24N_write_@offset 0060  
                                         _RF24N_enqueue 105A  
                                  ?_RF24_startFastWrite 0022  
                                  _RF24_read_register_d 3AA0  
                           RF24_openWritingPipe_d@value 001B  
                             RF24_read_payload@data_len 000E  
                                      __size_of_pinMode 027E  
                                       ___lwdiv@divisor 0005  
                                       ___lwdiv@counter 0009  
                              ??_RF24_openWritingPipe_d 0013  
                                              __ptext10 3368  
                                              __ptext11 2C4A  
                                              __ptext20 3BB8  
                                              __ptext12 3A3C  
                                              __ptext21 39CA  
                                              __ptext13 39A4  
                                              __ptext30 3B74  
                                              __ptext22 1E36  
                                              __ptext14 289C  
                                              __ptext31 3BC4  
                                              __ptext23 39F0  
                                              __ptext15 397C  
                                              __ptext40 3A5E  
                                              __ptext32 3634  
                                              __ptext24 35F2  
                                              __ptext16 2B6E  
                                              __ptext41 105A  
                                              __ptext33 37AE  
                                              __ptext25 2D22  
                                              __ptext17 262E  
                                              __ptext50 3B9C  
                                              __ptext42 36B4  
                                              __ptext34 3674  
                                              __ptext26 3734  
                                              __ptext18 3B2C  
                                              __ptext51 3BD4  
                                              __ptext43 3472  
                                              __ptext35 37E6  
                                              __ptext27 23B0  
                                              __ptext19 355E  
                                              __ptext60 3AF6  
                                              __ptext52 3BDC  
                                              __ptext44 3512  
                                              __ptext36 3BCC  
                                              __ptext28 2F48  
                                              __ptext61 3854  
                                              __ptext53 3B46  
                                              __ptext45 29AE  
                                              __ptext37 38F0  
                                              __ptext29 2FDA  
                                              __ptext70 3AA0  
                                              __ptext62 15CE  
                                              __ptext54 388A  
                                              __ptext46 32A2  
                                              __ptext38 3ABE  
                                              __ptext71 341C  
                                              __ptext63 35A8  
                                              __ptext55 277E  
                                              __ptext47 3922  
                                              __ptext39 315C  
                                              __ptext64 1B20  
                                              __ptext56 36F4  
                                              __ptext48 381E  
                                              __ptext65 2DF8  
                                              __ptext57 3ADA  
                                              __ptext49 2EB4  
                                              __ptext66 3B8A  
                                              __ptext58 3BE4  
                                              __ptext67 3A80  
                                              __ptext59 3A16  
                                              __ptext68 323C  
                                              __ptext69 33C4  
                                 ??_RF24N_setup_address 0003  
                               RF24_openWritingPipe_d@i 0020  
                                   _RF24_startListening 33C4  
                                __size_of_RF24_spiTrans 0016  
                               __end_of_RF24_setChannel 39CA  
                                         _RF24N_write_m 39CA  
                                       RF24N_write_@len 004F  
                                         __size_of_main 0032  
                               RF24_read_register_d@reg 000C  
                                     _RF24_read_payload 2FDA  
                                            _RF24N_init 3368  
                                         __size_of_loop 0150  
                                  __end_of_SPI_transfer 3BAC  
                                              delay@val 0003  
                                              _interval 1013  
                                    ?_RF24_read_payload 000C  
                               RF24N_is_descendant@node 0003  
                                            _RF24_begin 2A90  
                                RF24N_pipe_address@node 0003  
                                RF24N_pipe_address@pipe 0005  
                                            _RF24_csn_d 3B46  
                               __end_of_RF24_setRetries 3A5E  
                                  ?_RF24_startListening 0001  
                                   ??_RF24_read_payload 000F  
                                        ?_RF24N_begin_d 0022  
                         RF24N_levelToAddress@levelAddr 000C  
                                     Serial_println@val 000A  
                            RF24_startFastWrite@startTx 0026  
                        __size_of_RF24N_is_direct_child 0064  
                         __end_of_RF24N_is_direct_child 3306  
                        __size_of_RF24_beginTransaction 0008  
                         __end_of_RF24_beginTransaction 3BE4  
                                        ?_RF24N_enqueue 0013  
                                 ??_RF24_startFastWrite 0027  
                                            _INTCONbits 000FF2  
                                 ?_RF24_read_register_d 0001  
                              __size_of_RF24N_available 0022  
                                              memcpy@d1 0003  
                                              memcpy@s1 0005  
                                         ?_digitalWrite 0003  
                               RF24_txStandBy_t@timeout 0013  
                              __end_of_RF24_writeFast_m 36B4  
                               RF24_txStandBy_t@startTx 0017  
                                        ?_RF24N_write_m 0064  
                                              intlevel2 0000  
                             __end_of_RF24_read_payload 3060  
                                      ___lwmod@dividend 0003  
                                      ?_RF24_get_status 0001  
                                      ___lldiv@dividend 0003  
                                    __end_of_other_node 1019  
                      __size_of_RF24_write_register_c_d 0034  
                       __size_of_RF24_openReadingPipe_d 0112  
                           __size_of_RF24_stopListening 0066  
                                         _RF24_flush_rx 3BCC  
                                         _RF24_flush_tx 3BE4  
                                        RF24N_write_@ok 0062  
                                 ??_RF24_startListening 0016  
                                     _RF24_setAutoAck_p 341C  
                                         _RF24_spiTrans 3B74  
                                         ?_RF24N__write 0040  
                                    ?_RF24_setAutoAck_p 0011  
                                 _RF24_closeReadingPipe 3634  
                                         ?_RF24N_write_ 004B  
                                      digitalWrite@mode 0003  
                                          ?_RF24NH_init 0003  
                                     ?_RF24_setDataRate 0001  
                                      ___lldiv@quotient 000B  
                          ?_RF24N_direct_child_route_to 0003  
                                       ___lwmod@divisor 0005  
                                       ___lwmod@counter 0007  
                               __size_of_Serial_println 001A  
                                        ??_digitalWrite 0004  
                                   ??_RF24_setAutoAck_p 0012  
                                    ??_RF24_setDataRate 0011  
                                           _SSPCON1bits 000FC6  
                RF24N_logicalToPhysicalAddress@directTo 0025  
                       __size_of_RF24_openWritingPipe_d 0076  
                          __size_of_RF24_endTransaction 0008  
                                 RF24_txStandBy_t@start 0020  
                                       digitalWrite@pin 0005  
                                      ?_RF24_setChannel 0001  
                                           ?_RF24N_init 0001  
                                        ?_RF24_flush_rx 0001  
                                        ?_RF24_flush_tx 0001  
                              ??_RF24_toggle_features_d 000C  
                                         ?_RF24_isValid 0001  
                        RF24N_setup_address@parent_mask 000A  
                                           ?_RF24_begin 0001  
                                           ?_RF24_csn_d 0001  
                                      ?_RF24_setRetries 0011  
                             __end_of_RF24_setAutoAck_p 3472  
